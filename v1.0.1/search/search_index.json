{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Qadence","text":"<p>Qadence is a Python package that provides a simple interface to build digital-analog quantum programs with tunable qubit interaction defined on arbitrary register topologies realizable on neutral atom devices.</p>"},{"location":"#feature-highlights","title":"Feature highlights","text":"<ul> <li> <p>A block-based system for composing complex digital-analog   programs in a flexible and scalable manner, inspired by the Julia quantum SDK   Yao.jl and functional programming concepts.</p> </li> <li> <p>A simple interface to work with interacting neutral-atom qubit systems   using arbitrary registers topologies.</p> </li> <li> <p>An intuitive expression-based system developed on top of the symbolic library Sympy to construct parametric quantum programs easily.</p> </li> <li> <p>High-order generalized parameter shift rules for differentiating parametrized quantum operations.</p> </li> <li> <p>Out-of-the-box automatic differentiability of quantum programs with PyTorch integration.</p> </li> <li> <p>Efficient execution on a variety of different purpose backends: from state vector simulators to tensor network emulators and real devices.</p> </li> </ul> <p>In following are some examples of Qadence possibilites in the analog, digital-analog and digital paradigms.</p>"},{"location":"#analog-emulation-of-a-perfect-state-transfer","title":"Analog emulation of a perfect state transfer","text":"<p>This next example showcases the construction and sampling of a system that admits a perfect state transfer between the two edge qubits of a three qubit register laid out in a line. This relies on time-evolving a Hamiltonian for a custom defined qubit interation until \\(t=\\frac{\\pi}{\\sqrt 2}\\).</p> <pre><code>from torch import pi\nfrom qadence import X, Y, HamEvo, Register, product_state, sample, add\n# Define the qubit-qubit interaction term.\ndef interaction(i, j):\nreturn 0.5 * (X(i) @ X(j) + Y(i) @ Y(j))  # Compose gates in parallel and sum their contribution.\n# Initial state with left-most qubit in the 1 state.\ninit_state = product_state(\"100\")\n# Define a register of 3 qubits laid out in a line.\nregister = Register.line(n_qubits=3)\n# Define an interaction Hamiltonian by summing interactions on indexed qubits.\n# hamiltonian = interaction(0, 1) + interaction(1, 2)\nhamiltonian = add(interaction(*edge) for edge in register.edges)\n# Define and time-evolve the Hamiltonian until t=pi/sqrt(2).\nt = pi/(2**0.5)  # Dimensionless.\nevolution = HamEvo(hamiltonian, t)\n# Sample with 100 shots.\nsamples = sample(register, evolution, state=init_state, n_shots=100)\n</code></pre> <pre><code>samples = [Counter({'001': 100})]\n</code></pre>"},{"location":"#digital-analog-example","title":"Digital-analog example","text":"<p>This final example deals with the construction and sampling of an Ising Hamiltonian that includes a distance-based interaction between qubits and a global analog block of rotations around the \\(X\\)-axis. Here, global has to be understood as applied to the whole register for qubits.</p> <pre><code>from torch import pi\nfrom qadence import Register, AnalogRX, sample\n# Global analog RX block.\nblock = AnalogRX(pi)\n# Almost non-interacting qubits as too far apart.\nregister = Register.from_coordinates([(0,0), (0,15)])  # Dimensionless.\nsamples = sample(register, block)\n# Interacting qubits as close together.\nregister = Register.from_coordinates([(0,0), (0,5)])\nsamples = sample(register, AnalogRX(pi))\n</code></pre> <pre><code>distance = 15: samples = [Counter({'11': 100})]\ndistance =  5: samples = [Counter({'10': 35, '00': 34, '01': 30, '11': 1})]\n</code></pre>"},{"location":"#sampling-the-canonical-bell-state","title":"Sampling the canonical Bell state","text":"<p>This example illustrates how to prepare a Bell state using digital gates and sampling from the outcome bitstring distribution:</p> <pre><code>from qadence import CNOT, H, chain, sample\n# Preparing a Bell state by composing a Hadamard and CNOT gates in sequence.\nbell_state = chain(H(0), CNOT(0,1))\n# Sample with 100 shots.\nsamples = sample(bell_state, n_shots=100)\n</code></pre> <pre><code>samples = [Counter({'00': 53, '11': 47})]\n</code></pre>"},{"location":"#further-resources","title":"Further resources","text":"<p>For a more comprehensive introduction and advanced topics, please have a look at the following tutorials:</p> <ul> <li>Quantum state conventions used throughout Qadence.</li> <li>Basic tutorials for first hands-on.</li> <li>Digital-analog basics to build quantum programs in the digital-analog paradigm.</li> <li>Parametric quantum circuits for the generation and manipulation of parametric programs.</li> <li>Advanced features about low-level backend interface and differentiablity.</li> <li><code>QuantumModel</code> for defining custom models.</li> </ul>"},{"location":"#installation-guide","title":"Installation guide","text":"<p>Qadence can be installed from PyPI with <code>pip</code> as follows:</p> <pre><code>pip install qadence\n</code></pre> <p>The default backend for Qadence is PyQTorch, a differentiable state vector simulator for digital-analog simulation. It is possible to install additional backends and the circuit visualization library using the following extras:</p> <ul> <li><code>braket</code>: the Braket backend.</li> <li><code>pulser</code>: the Pulser backend for composing, simulating and executing pulse sequences for neutral-atom quantum devices.</li> <li><code>visualization</code>: to display diagrammatically quantum circuits.</li> </ul> <p>To just get qadence with the <code>pyqtorch</code> backend, simply run:</p> <pre><code>pip install qadence\n</code></pre> <p>To install other backends or the visualization tool, please use:</p> <pre><code>pip install \"qadence[braket, pulser, visualization]\"\n</code></pre> <p>Warning</p> <p>In order to correctly install the <code>visualization</code> extra, the <code>graphviz</code> package needs to be installed in your system:</p> <pre><code># on Ubuntu\nsudo apt install graphviz\n\n# on MacOS\nbrew install graphviz\n\n# via conda\nconda install python-graphviz\n</code></pre>"},{"location":"#citation","title":"Citation","text":"<p>If you use Qadence for a publication, we kindly ask you to cite our work using the following BibTex entry:</p> <pre><code>@misc{qadence2023pasqal,\n  url = {https://github.com/pasqal-io/qadence},\n  title = {Qadence: {A} {D}igital-analog quantum programming interface.},\n  year = {2023}\n}\n</code></pre>"},{"location":"CODE_OF_CONDUCT/","title":"Code of Conduct","text":""},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a professional setting</li> </ul>"},{"location":"CODE_OF_CONDUCT/#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"CONTRIBUTING/","title":"How to contribute","text":"<p>We're grateful for your interest in participating in Qadence. Please follow our guidelines to ensure a smooth contribution process.</p>"},{"location":"CONTRIBUTING/#reporting-an-issue-or-proposing-a-feature","title":"Reporting an issue or proposing a feature","text":"<p>Your course of action will depend on your objective, but generally, you should start by creating an issue. If you've discovered a bug or have a feature you'd like to see added to qadence, feel free to create an issue on qadence's GitHub issue tracker. Here are some steps to take:</p> <ol> <li>Quickly search the existing issues using relevant keywords to ensure your issue hasn't been addressed already.</li> <li> <p>If your issue is not listed, create a new one. Try to be as detailed and clear as possible in your description.</p> </li> <li> <p>If you're merely suggesting an improvement or reporting a bug, that's already excellent! We thank you for it. Your issue will be listed and, hopefully, addressed at some point.</p> </li> <li>However, if you're willing to be the one solving the issue, that would be even better! In such instances, you would proceed by preparing a Pull Request.</li> </ol>"},{"location":"CONTRIBUTING/#submitting-a-pull-request","title":"Submitting a pull request","text":"<p>We're excited that you're eager to contribute to Qadence. To contribute, fork the <code>main</code> branch of qadence repository and once you are satisfied with your feature and all the tests pass create a Pull Request.</p> <p>Here's the process for making a contribution:</p> <p>Click the \"Fork\" button at the upper right corner of the repo page to create a new GitHub repo at <code>https://github.com/USERNAME/qadence</code>, where <code>USERNAME</code> is your GitHub ID. Then, <code>cd</code> into the directory where you want to place your new fork and clone it:</p> <pre><code>git clone https://github.com/USERNAME/qadence.git\n</code></pre> <p>Next, navigate to your new qadence fork directory and mark the main qadence repository as the <code>upstream</code>:</p> <pre><code>git remote add upstream https://github.com/pasqal-io/qadence.git\n</code></pre>"},{"location":"CONTRIBUTING/#setting-up-your-development-environment","title":"Setting up your development environment","text":"<p>We recommended to use <code>hatch</code> for managing environments:</p> <p>To develop within qadence, use: <pre><code>pip install hatch\nhatch -v shell\n</code></pre></p> <p>To run qadence tests, use:</p> <pre><code>hatch -e tests run test\n</code></pre> <p>If you don't want to use <code>hatch</code>, you can use the environment manager of your choice (e.g. Conda) and execute the following:</p> <pre><code>pip install pytest\npip install -e .\npytest\n</code></pre>"},{"location":"CONTRIBUTING/#useful-things-for-your-workflow-linting-and-testing","title":"Useful things for your workflow: linting and testing","text":"<p>Use <code>pre-commit</code> to lint your code and run the unit tests before pushing a new commit.</p> <p>Using <code>hatch</code>, it's simply:</p> <pre><code>hatch -e tests run pre-commit run --all-files\nhatch -e tests run test\n</code></pre> <p>Our CI/CD pipeline will also test if the documentation can be built correctly. To test it locally, please run:</p> <pre><code>hatch -e docs run mkdocs build --clean --strict\n</code></pre> <p>Without <code>hatch</code>, <code>pip</code> install those libraries first: \"mkdocs\", \"mkdocs-material\", \"mkdocstrings\", \"mkdocstrings-python\", \"mkdocs-section-index\", \"mkdocs-jupyter\", \"mkdocs-exclude\", \"markdown-exec\"</p> <p>And then:</p> <pre><code> mkdocs build --clean --strict\n</code></pre>"},{"location":"models/","title":"Quantum models","text":""},{"location":"models/#qadence.models.quantum_model.QuantumModel","title":"<code>QuantumModel(circuit, observable=None, backend=BackendName.PYQTORCH, diff_mode=DiffMode.AD, protocol=None, configuration=None)</code>","text":"<p>             Bases: <code>Module</code></p> <p>The central class of qadence that executes <code>QuantumCircuit</code>s and make them differentiable.</p> <p>This class should be used as base class for any new quantum model supported in the qadence framework for information on the implementation of custom models see here.</p> <p>Initialize a generic QuantumModel instance.</p> PARAMETER  DESCRIPTION <code>circuit</code> <p>The circuit that is executed.</p> <p> TYPE: <code>QuantumCircuit</code> </p> <code>observable</code> <p>Optional observable(s) that are used only in the <code>expectation</code> method. You can also provide observables on the fly to the expectation call directly.</p> <p> TYPE: <code>list[AbstractBlock] | AbstractBlock | None</code> DEFAULT: <code>None</code> </p> <code>backend</code> <p>A backend for circuit execution.</p> <p> TYPE: <code>BackendName | str</code> DEFAULT: <code>PYQTORCH</code> </p> <code>diff_mode</code> <p>A differentiability mode. Parameter shift based modes work on all backends. AD based modes only on PyTorch based backends.</p> <p> TYPE: <code>DiffMode</code> DEFAULT: <code>AD</code> </p> <code>protocol</code> <p>Optional measurement protocol. If None, use exact expectation value with a statevector simulator.</p> <p> TYPE: <code>Measurements | None</code> DEFAULT: <code>None</code> </p> <code>configuration</code> <p>Configuration for the backend.</p> <p> TYPE: <code>BackendConfiguration | dict | None</code> DEFAULT: <code>None</code> </p> RAISES DESCRIPTION <code>ValueError</code> <p>if the <code>diff_mode</code> argument is set to None</p> Source code in <code>qadence/models/quantum_model.py</code> <pre><code>def __init__(\nself,\ncircuit: QuantumCircuit,\nobservable: list[AbstractBlock] | AbstractBlock | None = None,\nbackend: BackendName | str = BackendName.PYQTORCH,\ndiff_mode: DiffMode = DiffMode.AD,\nprotocol: Measurements | None = None,\nconfiguration: BackendConfiguration | dict | None = None,\n):\n\"\"\"Initialize a generic QuantumModel instance.\n    Arguments:\n        circuit: The circuit that is executed.\n        observable: Optional observable(s) that are used only in the `expectation` method. You\n            can also provide observables on the fly to the expectation call directly.\n        backend: A backend for circuit execution.\n        diff_mode: A differentiability mode. Parameter shift based modes work on all backends.\n            AD based modes only on PyTorch based backends.\n        protocol: Optional measurement protocol. If None, use\n            exact expectation value with a statevector simulator.\n        configuration: Configuration for the backend.\n    Raises:\n        ValueError: if the `diff_mode` argument is set to None\n    \"\"\"\nsuper().__init__()\nif not isinstance(circuit, QuantumCircuit):\nTypeError(\nf\"The circuit should be of type '&lt;class QuantumCircuit&gt;'. Got {type(circuit)}.\"\n)\nself.inputs = [p for p in circuit.unique_parameters if not p.trainable and not p.is_number]\nif diff_mode is None:\nraise ValueError(\"`diff_mode` cannot be `None` in a `QuantumModel`.\")\nself.backend = backend_factory(\nbackend=backend, diff_mode=diff_mode, configuration=configuration\n)\nif isinstance(observable, list) or observable is None:\nobservable = observable\nelse:\nobservable = [observable]\nconv = self.backend.convert(circuit, observable)\nself.embedding_fn = conv.embedding_fn\nself._circuit = conv.circuit\nself._observable = conv.observable\nself._backend_name = backend\nself._diff_mode = diff_mode\nself._protocol = protocol\nself._params = nn.ParameterDict(\n{\nstr(key): nn.Parameter(val, requires_grad=val.requires_grad)\nfor key, val in conv.params.items()\n}\n)\n</code></pre>"},{"location":"models/#qadence.models.quantum_model.QuantumModel.in_features","title":"<code>in_features: int</code>  <code>property</code>","text":"<p>Number of inputs.</p>"},{"location":"models/#qadence.models.quantum_model.QuantumModel.num_vparams","title":"<code>num_vparams: int</code>  <code>property</code>","text":"<p>The number of variational parameters</p>"},{"location":"models/#qadence.models.quantum_model.QuantumModel.out_features","title":"<code>out_features: int | None</code>  <code>property</code>","text":"<p>Number of outputs</p>"},{"location":"models/#qadence.models.quantum_model.QuantumModel.vals_vparams","title":"<code>vals_vparams: Tensor</code>  <code>property</code>","text":"<p>Dictionary with parameters which are actually updated during optimization</p>"},{"location":"models/#qadence.models.quantum_model.QuantumModel.assign_parameters","title":"<code>assign_parameters(values)</code>","text":"<p>Return the final, assigned circuit that is used in e.g. <code>backend.run</code></p> Source code in <code>qadence/models/quantum_model.py</code> <pre><code>def assign_parameters(self, values: dict[str, Tensor]) -&gt; Any:\n\"\"\"Return the final, assigned circuit that is used in e.g. `backend.run`\"\"\"\nparams = self.embedding_fn(self._params, values)\nreturn self.backend.assign_parameters(self._circuit, params)\n</code></pre>"},{"location":"models/#qadence.models.quantum_model.QuantumModel.expectation","title":"<code>expectation(values={}, observable=None, state=None, protocol=None, endianness=Endianness.BIG)</code>","text":"<p>Compute expectation using the given backend.</p> RETURNS DESCRIPTION <code>Tensor</code> <p>A torch.Tensor of shape n_batches x n_obs</p> Source code in <code>qadence/models/quantum_model.py</code> <pre><code>def expectation(\nself,\nvalues: dict[str, Tensor] = {},\nobservable: list[ConvertedObservable] | ConvertedObservable | None = None,\nstate: Optional[Tensor] = None,\nprotocol: Measurements | None = None,\nendianness: Endianness = Endianness.BIG,\n) -&gt; Tensor:\n\"\"\"Compute expectation using the given backend.\n    Returns:\n        A torch.Tensor of shape n_batches x n_obs\n    \"\"\"\nif observable is None:\nif self._observable is None:\nraise ValueError(\n\"Provide an AbstractBlock as the observable to compute expectation.\"\n\"Either pass a 'native_observable' directly to 'QuantumModel.expectation'\"\n\"or pass a (non-native) '&lt;class AbstractBlock&gt;' to the 'QuantumModel.__init__'.\"\n)\nobservable = self._observable\nparams = self.embedding_fn(self._params, values)\nif protocol is None:\nprotocol = self._protocol\nreturn self.backend.expectation(\ncircuit=self._circuit,\nobservable=observable,\nparam_values=params,\nstate=state,\nprotocol=protocol,\nendianness=endianness,\n)\n</code></pre>"},{"location":"models/#qadence.models.quantum_model.QuantumModel.reset_vparams","title":"<code>reset_vparams(values)</code>","text":"<p>Reset all the variational parameters with a given list of values</p> Source code in <code>qadence/models/quantum_model.py</code> <pre><code>def reset_vparams(self, values: Sequence) -&gt; None:\n\"\"\"Reset all the variational parameters with a given list of values\"\"\"\ncurrent_vparams = OrderedDict({k: v for k, v in self._params.items() if v.requires_grad})\nassert (\nlen(values) == self.num_vparams\n), \"Pass an iterable with the values of all variational parameters\"\nfor i, k in enumerate(current_vparams.keys()):\ncurrent_vparams[k].data = torch.tensor([values[i]])\n</code></pre>"},{"location":"models/#qadence.models.qnn.QNN","title":"<code>QNN(circuit, observable, transform=None, backend=BackendName.PYQTORCH, diff_mode=DiffMode.AD, protocol=None, configuration=None)</code>","text":"<p>             Bases: <code>QuantumModel</code></p> <p>Quantum neural network model for n-dimensional inputs</p> <p>Examples: <pre><code>import torch\nfrom qadence import QuantumCircuit, QNN\nfrom qadence import hea, feature_map, hamiltonian_factory, Z\n# create the circuit\nn_qubits, depth = 2, 4\nfm = feature_map(n_qubits)\nansatz = hea(n_qubits=n_qubits, depth=depth)\ncircuit = QuantumCircuit(n_qubits, fm, ansatz)\nobs_base = hamiltonian_factory(n_qubits, detuning = Z)\n# the QNN will yield two outputs\nobs = [2.0 * obs_base, 4.0 * obs_base]\n# initialize and use the model\nqnn = QNN(circuit, obs, diff_mode=\"ad\", backend=\"pyqtorch\")\ny = qnn.expectation({\"phi\": torch.rand(3)})\n</code></pre> <pre><code>tensor([[0.7110, 1.4221],\n[1.6172, 3.2344],\n[1.1616, 2.3231]], grad_fn=&lt;CatBackward0&gt;)\n</code></pre> </p> <p>Initialize the QNN</p> <p>The number of inputs is determined by the feature parameters in the input quantum circuit while the number of outputs is determined by how many observables are provided as input</p> PARAMETER  DESCRIPTION <code>circuit</code> <p>The quantum circuit to use for the QNN.</p> <p> TYPE: <code>QuantumCircuit</code> </p> <code>transform</code> <p>A transformation applied to the output of the QNN.</p> <p> TYPE: <code>Callable[[Tensor], Tensor]</code> DEFAULT: <code>None</code> </p> <code>backend</code> <p>The chosen quantum backend.</p> <p> TYPE: <code>BackendName</code> DEFAULT: <code>PYQTORCH</code> </p> <code>diff_mode</code> <p>The differentiation engine to use. Choices 'gpsr' or 'ad'.</p> <p> TYPE: <code>DiffMode</code> DEFAULT: <code>AD</code> </p> <code>protocol</code> <p>optional measurement protocol. If None, use exact expectation value with a statevector simulator</p> <p> TYPE: <code>Measurements | None</code> DEFAULT: <code>None</code> </p> <code>configuration</code> <p>optional configuration for the backend</p> <p> TYPE: <code>BackendConfiguration | dict | None</code> DEFAULT: <code>None</code> </p> Source code in <code>qadence/models/qnn.py</code> <pre><code>def __init__(\nself,\ncircuit: QuantumCircuit,\nobservable: list[AbstractBlock] | AbstractBlock,\ntransform: Callable[[Tensor], Tensor] = None,  # transform output of the QNN\nbackend: BackendName = BackendName.PYQTORCH,\ndiff_mode: DiffMode = DiffMode.AD,\nprotocol: Measurements | None = None,\nconfiguration: BackendConfiguration | dict | None = None,\n):\n\"\"\"Initialize the QNN\n    The number of inputs is determined by the feature parameters in the input\n    quantum circuit while the number of outputs is determined by how many\n    observables are provided as input\n    Args:\n        circuit: The quantum circuit to use for the QNN.\n        transform: A transformation applied to the output of the QNN.\n        backend: The chosen quantum backend.\n        diff_mode: The differentiation engine to use. Choices 'gpsr' or 'ad'.\n        protocol: optional measurement protocol. If None,\n            use exact expectation value with a statevector simulator\n        configuration: optional configuration for the backend\n    \"\"\"\nsuper().__init__(\ncircuit=circuit,\nobservable=observable,\nbackend=backend,\ndiff_mode=diff_mode,\nprotocol=protocol,\nconfiguration=configuration,\n)\nif self.out_features is None:\nraise ValueError(\"You need to provide at least one observable in the QNN constructor\")\nself.transform = transform if transform else lambda x: x\n</code></pre>"},{"location":"models/#qadence.models.qnn.QNN.forward","title":"<code>forward(values=None, state=None, protocol=None, endianness=Endianness.BIG)</code>","text":"<p>Forward pass of the model</p> <p>This returns the (differentiable) expectation value of the given observable operator defined in the constructor. Differently from the base QuantumModel class, the QNN accepts also a tensor as input for the forward pass. The tensor is expected to have shape: <code>n_batches x in_features</code> where <code>n_batches</code> is the number of data points and <code>in_features</code> is the dimensionality of the problem</p> <p>The output of the forward pass is the expectation value of the input observable(s). If a single observable is given, the output shape is <code>n_batches</code> while if multiple observables are given the output shape is instead <code>n_batches x n_observables</code></p> PARAMETER  DESCRIPTION <code>values</code> <p>the values of the feature parameters</p> <p> TYPE: <code>dict[str, Tensor] | Tensor</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>a tensor with the expectation value of the observables passed in the constructor of the model</p> <p> TYPE: <code>Tensor</code> </p> Source code in <code>qadence/models/qnn.py</code> <pre><code>def forward(\nself,\nvalues: dict[str, Tensor] | Tensor = None,\nstate: Tensor | None = None,\nprotocol: Measurements | None = None,\nendianness: Endianness = Endianness.BIG,\n) -&gt; Tensor:\n\"\"\"Forward pass of the model\n    This returns the (differentiable) expectation value of the given observable\n    operator defined in the constructor. Differently from the base QuantumModel\n    class, the QNN accepts also a tensor as input for the forward pass. The\n    tensor is expected to have shape: `n_batches x in_features` where `n_batches`\n    is the number of data points and `in_features` is the dimensionality of the problem\n    The output of the forward pass is the expectation value of the input\n    observable(s). If a single observable is given, the output shape is\n    `n_batches` while if multiple observables are given the output shape\n    is instead `n_batches x n_observables`\n    Args:\n        values (dict[str, Tensor] | Tensor): the values of the feature parameters\n    Returns:\n        Tensor: a tensor with the expectation value of the observables passed\n            in the constructor of the model\n    \"\"\"\nif values is None:\nvalues = {}\nif not isinstance(values, dict):\nvalues = self._format_to_dict(values)\nif protocol is None:\nprotocol = self._protocol\nreturn self.transform(\nself.expectation(values=values, state=state, protocol=protocol, endianness=endianness)\n)\n</code></pre>"},{"location":"advanced_tutorials/custom-models/","title":"Custom quantum models","text":"<p>In <code>qadence</code>, the <code>QuantumModel</code> is the central class point for executing <code>QuantumCircuit</code>s.  The idea of a <code>QuantumModel</code> is to decouple the backend execution from the management of circuit parameters and desired quantum computation output.</p> <p>In the following, we create a custom <code>QuantumModel</code> instance which introduces some additional optimizable parameters: *  an adjustable scaling factor in front of the observable to measured *  adjustable scale and shift factors to be applied to the model output before returning the result</p> <p>This can be easily done using PyTorch flexible model definition, and it will automatically work with the rest of <code>qadence</code> infrastructure.</p> <pre><code>import torch\nfrom qadence import QuantumModel, QuantumCircuit\nclass CustomQuantumModel(QuantumModel):\ndef __init__(self, circuit: QuantumCircuit, observable, backend=\"pyqtorch\", diff_mode=\"ad\"):\nsuper().__init__(circuit, observable=observable, backend=backend, diff_mode=diff_mode)\nself.n_qubits = circuit.n_qubits\n# define some additional parameters which will scale and shift (variationally) the\n# output of the QuantumModel\n# you can use all torch machinery for building those\nself.scale_out = torch.nn.Parameter(torch.ones(1))\nself.shift_out = torch.nn.Parameter(torch.ones(1))\n# override the forward pass of the model\n# the forward pass is the output of your QuantumModel and in this case\n# it's the (scaled) expectation value of the total magnetization with\n# a variable coefficient in front\ndef forward(self, values: dict[str, torch.Tensor]) -&gt; torch.Tensor:\n# scale the observable\nres = self.expectation(values)\n# scale and shift the result before returning\nreturn self.shift_out + res * self.scale_out\n</code></pre> <p>The custom model can be used like any other <code>QuantumModel</code>: <pre><code>from qadence import Parameter, RX, CNOT, QuantumCircuit\nfrom qadence import chain, kron, hamiltonian_factory, Z\nfrom sympy import acos\ndef quantum_circuit(n_qubits):\nx = Parameter(\"x\", trainable=False)\nfm = kron(RX(i, acos(x) * (i+1)) for i in range(n_qubits))\nansatz = kron(RX(i, f\"theta{i}\") for i in range(n_qubits))\nansatz = chain(ansatz, CNOT(0, n_qubits-1))\nblock = chain(fm, ansatz)\nblock.tag = \"circuit\"\nreturn QuantumCircuit(n_qubits, block)\nn_qubits = 4\nbatch_size = 10\ncircuit = quantum_circuit(n_qubits)\nobservable = hamiltonian_factory(n_qubits, detuning=Z)  # Total magnetization\nmodel = CustomQuantumModel(circuit, observable, backend=\"pyqtorch\")\nvalues = {\"x\": torch.rand(batch_size)}\nres = model(values)\nprint(\"Model output: \", res)\nassert len(res) == batch_size\n</code></pre> <pre><code>Model output:  tensor([[ 1.0910],\n[-0.3106],\n[-0.0326],\n[-0.2145],\n[-0.1543],\n[-0.5374],\n[-0.5529],\n[-0.0691],\n[-0.0888],\n[-0.4947]], grad_fn=&lt;AddBackward0&gt;)\n</code></pre> </p>"},{"location":"advanced_tutorials/custom-models/#quantum-model-with-wavefunction-overlaps","title":"Quantum model with wavefunction overlaps","text":"<p><code>QuantumModel</code>'s can also use different quantum operations in their forward pass, such as wavefunction overlaps described here. Beware that the resulting overlap tensor has to be differentiable to apply gradient-based optimization. This is only applicable to the <code>\"EXACT\"</code> overlap method.</p> <p>Here we show how to use overlap calculation when fitting a parameterized quantum circuit to act as a standard Hadamard gate.</p> <pre><code>from qadence import RY, RX, H, Overlap\n# create a quantum model which acts as an Hadamard gate after training\nclass LearnHadamard(QuantumModel):\ndef __init__(\nself,\ntrain_circuit: QuantumCircuit,\ntarget_circuit: QuantumCircuit,\nbackend=\"pyqtorch\",\n):\nsuper().__init__(circuit=train_circuit, backend=backend)\nself.overlap_fn = Overlap(train_circuit, target_circuit, backend=backend, method=\"exact\", diff_mode='ad')\ndef forward(self):\nreturn self.overlap_fn()\n# compute the wavefunction of the associated train circuit\ndef wavefunction(self):\nreturn model.overlap_fn.run({})\ntrain_circuit = QuantumCircuit(1, chain(RX(0, \"phi\"), RY(0, \"theta\")))\ntarget_circuit = QuantumCircuit(1, H(0))\nmodel = LearnHadamard(train_circuit, target_circuit)\n# get the overlap between model and target circuit wavefunctions\nprint(model())\n</code></pre> <pre><code>tensor([[0.5337]], grad_fn=&lt;UnsqueezeBackward0&gt;)\n</code></pre> <p>This model can then be trained with the standard Qadence helper functions.</p> <pre><code>from qadence import run\nfrom qadence.ml_tools import train_with_grad, TrainConfig\ncriterion = torch.nn.MSELoss()\noptimizer = torch.optim.Adam(model.parameters(), lr=1e-1)\ndef loss_fn(model: LearnHadamard, _unused) -&gt; tuple[torch.Tensor, dict]:\nloss = criterion(torch.tensor([[1.0]]), model())\nreturn loss, {}\nconfig = TrainConfig(max_iter=2500)\nmodel, optimizer = train_with_grad(\nmodel, None, optimizer, config, loss_fn=loss_fn\n)\nwf_target = run(target_circuit)\nassert torch.allclose(wf_target, model.wavefunction(), atol=1e-2)\n</code></pre> <pre><code>\n</code></pre>"},{"location":"advanced_tutorials/differentiability/","title":"Differentiability","text":"<p>Many application in quantum computing and quantum machine learning more specifically requires the differentiation of a quantum circuit with respect to its parameters.</p> <p>In Qadence, we perform quantum computations via the <code>QuantumModel</code> interface. The derivative of the outputs of quantum models with respect to feature and variational parameters in the quantum circuit can be implemented in Qadence with two different modes:</p> <ul> <li>Automatic differentiation (AD) mode <sup>1</sup>. This mode allows to differentiation both <code>run()</code> and <code>expectation()</code> methods of the <code>QuantumModel</code> and it is the fastest available differentiation method. Under the hood, it is based on the PyTorch autograd engine wrapped by the <code>DifferentiableBackend</code> class. This mode is not working on quantum devices.</li> <li>Generalized parameter shift rule (GPSR) mode. This is general implementation of the well known parameter  shift rule algorithm <sup>2</sup> which works for arbitrary quantum operations <sup>3</sup>. This mode is only applicable to  the <code>expectation()</code> method of <code>QuantumModel</code> but it is compatible with execution or quantum devices.</li> </ul>"},{"location":"advanced_tutorials/differentiability/#automatic-differentiation","title":"Automatic differentiation","text":"<p>Automatic differentiation <sup>1</sup> is a procedure to derive a complex function defined as a sequence of elementary mathematical operations in the form of a computer program. Automatic differentiation is a cornerstone of modern machine learning and a crucial ingredient of its recent successes. In its so-called reverse mode, it follows this sequence of operations in reverse order by systematically applying the chain rule to recover the exact value of derivative. Reverse mode automatic differentiation is implemented in Qadence leveraging the PyTorch <code>autograd</code> engine.</p> <p>Only available with PyQTorch backend</p> <p>Currently, automatic differentiation mode is only available when the <code>pyqtorch</code> backend is selected.</p>"},{"location":"advanced_tutorials/differentiability/#generalized-parameter-shift-rule","title":"Generalized parameter shift rule","text":"<p>The generalized parameter shift rule implementation in Qadence was introduced in <sup>3</sup>. Here the standard parameter shift rules, which only works for quantum operations whose generator has a single gap in its eigenvalue spectrum, was generalized to work with arbitrary generators of quantum operations.</p> <p>For this, we define the differentiable function as quantum expectation value</p> \\[ f(x) = \\left\\langle 0\\right|\\hat{U}^{\\dagger}(x)\\hat{C}\\hat{U}(x)\\left|0\\right\\rangle \\] <p>where \\(\\hat{U}(x)={\\rm exp}{\\left( -i\\frac{x}{2}\\hat{G}\\right)}\\) is the quantum evolution operator with generator \\(\\hat{G}\\) representing the structure of the underlying quantum circuit and \\(\\hat{C}\\) is the cost operator. Then using the eigenvalue spectrum \\(\\left\\{ \\lambda_n\\right\\}\\) of the generator \\(\\hat{G}\\) we calculate the full set of corresponding unique non-zero spectral gaps \\(\\left\\{ \\Delta_s\\right\\}\\) (differences between eigenvalues). It can be shown that the final expression of derivative of \\(f(x)\\) is then given by the following expression:</p> <p>\\(\\begin{equation} \\frac{{\\rm d}f\\left(x\\right)}{{\\rm d}x}=\\overset{S}{\\underset{s=1}{\\sum}}\\Delta_{s}R_{s}, \\end{equation}\\)</p> <p>where \\(S\\) is the number of unique non-zero spectral gaps and \\(R_s\\) are real quantities that are solutions of a system of linear equations</p> <p>\\(\\begin{equation} \\begin{cases} F_{1} &amp; =4\\overset{S}{\\underset{s=1}{\\sum}}{\\rm sin}\\left(\\frac{\\delta_{1}\\Delta_{s}}{2}\\right)R_{s},\\\\ F_{2} &amp; =4\\overset{S}{\\underset{s=1}{\\sum}}{\\rm sin}\\left(\\frac{\\delta_{2}\\Delta_{s}}{2}\\right)R_{s},\\\\  &amp; ...\\\\ F_{S} &amp; =4\\overset{S}{\\underset{s=1}{\\sum}}{\\rm sin}\\left(\\frac{\\delta_{M}\\Delta_{s}}{2}\\right)R_{s}. \\end{cases} \\end{equation}\\)</p> <p>Here \\(F_s=f(x+\\delta_s)-f(x-\\delta_s)\\) denotes the difference between values of functions evaluated at shifted arguments \\(x\\pm\\delta_s\\).</p>"},{"location":"advanced_tutorials/differentiability/#usage","title":"Usage","text":""},{"location":"advanced_tutorials/differentiability/#basics","title":"Basics","text":"<p>In Qadence, the GPSR differentiation engine can be selected by passing <code>diff_mode=\"gpsr\"</code> or, equivalently, <code>diff_mode=DiffMode.GPSR</code> to a <code>QuantumModel</code> instance. The code in the box below shows how to create <code>QuantumModel</code> instances with both AD and GPSR engines.</p> <pre><code>from qadence import (FeatureParameter, HamEvo, X, I, Z,\nhamiltonian_factory, QuantumCircuit,\nQuantumModel, BackendName, DiffMode)\nimport torch\nn_qubits = 2\n# define differentiation parameter\nx = FeatureParameter(\"x\")\n# define generator and HamEvo block\ngenerator = X(0) + X(1) + 0.2 * (Z(0) + I(1)) * (I(0) + Z(1))\nblock = HamEvo(generator, x)\n# create quantum circuit\ncircuit = QuantumCircuit(n_qubits, block)\n# create total magnetization cost operator\nobs = hamiltonian_factory(n_qubits, detuning=Z)\n# create models with AD and GPSR differentiation engines\nmodel_ad = QuantumModel(circuit, obs,\nbackend=BackendName.PYQTORCH,\ndiff_mode=DiffMode.AD)\nmodel_gpsr = QuantumModel(circuit, obs,\nbackend=BackendName.PYQTORCH,\ndiff_mode=DiffMode.GPSR)\n# generate value for circuit's parameter\nxs = torch.linspace(0, 2*torch.pi, 100, requires_grad=True)\nvalues = {\"x\": xs}\n# calculate function f(x)\nexp_val_ad = model_ad.expectation(values)\nexp_val_gpsr = model_gpsr.expectation(values)\n# calculate derivative df/dx using the PyTorch\n# autograd engine\ndexpval_x_ad = torch.autograd.grad(\nexp_val_ad, values[\"x\"], torch.ones_like(exp_val_ad), create_graph=True\n)[0]\ndexpval_x_gpsr = torch.autograd.grad(\nexp_val_gpsr, values[\"x\"], torch.ones_like(exp_val_gpsr), create_graph=True\n)[0]\n</code></pre> <p>We can plot the resulting derivatives and see that in both cases they coincide.</p> <pre><code>import matplotlib.pyplot as plt\n# plot f(x) and df/dx derivatives calculated using AD and GPSR\n# differentiation engines\nfig, ax = plt.subplots()\nax.scatter(xs.detach().numpy(),\nexp_val_ad.detach().numpy(),\nlabel=\"f(x)\")\nax.scatter(xs.detach().numpy(),\ndexpval_x_ad.detach().numpy(),\nlabel=\"df/dx AD\")\nax.scatter(xs.detach().numpy(),\ndexpval_x_gpsr.detach().numpy(),\ns=5,\nlabel=\"df/dx GPSR\")\nplt.legend()\n</code></pre> 2023-10-12T10:40:00.193524 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/"},{"location":"advanced_tutorials/differentiability/#low-level-control-on-the-shift-values","title":"Low-level control on the shift values","text":"<p>In order to get a finer control over the GPSR differentiation engine we can use the low-level Qadence API to define a <code>DifferentiableBackend</code>.</p> <pre><code>from qadence import DifferentiableBackend\nfrom qadence.backends.pyqtorch import Backend as PyQBackend\n# define differentiable quantum backend\nquantum_backend = PyQBackend()\nconv = quantum_backend.convert(circuit, obs)\npyq_circ, pyq_obs, embedding_fn, params = conv\ndiff_backend = DifferentiableBackend(quantum_backend, diff_mode=DiffMode.GPSR, shift_prefac=0.2)\n# calculate function f(x)\nexpval = diff_backend.expectation(pyq_circ, pyq_obs, embedding_fn(params, values))\n</code></pre> <p>Here we passed an additional argument <code>shift_prefac</code> to the <code>DifferentiableBackend</code> instance that governs the magnitude of shifts \\(\\delta\\equiv\\alpha\\delta^\\prime\\) shown in equation (2) above. In this relation \\(\\delta^\\prime\\) is set internally and \\(\\alpha\\) is the value passed by <code>shift_prefac</code> and the resulting shift value \\(\\delta\\) is then used in all the following GPSR calculations.</p> <p>Tuning parameter \\(\\alpha\\) is useful to improve results when the generator \\(\\hat{G}\\) or the quantum operation is a dense matrix, for example a complex <code>HamEvo</code> operation; if many entries of this matrix are sufficiently larger than 0 the operation is equivalent to a strongly interacting system. In such case parameter \\(\\alpha\\) should be gradually lowered in order to achieve exact derivative values.</p>"},{"location":"advanced_tutorials/differentiability/#references","title":"References","text":"<ol> <li> <p>A. G. Baydin et al., Automatic Differentiation in Machine Learning: a Survey \u21a9\u21a9</p> </li> <li> <p>Schuld et al., Evaluating analytic gradients on quantum hardware (2018). \u21a9</p> </li> <li> <p>Kyriienko et al., General quantum circuit differentiation rules \u21a9\u21a9</p> </li> </ol>"},{"location":"backends/backend/","title":"Abstract backend","text":""},{"location":"backends/backend/#qadence.backend.Backend","title":"<code>Backend</code>  <code>dataclass</code>","text":"<p>             Bases: <code>ABC</code></p> <p>The abstract class that defines the interface for the backends</p> ATTRIBUTE DESCRIPTION <code>name</code> <p>backend unique string identifier</p> <p> TYPE: <code>BackendName</code> </p> <code>supports_ad</code> <p>whether or not the backend has a native autograd</p> <p> TYPE: <code>bool</code> </p> <code>supports_bp</code> <p>whether or not the backend has a native backprop</p> <p> TYPE: <code>bool</code> </p> <code>is_remote</code> <p>whether computations are executed locally or remotely on this backend, useful when using cloud platforms where credentials are needed for example.</p> <p> TYPE: <code>bool</code> </p> <code>with_measurements</code> <p>whether it supports counts or not</p> <p> TYPE: <code>bool</code> </p> <code>with_noise</code> <p>whether to add realistic noise or not</p> <p> TYPE: <code>bool</code> </p>"},{"location":"backends/backend/#qadence.backend.Backend.circuit","title":"<code>circuit(circuit)</code>  <code>abstractmethod</code>","text":"<p>Converts an abstract <code>QuantumCircuit</code> to the native backend representation.</p> PARAMETER  DESCRIPTION <code>circuit</code> <p>A circuit, for example: <code>QuantumCircuit(2, X(0))</code></p> <p> TYPE: <code>QuantumCircuit</code> </p> RETURNS DESCRIPTION <code>ConvertedCircuit</code> <p>A converted circuit <code>c</code>. You can access the original, arbstract circuit via <code>c.abstract</code></p> <code>ConvertedCircuit</code> <p>and the converted (or backend native) circuit via <code>c.native</code>.</p> Source code in <code>qadence/backend.py</code> <pre><code>@abstractmethod\ndef circuit(self, circuit: QuantumCircuit) -&gt; ConvertedCircuit:\n\"\"\"Converts an abstract `QuantumCircuit` to the native backend representation.\n    Arguments:\n        circuit: A circuit, for example: `QuantumCircuit(2, X(0))`\n    Returns:\n        A converted circuit `c`. You can access the original, arbstract circuit via `c.abstract`\n        and the converted (or backend *native*) circuit via `c.native`.\n    \"\"\"\nraise NotImplementedError\n</code></pre>"},{"location":"backends/backend/#qadence.backend.Backend.convert","title":"<code>convert(circuit, observable=None)</code>","text":"<p>Convert an abstract circuit (and optionally and observable) to their native representation. Additionally this function constructs an embedding function which maps from user-facing parameters to device parameters (read more on parameter embedding here).</p> Source code in <code>qadence/backend.py</code> <pre><code>def convert(\nself, circuit: QuantumCircuit, observable: list[AbstractBlock] | AbstractBlock | None = None\n) -&gt; Converted:\n\"\"\"Convert an abstract circuit (and optionally and observable) to their native\n    representation. Additionally this function constructs an embedding function which maps from\n    user-facing parameters to device parameters (read more on parameter embedding\n    [here][qadence.blocks.embedding.embedding]).\n    \"\"\"\ndef check_observable(obs_obj: Any) -&gt; AbstractBlock:\nif isinstance(obs_obj, QubitOperator):\nfrom qadence.blocks.manipulate import from_openfermion\nassert len(obs_obj.terms) &gt; 0, \"Make sure to give a non-empty qubit hamiltonian\"\nreturn from_openfermion(obs_obj)\nelif isinstance(obs_obj, (CompositeBlock, PrimitiveBlock, ScaleBlock)):\nfrom qadence.blocks.utils import block_is_qubit_hamiltonian\nassert block_is_qubit_hamiltonian(\nobs_obj\n), \"Make sure the QubitHamiltonian consists only of Pauli operators X, Y, Z, I\"\nreturn obs_obj\nraise TypeError(\n\"qubit_hamiltonian should be a Pauli-like AbstractBlock or a QubitOperator\"\n)\nconv_circ = self.circuit(circuit)\ncirc_params, circ_embedding_fn = embedding(\nconv_circ.abstract.block, self.config._use_gate_params\n)\nparams = circ_params\nif observable is not None:\nobservable = observable if isinstance(observable, list) else [observable]\nconv_obs = []\nobs_embedding_fn_list = []\nfor obs in observable:\nobs = check_observable(obs)\nc_obs = self.observable(obs, max(circuit.n_qubits, obs.n_qubits))\nobs_params, obs_embedding_fn = embedding(\nc_obs.abstract, self.config._use_gate_params\n)\nparams.update(obs_params)\nobs_embedding_fn_list.append(obs_embedding_fn)\nconv_obs.append(c_obs)\ndef embedding_fn_dict(a: dict, b: dict) -&gt; dict:\nembedding_dict = circ_embedding_fn(a, b)\nfor o in obs_embedding_fn_list:\nembedding_dict.update(o(a, b))\nreturn embedding_dict\nreturn Converted(conv_circ, conv_obs, embedding_fn_dict, params)\ndef embedding_fn(a: dict, b: dict) -&gt; dict:\nreturn circ_embedding_fn(a, b)\nreturn Converted(conv_circ, None, embedding_fn, params)\n</code></pre>"},{"location":"backends/backend/#qadence.backend.Backend.expectation","title":"<code>expectation(circuit, observable, param_values={}, state=None, protocol=None, endianness=Endianness.BIG)</code>  <code>abstractmethod</code>","text":"<p>Compute the expectation value of the <code>circuit</code> with the given <code>observable</code>.</p> PARAMETER  DESCRIPTION <code>circuit</code> <p>A converted circuit as returned by <code>backend.circuit</code>.</p> <p> TYPE: <code>ConvertedCircuit</code> </p> <code>param_values</code> <p>Already embedded parameters of the circuit. See <code>embedding</code> for more info.</p> <p> TYPE: <code>dict[str, Tensor]</code> DEFAULT: <code>{}</code> </p> <code>state</code> <p>Initial state.</p> <p> TYPE: <code>Tensor | None</code> DEFAULT: <code>None</code> </p> <code>endianness</code> <p>Endianness of the resulting bitstrings.</p> <p> TYPE: <code>Endianness</code> DEFAULT: <code>BIG</code> </p> Source code in <code>qadence/backend.py</code> <pre><code>@abstractmethod\ndef expectation(\nself,\ncircuit: ConvertedCircuit,\nobservable: list[ConvertedObservable] | ConvertedObservable,\nparam_values: dict[str, Tensor] = {},\nstate: Tensor | None = None,\nprotocol: Measurements | None = None,\nendianness: Endianness = Endianness.BIG,\n) -&gt; Tensor:\n\"\"\"Compute the expectation value of the `circuit` with the given `observable`.\n    Arguments:\n        circuit: A converted circuit as returned by `backend.circuit`.\n        param_values: _**Already embedded**_ parameters of the circuit. See\n            [`embedding`][qadence.blocks.embedding.embedding] for more info.\n        state: Initial state.\n        endianness: Endianness of the resulting bitstrings.\n    \"\"\"\nraise NotImplementedError\n</code></pre>"},{"location":"backends/backend/#qadence.backend.Backend.observable","title":"<code>observable(observable, n_qubits)</code>  <code>abstractmethod</code>","text":"<p>Converts an abstract observable (which is just an <code>AbstractBlock</code>) to the native backend representation.</p> PARAMETER  DESCRIPTION <code>observable</code> <p>An observable.</p> <p> TYPE: <code>AbstractBlock</code> </p> <code>n_qubits</code> <p>Number of qubits the observable covers. This is typically <code>circuit.n_qubits</code>.</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>ConvertedObservable</code> <p>A converted observable <code>o</code>. You can access the original, arbstract observable via</p> <code>ConvertedObservable</code> <p><code>o.abstract</code> and the converted (or backend native) observable via <code>o.native</code>.</p> Source code in <code>qadence/backend.py</code> <pre><code>@abstractmethod\ndef observable(self, observable: AbstractBlock, n_qubits: int) -&gt; ConvertedObservable:\n\"\"\"Converts an abstract observable (which is just an `AbstractBlock`) to the native backend\n    representation.\n    Arguments:\n        observable: An observable.\n        n_qubits: Number of qubits the observable covers. This is typically `circuit.n_qubits`.\n    Returns:\n        A converted observable `o`. You can access the original, arbstract observable via\n        `o.abstract` and the converted (or backend *native*) observable via `o.native`.\n    \"\"\"\nraise NotImplementedError\n</code></pre>"},{"location":"backends/backend/#qadence.backend.Backend.run","title":"<code>run(circuit, param_values={}, state=None, endianness=Endianness.BIG)</code>  <code>abstractmethod</code>","text":"<p>Run a circuit and return the resulting wave function.</p> PARAMETER  DESCRIPTION <code>circuit</code> <p>A converted circuit as returned by <code>backend.circuit</code>.</p> <p> TYPE: <code>ConvertedCircuit</code> </p> <code>param_values</code> <p>Already embedded parameters of the circuit. See <code>embedding</code> for more info.</p> <p> TYPE: <code>dict[str, Tensor]</code> DEFAULT: <code>{}</code> </p> <code>state</code> <p>Initial state.</p> <p> TYPE: <code>Tensor | None</code> DEFAULT: <code>None</code> </p> <code>endianness</code> <p>Endianness of the resulting samples.</p> <p> TYPE: <code>Endianness</code> DEFAULT: <code>BIG</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A list of Counter objects where each key represents a bitstring</p> <code>Tensor</code> <p>and its value the number of times it has been sampled from the given wave function.</p> Source code in <code>qadence/backend.py</code> <pre><code>@abstractmethod\ndef run(\nself,\ncircuit: ConvertedCircuit,\nparam_values: dict[str, Tensor] = {},\nstate: Tensor | None = None,\nendianness: Endianness = Endianness.BIG,\n) -&gt; Tensor:\n\"\"\"Run a circuit and return the resulting wave function.\n    Arguments:\n        circuit: A converted circuit as returned by `backend.circuit`.\n        param_values: _**Already embedded**_ parameters of the circuit. See\n            [`embedding`][qadence.blocks.embedding.embedding] for more info.\n        state: Initial state.\n        endianness: Endianness of the resulting samples.\n    Returns:\n        A list of Counter objects where each key represents a bitstring\n        and its value the number of times it has been sampled from the given wave function.\n    \"\"\"\nraise NotImplementedError\n</code></pre>"},{"location":"backends/backend/#qadence.backend.Backend.sample","title":"<code>sample(circuit, param_values={}, n_shots=1000, state=None, endianness=Endianness.BIG)</code>  <code>abstractmethod</code>","text":"<p>Sample bit strings.</p> PARAMETER  DESCRIPTION <code>circuit</code> <p>A converted circuit as returned by <code>backend.circuit</code>.</p> <p> TYPE: <code>ConvertedCircuit</code> </p> <code>param_values</code> <p>Already embedded parameters of the circuit. See <code>embedding</code> for more info.</p> <p> TYPE: <code>dict[str, Tensor]</code> DEFAULT: <code>{}</code> </p> <code>n_shots</code> <p>Number of shots to sample.</p> <p> TYPE: <code>int</code> DEFAULT: <code>1000</code> </p> <code>state</code> <p>Initial state.</p> <p> TYPE: <code>Tensor | None</code> DEFAULT: <code>None</code> </p> <code>endianness</code> <p>Endianness of the resulting bitstrings.</p> <p> TYPE: <code>Endianness</code> DEFAULT: <code>BIG</code> </p> Source code in <code>qadence/backend.py</code> <pre><code>@abstractmethod\ndef sample(\nself,\ncircuit: ConvertedCircuit,\nparam_values: dict[str, Tensor] = {},\nn_shots: int = 1000,\nstate: Tensor | None = None,\nendianness: Endianness = Endianness.BIG,\n) -&gt; list[Counter]:\n\"\"\"Sample bit strings.\n    Arguments:\n        circuit: A converted circuit as returned by `backend.circuit`.\n        param_values: _**Already embedded**_ parameters of the circuit. See\n            [`embedding`][qadence.blocks.embedding.embedding] for more info.\n        n_shots: Number of shots to sample.\n        state: Initial state.\n        endianness: Endianness of the resulting bitstrings.\n    \"\"\"\nraise NotImplementedError\n</code></pre>"},{"location":"backends/backend/#qadence.backend.BackendConfiguration","title":"<code>BackendConfiguration</code>  <code>dataclass</code>","text":""},{"location":"backends/backend/#qadence.backend.BackendConfiguration.available_options","title":"<code>available_options()</code>","text":"<p>Return as a string the available fields with types of the configuration</p> RETURNS DESCRIPTION <code>str</code> <p>a string with all the available fields, one per line</p> <p> TYPE: <code>str</code> </p> Source code in <code>qadence/backend.py</code> <pre><code>def available_options(self) -&gt; str:\n\"\"\"Return as a string the available fields with types of the configuration\n    Returns:\n        str: a string with all the available fields, one per line\n    \"\"\"\nconf_msg = \"\"\nfor field in fields(self):\nif not field.name.startswith(\"_\"):\nconf_msg += (\nf\"Name: {field.name} - Type: {field.type} - Default value: {field.default}\\n\"\n)\nreturn conf_msg\n</code></pre>"},{"location":"backends/backend/#qadence.backend.BackendConfiguration.get_param_name","title":"<code>get_param_name(blk)</code>","text":"<p>Return parameter names for the current backend. Depending on which backend is in use this function returns either UUIDs or expressions of parameters.</p> Source code in <code>qadence/backend.py</code> <pre><code>def get_param_name(self, blk: AbstractBlock) -&gt; Tuple[str, ...]:\n\"\"\"Return parameter names for the current backend. Depending on which backend is in use this\n    function returns either UUIDs or expressions of parameters.\"\"\"\nparam_ids: Tuple\n# FIXME: better type hiearchy?\ntypes = (TimeEvolutionBlock, ParametricBlock, ConstantAnalogRotation, WaitBlock)\nif not isinstance(blk, types):\nraise TypeError(f\"Can not infer param name from {type(blk)}\")\nelse:\nif self._use_gate_params:\nparam_ids = tuple(blk.parameters.uuids())\nelse:\nparam_ids = tuple(map(stringify, blk.parameters.expressions()))\nreturn param_ids\n</code></pre>"},{"location":"backends/braket/","title":"Amazon Braket","text":""},{"location":"backends/braket/#braket-digital-backend","title":"Braket Digital backend","text":""},{"location":"backends/braket/#qadence.backends.braket.backend.Backend","title":"<code>Backend</code>  <code>dataclass</code>","text":"<p>             Bases: <code>Backend</code></p>"},{"location":"backends/braket/#qadence.backends.braket.backend.Backend.assign_parameters","title":"<code>assign_parameters(circuit, param_values)</code>","text":"<p>Assign numerical values to the circuit parameters</p> Source code in <code>qadence/backends/braket/backend.py</code> <pre><code>def assign_parameters(\nself, circuit: ConvertedCircuit, param_values: dict[str, Tensor | float]\n) -&gt; BraketCircuit:\n\"\"\"Assign numerical values to the circuit parameters\"\"\"\nif param_values is None:\nreturn circuit.native()\nparams_copy = param_values.copy()\npnames = [p.name for p in circuit.native.parameters]\n# account for fixed parameters\nfor name in param_values.keys():\nif name not in pnames:\nparams_copy.pop(name)\n# make sure that all the parameters are single floats\n# otherwise it won't be accepted by Braket\nnative_params = promote_parameters(params_copy)\n# assign the parameters to the circuit\nassigned_circuit = circuit.native(**native_params)\nreturn assigned_circuit\n</code></pre>"},{"location":"backends/braket/#qadence.backends.braket.backend.Backend.run","title":"<code>run(circuit, param_values={}, state=None, endianness=Endianness.BIG)</code>","text":"<p>Execute the circuit and return a wavefunction in form of a statevector.</p> PARAMETER  DESCRIPTION <code>circuit</code> <p>The circuit that is executed.</p> <p> TYPE: <code>ConvertedCircuit</code> </p> <code>param_values</code> <p>Parameters of the circuit (after calling the embedding function on the user-facing parameters).</p> <p> TYPE: <code>dict[str, Tensor]</code> DEFAULT: <code>{}</code> </p> <code>state</code> <p>Initial state.</p> <p> TYPE: <code>Tensor | None</code> DEFAULT: <code>None</code> </p> <code>endianness</code> <p>The endianness of the wave function.</p> <p> TYPE: <code>Endianness</code> DEFAULT: <code>BIG</code> </p> Source code in <code>qadence/backends/braket/backend.py</code> <pre><code>def run(\nself,\ncircuit: ConvertedCircuit,\nparam_values: dict[str, Tensor] = {},\nstate: Tensor | None = None,\nendianness: Endianness = Endianness.BIG,\n) -&gt; Tensor:\n\"\"\"\n    Execute the circuit and return a wavefunction in form of a statevector.\n    Arguments:\n        circuit: The circuit that is executed.\n        param_values: Parameters of the circuit (after calling the embedding\n            function on the user-facing parameters).\n        state: Initial state.\n        endianness: The endianness of the wave function.\n    \"\"\"\nif state is not None:\nraise NotImplementedError\nif self.is_remote:\n# handle here, or different backends?\nraise NotImplementedError\n# loop over all values in the batch\nresults = []\nfor vals in to_list_of_dicts(param_values):\nfinal_circuit = self.assign_parameters(circuit, vals)\nfinal_circuit.state_vector()  # set simulation type\ntask = self._device.run(final_circuit, 0)\nresults.append(task.result().values[0])\nstates = torch.tensor(np.array(results))\nn_qubits = circuit.abstract.n_qubits\nif endianness != self.native_endianness and n_qubits &gt; 1:\nfrom qadence.transpile import invert_endianness\nstates = invert_endianness(states)\nreturn states\n</code></pre>"},{"location":"backends/braket/#qadence.backends.braket.backend.Backend.sample","title":"<code>sample(circuit, param_values={}, n_shots=1, state=None, endianness=Endianness.BIG)</code>","text":"<p>Execute the circuit and return samples of the resulting wavefunction.</p> Source code in <code>qadence/backends/braket/backend.py</code> <pre><code>def sample(\nself,\ncircuit: ConvertedCircuit,\nparam_values: dict[str, Tensor] = {},\nn_shots: int = 1,\nstate: Tensor | None = None,\nendianness: Endianness = Endianness.BIG,\n) -&gt; list[Counter]:\n\"\"\"Execute the circuit and return samples of the resulting wavefunction.\"\"\"\nif state is not None:\nraise NotImplementedError(\"Braket cannot handle a custom initial state.\")\nif n_shots &lt; 1:\nraise ValueError(\"You can only call sample with n_shots&gt;0.\")\nif self.is_remote:\n# handle here, or different backends?\nraise NotImplementedError\n# loop over all values in the batch\nsamples = []\nfor vals in to_list_of_dicts(param_values):\nfinal_circuit = self.assign_parameters(circuit, vals)\ntask = self._device.run(final_circuit, n_shots)\nsamples.append(task.result().measurement_counts)\nif endianness != self.native_endianness:\nfrom qadence.transpile import invert_endianness\nsamples = invert_endianness(samples)\nreturn samples\n</code></pre>"},{"location":"backends/differentiable/","title":"DifferentiableBackend","text":""},{"location":"backends/differentiable/#qadence.backends.pytorch_wrapper.DifferentiableBackend","title":"<code>DifferentiableBackend(backend, diff_mode=DiffMode.AD, **psr_args)</code>","text":"<p>             Bases: <code>Module</code></p> <p>A class to abstract the operations done by the autodiff engine</p> PARAMETER  DESCRIPTION <code>backend</code> <p>An instance of the QuantumBackend type perform execution.</p> <p> TYPE: <code>Backend</code> </p> <code>diff_mode</code> <p>A differentiable mode supported by the differentiation engine.</p> <p> TYPE: <code>DiffMode</code> DEFAULT: <code>AD</code> </p> <code>**psr_args</code> <p>Arguments that will be passed on to <code>DifferentiableExpectation</code>.</p> <p> TYPE: <code>int | float | None</code> DEFAULT: <code>{}</code> </p> Source code in <code>qadence/backends/pytorch_wrapper.py</code> <pre><code>def __init__(\nself,\nbackend: QuantumBackend,\ndiff_mode: DiffMode = DiffMode.AD,\n**psr_args: int | float | None,\n) -&gt; None:\nsuper().__init__()\nself.backend = backend\nself.diff_mode = diff_mode\nself.psr_args = psr_args\n# TODO: Add differentiable overlap calculation\nself._overlap: Callable = None  # type: ignore [assignment]\n</code></pre>"},{"location":"backends/differentiable/#qadence.backends.pytorch_wrapper.DifferentiableBackend.expectation","title":"<code>expectation(circuit, observable, param_values={}, state=None, protocol=None, endianness=Endianness.BIG)</code>","text":"<p>Compute the expectation value of a given observable.</p> PARAMETER  DESCRIPTION <code>circuit</code> <p>A backend native quantum circuit to be executed.</p> <p> TYPE: <code>ConvertedCircuit</code> </p> <code>observable</code> <p>A backend native observable to compute the expectation value from.</p> <p> TYPE: <code>list[ConvertedObservable] | ConvertedObservable</code> </p> <code>param_values</code> <p>A dict of values for symbolic substitution.</p> <p> TYPE: <code>dict[str, Tensor]</code> DEFAULT: <code>{}</code> </p> <code>state</code> <p>An initial state.</p> <p> TYPE: <code>Tensor | None</code> DEFAULT: <code>None</code> </p> <code>protocol</code> <p>A shot-based measurement protocol.</p> <p> TYPE: <code>Measurements | None</code> DEFAULT: <code>None</code> </p> <code>endianness</code> <p>Endianness of the state.</p> <p> TYPE: <code>Endianness</code> DEFAULT: <code>BIG</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A tensor of expectation values.</p> Source code in <code>qadence/backends/pytorch_wrapper.py</code> <pre><code>def expectation(\nself,\ncircuit: ConvertedCircuit,\nobservable: list[ConvertedObservable] | ConvertedObservable,\nparam_values: dict[str, Tensor] = {},\nstate: Tensor | None = None,\nprotocol: Measurements | None = None,\nendianness: Endianness = Endianness.BIG,\n) -&gt; Tensor:\n\"\"\"Compute the expectation value of a given observable.\n    Arguments:\n        circuit: A backend native quantum circuit to be executed.\n        observable: A backend native observable to compute the expectation value from.\n        param_values: A dict of values for symbolic substitution.\n        state: An initial state.\n        protocol: A shot-based measurement protocol.\n        endianness: Endianness of the state.\n    Returns:\n        A tensor of expectation values.\n    \"\"\"\nobservable = observable if isinstance(observable, list) else [observable]\ndifferentiable_expectation = DifferentiableExpectation(\nbackend=self.backend,\ncircuit=circuit,\nobservable=observable,\nparam_values=param_values,\nstate=state,\nprotocol=protocol,\nendianness=endianness,\n)\nif self.diff_mode == DiffMode.AD:\nexpectation = differentiable_expectation.ad\nelse:\ntry:\nfns = get_gpsr_fns()\npsr_fn = fns[self.diff_mode]\nexcept KeyError:\nraise ValueError(f\"{self.diff_mode} differentiation mode is not supported\")\nexpectation = partial(differentiable_expectation.psr, psr_fn=psr_fn, **self.psr_args)\nreturn expectation()\n</code></pre>"},{"location":"backends/differentiable/#qadence.backends.pytorch_wrapper.DifferentiableBackend.run","title":"<code>run(circuit, param_values={}, state=None, endianness=Endianness.BIG)</code>","text":"<p>Run on the underlying backend.</p> Source code in <code>qadence/backends/pytorch_wrapper.py</code> <pre><code>def run(\nself,\ncircuit: ConvertedCircuit,\nparam_values: dict = {},\nstate: Tensor | None = None,\nendianness: Endianness = Endianness.BIG,\n) -&gt; Tensor:\n\"\"\"Run on the underlying backend.\"\"\"\nreturn self.backend.run(\ncircuit=circuit, param_values=param_values, state=state, endianness=endianness\n)\n</code></pre>"},{"location":"backends/differentiable/#qadence.backends.pytorch_wrapper.DifferentiableBackend.sample","title":"<code>sample(circuit, param_values, state=None, n_shots=1, endianness=Endianness.BIG)</code>","text":"<p>Sample bitstring from the registered circuit.</p> PARAMETER  DESCRIPTION <code>circuit</code> <p>A backend native quantum circuit to be executed.</p> <p> TYPE: <code>ConvertedCircuit</code> </p> <code>param_values</code> <p>The values of the parameters after embedding</p> <p> TYPE: <code>dict[str, Tensor]</code> </p> <code>n_shots</code> <p>The number of shots. Defaults to 1.</p> <p> TYPE: <code>int</code> DEFAULT: <code>1</code> </p> RETURNS DESCRIPTION <code>list[Counter]</code> <p>An iterable with all the sampled bitstrings</p> Source code in <code>qadence/backends/pytorch_wrapper.py</code> <pre><code>def sample(\nself,\ncircuit: ConvertedCircuit,\nparam_values: dict[str, Tensor],\nstate: Tensor | None = None,\nn_shots: int = 1,\nendianness: Endianness = Endianness.BIG,\n) -&gt; list[Counter]:\n\"\"\"Sample bitstring from the registered circuit.\n    Arguments:\n        circuit: A backend native quantum circuit to be executed.\n        param_values: The values of the parameters after embedding\n        n_shots: The number of shots. Defaults to 1.\n    Returns:\n        An iterable with all the sampled bitstrings\n    \"\"\"\nwith torch.no_grad():\nreturn self.backend.sample(\ncircuit=circuit,\nparam_values=param_values,\nstate=state,\nn_shots=n_shots,\nendianness=endianness,\n)\n</code></pre>"},{"location":"backends/differentiable/#qadence.backends.pytorch_wrapper.DifferentiableExpectation","title":"<code>DifferentiableExpectation</code>  <code>dataclass</code>","text":"<p>A handler for differentiating expectation estimation using various engines.</p>"},{"location":"backends/differentiable/#qadence.backends.pytorch_wrapper.DifferentiableExpectation.construct_rules","title":"<code>construct_rules(circuit, observable, psr_fn, **psr_args)</code>  <code>staticmethod</code>","text":"<p>Create a mapping between parameters and PSR functions.</p> Source code in <code>qadence/backends/pytorch_wrapper.py</code> <pre><code>@staticmethod\ndef construct_rules(\ncircuit: QuantumCircuit,\nobservable: list[AbstractBlock],\npsr_fn: Callable,\n**psr_args: int | float | None,\n) -&gt; dict[str, Callable]:\n\"\"\"Create a mapping between parameters and PSR functions.\"\"\"\nuuid_to_eigs = uuid_to_eigen(circuit.block)\n# We currently rely on implicit ordering to match the PSR to the parameter,\n# because we want to cache PSRs.\nparam_to_psr = OrderedDict()\nfor param_id, eigenvalues in uuid_to_eigs.items():\nif eigenvalues is None:\nraise ValueError(\nf\"Eigenvalues are not defined for param_id {param_id}\\n\"\n# f\"of type {type(block)}.\\n\"\n\"PSR cannot be defined in that case.\"\n)\nparam_to_psr[param_id] = psr_fn(eigenvalues, **psr_args)\nfor obs in observable:\nfor param_id, _ in uuid_to_eigen(obs).items():\n# We need the embedded fixed params of the observable in the param_values dict\n# to be able to call expectation. Since torch backward requires\n# a list of param_ids and values of equal length, we need to pass them to PSR too.\n# Since they are constants their gradients are 0.\nparam_to_psr[param_id] = lambda x: torch.tensor([0.0], requires_grad=False)\nreturn param_to_psr\n</code></pre>"},{"location":"backends/differentiable/#qadence.backends.pytorch_wrapper.PSRExpectation","title":"<code>PSRExpectation</code>","text":"<p>             Bases: <code>Function</code></p> <p>Overloads the PyTorch AD system to perform parameter shift rule on quantum circuits.</p>"},{"location":"backends/pulser/","title":"Pulser","text":"<p>The Pulser backend features a basic integration with the pulse-level programming interface Pulser. This backend offers for now few simple operations which are translated into a valid, non time-dependent pulse sequence. In particular, one has access to:</p> <ul> <li>analog rotations: <code>AnalogRx</code> and <code>AnalogRy</code> blocks</li> <li>free evolution blocks (basically no pulse, just interaction): <code>AnalogWait</code> block</li> <li>a block for creating entangled states: <code>AnalogEntanglement</code></li> <li>digital rotation <code>Rx</code> and <code>Ry</code></li> </ul>"},{"location":"backends/pulser/#qadence.backends.pulser.backend.Backend","title":"<code>Backend</code>  <code>dataclass</code>","text":"<p>             Bases: <code>Backend</code></p> <p>The Pulser backend</p>"},{"location":"backends/pulser/#qadence.backends.pulser.backend.create_register","title":"<code>create_register(register, spacing=DEFAULT_SPACING)</code>","text":"<p>Create Pulser register instance.</p> PARAMETER  DESCRIPTION <code>register</code> <p>graph representing a register with accompanying coordinate data</p> <p> TYPE: <code>Register</code> </p> <code>spacing</code> <p>distance between qubits in micrometers</p> <p> TYPE: <code>float</code> DEFAULT: <code>DEFAULT_SPACING</code> </p> RETURNS DESCRIPTION <code>Register</code> <p>Pulser register</p> <p> TYPE: <code>Register</code> </p> Source code in <code>qadence/backends/pulser/backend.py</code> <pre><code>def create_register(register: Register, spacing: float = DEFAULT_SPACING) -&gt; PulserRegister:\n\"\"\"Create Pulser register instance.\n    Args:\n        register (Register): graph representing a register with accompanying coordinate data\n        spacing (float): distance between qubits in micrometers\n    Returns:\n        Register: Pulser register\n    \"\"\"\n# create register from coordinates\ncoords = np.array(list(register.coords.values()))\nreturn PulserRegister.from_coordinates(coords * spacing)\n</code></pre>"},{"location":"backends/pulser/#qadence.backends.pulser.devices.Device","title":"<code>Device</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Supported types of devices for Pulser backend</p>"},{"location":"backends/pulser/#qadence.backends.pulser.devices.Device.IDEALIZED","title":"<code>IDEALIZED = IdealDevice</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>idealized device, least realistic</p>"},{"location":"backends/pulser/#qadence.backends.pulser.devices.Device.REALISTIC","title":"<code>REALISTIC = RealisticDevice</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>device with realistic specs</p>"},{"location":"backends/pyqtorch/","title":"PyQTorch","text":"<p>Fast differentiable statevector emulator based on PyTorch. The code is open source, hosted on Github and maintained by Pasqal.</p>"},{"location":"backends/pyqtorch/#qadence.backends.pyqtorch.backend.Backend","title":"<code>Backend</code>  <code>dataclass</code>","text":"<p>             Bases: <code>Backend</code></p> <p>PyQTorch backend.</p>"},{"location":"backends/pyqtorch/#qadence.backends.pyqtorch.backend.Backend.convert","title":"<code>convert(circuit, observable=None)</code>","text":"<p>Convert an abstract circuit (and optionally and observable) to their native representation. Additionally this function constructs an embedding function which maps from user-facing parameters to device parameters (read more on parameter embedding here).</p> Source code in <code>qadence/backend.py</code> <pre><code>def convert(\nself, circuit: QuantumCircuit, observable: list[AbstractBlock] | AbstractBlock | None = None\n) -&gt; Converted:\n\"\"\"Convert an abstract circuit (and optionally and observable) to their native\n    representation. Additionally this function constructs an embedding function which maps from\n    user-facing parameters to device parameters (read more on parameter embedding\n    [here][qadence.blocks.embedding.embedding]).\n    \"\"\"\ndef check_observable(obs_obj: Any) -&gt; AbstractBlock:\nif isinstance(obs_obj, QubitOperator):\nfrom qadence.blocks.manipulate import from_openfermion\nassert len(obs_obj.terms) &gt; 0, \"Make sure to give a non-empty qubit hamiltonian\"\nreturn from_openfermion(obs_obj)\nelif isinstance(obs_obj, (CompositeBlock, PrimitiveBlock, ScaleBlock)):\nfrom qadence.blocks.utils import block_is_qubit_hamiltonian\nassert block_is_qubit_hamiltonian(\nobs_obj\n), \"Make sure the QubitHamiltonian consists only of Pauli operators X, Y, Z, I\"\nreturn obs_obj\nraise TypeError(\n\"qubit_hamiltonian should be a Pauli-like AbstractBlock or a QubitOperator\"\n)\nconv_circ = self.circuit(circuit)\ncirc_params, circ_embedding_fn = embedding(\nconv_circ.abstract.block, self.config._use_gate_params\n)\nparams = circ_params\nif observable is not None:\nobservable = observable if isinstance(observable, list) else [observable]\nconv_obs = []\nobs_embedding_fn_list = []\nfor obs in observable:\nobs = check_observable(obs)\nc_obs = self.observable(obs, max(circuit.n_qubits, obs.n_qubits))\nobs_params, obs_embedding_fn = embedding(\nc_obs.abstract, self.config._use_gate_params\n)\nparams.update(obs_params)\nobs_embedding_fn_list.append(obs_embedding_fn)\nconv_obs.append(c_obs)\ndef embedding_fn_dict(a: dict, b: dict) -&gt; dict:\nembedding_dict = circ_embedding_fn(a, b)\nfor o in obs_embedding_fn_list:\nembedding_dict.update(o(a, b))\nreturn embedding_dict\nreturn Converted(conv_circ, conv_obs, embedding_fn_dict, params)\ndef embedding_fn(a: dict, b: dict) -&gt; dict:\nreturn circ_embedding_fn(a, b)\nreturn Converted(conv_circ, None, embedding_fn, params)\n</code></pre>"},{"location":"backends/pyqtorch/#qadence.backends.pyqtorch.config.Configuration","title":"<code>Configuration</code>  <code>dataclass</code>","text":"<p>             Bases: <code>BackendConfiguration</code></p>"},{"location":"backends/pyqtorch/#qadence.backends.pyqtorch.config.Configuration.interaction","title":"<code>interaction: Callable | Interaction | str = Interaction.NN</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Digital-analog emulation interaction that is used for <code>AnalogBlock</code>s.</p>"},{"location":"backends/pyqtorch/#qadence.backends.pyqtorch.config.Configuration.loop_expectation","title":"<code>loop_expectation: bool = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>When computing batches of expectation values, only allocate one wavefunction and loop over the batch of parameters to only allocate a single wavefunction at any given time.</p>"},{"location":"backends/pyqtorch/#qadence.backends.pyqtorch.config.Configuration.use_gradient_checkpointing","title":"<code>use_gradient_checkpointing: bool = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Use gradient checkpointing. Recommended for higher-order optimization tasks.</p>"},{"location":"backends/pyqtorch/#qadence.backends.pyqtorch.config.Configuration.use_single_qubit_composition","title":"<code>use_single_qubit_composition: bool = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Composes chains of single qubit gates into a single matmul if possible.</p>"},{"location":"backends/pyqtorch/#qadence.backends.pyqtorch.convert_ops.supported_gates","title":"<code>supported_gates = list(set(OpName.list()) - set([OpName.TDAGGER]))</code>  <code>module-attribute</code>","text":"<p>The set of supported gates. Tdagger is currently not supported.</p>"},{"location":"backends/pyqtorch/#qadence.backends.pyqtorch.convert_ops.PyQComposedBlock","title":"<code>PyQComposedBlock(ops, qubits, n_qubits, config=None)</code>","text":"<p>             Bases: <code>Module</code></p> <p>Compose a chain of single qubit operations on the same qubit into a single call to _apply_batch_gate.</p> Source code in <code>qadence/backends/pyqtorch/convert_ops.py</code> <pre><code>def __init__(\nself,\nops: list[Module],\nqubits: list[int] | tuple,\nn_qubits: int,\nconfig: Configuration = None,\n):\n\"\"\"Compose a chain of single qubit operations on the same qubit into a single\n    call to _apply_batch_gate.\"\"\"\nsuper().__init__()\nself.operations = ops\nself.qubits = qubits\nself.n_qubits = n_qubits\n</code></pre>"},{"location":"backends/pyqtorch/#qadence.backends.pyqtorch.convert_ops.ScalePyQOperation","title":"<code>ScalePyQOperation(n_qubits, block, config)</code>","text":"<p>             Bases: <code>Module</code></p> <p>Computes:</p> <pre><code>M = matrix(op, theta)\nscale * matmul(M, state)\n</code></pre> Source code in <code>qadence/backends/pyqtorch/convert_ops.py</code> <pre><code>def __init__(self, n_qubits: int, block: ScaleBlock, config: Configuration):\nsuper().__init__()\n(self.param_name,) = config.get_param_name(block)\nif not isinstance(block.block, PrimitiveBlock):\nraise NotImplementedError(\n\"The pyqtorch backend can currently only scale `PrimitiveBlock` types.\\\n            Please use the following transpile function on your circuit first:\\\n            from qadence.transpile import scale_primitive_blocks_only\"\n)\nself.operation = convert_block(block.block, n_qubits, config)[0]\ndef _fwd(state: torch.Tensor, values: dict[str, torch.Tensor]) -&gt; torch.Tensor:\nreturn values[self.param_name] * self.operation(state, values)\nif config.use_gradient_checkpointing:\ndef _forward(state: torch.Tensor, values: dict[str, torch.Tensor]) -&gt; torch.Tensor:\nreturn checkpoint(_fwd, state, values, use_reentrant=False)\nelse:\ndef _forward(state: torch.Tensor, values: dict[str, torch.Tensor]) -&gt; torch.Tensor:\nreturn _fwd(state, values)\nself._forward = _forward\n</code></pre>"},{"location":"development/architecture/","title":"Architecture and sharp bits","text":"<p>Qadence as a software library mixes functional and object-oriented programming. We do that by maintaining core objects and operating on them with functions.</p> <p>Furthermore, Qadence strives at keeping the lower level abstraction layers for automatic differentiation and quantum computation fully stateless while only the frontend layer which is the main user-facing interface is stateful.</p> <p>Code design philosopy</p> <p>Functional, stateless core with object-oriented, stateful user interface.</p>"},{"location":"development/architecture/#abstraction-layers","title":"Abstraction layers","text":"<p>In Qadence there are 4 main objects spread across 3 different levels of abstraction:</p> <ul> <li> <p>Frontend layer: The user facing layer and encompasses two objects:</p> <ul> <li><code>QuantumCircuit</code>: A class representing an abstract quantum   circuit not tight not any particular framework. Parameters are represented symbolically using   <code>sympy</code> expressions.</li> <li><code>QuantumModel</code>: The models are higher-level abstraction   providing an interface for executing different kinds of common quantum computing models such   quantum neural networks (QNNs), quantum kernels etc.</li> </ul> </li> <li> <p>Differentiation layer: Intermediate layer has the purpose of integrating quantum   computation with a given automatic differentiation engine. It is meant to be purely stateless and   contains one object:</p> <ul> <li><code>DifferentiableBackend</code>:   An abstract class whose concrete implementation wraps a quantum backend and make it   automatically differentiable using different engines (e.g. PyTorch or Jax).   Note, that today only PyTorch is supported but there is plan to add also a Jax   differentiable backend which will require some changes in the base class implementation.</li> </ul> </li> <li> <p>Quantum layer: The lower-level layer which directly interfaces with quantum emulators   and processing units. It is meant to be purely stateless and it contains one base object which is   specialized for each supported backend:</p> <ul> <li><code>Backend</code>: An abstract class whose concrete implementation   enables the execution of quantum circuit with a variety of quantum backends (normally non   automatically differentiable by default) such as PyQTorch, Pulser or Braket.</li> </ul> </li> </ul>"},{"location":"development/architecture/#main-components","title":"Main components","text":""},{"location":"development/architecture/#quantumcircuit","title":"<code>QuantumCircuit</code>","text":"<p>We consider <code>QuantumCircuit</code> to be an abstract object, i.e. it is not tied to any backend. However, it blocks are even more abstract. This is because we consider <code>QuantumCircuit</code>s \"real\", whereas the blocks are largely considered just syntax.</p> <p>Unitary <code>QuantumCircuits</code> (this encompasses digital, or gate-based, circuits as well as analog circuits) are constructed by [<code>PrimitiveBlocks</code>] using a syntax that allows you to execute them in sequence, dubbed <code>ChainBlock</code> in the code, or in parallel (i.e. at the same time) where applicable, dubbed <code>KronBlock</code> in the code. Notice that this differs from other packages by providing more control of the layout of the circuit than conventional packages like Qiskit, and from Yao where the blocks are the primary type.</p>"},{"location":"development/architecture/#quantummodel","title":"<code>QuantumModel</code>","text":"<p><code>QuantumModel</code>s are meant to be the main entry point for quantum computations in <code>qadence</code>. In general, they take one or more quantum circuit as input and they wrap all the necessary boiler plate code to make the circuit executable and differentiable on the chosen backend.</p> <p>Models are meant to be specific for a certain kind of quantum problem or algorithm and you can easily create new ones starting from the base class <code>QuantumModel</code>, as explained in the custom model tutorial. Currently, Qadence offers a <code>QNN</code> model class which provides convenient methods to work with quantum neural networks with multi-dimensional inputs and outputs.</p>"},{"location":"development/architecture/#differentiablebackend","title":"<code>DifferentiableBackend</code>","text":"<p>The differentiable backend is a thin wrapper which takes as input a <code>QuantumCircuit</code> instance and a chosen quantum backend and make the circuit execution routines (expectation value, overalap, etc.) differentiable. Currently, the only implemented differentiation engine is PyTorch but it is easy to add support to another one like Jax.</p>"},{"location":"development/architecture/#quantum-backend","title":"Quantum <code>Backend</code>","text":"<p>For execution the primary object is the <code>Backend</code>. Backends maintain the same user-facing interface, and internally connects to other libraries to execute circuits. Those other libraries can execute the code on QPUs and local or cloud-based emulators. The <code>Backends</code> use PyTorch tensors to represent data and leverages PyTorchs autograd to help compute derivatives of circuits.</p>"},{"location":"development/architecture/#symbolic-parameters","title":"Symbolic parameters","text":"<p>To illustrate how parameters work in Qadence, let's consider the following simple block composed of just two rotations:</p> <pre><code>import sympy\nfrom qadence import Parameter, RX\nparam = Parameter(\"phi\", trainable=False)\nblock = RX(0, param) * RX(1, sympy.acos(param))\n</code></pre> <p>The rotation angles assigned to <code>RX</code> (and to any Qadence quantum operation) are defined as arbitrary expressions of <code>Parameter</code>'s. <code>Parameter</code> is a subclass of <code>sympy.Symbol</code>, thus fully interoperable with it.</p> <p>To assign values of the parameter <code>phi</code> in a quantum model, one should use a dictionary containing the a key with parameter name and the corresponding values values:</p> <pre><code>import torch\nfrom qadence import run\nvalues = {\"phi\": torch.rand(10)}\nwf = run(block, values=values)\n</code></pre> <p>This is the only interface for parameter assignment exposed to the user. Under the hood, parameters applied to every quantum operation are identified in different ways:</p> <ul> <li> <p>By default, with a stringified version of the <code>sympy</code> expression supplied to the quantum operation. Notice that multiple operations can have the same expression.</p> </li> <li> <p>In certain case, e.g. for constructing parameter shift rules, one must access a unique identifier of the parameter for each quantum operation. Therefore, Qadence also creates unique identifiers for each parametrized operation (see the <code>ParamMap</code> class).</p> </li> </ul> <p>By default, when one constructs a new backend, the parameter identifiers are the <code>sympy</code> expressions which are used when converting an abstract block into a native circuit for the chosen backend. However, one can use the unique identifiers as parameter names by setting the private flag <code>_use_gate_params</code> to <code>True</code> in the backend configuration <code>BackendConfiguration</code>. This is automatically set when PSR differentiation is selected (see next section for more details).</p> <p>You can see the logic for choosing the parameter identifier in <code>get_param_name</code>.</p>"},{"location":"development/architecture/#differentiation-with-parameter-shift-rules-psr","title":"Differentiation with parameter shift rules (PSR)","text":"<p>In Qadence, parameter shift rules are implemented by extending the PyTorch autograd engine using custom <code>Function</code> objects. The implementation is based on this PyTorch guide.</p> <p>A custom PyTorch <code>Function</code> looks like this:</p> <pre><code>import torch\nfrom torch.autograd import Function\nclass CustomFunction(Function):\n# forward pass implementation giving the output of the module\n@staticmethod\ndef forward(ctx, inputs: torch.Tensor, params: torch.Tensor):\nctx.save_for_backward(inputs, params)\n...\n# backward pass implementation giving the derivative of the module\n# with respect to the parameters. This must return the whole vector-jacobian\n# product to integrate within the autograd engine\n@staticmethod\ndef backward(ctx, grad_output: torch.Tensor):\ninputs, params = ctx.saved_tensors\n...\n</code></pre> <p>The class <code>PSRExpectation</code> implements parameter shift rules for all parameters using a custom function as the one above. There are a few implementation details to keep in mind if you want to modify the PSR code:</p> <ul> <li> <p>PyTorch <code>Function</code> only works with tensor arguments. Parameters in Qadence are passed around as   dictionaries with parameter names as keys and current parameter values (tensors)   as values. This works for both variational and feature parameters. However, the <code>Function</code> class   only work with PyTorch tensors as input, not dictionaries. Therefore, the forward pass of   <code>PSRExpectation</code> accepts one argument <code>param_keys</code> with the   parameter keys and a variadic positional argument <code>param_values</code> with the parameter values one by   one. The dictionary is reconstructed within the <code>forward()</code> pass body.</p> </li> <li> <p>Higher-order derivatives with PSR. Higher-order PSR derivatives can be tricky. Parameter shift   rules calls, under the hood, the <code>QuantumBackend</code> expectation value routine that usually yield a   non-differentiable output. Therefore, a second call to the backward pass would not work. However,   Qadence employs a very simple trick to make higher-order derivatives work: instead of using   directly the expectation value of the quantum backend, the PSR backward pass uses the PSR forward   pass itself as expectation value function (see the code below). In this way, multiple calls to the   backward pass are allowed since the <code>expectation_fn</code> routine is always differentiable by   definition. Notice that this implementation is simple but suboptimal since, in some corner cases,   higher-order derivates might include some repeated terms that, with this implementation, are   always recomputed.</p> </li> </ul> <pre><code># expectation value used in the PSR backward pass\ndef expectation_fn(params: dict[str, Tensor]) -&gt; Tensor:\nreturn PSRExpectation.apply(\nctx.expectation_fn,\nctx.param_psrs,\nparams.keys(),\n*params.values(),\n)\n</code></pre> <ul> <li> <p>Operation parameters must be uniquely identified for PSR to work. Parameter shift rules work at the level of individual quantum operations. This means that, given a parameter <code>x</code>, one needs to sum the contributions from shifting the parameter values of all the operation where the parameter <code>x</code> appears. When constructing the PSR rules, one must access a unique parameter identifier for each operation even if the corresponding user-facing parameter is the same. Therefore, when PSR differentiation is selected, the flag <code>_use_gate_params</code> is automatically set to <code>True</code> in the backend configuration <code>BackendConfiguration</code> (see previous section).</p> </li> <li> <p>PSR must not be applied to observable parameters. In Qadence, Pauli observables can also be parametrized. However, the tunable parameters of observables are purely classical and should not be included in the differentiation with PSRs. However, the quantum expectation value depends on them, thus they still need to enter into the PSR evaluation. To solve this issue, the code sets the <code>requires_grad</code> attribute of all observable parameters to <code>False</code> when constructing the PSRs for the circuit as in the snippet below:</p> </li> </ul> <pre><code>for obs in observable:\nfor param_id, _ in uuid_to_eigen(obs).items():\nparam_to_psr[param_id] = lambda x: torch.tensor([0.0], requires_grad=False)\n</code></pre>"},{"location":"development/draw/","title":"<code>qadence.draw</code> example plots","text":"<p>Mostly for quick, manual checking of correct plotting output.</p> <pre><code>from qadence import X, Y, kron\nfrom qadence.draw import display\nb = kron(X(0), Y(1))\n</code></pre> 98bb06691a5e4404b45fb29b5fe6109f 0 57f6b3c322c7462eb37b392ec41c3200 X 98bb06691a5e4404b45fb29b5fe6109f--57f6b3c322c7462eb37b392ec41c3200 3714cd22e70143898ad8f911390cd069 1 f94f0a61c9374629912da29f8fb0feca 57f6b3c322c7462eb37b392ec41c3200--f94f0a61c9374629912da29f8fb0feca 256864d69950456c9506bcc71b487a3a d960fa5d083348c191b4abc227d9f8c1 Y 3714cd22e70143898ad8f911390cd069--d960fa5d083348c191b4abc227d9f8c1 d960fa5d083348c191b4abc227d9f8c1--256864d69950456c9506bcc71b487a3a <pre><code>from qadence import X, Y, chain\nfrom qadence.draw import display\nb = chain(X(0), Y(0))\n</code></pre> f26a37847c6e4c518afc62652b1cfe53 0 9b199f72137342fa84a84fbfe50ee042 X f26a37847c6e4c518afc62652b1cfe53--9b199f72137342fa84a84fbfe50ee042 7cf3dc8a0f6b44958998a83d5309c161 Y 9b199f72137342fa84a84fbfe50ee042--7cf3dc8a0f6b44958998a83d5309c161 9236655f21fe4f619d0b0b089f53bbfe 7cf3dc8a0f6b44958998a83d5309c161--9236655f21fe4f619d0b0b089f53bbfe <pre><code>from qadence import X, Y, chain\nfrom qadence.draw import display\nb = chain(X(0), Y(1))\n</code></pre> 9355bbd49e74486184ecf6b1c711452a 0 2f4ec394c61f4d8e8ae5b56d756e4527 X 9355bbd49e74486184ecf6b1c711452a--2f4ec394c61f4d8e8ae5b56d756e4527 24abbfd5e8e94e739b50a0d4f214e28e 1 100143006d7749ef90750c494879ae7f 2f4ec394c61f4d8e8ae5b56d756e4527--100143006d7749ef90750c494879ae7f ff821ea67234428f9fde29471e7ed29c 100143006d7749ef90750c494879ae7f--ff821ea67234428f9fde29471e7ed29c a6394fc004384863be718d84aa8ca9c0 83bb10d879184012af1d0512fb121387 24abbfd5e8e94e739b50a0d4f214e28e--83bb10d879184012af1d0512fb121387 12524cc42c0e4ee884c8db23b45af68b Y 83bb10d879184012af1d0512fb121387--12524cc42c0e4ee884c8db23b45af68b 12524cc42c0e4ee884c8db23b45af68b--a6394fc004384863be718d84aa8ca9c0 <pre><code>from qadence import X, Y, add\nfrom qadence.draw import display\nb = add(X(0), Y(1), X(2))\n</code></pre> cluster_3584d80f444a47679a64d0e3da847f58 ff18046e959143a198ba6d64cfe5a9a4 0 097d636c21a142789a10188f12907c1b ff18046e959143a198ba6d64cfe5a9a4--097d636c21a142789a10188f12907c1b 12d968c1070f4684945a98657062cdf5 1 32272e378cb8455fbf5a520683e78255 097d636c21a142789a10188f12907c1b--32272e378cb8455fbf5a520683e78255 7496f60d83b74dbd8628c361b4848a81 276292d582354816817f961fe06c9818 AddBlock 12d968c1070f4684945a98657062cdf5--276292d582354816817f961fe06c9818 9bd4bf6113144af6b43483162c95c95c 2 276292d582354816817f961fe06c9818--7496f60d83b74dbd8628c361b4848a81 bfa3c4476fe147c093479f52da9e51a0 71101cc971f9410ab4505bd5b05460f8 9bd4bf6113144af6b43483162c95c95c--71101cc971f9410ab4505bd5b05460f8 71101cc971f9410ab4505bd5b05460f8--bfa3c4476fe147c093479f52da9e51a0 <pre><code>from qadence import CNOT, RX, HamEvo, X, Y, Z, chain, kron\nrx = kron(RX(3,0.5), RX(2, \"x\"))\nrx.tag = \"rx\"\ngen = chain(Z(i) for i in range(4))\n# `chain` puts things in sequence\nblock = chain(\nkron(X(0), Y(1), rx),\nCNOT(2,3),\nHamEvo(gen, 10)\n)\n</code></pre> cluster_3cdd00ee6aea45b08244bb3d5d5c3fa5 cluster_a3797f808d674b06af8ba4ec9dc03f5e rx dce20e7d8505460ea68ca133e2d36352 0 3389b8ee519248d7bdfd2548d51d904e X dce20e7d8505460ea68ca133e2d36352--3389b8ee519248d7bdfd2548d51d904e 1f7fe77a7fb746ec8a4a181a142629b0 1 0b174a209c804fb4ad134553b0baf3d1 3389b8ee519248d7bdfd2548d51d904e--0b174a209c804fb4ad134553b0baf3d1 dc6360c985b946a59fdd93cda8a7cae2 0b174a209c804fb4ad134553b0baf3d1--dc6360c985b946a59fdd93cda8a7cae2 48977e03eca343449336633a5cf9d52f dc6360c985b946a59fdd93cda8a7cae2--48977e03eca343449336633a5cf9d52f f86c1432c1a447b49ce7e5f144dfe87d d7bba65798ab4a5a8b1deb6480f949ae Y 1f7fe77a7fb746ec8a4a181a142629b0--d7bba65798ab4a5a8b1deb6480f949ae 6647c594b94542fbad1192e50fba59e4 2 a767fe11c75148808978677cb9f85b5e d7bba65798ab4a5a8b1deb6480f949ae--a767fe11c75148808978677cb9f85b5e 65c0e2bbf06f4324ab1ff50e2610c6c8 HamEvo a767fe11c75148808978677cb9f85b5e--65c0e2bbf06f4324ab1ff50e2610c6c8 65c0e2bbf06f4324ab1ff50e2610c6c8--f86c1432c1a447b49ce7e5f144dfe87d 54809c40d00c45619d112e0b4be0e72f 7f62469d79bd4612a82325b3774bb388 RX(x) 6647c594b94542fbad1192e50fba59e4--7f62469d79bd4612a82325b3774bb388 6ebd9da86d3240b8875fa99a98b5b589 3 120227a4469443d1945ca3574fa2ef0f 7f62469d79bd4612a82325b3774bb388--120227a4469443d1945ca3574fa2ef0f 735c17024a164162866318ad58b9f41e t = 10 120227a4469443d1945ca3574fa2ef0f--735c17024a164162866318ad58b9f41e 735c17024a164162866318ad58b9f41e--54809c40d00c45619d112e0b4be0e72f ed27320fa89a4e2fb4722e1f39817ba0 33997c10a4df459dab680159b2762f91 RX(0.5) 6ebd9da86d3240b8875fa99a98b5b589--33997c10a4df459dab680159b2762f91 5151088daa3847b083b20e8be9d30518 X 33997c10a4df459dab680159b2762f91--5151088daa3847b083b20e8be9d30518 5151088daa3847b083b20e8be9d30518--120227a4469443d1945ca3574fa2ef0f 3d4acdb2dcdb4b5ca931bfd035b7fb8e 5151088daa3847b083b20e8be9d30518--3d4acdb2dcdb4b5ca931bfd035b7fb8e 3d4acdb2dcdb4b5ca931bfd035b7fb8e--ed27320fa89a4e2fb4722e1f39817ba0 <pre><code>from qadence import feature_map, hea, chain\nblock = chain(feature_map(4, fm_type=\"tower\"), hea(4,2))\n</code></pre> cluster_56098e9dfaa243ec8887595eda132ace HEA cluster_9284089412fa4c3b8990e48f6d841084 FM 3388dcd575ba437d8569c63567ea3982 0 c90ae01aa9a6462386e6007cb6b9b675 RX(2*acos(phi)) 3388dcd575ba437d8569c63567ea3982--c90ae01aa9a6462386e6007cb6b9b675 0d9cf102fabf4a4aada7a50f302d55f3 1 0431dbf4d8ae48199de30128d7f4a232 RX(theta\u2080) c90ae01aa9a6462386e6007cb6b9b675--0431dbf4d8ae48199de30128d7f4a232 a0f32aab909d459d949be431886c61cb RY(theta\u2084) 0431dbf4d8ae48199de30128d7f4a232--a0f32aab909d459d949be431886c61cb f4c2f3dc80684e06aaf1e733f22133f1 RX(theta\u2088) a0f32aab909d459d949be431886c61cb--f4c2f3dc80684e06aaf1e733f22133f1 256acb4bc5a940bf9cec9811a6c0fa23 f4c2f3dc80684e06aaf1e733f22133f1--256acb4bc5a940bf9cec9811a6c0fa23 3c750b28acde4a0f955c27af9f3be13a 256acb4bc5a940bf9cec9811a6c0fa23--3c750b28acde4a0f955c27af9f3be13a 2b340a19bc484092ae1de894026d60f9 RX(theta\u2081\u2082) 3c750b28acde4a0f955c27af9f3be13a--2b340a19bc484092ae1de894026d60f9 a6ed7838db8144ee9c2d349159a53232 RY(theta\u2081\u2086) 2b340a19bc484092ae1de894026d60f9--a6ed7838db8144ee9c2d349159a53232 b9b03396216d4939969403c278946273 RX(theta\u2082\u2080) a6ed7838db8144ee9c2d349159a53232--b9b03396216d4939969403c278946273 a517b449dca045c6b6dca513a8a7c66a b9b03396216d4939969403c278946273--a517b449dca045c6b6dca513a8a7c66a 5c2011cb812c4c7aad2abb58d38c9b56 a517b449dca045c6b6dca513a8a7c66a--5c2011cb812c4c7aad2abb58d38c9b56 f2ded32844134b56a4b7c2322941a344 5c2011cb812c4c7aad2abb58d38c9b56--f2ded32844134b56a4b7c2322941a344 e7679f8a0668498a8ce1c4d61f593741 138ba39aa5c04613bbd2b4f1969bd662 RX(4*acos(phi)) 0d9cf102fabf4a4aada7a50f302d55f3--138ba39aa5c04613bbd2b4f1969bd662 dc074788698643b39cc9c8cd6f5b195e 2 4df53e0a143a414dacfd17e695821b31 RX(theta\u2081) 138ba39aa5c04613bbd2b4f1969bd662--4df53e0a143a414dacfd17e695821b31 6e05bbc165a847c6bff7afbf29623fac RY(theta\u2085) 4df53e0a143a414dacfd17e695821b31--6e05bbc165a847c6bff7afbf29623fac a516b5e1f318478ea4b7529f02e5d7af RX(theta\u2089) 6e05bbc165a847c6bff7afbf29623fac--a516b5e1f318478ea4b7529f02e5d7af c8c30cb67a3a43feb004b872228a1b86 X a516b5e1f318478ea4b7529f02e5d7af--c8c30cb67a3a43feb004b872228a1b86 c8c30cb67a3a43feb004b872228a1b86--256acb4bc5a940bf9cec9811a6c0fa23 f588dbeef5d74b1f8b170d689d65558e c8c30cb67a3a43feb004b872228a1b86--f588dbeef5d74b1f8b170d689d65558e 294e0660bdd3460ca38cececd8180e78 RX(theta\u2081\u2083) f588dbeef5d74b1f8b170d689d65558e--294e0660bdd3460ca38cececd8180e78 ab7525e4a02245ceac640f12acab46f0 RY(theta\u2081\u2087) 294e0660bdd3460ca38cececd8180e78--ab7525e4a02245ceac640f12acab46f0 6d16f11e794044f1a014828246ada42d RX(theta\u2082\u2081) ab7525e4a02245ceac640f12acab46f0--6d16f11e794044f1a014828246ada42d 3ca1917d276d4c2a8906278ca494a280 X 6d16f11e794044f1a014828246ada42d--3ca1917d276d4c2a8906278ca494a280 3ca1917d276d4c2a8906278ca494a280--a517b449dca045c6b6dca513a8a7c66a 5eaef259575148048bca2bc03cf6ed5b 3ca1917d276d4c2a8906278ca494a280--5eaef259575148048bca2bc03cf6ed5b 5eaef259575148048bca2bc03cf6ed5b--e7679f8a0668498a8ce1c4d61f593741 a28b0e5b93a2413a8864bf2e0bc1e5cc d0e538ed39664e6e873ced6c3aa3c813 RX(6*acos(phi)) dc074788698643b39cc9c8cd6f5b195e--d0e538ed39664e6e873ced6c3aa3c813 b196df69a9d24079abe64233853b7bdd 3 3e87d69864ac436090ffa3e2f67a567a RX(theta\u2082) d0e538ed39664e6e873ced6c3aa3c813--3e87d69864ac436090ffa3e2f67a567a ea57ef421e7f448f97c229a5d109c1c0 RY(theta\u2086) 3e87d69864ac436090ffa3e2f67a567a--ea57ef421e7f448f97c229a5d109c1c0 28db6cedc7204ae9bfe3574ea469f333 RX(theta\u2081\u2080) ea57ef421e7f448f97c229a5d109c1c0--28db6cedc7204ae9bfe3574ea469f333 71bf86c3105a4425b1f2a6953fd2ec40 28db6cedc7204ae9bfe3574ea469f333--71bf86c3105a4425b1f2a6953fd2ec40 ed2e010e6e5b4089ac4cff74ed37fb3d X 71bf86c3105a4425b1f2a6953fd2ec40--ed2e010e6e5b4089ac4cff74ed37fb3d ed2e010e6e5b4089ac4cff74ed37fb3d--f588dbeef5d74b1f8b170d689d65558e da4af335ba204f1db21e503b74e1b815 RX(theta\u2081\u2084) ed2e010e6e5b4089ac4cff74ed37fb3d--da4af335ba204f1db21e503b74e1b815 9be04b4a12bc4587a04c5773ec708228 RY(theta\u2081\u2088) da4af335ba204f1db21e503b74e1b815--9be04b4a12bc4587a04c5773ec708228 e11038b040dc45fc9ed87b7f6c4b6fcf RX(theta\u2082\u2082) 9be04b4a12bc4587a04c5773ec708228--e11038b040dc45fc9ed87b7f6c4b6fcf 513f132961bf4ed68d7f9f4804c2dc95 e11038b040dc45fc9ed87b7f6c4b6fcf--513f132961bf4ed68d7f9f4804c2dc95 594ccb4d44a7458480ebf2fc32380929 X 513f132961bf4ed68d7f9f4804c2dc95--594ccb4d44a7458480ebf2fc32380929 594ccb4d44a7458480ebf2fc32380929--5eaef259575148048bca2bc03cf6ed5b 594ccb4d44a7458480ebf2fc32380929--a28b0e5b93a2413a8864bf2e0bc1e5cc c263d7a70479480bbac9a3a25bd8d3c8 5bab1fd546dc4558b7293317fbc60979 RX(8*acos(phi)) b196df69a9d24079abe64233853b7bdd--5bab1fd546dc4558b7293317fbc60979 5e70cfe7a5844b598ebc0e8935ce9b4d RX(theta\u2083) 5bab1fd546dc4558b7293317fbc60979--5e70cfe7a5844b598ebc0e8935ce9b4d 39983073ac8541e78a478420fa78885b RY(theta\u2087) 5e70cfe7a5844b598ebc0e8935ce9b4d--39983073ac8541e78a478420fa78885b 7a9afaffec0f4c07b2618c63901ec157 RX(theta\u2081\u2081) 39983073ac8541e78a478420fa78885b--7a9afaffec0f4c07b2618c63901ec157 3c674e66b54d4a6db68e1695e7d288fc X 7a9afaffec0f4c07b2618c63901ec157--3c674e66b54d4a6db68e1695e7d288fc 3c674e66b54d4a6db68e1695e7d288fc--71bf86c3105a4425b1f2a6953fd2ec40 6608855d4493487ba2c95639229c6b91 3c674e66b54d4a6db68e1695e7d288fc--6608855d4493487ba2c95639229c6b91 da70f08622e24036a1639ccfc2e41cee RX(theta\u2081\u2085) 6608855d4493487ba2c95639229c6b91--da70f08622e24036a1639ccfc2e41cee 9eba8d56d87041829d410a657c327a99 RY(theta\u2081\u2089) da70f08622e24036a1639ccfc2e41cee--9eba8d56d87041829d410a657c327a99 7e85b27c02fc4e469e4e11a888b2c7e8 RX(theta\u2082\u2083) 9eba8d56d87041829d410a657c327a99--7e85b27c02fc4e469e4e11a888b2c7e8 7f9ba517e071433e8e53aaf8c66d1190 X 7e85b27c02fc4e469e4e11a888b2c7e8--7f9ba517e071433e8e53aaf8c66d1190 7f9ba517e071433e8e53aaf8c66d1190--513f132961bf4ed68d7f9f4804c2dc95 e3e27cc0a70944e39e3d6da0e92d1d5c 7f9ba517e071433e8e53aaf8c66d1190--e3e27cc0a70944e39e3d6da0e92d1d5c e3e27cc0a70944e39e3d6da0e92d1d5c--c263d7a70479480bbac9a3a25bd8d3c8"},{"location":"development/draw/#developer-documentation","title":"Developer documentation","text":"<p>This section contains examples in pure graphviz that can be used to understand roughly what is done in the actual drawing backend.</p> <pre><code>import graphviz\nfont_name = \"Sans-Serif\"\nfont_size = \"8\"\ngraph_attr = {\n\"rankdir\": \"LR\",  # LR = left to right, TB = top to bottom\n\"nodesep\": \"0.1\",  # In inches, tells distance between nodes without edges\n\"compound\": \"true\",  # Needed to draw properly edges in hamevo when content is hidden\n\"splines\": \"false\",  # Needed to draw control gates vertical lines one over the other\n}  # These are the default values for graphs\nnode_attr = {\n\"shape\": \"box\",  # 'box' for normal nodes, 'point' for control gates or 'plaintext' for starting nodes (the qubit label).\n\"style\": \"rounded\",  # Unfortunately we can't specify the radius of the rounded, at least for this version\n\"fontname\": font_name,\n\"fontsize\": font_size,\n\"width\": \"0.1\",  # In inches, it doesn't get tinier than the label font.\n\"height\": \"0.1\"  # In inches, it doesn't get tinier than the label font.\n}  # These are the defaults values that can be overridden at node declaration.\ndefault_cluster_attr = {\n\"fontname\": font_name,\n\"fontsize\": font_size,\n\"labelloc\": \"b\",  # location of cluster label. b as bottom, t as top\n\"style\": \"rounded\"\n} # These are the defaults values that can be overridden at sub graph declaration\nhamevo_cluster_attr = {\n\"label\": \"HamEvo(t=10)\"\n}\nhamevo_cluster_attr.update(default_cluster_attr)\nh = graphviz.Graph(graph_attr=graph_attr, node_attr=node_attr)\nh.node(\"Hello World!\")\nh\n</code></pre> <pre><code>\n</code></pre> <pre><code># Define graph\nh = graphviz.Graph(node_attr=node_attr, graph_attr=graph_attr)\n# Add start and end nodes\nfor i in range(4):\nh.node(f's{i}', shape=\"plaintext\", label=f'{i}', group=f\"{i}\")\nh.node(f'e{i}', style='invis', group=f\"{i}\")\n# Add nodes\nh.node('X', group=\"0\")\nh.node('Y', group=\"1\")\n# Add hamevo and its nodes\nhamevo = graphviz.Graph(name='cluster_hamevo', graph_attr=hamevo_cluster_attr)\nfor i in range(4):\nhamevo.node(f'z{i}', shape=\"box\", style=\"invis\", label=f'{i}', group=f\"{i}\")\nh.subgraph(hamevo)\n# Add rx gates cluster and its nodes\ncluster_attr = {\"label\": \"RX gates\"}\ncluster_attr.update(default_cluster_attr)\ncluster = graphviz.Graph(name=\"cluster_0\", graph_attr=cluster_attr)\ncluster.node('RX(x)', group=\"2\")\ncluster.node('RX(0.5)', group=\"3\")\nh.subgraph(cluster)\nh.node('cnot0', label='', shape='point', width='0.1', group='0')\nh.node('cnot1', label='X', group='1')\nh.node('cnot2', label='', shape='point', width='0.1', group='2')\nh.node('cnot3', label='', shape='point', width='0.1', group='3')\n# Add edges\nh.edge('s0', 'X')\nh.edge('X', 'cnot0')\nh.edge('cnot0', 'z0', lhead='cluster_hamevo')\nh.edge('z0', 'e0', ltail='cluster_hamevo')\nh.edge('s1', 'Y')\nh.edge('Y', 'cnot1')\nh.edge('cnot1', 'z1', lhead='cluster_hamevo')\nh.edge('z1', 'e1', ltail='cluster_hamevo')\nh.edge('s2', 'RX(x)')\nh.edge('RX(x)', 'cnot2')\nh.edge('cnot2', 'z2', lhead='cluster_hamevo')\nh.edge('z2', 'e2', ltail='cluster_hamevo')\nh.edge('s3', 'RX(0.5)')\nh.edge('RX(0.5)', 'cnot3')\nh.edge('cnot3', 'z3', lhead='cluster_hamevo')\nh.edge('z3', 'e3', ltail='cluster_hamevo')\nh.edge('cnot1', 'cnot0', constraint='false')  # constraint: false is needed to draw vertical edges\nh.edge('cnot1', 'cnot2', constraint='false')  # constraint: false is needed to draw vertical edges\nh.edge('cnot1', 'cnot3', constraint='false')  # constraint: false is needed to draw vertical edges\nh\n</code></pre> <pre><code>\n</code></pre>"},{"location":"development/draw/#example-of-cluster-of-clusters","title":"Example of cluster of clusters","text":"<pre><code># Define graph\nh = graphviz.Graph(node_attr=node_attr, graph_attr=graph_attr)\n# Define start and end nodes\nfor i in range(4):\nh.node(f's{i}', shape=\"plaintext\", label=f'{i}', group=f\"{i}\")\nh.node(f'e{i}', style='invis', group=f\"{i}\")\n# Define outer cluster\ncluster_attr = {\"label\": \"Outer cluster\"}\ncluster_attr.update(default_cluster_attr)\nouter_cluster = graphviz.Graph(name=\"cluster_outer\", graph_attr=cluster_attr)\n# Define inner cluster 1 and its nodes\ncluster_attr = {\"label\": \"Inner cluster 1\"}\ncluster_attr.update(default_cluster_attr)\ninner1_cluster = graphviz.Graph(name=\"cluster_inner1\", graph_attr=cluster_attr)\ninner1_cluster.node(\"a0\", group=\"0\")\ninner1_cluster.node(\"a1\", group=\"1\")\nouter_cluster.subgraph(inner1_cluster)\n# Define inner cluster 2 and its nodes\ncluster_attr = {\"label\": \"Inner cluster 2\"}\ncluster_attr.update(default_cluster_attr)\ninner2_cluster = graphviz.Graph(name=\"cluster_inner2\", graph_attr=cluster_attr)\ninner2_cluster.node(\"a2\", group=\"2\")\ninner2_cluster.node(\"a3\", group=\"3\")\nouter_cluster.subgraph(inner2_cluster)\n# This has to be done here, after inner clusters definitions\nh.subgraph(outer_cluster)\n# Define more nodes\nfor i in range(4):\nh.node(f\"b{i}\", group=f\"{i}\")\nfor i in range(4):\nh.edge(f's{i}', f'a{i}')\nh.edge(f'a{i}', f'b{i}')\nh.edge(f'b{i}', f'e{i}')\nh\n</code></pre> <pre><code>\n</code></pre>"},{"location":"digital_analog_qc/analog-basics/","title":"Digital-Analog Emulation","text":""},{"location":"digital_analog_qc/analog-basics/#from-theory-to-implementation","title":"From theory to implementation","text":"<p>Qadence includes primitives for the construction of Ising-like Hamiltonians to account for custom qubit interaction. This allows to simulate systems close to real quantum computing platforms such as neutral atoms. The general form for time-independent Ising Hamiltonians is</p> \\[ \\mathcal{H} = \\sum_{i} \\frac{\\hbar\\Omega}{2} \\hat\\sigma^x_i - \\sum_{i} \\hbar\\delta \\hat n_i  + \\mathcal{H}_{\\textrm{int}}, \\] <p>where \\(\\Omega\\) is the Rabi frequency, \\(\\delta\\) is the detuning, \\(\\hat n = \\frac{1-\\hat\\sigma_z}{2}\\) is the number operator, and \\(\\mathcal{H}_{\\textrm{int}}\\) a pair-wise interaction term. Two central operations implement this Hamiltonian as blocks:</p> <ul> <li><code>WaitBlock</code> by free-evolving \\(\\mathcal{H}_{\\textrm{int}}\\)</li> <li><code>ConstantAnalogRotation</code> by free-evolving \\(\\mathcal{H}\\)</li> </ul> <p>The <code>wait</code> operation can be emulated with an \\(ZZ\\)- (Ising) or an \\(XY\\)-interaction:</p> <pre><code>from qadence import Register, wait, add_interaction, run, Interaction\nblock = wait(duration=3000)\nreg = Register.from_coordinates([(0,0), (0,5)])  # Dimensionless.\nemulated = add_interaction(reg, block, interaction=Interaction.XY)  # or Interaction.ZZ for Ising.\n</code></pre> <pre><code>block = WaitBlock(t=3000.0, support=(&lt;QubitSupportType.GLOBAL: 'global'&gt;,)) emulated.generator = AddBlock(0,1)\n\u2514\u2500\u2500 [mul: 29.600] \u2514\u2500\u2500 AddBlock(0,1)\n\u251c\u2500\u2500 KronBlock(0,1)\n\u2502   \u251c\u2500\u2500 X(0)\n\u2502   \u2514\u2500\u2500 X(1)\n\u2514\u2500\u2500 KronBlock(0,1)\n\u251c\u2500\u2500 Y(0)\n\u2514\u2500\u2500 Y(1)\n</code></pre> <p>The <code>AnalogRot</code> constructor can be used to create a fully customizable <code>ConstantAnalogRotation</code> instances:</p> <pre><code>import torch\nfrom qadence import AnalogRot, AnalogRX\n# Implement a global RX rotation by setting all parameters.\nblock = AnalogRot(\nduration=1000., # [ns]\nomega=torch.pi, # [rad/\u03bcs]\ndelta=0,        # [rad/\u03bcs]\nphase=0,        # [rad]\n)\n# Or use the shortcut.\nblock = AnalogRX(torch.pi)\n</code></pre> <pre><code>AnalogRot = ConstantAnalogRotation(\u03b1=3.14159265358979, t=1000.00000000000, support=(&lt;QubitSupportType.GLOBAL: 'global'&gt;,), \u03a9=3.14159265358979, \u03b4=0, \u03c6=0)\nAnalogRX = ConstantAnalogRotation(\u03b1=3.14159265358979, t=1000.00000000000, support=(&lt;QubitSupportType.GLOBAL: 'global'&gt;,), \u03a9=3.14159265358979, \u03b4=0, \u03c6=0)\n</code></pre> <p>Automatic emulation in the PyQTorch backend</p> <p>All analog blocks are automatically translated to their emulated version when running them with the PyQTorch backend:</p> <p><pre><code>import torch\nfrom qadence import Register, AnalogRX, sample\nreg = Register.from_coordinates([(0,0), (0,5)])\nsample = sample(reg, AnalogRX(torch.pi))\n</code></pre> <pre><code>sample = [Counter({'00': 40, '10': 32, '01': 28})]\n</code></pre> </p> <p>To compose analog blocks, the regular <code>chain</code> and <code>kron</code> operations can be used under the following restrictions:</p> <ul> <li>The resulting <code>AnalogChain</code> type can only be constructed from <code>AnalogKron</code> blocks   or globally supported primitive analog blocks.</li> <li>The resulting <code>AnalogKron</code> type can only be constructed from non-global   analog blocks with the same duration.</li> </ul> <pre><code>import torch\nfrom qadence import AnalogRot, kron, chain, wait\n# Only analog blocks with a global qubit support can be composed\n# using chain.\nanalog_chain = chain(wait(duration=200), AnalogRot(duration=300, omega=2.0))\n# Only blocks with the same `duration` can be composed using kron.\nanalog_kron = kron(\nwait(duration=1000, qubit_support=(0,1)),\nAnalogRot(duration=1000, omega=2.0, qubit_support=(2,3))\n)\n</code></pre> <pre><code>Analog Chain block = AnalogChain(t=500.000000000000, support=(&lt;QubitSupportType.GLOBAL: 'global'&gt;,))\n\u251c\u2500\u2500 WaitBlock(t=200.0, support=(&lt;QubitSupportType.GLOBAL: 'global'&gt;,))\n\u2514\u2500\u2500 ConstantAnalogRotation(\u03b1=0.600000000000000, t=300, support=(&lt;QubitSupportType.GLOBAL: 'global'&gt;,), \u03a9=2.00000000000000, \u03b4=0, \u03c6=0)\nAnalog Kron block = AnalogKron(t=1000, support=(0, 1, 2, 3))\n\u251c\u2500\u2500 WaitBlock(t=1000.0, support=(0, 1))\n\u2514\u2500\u2500 ConstantAnalogRotation(\u03b1=2.00000000000000, t=1000, support=(2, 3), \u03a9=2.00000000000000, \u03b4=0, \u03c6=0)\n</code></pre> <p>Composing digital &amp; analog blocks</p> <p>It is possible to compose digital and analog blocks where the additional restrictions for <code>chain</code> and <code>kron</code> only apply to composite blocks which contain analog blocks only. For further details, see <code>AnalogChain</code> and <code>AnalogKron</code>.</p>"},{"location":"digital_analog_qc/analog-basics/#fitting-a-simple-function","title":"Fitting a simple function","text":"<p>Analog blocks can indeed be parametrized to, for instance, create small ansatze to fit a sine function. When using the <code>pyqtorch</code> backend the <code>add_interaction</code> function is called automatically. As usual, we can choose which differentiation backend we want to use: autodiff or parameter shift rule (PSR).</p> <p>First we define an ansatz block and an observable <pre><code>import torch\nfrom qadence import Register, FeatureParameter, VariationalParameter\nfrom qadence import AnalogRX, AnalogRZ, Z\nfrom qadence import wait, chain, add\npi = torch.pi\n# two qubit register\nreg = Register.from_coordinates([(0, 0), (0, 12)])\n# analog ansatz with input parameter\nt = FeatureParameter(\"t\")\nblock = chain(\nAnalogRX(pi / 2),\nAnalogRZ(t),\nwait(1000 * VariationalParameter(\"theta\", value=0.5)),\nAnalogRX(pi / 2),\n)\n# observable\nobs = add(Z(i) for i in range(reg.n_qubits))\n</code></pre> </p> Plotting functions <code>plot</code> and <code>scatter</code> <p><pre><code>def plot(ax, x, y, **kwargs):\nxnp = x.detach().cpu().numpy().flatten()\nynp = y.detach().cpu().numpy().flatten()\nax.plot(xnp, ynp, **kwargs)\ndef scatter(ax, x, y, **kwargs):\nxnp = x.detach().cpu().numpy().flatten()\nynp = y.detach().cpu().numpy().flatten()\nax.scatter(xnp, ynp, **kwargs)\n</code></pre> </p> <p>Then we define the dataset we want to train on and plot the initial prediction. <pre><code>import matplotlib.pyplot as plt\nfrom qadence import QuantumCircuit, QuantumModel\n# define quantum model; including digital-analog emulation\ncirc = QuantumCircuit(reg, block)\nmodel = QuantumModel(circ, obs, diff_mode=\"gpsr\")\nx_train = torch.linspace(0, 6, steps=30)\ny_train = -0.64 * torch.sin(x_train + 0.33) + 0.1\ny_pred_initial = model.expectation({\"t\": x_train})\nfig, ax = plt.subplots()\nscatter(ax, x_train, y_train, label=\"Training points\", marker=\"o\", color=\"green\")\nplot(ax, x_train, y_pred_initial, label=\"Initial prediction\")\nplt.legend()\n</code></pre> 2023-10-12T10:40:01.853066 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/ </p> <p>The rest is the usual PyTorch training routine. <pre><code>mse_loss = torch.nn.MSELoss()\noptimizer = torch.optim.Adam(model.parameters(), lr=5e-2)\ndef loss_fn(x_train, y_train):\nreturn mse_loss(model.expectation({\"t\": x_train}).squeeze(), y_train)\n# train\nn_epochs = 200\nfor i in range(n_epochs):\noptimizer.zero_grad()\nloss = loss_fn(x_train, y_train)\nloss.backward()\noptimizer.step()\n# if (i + 1) % 10 == 0:\n#     print(f\"Epoch {i+1:0&gt;3} - Loss: {loss.item()}\\n\")\n# visualize\ny_pred = model.expectation({\"t\": x_train})\nfig, ax = plt.subplots()\nscatter(ax, x_train, y_train, label=\"Training points\", marker=\"o\", color=\"green\")\nplot(ax, x_train, y_pred_initial, label=\"Initial prediction\")\nplot(ax, x_train, y_pred, label=\"Final prediction\")\nplt.legend()\n</code></pre> 2023-10-12T10:40:04.690652 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/ </p>"},{"location":"digital_analog_qc/analog-qubo/","title":"Solve a QUBO oroblem","text":"<p>In this notebook we solve a quadratic unconstrained optimization problem with <code>qadence</code> emulated analog interface using the QAOA variational algorithm. The problem is detailed in the Pulser documentation here.</p> Construct QUBO register (defines <code>qubo_register_coords</code> function) <p>Before we start we have to define a register that fits into our device. <pre><code>import torch\nimport numpy as np\nfrom scipy.optimize import minimize\nfrom scipy.spatial.distance import pdist, squareform\nfrom pulser.devices import Chadoq2\nseed = 0\nnp.random.seed(seed)\ntorch.manual_seed(seed)\ndef qubo_register_coords(Q):\n\"\"\"Compute coordinates for register.\"\"\"\nbitstrings = [np.binary_repr(i, len(Q)) for i in range(len(Q) ** 2)]\ncosts = []\n# this takes exponential time with the dimension of the QUBO\nfor b in bitstrings:\nz = np.array(list(b), dtype=int)\ncost = z.T @ Q @ z\ncosts.append(cost)\nzipped = zip(bitstrings, costs)\nsort_zipped = sorted(zipped, key=lambda x: x[1])\ndef evaluate_mapping(new_coords, *args):\n\"\"\"Cost function to minimize. Ideally, the pairwise\n        distances are conserved\"\"\"\nQ, shape = args\nnew_coords = np.reshape(new_coords, shape)\nnew_Q = squareform(Chadoq2.interaction_coeff / pdist(new_coords) ** 6)\nreturn np.linalg.norm(new_Q - Q)\nshape = (len(Q), 2)\ncosts = []\nnp.random.seed(0)\nx0 = np.random.random(shape).flatten()\nres = minimize(\nevaluate_mapping,\nx0,\nargs=(Q, shape),\nmethod=\"Nelder-Mead\",\ntol=1e-6,\noptions={\"maxiter\": 200000, \"maxfev\": None},\n)\nreturn [(x, y) for (x, y) in np.reshape(res.x, (len(Q), 2))]\n</code></pre> </p>"},{"location":"digital_analog_qc/analog-qubo/#define-and-solve-qubo","title":"Define and solve QUBO","text":"<pre><code>import matplotlib.pyplot as plt\nimport numpy as np\nimport torch\nfrom qadence import add_interaction, chain\nfrom qadence import QuantumModel, QuantumCircuit, AnalogRZ, AnalogRX, Register\nseed = 0\nnp.random.seed(seed)\ntorch.manual_seed(seed)\n</code></pre> <p>The QUBO is defined by weighted connections <code>Q</code> and a cost function.</p> <pre><code>def cost_colouring(bitstring, Q):\nz = np.array(list(bitstring), dtype=int)\ncost = z.T @ Q @ z\nreturn cost\ndef cost_fn(counter, Q):\ncost = sum(counter[key] * cost_colouring(key, Q) for key in counter)\nreturn cost / sum(counter.values())  # Divide by total samples\nQ = np.array(\n[\n[-10.0, 19.7365809, 19.7365809, 5.42015853, 5.42015853],\n[19.7365809, -10.0, 20.67626392, 0.17675796, 0.85604541],\n[19.7365809, 20.67626392, -10.0, 0.85604541, 0.17675796],\n[5.42015853, 0.17675796, 0.85604541, -10.0, 0.32306662],\n[5.42015853, 0.85604541, 0.17675796, 0.32306662, -10.0],\n]\n)\n</code></pre> <p>Build a register from graph extracted from the QUBO exactly as you would do with Pulser. <pre><code>reg = Register.from_coordinates(qubo_register_coords(Q))\n</code></pre> </p> <p>The analog circuit is composed of two global rotations per layer.  The first rotation corresponds to the mixing Hamiltonian and the second one to the embedding Hamiltonian.  Subsequently we add the Ising interaction term to emulate the analog circuit.  This uses a principal quantum number n=70 for the Rydberg level under the hood. <pre><code>from qadence.transpile.emulate import ising_interaction\nLAYERS = 2\nblock = chain(*[AnalogRX(f\"t{i}\") * AnalogRZ(f\"s{i}\") for i in range(LAYERS)])\nemulated = add_interaction(\nreg, block, interaction=lambda r, ps: ising_interaction(r, ps, rydberg_level=70)\n)\nprint(emulated)\n</code></pre> <pre><code>ChainBlock(0,1,2,3,4)\n\u251c\u2500\u2500 ChainBlock(0,1,2,3,4)\n\u2502   \u251c\u2500\u2500 HamEvo(0,1,2,3,4) [params: ['51_1430082484387*t0']]\n\u2502   \u2514\u2500\u2500 HamEvo(0,1,2,3,4) [params: ['38_8279677658339*s0']]\n\u2514\u2500\u2500 ChainBlock(0,1,2,3,4)\n\u251c\u2500\u2500 HamEvo(0,1,2,3,4) [params: ['51_1430082484387*t1']]\n\u2514\u2500\u2500 HamEvo(0,1,2,3,4) [params: ['38_8279677658339*s1']]\n</code></pre> </p> <p>Sample the model to get the initial solution. <pre><code>model = QuantumModel(QuantumCircuit(reg, emulated), backend=\"pyqtorch\", diff_mode='gpsr')\ninitial_counts = model.sample({}, n_shots=1000)[0]\n</code></pre> </p> <p>The loss function is defined by averaging over the evaluated bitstrings. <pre><code>def loss(param, *args):\nQ = args[0]\nparam = torch.tensor(param)\nmodel.reset_vparams(param)\nC = model.sample({}, n_shots=1000)[0]\nreturn cost_fn(C, Q)\n</code></pre>  Here we use a gradient-free optimization loop for reaching the optimal solution. <pre><code>#\nfor i in range(20):\ntry:\nres = minimize(\nloss,\nargs=Q,\nx0=np.random.uniform(1, 10, size=2 * LAYERS),\nmethod=\"COBYLA\",\ntol=1e-8,\noptions={\"maxiter\": 20},\n)\nexcept Exception:\npass\n# sample the optimal solution\nmodel.reset_vparams(res.x)\noptimal_count_dict = model.sample({}, n_shots=1000)[0]\nprint(optimal_count_dict)\n</code></pre> <pre><code>Counter({'00111': 243, '01011': 200, '00100': 103, '01000': 97, '01001': 82, '00110': 72, '00000': 61, '00001': 33, '00010': 25, '10000': 23, '01010': 16, '00101': 14, '10001': 7, '10011': 7, '01111': 5, '10010': 5, '01101': 4, '00011': 2, '01100': 1})\n</code></pre> </p> <pre><code>fig, axs = plt.subplots(1, 2, figsize=(12, 4))\n# known solutions to the QUBO\nsolution_bitstrings=[\"01011\", \"00111\"]\nn_to_show = 20\nxs, ys = zip(*sorted(\ninitial_counts.items(),\nkey=lambda item: item[1],\nreverse=True\n))\ncolors = [\"r\" if x in solution_bitstrings else \"g\" for x in xs]\naxs[0].set_xlabel(\"bitstrings\")\naxs[0].set_ylabel(\"counts\")\naxs[0].bar(xs[:n_to_show], ys[:n_to_show], width=0.5, color=colors)\naxs[0].tick_params(axis=\"x\", labelrotation=90)\naxs[0].set_title(\"Initial solution\")\nxs, ys = zip(*sorted(optimal_count_dict.items(),\nkey=lambda item: item[1],\nreverse=True\n))\ncolors = [\"r\" if x in solution_bitstrings else \"g\" for x in xs]\naxs[1].set_xlabel(\"bitstrings\")\naxs[1].set_ylabel(\"counts\")\naxs[1].bar(xs[:n_to_show], ys[:n_to_show], width=0.5, color=colors)\naxs[1].tick_params(axis=\"x\", labelrotation=90)\naxs[1].set_title(\"Optimal solution\")\nplt.tight_layout()\n</code></pre> 2023-10-12T10:40:05.721911 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/"},{"location":"digital_analog_qc/daqc-basics/","title":"Digital-Analog Quantum Computation","text":"<p>Digital-analog quantum computation (DAQC) is a universal quantum computing paradigm<sup>1</sup>, based on two primary computations:</p> <ul> <li>Fast single-qubit operations (digital).</li> <li>Multi-partite entangling operations acting on all qubits (analog).</li> </ul> <p>The DAQC paradigm is typically implemented on quantum computing hardware based on neutral-atoms where both these computations are realizable.</p>"},{"location":"digital_analog_qc/daqc-basics/#digital-analog-emulation","title":"Digital-analog emulation","text":"<p>Qadence simplifies the execution of DAQC programs on either emulated or real neutral-atom devices by providing a simplified interface for customizing interactions and interfacing with pulse-level programming in <code>Pulser</code><sup>3</sup>.</p>"},{"location":"digital_analog_qc/daqc-basics/#digital-analog-transformation","title":"Digital-analog transformation","text":"<p>Furthermore, the essence of digital-analog computation is the ability to represent any analog operation, i.e. any arbitrary Hamiltonian, using an auxiliary device-amenable Hamiltonian, such as the ubiquitous Ising model<sup>2</sup>. This is at the core of the DAQC implementation in Qadence.</p>"},{"location":"digital_analog_qc/daqc-basics/#references","title":"References","text":"<ol> <li> <p>Dodd et al., Universal quantum computation and simulation using any entangling Hamiltonian and local unitaries, PRA 65, 040301 (2002). \u21a9</p> </li> <li> <p>Pulser: An open-source package for the design of pulse sequences in programmable neutral-atom arrays \u21a9</p> </li> <li> <p>Parra-Rodriguez et al., Digital-Analog Quantum Computation, PRA 101, 022305 (2020). \u21a9</p> </li> </ol>"},{"location":"digital_analog_qc/daqc-cnot/","title":"DAQC Transform","text":"<p>Digital-analog quantum computing focuses on using simple digital gates combined with more complex and device-dependent analog interactions to represent quantum programs. Such techniques have been shown to be universal for quantum computation <sup>1</sup>. However, while this approach may have advantages when adapting quantum programs to real devices, known quantum algorithms are very often expressed in a fully digital paradigm. As such, it is also important to have concrete ways to transform from one paradigm to another.</p> <p>In this tutorial we will exemplify this transformation starting with the representation of a simple digital CNOT using the universality of the Ising Hamiltonian <sup>2</sup>.</p>"},{"location":"digital_analog_qc/daqc-cnot/#cnot-with-cphase","title":"CNOT with CPHASE","text":"<p>Let's look at a single example of how the digital-analog transformation can be used to perform a CNOT on two qubits inside a register of globally interacting qubits.</p> <p>First, note that the CNOT can be decomposed with two Hadamard and a CPHASE gate with \\(\\phi=\\pi\\):</p> <pre><code>import torch\nimport qadence as qd\nfrom qadence.draw import display\nfrom qadence import X, I, Z, H, N, CPHASE, CNOT, HamEvo\nn_qubits = 2\n# CNOT gate\ncnot_gate = CNOT(0, 1)\n# CNOT decomposed\nphi = torch.pi\ncnot_decomp = qd.chain(H(1), CPHASE(0, 1, phi), H(1))\ninit_state = qd.product_state(\"10\")\nprint(qd.sample(n_qubits, block = cnot_gate, state = init_state, n_shots = 100))\nprint(qd.sample(n_qubits, block = cnot_decomp, state = init_state, n_shots = 100))\n</code></pre> <pre><code>[Counter({'11': 100})]\n[Counter({'11': 100})]\n</code></pre> <p>The CPHASE gate is fully diagonal, and can be implemented by exponentiating an Ising-like Hamiltonian, or generator,</p> \\[\\text{CPHASE}(i,j,\\phi)=\\text{exp}\\left(-i\\phi \\mathcal{H}_\\text{CP}(i, j)\\right)\\] \\[\\begin{aligned} \\mathcal{H}_\\text{CP}&amp;=-\\frac{1}{4}(I_i-Z_i)(I_j-Z_j)\\\\ &amp;=-N_iN_j \\end{aligned}\\] <p>where we used the number operator \\(N_i = \\frac{1}{2}(I_i-Z_i)\\), leading to an Ising-like interaction \\(N_iN_j\\) that is common in neutral-atom systems. Let's rebuild the CNOT using this evolution.</p> <pre><code># Hamiltonian for the CPHASE gate\nh_cphase = (-1.0) * qd.kron(N(0), N(1))\n# Exponentiating the Hamiltonian\ncphase_evo = HamEvo(h_cphase, phi)\n# Check that we have the CPHASE gate:\ncphase_matrix = qd.block_to_tensor(CPHASE(0, 1, phi))\ncphase_evo_matrix = qd.block_to_tensor(cphase_evo)\nassert torch.allclose(cphase_matrix, cphase_evo_matrix)\n</code></pre> <p>Now that we have checked the generator of the CPHASE gate, we can use it to apply the CNOT:</p> <pre><code># CNOT with Hamiltonian Evolution\ncnot_evo = qd.chain(\nH(1),\ncphase_evo,\nH(1)\n)\ninit_state = qd.product_state(\"10\")\nprint(qd.sample(n_qubits, block = cnot_gate, state = init_state, n_shots = 100))\nprint(qd.sample(n_qubits, block = cnot_evo, state = init_state, n_shots = 100))\n</code></pre> <pre><code>[Counter({'11': 100})]\n[Counter({'11': 100})]\n</code></pre> <p>Thus, a CNOT gate can be applied by combining a few single-qubit gates together with a 2-qubit Ising interaction between the control and the target qubit. This is important because it now allows us to exemplify the usage of the Ising transform proposed in the DAQC paper <sup>2</sup>. In the paper, the transform is described for \\(ZZ\\) interactions. In <code>qadence</code> it works both with \\(ZZ\\) and \\(NN\\) interactions.</p>"},{"location":"digital_analog_qc/daqc-cnot/#cnot-in-an-interacting-system-of-3-qubits","title":"CNOT in an interacting system of 3 qubits","text":"<p>Consider a simple experimental setup with \\(n=3\\) interacting qubits in a triangular grid. For simplicity let's consider that all qubits interact with each other with an Ising (\\(NN\\)) interaction of constant strength \\(g_\\text{int}\\). The Hamiltonian for the system can be written by summing this interaction over all pairs:</p> \\[\\mathcal{H}_\\text{sys}=\\sum_{i=0}^{n}\\sum_{j=0}^{i-1}g_\\text{int}N_iN_j,\\] <p>which in this case leads to only three interaction terms,</p> \\[\\mathcal{H}_\\text{sys}=g_\\text{int}(N_0N_1+N_1N_2+N_0N_2)\\] <p>This generator can be easily built:</p> <pre><code>n_qubits = 3\ng_int = 1.0\ninteraction_list = []\nfor i in range(n_qubits):\nfor j in range(i):\ninteraction_list.append(g_int * qd.kron(N(i), N(j)))\nh_sys = qd.add(*interaction_list)\nprint(h_sys)\n</code></pre> <pre><code>AddBlock(0,1,2)\n\u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2514\u2500\u2500 KronBlock(0,1)\n\u2502       \u251c\u2500\u2500 N(1)\n\u2502       \u2514\u2500\u2500 N(0)\n\u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2514\u2500\u2500 KronBlock(0,2)\n\u2502       \u251c\u2500\u2500 N(2)\n\u2502       \u2514\u2500\u2500 N(0)\n\u2514\u2500\u2500 [mul: 1.00000000000000] \u2514\u2500\u2500 KronBlock(1,2)\n\u251c\u2500\u2500 N(2)\n\u2514\u2500\u2500 N(1)\n</code></pre> <p>Now let's consider that the experimental system is fixed, and we cannot isolate the qubits from each other. All we can do is the following:</p> <ul> <li>Turn on or off the global system Hamiltonian.</li> <li>Perform single-qubit rotations on individual qubits.</li> </ul> <p>How can we perform a CNOT on two specific qubits of our choice?</p> <p>To perform a fully digital CNOT we would need to isolate the control and target qubit from the third one and have those interact to implement the gate directly. While this may be relatively simple for a 3-qubit system, the experimental burden becomes much greater when we start going into the dozens of qubits.</p> <p>However, with the digital-analog paradigm that is not the case! In fact, we can represent the two qubit Ising interaction required for the CNOT by combining the global system Hamiltonian with a specific set of single-qubit rotations. The full details of this transformation are described in the DAQC paper <sup>2</sup>, and it is available in <code>qadence</code> by calling the <code>daqc_transform</code> function.</p> <p>The <code>daqc_transform</code> function will essentially return a program that represents the evolution of an Hamiltonian \\(H_\\text{target}\\) (target Hamiltonian) for a specified time \\(t_f\\) by using only the evolution of an Hamiltonian \\(H_\\text{build}\\) (build Hamiltonian) for specific intervals of time together with specific single-qubit \\(X\\) rotations. Currently, in <code>qadence</code> it is available for resource and target Hamiltonians composed only of \\(ZZ\\) or \\(NN\\) interactions. The generators are parsed by the <code>daqc_transform</code> function, the appropriate type is automatically determined, and the appropriate single-qubit detunings and global phases are applied.</p> <p>Let's exemplify it for our CNOT problem:</p> <pre><code># The target operation\ni = 0  # Control\nj = 1  # Target\nk = 2  # The extra qubit\n# CNOT on control and target, Identity on the extra qubit\ncnot_target = qd.kron(CNOT(i, j), I(k))\n# The two-qubit Ising (NN) interaction for the CPHASE\nh_int = (-1.0) * qd.kron(N(i), N(j))\n# Transforming the two-qubit Ising interaction using only our system Hamiltonian\ntransformed_ising = qd.daqc_transform(\nn_qubits = 3,        # Total number of qubits in the transformation\ngen_target = h_int,  # The target Ising generator\nt_f = torch.pi,      # The target evolution time\ngen_build = h_sys,   # The building block Ising generator to be used\nstrategy = \"sDAQC\",   # Currently only sDAQC is implemented\nignore_global_phases = False  # Global phases from mapping between Z and N\n)\n# display(transformed_ising)\n</code></pre> cluster_9b2fa4f2568b43dd9d0da16e19d05db6 cluster_1e8bbacad94245459eeb94895750af50 cluster_e10a6d05d2604d2ebf3eb3edb50d9d28 cluster_164d93b90f49446788bcd67c26c88b6d cluster_c340d7776e39415b930cee53e3729615 cluster_ee832264e82047a49bb86e85da34c706 cluster_7c41b5cb7f194965a21b33c479c61c9a 9f9b393c0cb74d2082f6d670966783df 0 286d701c9e854ed28861a5d4a3a39377 HamEvo 9f9b393c0cb74d2082f6d670966783df--286d701c9e854ed28861a5d4a3a39377 26324072dbd2430cbd60b5c9381cc3b2 1 02c20c506afb4c348a7814e6ccc2c779 HamEvo 286d701c9e854ed28861a5d4a3a39377--02c20c506afb4c348a7814e6ccc2c779 0c3e4cf6e3dd4986b1436556cfe6bb3b HamEvo 02c20c506afb4c348a7814e6ccc2c779--0c3e4cf6e3dd4986b1436556cfe6bb3b ecc82a98cfb64ad6aa62984ddd04a8d9 X 0c3e4cf6e3dd4986b1436556cfe6bb3b--ecc82a98cfb64ad6aa62984ddd04a8d9 aa5acd23a85b4061af4973641617397c HamEvo ecc82a98cfb64ad6aa62984ddd04a8d9--aa5acd23a85b4061af4973641617397c 7301fe9f0d8b49f298e89b1164ad757f HamEvo aa5acd23a85b4061af4973641617397c--7301fe9f0d8b49f298e89b1164ad757f 8d6d43c730724ce6885621bad8284f5a X 7301fe9f0d8b49f298e89b1164ad757f--8d6d43c730724ce6885621bad8284f5a 1012a901fbee49a0939ee11eefda2390 8d6d43c730724ce6885621bad8284f5a--1012a901fbee49a0939ee11eefda2390 cf3662ab227f412b8738ee5816e8adef HamEvo 1012a901fbee49a0939ee11eefda2390--cf3662ab227f412b8738ee5816e8adef 313ad94c12524ce39cceebe400b47291 HamEvo cf3662ab227f412b8738ee5816e8adef--313ad94c12524ce39cceebe400b47291 60976b6dc88347cdb4398e08f48af8f2 313ad94c12524ce39cceebe400b47291--60976b6dc88347cdb4398e08f48af8f2 5fffaa852a6c42c78d661afcf5cee8d6 60976b6dc88347cdb4398e08f48af8f2--5fffaa852a6c42c78d661afcf5cee8d6 308e0ff826394eb0a91e05118680c675 061643ffa2244673a96dd70f37663374 t = -3.142 26324072dbd2430cbd60b5c9381cc3b2--061643ffa2244673a96dd70f37663374 7165f0f726b6447699ce4e84f16c2a05 2 965b9488b777454697487c9833019ead t = 3.142 061643ffa2244673a96dd70f37663374--965b9488b777454697487c9833019ead 158d919a2f1e485281fa4bcd84006d1a t = -3.142 965b9488b777454697487c9833019ead--158d919a2f1e485281fa4bcd84006d1a 38dcc333cee04e2a86c288d3144b9e27 158d919a2f1e485281fa4bcd84006d1a--38dcc333cee04e2a86c288d3144b9e27 c21f7fb31263462cad489346916c6f0a t = 1.571 38dcc333cee04e2a86c288d3144b9e27--c21f7fb31263462cad489346916c6f0a 5929340d8ec6462ba1c2d76e70eade14 t = 1.571 c21f7fb31263462cad489346916c6f0a--5929340d8ec6462ba1c2d76e70eade14 0c638637eac94732a1780ad31a93c83b 5929340d8ec6462ba1c2d76e70eade14--0c638637eac94732a1780ad31a93c83b feea4342282049309121f457b84bb30a X 0c638637eac94732a1780ad31a93c83b--feea4342282049309121f457b84bb30a 76fc25ce672b46938f29ed9c0c3317a3 t = 1.571 feea4342282049309121f457b84bb30a--76fc25ce672b46938f29ed9c0c3317a3 ff0f92dffce94e4dab6c3f8e2acbdaed t = 1.571 76fc25ce672b46938f29ed9c0c3317a3--ff0f92dffce94e4dab6c3f8e2acbdaed e5108878b928450a8d85a370e125bd87 X ff0f92dffce94e4dab6c3f8e2acbdaed--e5108878b928450a8d85a370e125bd87 e5108878b928450a8d85a370e125bd87--308e0ff826394eb0a91e05118680c675 62ce310663ba4cf392fe3ddc33bbf5d6 7d21910de0e0497dbe645295c5b6dcdc 7165f0f726b6447699ce4e84f16c2a05--7d21910de0e0497dbe645295c5b6dcdc cadf40a5e0f941fdbcb0c02078f98b6f 7d21910de0e0497dbe645295c5b6dcdc--cadf40a5e0f941fdbcb0c02078f98b6f df4b8ad48c004d69b40c5cf176d7f335 cadf40a5e0f941fdbcb0c02078f98b6f--df4b8ad48c004d69b40c5cf176d7f335 42eca4ae9ebc4b189a363f7c83c565cb X df4b8ad48c004d69b40c5cf176d7f335--42eca4ae9ebc4b189a363f7c83c565cb d9a8951a68244b77a3b817c3efc36f07 42eca4ae9ebc4b189a363f7c83c565cb--d9a8951a68244b77a3b817c3efc36f07 1f8fe3e86cc446eb9c9c03878a2ad30a d9a8951a68244b77a3b817c3efc36f07--1f8fe3e86cc446eb9c9c03878a2ad30a 1d1ccafdb74046919ada68fd991fcc3c X 1f8fe3e86cc446eb9c9c03878a2ad30a--1d1ccafdb74046919ada68fd991fcc3c fdc4fc8ff78d4c68841cecff6144bfa1 X 1d1ccafdb74046919ada68fd991fcc3c--fdc4fc8ff78d4c68841cecff6144bfa1 22a89e87b47a444c8fced12cbc8866de fdc4fc8ff78d4c68841cecff6144bfa1--22a89e87b47a444c8fced12cbc8866de f5dce42b5e8641e5b7b31a3b7ad5a38b 22a89e87b47a444c8fced12cbc8866de--f5dce42b5e8641e5b7b31a3b7ad5a38b e7e30b600de14661bcf89502b2b36978 X f5dce42b5e8641e5b7b31a3b7ad5a38b--e7e30b600de14661bcf89502b2b36978 e7e30b600de14661bcf89502b2b36978--62ce310663ba4cf392fe3ddc33bbf5d6 <p>The circuit above actually only uses two evolutions of the global Hamiltonian. In the displayed circuit also see other instances of <code>HamEvo</code> which account for global-phases and single-qubit detunings related to the mapping between the \\(Z\\) and \\(N\\) operator. Optionally, the application of the global phases can also be ignored, as shown in the input of <code>daqc_transform</code>. This will not create exactly the same state or operator matrix in tensor form, but in practice they will be equivalent.</p> <p>In general, the mapping of a \\(n\\)-qubit Ising Hamiltonian will require at most \\(n(n-1)\\) evolutions. The transformed circuit performs these evolutions for specific times that are computed from the solution of a linear system of equations involving the set of interactions in the target and build Hamiltonians.</p> <p>In this case the mapping is exact, since we used the step-wise DAQC technique (sDAQC). In banged DAQC (bDAQC) the mapping is not exact, but is easier to implement on a physical device with always-on interactions such as neutral-atom systems. Currently, only the sDAQC technique is available in <code>qadence</code>.</p> <p>Just as before, we can check that using the transformed Ising circuit we exactly recover the CPHASE gate:</p> <pre><code># CPHASE on (i, j), Identity on third qubit:\ncphase_matrix = qd.block_to_tensor(qd.kron(CPHASE(i, j, phi), I(k)))\n# CPHASE using the transformed circuit:\ncphase_evo_matrix = qd.block_to_tensor(transformed_ising)\n# Will fail if global phases are ignored:\nassert torch.allclose(cphase_matrix, cphase_evo_matrix)\n</code></pre> <p>And we can now build the CNOT gate:</p> <pre><code>cnot_daqc = qd.chain(\nH(j),\ntransformed_ising,\nH(j)\n)\n# And finally run the CNOT on a specific 3-qubit initial state:\ninit_state = qd.product_state(\"101\")\n# Check we get an equivalent wavefunction (will still pass if global phases are ignored)\nwf_cnot = qd.run(n_qubits, block = cnot_target, state = init_state)\nwf_daqc = qd.run(n_qubits, block = cnot_daqc, state = init_state)\nassert qd.equivalent_state(wf_cnot, wf_daqc)\n# Visualize the CNOT bit-flip:\nprint(qd.sample(n_qubits, block = cnot_target, state = init_state, n_shots = 100))\nprint(qd.sample(n_qubits, block = cnot_daqc, state = init_state, n_shots = 100))\n</code></pre> <pre><code>[Counter({'111': 100})]\n[Counter({'111': 100})]\n</code></pre> <p>And we are done! We have effectively performed a CNOT operation on our desired target qubits by using only the global interaction of the system as the building block Hamiltonian, together with single-qubit rotations. Going through the trouble of decomposing a single digital gate into its Ising Hamiltonian is certainly not very practical, but it serves as a proof of principle for the potential of this technique to represent universal quantum computation. In the next example, we will see it applied to the digital-analog Quantum Fourier Transform.</p>"},{"location":"digital_analog_qc/daqc-cnot/#technical-details-on-the-daqc-transformation","title":"Technical details on the DAQC transformation","text":"<ul> <li>The mapping between target generator and final circuit is performed by solving a linear system of size \\(n(n-1)\\) where \\(n\\) is the number of qubits, so it can be computed efficiently (i.e., with a polynomial cost in the number of qubits).</li> <li>The linear system to be solved is actually not invertible for \\(n=4\\) qubits. This is very specific edge case requiring a workaround, that is currently not yet implemented.</li> <li>As mentioned, the final circuit has at most \\(n(n-1)\\) slices, so there is at most a polynomial overhead in circuit depth.</li> </ul> <p>Finally, and most important to its usage:</p> <ul> <li>The target Hamiltonian should be sufficiently represented in the building block Hamiltonian.</li> </ul> <p>To illustrate this point, consider the following target and build Hamiltonians:</p> <pre><code># Interaction between qubits 0 and 1\ngen_target = 1.0 * (Z(0) @ Z(1))\n# Fixed interaction between qubits 1 and 2, and customizable between 0 and 1\ndef gen_build(g_int):\nreturn g_int * (Z(0) @ Z(1)) + 1.0 * (Z(1) @ Z(2))\n</code></pre> <p>And now we perform the DAQC transform by setting <code>g_int = 1.0</code>, matching the target Hamiltonian:</p> <pre><code>transformed_ising = qd.daqc_transform(\nn_qubits = 3,\ngen_target = gen_target,\nt_f = 1.0,\ngen_build = gen_build(g_int = 1.0),\n)\n# display(transformed_ising)\n</code></pre> cluster_33503b6de8114d82b2e99de272041f9b cluster_f7bce5ba1ea34a87848e8c0c478b9336 03545b1bc43141798c21116636bb41f9 0 aa14967e59ed4024a130ee75d1c9b656 X 03545b1bc43141798c21116636bb41f9--aa14967e59ed4024a130ee75d1c9b656 a2b9eb802b824b578101970d6e2768b8 1 4604028503054e3eb34d69ffbab98512 HamEvo aa14967e59ed4024a130ee75d1c9b656--4604028503054e3eb34d69ffbab98512 5c9bf12434f843468a07abbcca40ed04 X 4604028503054e3eb34d69ffbab98512--5c9bf12434f843468a07abbcca40ed04 a6f0eccdefea4fc7a7c6988a0383ca3d 5c9bf12434f843468a07abbcca40ed04--a6f0eccdefea4fc7a7c6988a0383ca3d a85b342f1cda4625bfea9ce9725bb7b3 HamEvo a6f0eccdefea4fc7a7c6988a0383ca3d--a85b342f1cda4625bfea9ce9725bb7b3 5c83e95235594b99ae10635c07eb62a4 a85b342f1cda4625bfea9ce9725bb7b3--5c83e95235594b99ae10635c07eb62a4 23b3199b89504c198aba531ae04812d5 5c83e95235594b99ae10635c07eb62a4--23b3199b89504c198aba531ae04812d5 193f7208a1eb47e0a1754bd5b65363a4 0e3349e9826d402f9ff15310beff2af3 a2b9eb802b824b578101970d6e2768b8--0e3349e9826d402f9ff15310beff2af3 8f667980e9554f7fbe8e76f463519697 2 76963f777eb84ef6851c3831899920da t = -0.500 0e3349e9826d402f9ff15310beff2af3--76963f777eb84ef6851c3831899920da 47b0ebf9c1ea44c6b31821a5844adbe0 76963f777eb84ef6851c3831899920da--47b0ebf9c1ea44c6b31821a5844adbe0 b0c7b78c9ade429090b671c4e123de4f X 47b0ebf9c1ea44c6b31821a5844adbe0--b0c7b78c9ade429090b671c4e123de4f 1b1f66cf74c043a7afb99bcc9cb390fa t = -0.500 b0c7b78c9ade429090b671c4e123de4f--1b1f66cf74c043a7afb99bcc9cb390fa c6c81beae82143dbaeff7b1b994c7436 X 1b1f66cf74c043a7afb99bcc9cb390fa--c6c81beae82143dbaeff7b1b994c7436 c6c81beae82143dbaeff7b1b994c7436--193f7208a1eb47e0a1754bd5b65363a4 30287786b6014820b1814fa341521a6b 2264c6cd743241c586b2d0ff65b656db X 8f667980e9554f7fbe8e76f463519697--2264c6cd743241c586b2d0ff65b656db 068cef65dfa6486f85375f6a62c43161 2264c6cd743241c586b2d0ff65b656db--068cef65dfa6486f85375f6a62c43161 606ab7f0cc104652afdf60605e0553dd X 068cef65dfa6486f85375f6a62c43161--606ab7f0cc104652afdf60605e0553dd 0964fdbcb7e04e349ac75ad90a7ad3f5 X 606ab7f0cc104652afdf60605e0553dd--0964fdbcb7e04e349ac75ad90a7ad3f5 42c4d098bfd0452184f55951168d3192 0964fdbcb7e04e349ac75ad90a7ad3f5--42c4d098bfd0452184f55951168d3192 ce024dcbb24c4a4c8eefd2efefcc05c1 X 42c4d098bfd0452184f55951168d3192--ce024dcbb24c4a4c8eefd2efefcc05c1 ce024dcbb24c4a4c8eefd2efefcc05c1--30287786b6014820b1814fa341521a6b <p>And we get the transformed circuit. What if our build Hamiltonian has a very weak interaction between qubits 0 and 1?</p> <pre><code>transformed_ising = qd.daqc_transform(\nn_qubits = 3,\ngen_target = gen_target,\nt_f = 1.0,\ngen_build = gen_build(g_int = 0.001),\n)\n# display(transformed_ising)\n</code></pre> cluster_e4b2e7ee331a48bc9668fad201886684 cluster_48045d06a89247a68e159279133e854f fb7bc4c8f28d4c1fb9e4fe4a3c9dbe55 0 c85a9132f1de4ab086cf875887e5de62 X fb7bc4c8f28d4c1fb9e4fe4a3c9dbe55--c85a9132f1de4ab086cf875887e5de62 d6bc064131e74cf4bc3171de2a5b8b2e 1 53a71eb09a224d8e966d1a180d2fb5f7 HamEvo c85a9132f1de4ab086cf875887e5de62--53a71eb09a224d8e966d1a180d2fb5f7 25a4a1b292fa4a7a8f794912f1bc9675 X 53a71eb09a224d8e966d1a180d2fb5f7--25a4a1b292fa4a7a8f794912f1bc9675 5591cdc27ac547368ca9d4c165755183 25a4a1b292fa4a7a8f794912f1bc9675--5591cdc27ac547368ca9d4c165755183 52fdef7442284f7a9cb03c62a0bbff9a HamEvo 5591cdc27ac547368ca9d4c165755183--52fdef7442284f7a9cb03c62a0bbff9a 96ab696af4a642618adb141292acbfc9 52fdef7442284f7a9cb03c62a0bbff9a--96ab696af4a642618adb141292acbfc9 7dba2883bdbc48cdb65b4e15c5bbb632 96ab696af4a642618adb141292acbfc9--7dba2883bdbc48cdb65b4e15c5bbb632 c21a9f6e3fbf49d3b0e55cc8424771d7 9c88936f648e45f28cd08c6ad350924e d6bc064131e74cf4bc3171de2a5b8b2e--9c88936f648e45f28cd08c6ad350924e 369d7ec629e0428fa9b5ddc856240e44 2 2f6aae85e8cf4c6eaa95cfa5129c6422 t = -500.000000000000 9c88936f648e45f28cd08c6ad350924e--2f6aae85e8cf4c6eaa95cfa5129c6422 7d55e098d22e4e168433bd7d40985e60 2f6aae85e8cf4c6eaa95cfa5129c6422--7d55e098d22e4e168433bd7d40985e60 c801a88e06a7408196ccb622c7a48ab4 X 7d55e098d22e4e168433bd7d40985e60--c801a88e06a7408196ccb622c7a48ab4 8c36b1cfa1d14427b5d1f0ca44a5c440 t = -500.000000000000 c801a88e06a7408196ccb622c7a48ab4--8c36b1cfa1d14427b5d1f0ca44a5c440 5fd228ee718b404581d17dce96f42c3c X 8c36b1cfa1d14427b5d1f0ca44a5c440--5fd228ee718b404581d17dce96f42c3c 5fd228ee718b404581d17dce96f42c3c--c21a9f6e3fbf49d3b0e55cc8424771d7 26248cfd02b143f8b2fe418d6e4fc7df e07858da5fb741f5a9bc8bf7b9bc5c27 X 369d7ec629e0428fa9b5ddc856240e44--e07858da5fb741f5a9bc8bf7b9bc5c27 ed9edf4ad93d48b5a39ed4850f8e8014 e07858da5fb741f5a9bc8bf7b9bc5c27--ed9edf4ad93d48b5a39ed4850f8e8014 3c3ea1a8091b41fe969fa0a8841c83ae X ed9edf4ad93d48b5a39ed4850f8e8014--3c3ea1a8091b41fe969fa0a8841c83ae e5c5e331976041dbb7f7de8be8ab71c8 X 3c3ea1a8091b41fe969fa0a8841c83ae--e5c5e331976041dbb7f7de8be8ab71c8 11370c3cdfa147b484747eb7985a9f41 e5c5e331976041dbb7f7de8be8ab71c8--11370c3cdfa147b484747eb7985a9f41 2aaa2e7f3b614c488842b3ef648f4730 X 11370c3cdfa147b484747eb7985a9f41--2aaa2e7f3b614c488842b3ef648f4730 2aaa2e7f3b614c488842b3ef648f4730--26248cfd02b143f8b2fe418d6e4fc7df <p>As we can see, to represent the same interaction between 0 and 1, the slices using the build Hamiltonian need to evolve for much longer, since the target interaction is not sufficiently represented in the building block Hamiltonian.</p> <p>In the limit where that interaction is not present at all, the transform will not work:</p> <pre><code>try:\ntransformed_ising = qd.daqc_transform(\nn_qubits = 3,\ngen_target = gen_target,\nt_f = 1.0,\ngen_build = gen_build(g_int = 0.0),\n)\nexcept ValueError as error:\nprint(\"Error:\", error)\n</code></pre> <pre><code>Error: Incompatible interactions between target and build Hamiltonians.\n</code></pre>"},{"location":"digital_analog_qc/daqc-cnot/#references","title":"References","text":"<ol> <li> <p>Dodd et al., Universal quantum computation and simulation using any entangling Hamiltonian and local unitaries, PRA 65, 040301 (2002). \u21a9</p> </li> <li> <p>Parra-Rodriguez et al., Digital-Analog Quantum Computation, PRA 101, 022305 (2020). \u21a9\u21a9\u21a9</p> </li> </ol>"},{"location":"digital_analog_qc/pulser-basic/","title":"Pulse-level programming with Pulser","text":"<p>Qadence offers a direct interface with Pulser<sup>1</sup>, an open-source pulse-level interface written in Python and specifically designed for programming neutral atom quantum computers.</p> <p>Using directly Pulser requires deep knowledge on pulse-level programming and on how neutral atom devices work. Qadence abstracts this complexity out by using the familiar block-based interface for building pulse sequences in Pulser while leaving the possibility to directly manipulate them if required by, for instance, optimal pulse shaping.</p> <p>Note</p> <p>The Pulser backend is still experimental and the interface might change in the future.</p> <p>Let's see it in action.</p>"},{"location":"digital_analog_qc/pulser-basic/#default-qubit-interaction","title":"Default qubit interaction","text":"<p>When simulating pulse sequences written using Pulser, the underlying Hamiltonian it constructs is equivalent to a digital-analog quantum computing program with the following interaction Hamiltonian (see digital-analog emulation for more details):</p> \\[ \\mathcal{H}_{int} = \\sum_{i&lt;j} \\frac{C_6}{|R_i - R_j|^6} \\hat{n}_i \\hat{n}_j \\] <p>where \\(C_6\\) is an interaction coefficient which depends on the principal quantum number of chosen the neutral atom system, \\(R_i\\) are the atomic positions in Cartesian coordinates and \\(\\hat{n} = \\frac{1-\\sigma^z_i}{2}\\) is the number operator.</p> <p>Note</p> <p>The Ising interaction is always-on for all computations performed with the Pulser backend. It cannot be switched off.</p>"},{"location":"digital_analog_qc/pulser-basic/#available-quantum-operations","title":"Available quantum operations","text":"<p>Currently, the Pulser backend supports the following operations:</p> gate description trainable parameter <code>RX</code>, <code>RY</code> Single qubit rotations. Notice that the interaction is on and this affects the resulting gate fidelity. rotation angle <code>AnalogRX</code>, <code>AnalogRY</code>, <code>AnalogRZ</code> Span a single qubit rotation among the entire register. rotation angle <code>entangle</code> Fully entangle the register. interaction time <code>wait</code> An idle block to wait for the system to evolve for a specific time according to the interaction. free evolution time"},{"location":"digital_analog_qc/pulser-basic/#two-qubits-register-bell-state","title":"Two qubits register: Bell state","text":"<p>Using the <code>chain</code> block makes it easy to create a gate sequence. Here is an example of how to create a Bell state. The <code>entangle</code> operation uses <code>CZ</code> interactions (according to the interaction Hamiltonian introduced in the first paragraph of this section) to entangle states on the <code>X</code> basis. We move the qubits back to the <code>Z</code> basis for the readout using a <code>Y</code> rotation.</p> <pre><code>from qadence import chain, entangle, RY\nbell_state = chain(\nentangle(\"t\", qubit_support=(0,1)),\nRY(0, \"y\"),\n)\n</code></pre> <p>To convert the chain block into a pulse sequence, we define a <code>Register</code> with two qubits and combine it to create a circuit as usual. Then we construct a <code>QuantumModel</code> with a Pulser backend to convert it into a proper parametrized pulse sequence. Supplying the parameter values allows to sample from the pulse sequence result like any other Qadence backend.</p> <pre><code>import torch\nimport matplotlib.pyplot as plt\nfrom qadence import Register, QuantumCircuit, QuantumModel\nregister = Register(2)\ncircuit = QuantumCircuit(register, bell_state)\nmodel = QuantumModel(circuit, backend=\"pulser\", diff_mode=\"gpsr\")\nparams = {\n\"t\": torch.tensor([383]),  # ns\n\"y\": torch.tensor([3*torch.pi/2]),\n}\n# return the final state vector\nfinal_vector = model.run(params)\nprint(final_vector)\n# sample from the result state vector and plot the distribution\nsample = model.sample(params, n_shots=50)[0]\nprint(sample)\nfig, ax = plt.subplots()\nax.bar(sample.keys(), sample.values())\n</code></pre>   tensor([[-0.7080-0.0207j,  0.0395+0.3061j,  0.0039-0.0540j,  0.6220-0.1151j]]) Counter({'00': 27, '11': 18, '01': 5})  2023-10-12T10:40:06.641283 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/ <p>One can visualise the pulse sequence with different parameters using the <code>assign_paramters</code> method.</p> <pre><code>model.assign_parameters(params).draw(show=False)\n</code></pre> 2023-10-12T10:40:06.712699 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/"},{"location":"digital_analog_qc/pulser-basic/#change-device-specifications","title":"Change device specifications","text":"<p>At variance with other backends, the Pulser one provides the concept of <code>Device</code>, inherited from the Pulser. Check this tutorial for more information.</p> <p>A <code>Device</code> instance encapsulates all the properties for the definition of a real neutral atoms processor, including but not limited to the maximum laser amplitude for the pulses, the maximum distance between two qubits and the maximum duration of the pulse.</p> <p>Qadence offers a simplified interface with only two devices which are detailed here:</p> <ul> <li><code>IDEALIZED</code> (default): ideal device which should be used only for testing purposes. It does not have any limitation in what pulse sequences can run with it.</li> <li><code>REALISTIC</code>: device specification very similar to a real neutral atom quantum processor.</li> </ul> <p>Note</p> <p>If you want to perform simulations closer to the specifications of real neutral atom machines, always select the <code>REALISTIC</code> device.</p> <p>One can use the <code>Configuration</code> of the Pulser backend to select the appropriate device:</p> <pre><code>from qadence.backends.pulser.devices import Device\nregister = Register(2)\ncircuit = QuantumCircuit(register, bell_state)\n# choose a realistic device\nmodel = QuantumModel(\ncircuit,\nbackend=\"pulser\",\ndiff_mode=\"gpsr\",\nconfiguration={\"device_type\": Device.REALISTIC}\n)\nparams = {\n\"t\": torch.tensor([383]),  # ns\n\"y\": torch.tensor([3*torch.pi/2]),\n}\n# sample from the result state vector and plot the distribution\nsample = model.sample(params, n_shots=50)[0]\nprint(sample)\n</code></pre>   Counter({'00': 26, '01': 18, '11': 6})"},{"location":"digital_analog_qc/pulser-basic/#create-your-own-gate","title":"Create your own gate","text":"<p>A big advantage of using the block-based interface if  Qadence is that it makes it easy to create complex operations from simple ones as a block composition. In the following, we use the entanglement operation as an example.</p> <p>The operation consists of moving all the qubits to the <code>X</code> basis having the atoms' interaction perform a controlled-Z operation during the free evolution. And we can easily recreate this pattern using the <code>wait</code> (corresponding to free evolution) and <code>AnalogRY</code> blocks with appropriate parameters.</p> <pre><code>from qadence import AnalogRY, chain, wait\ndef my_entanglement(duration):\nreturn chain(\nAnalogRY(-torch.pi / 2),\nwait(duration)\n)\nprotocol = chain(\nmy_entanglement(\"t\"),\nRY(0, \"y\"),\n)\nregister = Register(2)\ncircuit = QuantumCircuit(register, protocol)\nmodel = QuantumModel(circuit, backend=\"pulser\", diff_mode='gpsr')\nparams = {\n\"t\": torch.tensor([383]),  # ns\n\"y\": torch.tensor([torch.pi / 2]),\n}\nsample = model.sample(params, n_shots=50)[0]\nfig, ax = plt.subplots()\nplt.bar(sample.keys(), sample.values())\n</code></pre> 2023-10-12T10:40:06.952962 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/"},{"location":"digital_analog_qc/pulser-basic/#digital-analog-qnn-circuit","title":"Digital-analog QNN circuit","text":"<p>Finally, let's put all together by constructing a digital-analog version of a quantum neural network circuit with feature map and variational ansatz.</p> <pre><code>from qadence import kron, fourier_feature_map\nfrom qadence.operations import RX, RY, AnalogRX\nhea_one_layer = chain(\nkron(RY(0, \"th00\"), RY(1, \"th01\")),\nkron(RX(0, \"th10\"), RX(1, \"th11\")),\nkron(RY(0, \"th20\"), RY(1, \"th21\")),\nentangle(\"t\", qubit_support=(0,1)),\n)\nprotocol = chain(\nfourier_feature_map(1, param=\"x\"),\nhea_one_layer,\nAnalogRX(torch.pi/4)\n)\nregister = Register(2)\ncircuit = QuantumCircuit(register, protocol)\nmodel = QuantumModel(circuit, backend=\"pulser\", diff_mode=\"gpsr\")\nparams = {\n\"x\": torch.tensor([0.8]), # rad\n\"t\": torch.tensor([900]), # ns\n\"th00\":  torch.rand(1), # rad\n\"th01\":  torch.rand(1), # rad\n\"th10\":  torch.rand(1), # rad\n\"th11\":  torch.rand(1), # rad\n\"th20\":  torch.rand(1), # rad\n\"th21\":  torch.rand(1), # rad\n}\nmodel.assign_parameters(params).draw(draw_phase_area=True, show=False)\n</code></pre> 2023-10-12T10:40:07.021419 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/"},{"location":"digital_analog_qc/pulser-basic/#references","title":"References","text":"<ol> <li> <p>Pulser: An open-source package for the design of pulse sequences in programmable neutral-atom arrays \u21a9</p> </li> </ol>"},{"location":"qadence/blocks/","title":"Block system","text":"<p><code>qadence</code> offers a block-based system to construct quantum circuits in a flexible manner.</p>"},{"location":"qadence/blocks/#qadence.blocks.abstract.AbstractBlock","title":"<code>AbstractBlock</code>  <code>dataclass</code>","text":"<p>             Bases: <code>ABC</code></p> <p>Base class for both primitive and composite blocks</p> ATTRIBUTE DESCRIPTION <code>name</code> <p>A human-readable name attached to the block type. Notice, this is the same for all the class instances so it cannot be used for identifying different blocks</p> <p> TYPE: <code>str</code> </p> <code>qubit_support</code> <p>The qubit support of the block expressed as a tuple of integers</p> <p> TYPE: <code>tuple[int, ...]</code> </p> <code>tag</code> <p>A tag identifying a particular instance of the block which can be used for identification and pretty printing</p> <p> TYPE: <code>str | None</code> </p> <code>eigenvalues</code> <p>The eigenvalues of the matrix representing the block. This is used mainly for primitive blocks and it's needed for generalized parameter shift rule computations. Currently unused.</p> <p> TYPE: <code>list[float] | None</code> </p>"},{"location":"qadence/blocks/#qadence.blocks.abstract.AbstractBlock.is_identity","title":"<code>is_identity: bool</code>  <code>property</code>","text":"<p>Identity predicate for blocks.</p>"},{"location":"qadence/blocks/#qadence.blocks.abstract.AbstractBlock.n_qubits","title":"<code>n_qubits()</code>","text":"<p>The number of qubits in the whole system. A block acting on qubit N would has at least n_qubits &gt;= N + 1.</p> Source code in <code>qadence/blocks/abstract.py</code> <pre><code>@abstractproperty\ndef n_qubits(self) -&gt; int:\n\"\"\"The number of qubits in the whole system.\n    A block acting on qubit N would has at least n_qubits &gt;= N + 1.\"\"\"\npass\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.abstract.AbstractBlock.n_supports","title":"<code>n_supports()</code>","text":"<p>The number of qubits the block is acting on.</p> Source code in <code>qadence/blocks/abstract.py</code> <pre><code>@abstractproperty\ndef n_supports(self) -&gt; int:\n\"\"\"The number of qubits the block is acting on.\"\"\"\npass\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.abstract.AbstractBlock.qubit_support","title":"<code>qubit_support()</code>","text":"<p>The indices of the qubit(s) the block is acting on. Qadence uses the ordering [0..,N-1] for qubits.</p> Source code in <code>qadence/blocks/abstract.py</code> <pre><code>@abstractproperty\ndef qubit_support(self) -&gt; Tuple[int, ...]:\n\"\"\"The indices of the qubit(s) the block is acting on.\n    Qadence uses the ordering [0..,N-1] for qubits.\"\"\"\npass\n</code></pre>"},{"location":"qadence/blocks/#primitive-blocks","title":"Primitive blocks","text":""},{"location":"qadence/blocks/#qadence.blocks.primitive.ControlBlock","title":"<code>ControlBlock(control, target_block)</code>","text":"<p>             Bases: <code>PrimitiveBlock</code></p> <p>The abstract ControlBlock</p> Source code in <code>qadence/blocks/primitive.py</code> <pre><code>def __init__(self, control: tuple[int, ...], target_block: PrimitiveBlock) -&gt; None:\nself.blocks = (target_block,)\n# using tuple expansion because some control operations could\n# have multiple targets, e.g. CSWAP\nsuper().__init__((*control, *target_block.qubit_support))  # target_block.qubit_support[0]))\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.primitive.ParametricBlock","title":"<code>ParametricBlock(qubit_support)</code>","text":"<p>             Bases: <code>PrimitiveBlock</code></p> <p>Parameterized primitive blocks</p> Source code in <code>qadence/blocks/primitive.py</code> <pre><code>def __init__(self, qubit_support: tuple[int, ...]):\nself._qubit_support = qubit_support\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.primitive.ParametricBlock.num_parameters","title":"<code>num_parameters()</code>  <code>abstractmethod</code>","text":"<p>The number of parameters required by the block</p> <p>This is a class property since the number of parameters is defined automatically before instantiating the operation. Also, this could correspond to a larger number of actual user-facing parameters since any parameter expression is allowed</p> <p>Examples: - RX operation has 1 parameter - U operation has 3 parameters - HamEvo has 2 parameters (generator and time evolution)</p> Source code in <code>qadence/blocks/primitive.py</code> <pre><code>@abstractmethod\ndef num_parameters(cls) -&gt; int:\n\"\"\"The number of parameters required by the block\n    This is a class property since the number of parameters is defined\n    automatically before instantiating the operation. Also, this could\n    correspond to a larger number of actual user-facing parameters\n    since any parameter expression is allowed\n    Examples:\n    - RX operation has 1 parameter\n    - U operation has 3 parameters\n    - HamEvo has 2 parameters (generator and time evolution)\n    \"\"\"\npass\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.primitive.ParametricControlBlock","title":"<code>ParametricControlBlock(control, target_block)</code>","text":"<p>             Bases: <code>ParametricBlock</code></p> <p>The abstract parametrized ControlBlock</p> Source code in <code>qadence/blocks/primitive.py</code> <pre><code>def __init__(self, control: tuple[int, ...], target_block: ParametricBlock) -&gt; None:\nself.blocks = (target_block,)\nself.parameters = target_block.parameters\nsuper().__init__((*control, target_block.qubit_support[0]))\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.primitive.PrimitiveBlock","title":"<code>PrimitiveBlock(qubit_support)</code>","text":"<p>             Bases: <code>AbstractBlock</code></p> <p>Primitive blocks represent elementary unitary operations such as single/multi-qubit gates or Hamiltonian evolution. See <code>qadence.operations</code> for a full list of primitive blocks.</p> Source code in <code>qadence/blocks/primitive.py</code> <pre><code>def __init__(self, qubit_support: tuple[int, ...]):\nself._qubit_support = qubit_support\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.primitive.PrimitiveBlock.digital_decomposition","title":"<code>digital_decomposition()</code>","text":"<p>Decomposition into purely digital gates</p> <p>This method returns a decomposition of the Block in a combination of purely digital single-qubit and two-qubit 'gates', by manual/custom knowledge of how this can be done efficiently. :return:</p> Source code in <code>qadence/blocks/primitive.py</code> <pre><code>def digital_decomposition(self) -&gt; AbstractBlock:\n\"\"\"Decomposition into purely digital gates\n    This method returns a decomposition of the Block in a\n    combination of purely digital single-qubit and two-qubit\n    'gates', by manual/custom knowledge of how this can be done efficiently.\n    :return:\n    \"\"\"\nreturn self\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.primitive.ScaleBlock","title":"<code>ScaleBlock(block, parameter)</code>","text":"<p>             Bases: <code>ParametricBlock</code></p> <p>Scale blocks are created when multiplying a block by a number or parameter.</p> <p>Example: <pre><code>from qadence import X\nprint(X(0) * 2)\n</code></pre> <pre><code>[mul: 2] \u2514\u2500\u2500 X(0)\n</code></pre> </p> Source code in <code>qadence/blocks/primitive.py</code> <pre><code>def __init__(self, block: AbstractBlock, parameter: Any):\nself.block = block\n# TODO: more meaningful name like `scale`?\nself.parameters = (\nparameter if isinstance(parameter, ParamMap) else ParamMap(parameter=parameter)\n)\nsuper().__init__(block.qubit_support)\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.primitive.TimeEvolutionBlock","title":"<code>TimeEvolutionBlock(qubit_support)</code>","text":"<p>             Bases: <code>ParametricBlock</code></p> <p>Simple time evolution block with time-independent Hamiltonian</p> <p>This class is just a convenience class which is used to label blocks which contains simple time evolution with time-independent Hamiltonian operators</p> Source code in <code>qadence/blocks/primitive.py</code> <pre><code>def __init__(self, qubit_support: tuple[int, ...]):\nself._qubit_support = qubit_support\n</code></pre>"},{"location":"qadence/blocks/#analog-blocks","title":"Analog blocks","text":"<p>To learn how to use analog blocks and how to mix digital &amp; analog blocks, check out the digital-analog section of the documentation.</p> <p>Examples on how to use digital-analog blocks can be found in the *examples folder of the qadence repo:</p> <ul> <li>Fit a simple sinus: <code>examples/digital-analog/fit-sin.py</code></li> <li>Solve a QUBO: <code>examples/digital-analog/qubo.py</code></li> </ul>"},{"location":"qadence/blocks/#qadence.blocks.analog.AnalogChain","title":"<code>AnalogChain(blocks)</code>  <code>dataclass</code>","text":"<p>             Bases: <code>AnalogComposite</code></p> <p>A chain of analog blocks. Needed because analog blocks require stricter validation than the general <code>ChainBlock</code>.</p> <p><code>AnalogChain</code>s can only be constructed from <code>AnalogKron</code> blocks or globally supported, primitive, analog blocks (like <code>WaitBlock</code>s and <code>ConstantAnalogRotation</code>s).</p> <p>Automatically constructed by the <code>chain</code> function if only analog blocks are given.</p> <p>Example: <pre><code>from qadence import X, chain, wait\nb = chain(wait(200), wait(200))\nprint(type(b))  # this is an `AnalogChain`\nb = chain(X(0), wait(200))\nprint(type(b))  # this is a general `ChainBlock`\n</code></pre> <pre><code>&lt;class 'qadence.blocks.analog.AnalogChain'&gt;\n&lt;class 'qadence.blocks.composite.ChainBlock'&gt;\n</code></pre> </p> Source code in <code>qadence/blocks/analog.py</code> <pre><code>def __init__(self, blocks: Tuple[AnalogBlock, ...]):\n\"\"\"A chain of analog blocks. Needed because analog blocks require\n    stricter validation than the general `ChainBlock`.\n    `AnalogChain`s can only be constructed from `AnalogKron` blocks or\n    _**globally supported**_, primitive, analog blocks (like `WaitBlock`s and\n    `ConstantAnalogRotation`s).\n    Automatically constructed by the [`chain`][qadence.blocks.utils.chain]\n    function if only analog blocks are given.\n    Example:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import X, chain, wait\n    b = chain(wait(200), wait(200))\n    print(type(b))  # this is an `AnalogChain`\n    b = chain(X(0), wait(200))\n    print(type(b))  # this is a general `ChainBlock`\n    ```\n    \"\"\"\nfor b in blocks:\nif not (isinstance(b, AnalogKron) or b.qubit_support.is_global):\nraise ValueError(\"Only KronBlocks or global blocks can be chain'ed.\")\nself.blocks = blocks\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.analog.AnalogKron","title":"<code>AnalogKron(blocks, interaction=Interaction.NN)</code>  <code>dataclass</code>","text":"<p>             Bases: <code>AnalogComposite</code></p> <p>Stack analog blocks vertically (i.e. in time). Needed because analog require stricter validation than the general <code>KronBlock</code>.</p> <p><code>AnalogKron</code>s can only be constructed from non-global, analog blocks with the same duration.</p> Source code in <code>qadence/blocks/analog.py</code> <pre><code>def __init__(self, blocks: Tuple[AnalogBlock, ...], interaction: Interaction = Interaction.NN):\n\"\"\"Stack analog blocks vertically (i.e. in time). Needed because analog require\n    stricter validation than the general `KronBlock`.\n    `AnalogKron`s can only be constructed from _**non-global**_, analog blocks\n    with the _**same duration**_.\n    \"\"\"\nif len(blocks) == 0:\nraise NotImplementedError(\"Empty KronBlocks not supported\")\nself.blocks = blocks\nself.interaction = interaction\nqubit_support = QubitSupport()\nduration = blocks[0].duration\nfor b in blocks:\nif not isinstance(b, AnalogBlock):\nraise ValueError(\"Can only kron `AnalgoBlock`s with other `AnalgoBlock`s.\")\nif b.qubit_support == QubitSupport(\"global\"):\nraise ValueError(\"Blocks with global support cannot be kron'ed.\")\nif not qubit_support.is_disjoint(b.qubit_support):\nraise ValueError(\"Make sure blocks act on distinct qubits!\")\nif not np.isclose(evaluate(duration), evaluate(b.duration)):\nraise ValueError(\"Kron'ed blocks have to have same duration.\")\nqubit_support += b.qubit_support\nself.blocks = blocks\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.analog.ConstantAnalogRotation","title":"<code>ConstantAnalogRotation</code>  <code>dataclass</code>","text":"<p>             Bases: <code>AnalogBlock</code></p> <p>Implements a constant analog rotation with interaction dictated by the chosen Hamiltonian</p> <pre><code>H = \u2211\u1d62(h\u03a9/2 sin(\u03c6)*X\u1d62 - cos(\u03c6)*Y\u1d62 - h\u03b4n\u1d62) + H\u1d62\u2099\u209c.\n</code></pre> <p>To construct this block you can use of the following convenience wrappers: - The general rotation operation <code>AnalogRot</code> - Shorthands for rotatins around an axis:   <code>AnalogRX</code>,   <code>AnalogRY</code>,   <code>AnalogRZ</code></p> <p>Can be used with <code>add_interaction</code>. WARNING: do not use <code>ConstantAnalogRotation</code> with <code>alpha</code> as differentiable parameter - use the convenience wrappers mentioned above.</p>"},{"location":"qadence/blocks/#qadence.blocks.analog.WaitBlock","title":"<code>WaitBlock</code>  <code>dataclass</code>","text":"<p>             Bases: <code>AnalogBlock</code></p> <p>Waits. In real interacting quantum devices, it means letting the system evolve freely according to the time-dependent Schrodinger equation. With emulators, this block is translated to an appropriate interaction Hamiltonian, for example, an Ising interation</p> <pre><code>H\u1d62\u2099\u209c = \u2211\u1d62\u2c7c C\u2086/r\u1d62\u2c7c\u2076 n\u1d62n\u2c7c\n</code></pre> <p>or an XY-interaction</p> <pre><code>H\u1d62\u2099\u209c = \u2211\u1d62\u2c7c C\u2083/r\u2c7c\u2c7c\u00b3 (X\u1d62X\u2c7c + Z\u1d62Z\u2c7c)\n</code></pre> <p>with <code>n\u1d62 = (1-Z\u1d62)/2</code>.</p> <p>To construct this block, use the <code>wait</code> function.</p> <p>Can be used with <code>add_interaction</code>.</p>"},{"location":"qadence/blocks/#composite-blocks","title":"Composite blocks","text":""},{"location":"qadence/blocks/#qadence.blocks.utils.chain","title":"<code>chain(*args)</code>","text":"<p>Chain blocks sequentially. On digital backends this can be interpreted loosely as a matrix mutliplication of blocks. In the analog case it chains blocks in time.</p> PARAMETER  DESCRIPTION <code>*args</code> <p>Blocks to chain. Can also be a generator.</p> <p> TYPE: <code>Union[AbstractBlock, Generator, List[AbstractBlock]]</code> DEFAULT: <code>()</code> </p> RETURNS DESCRIPTION <code>ChainBlock</code> <p>ChainBlock</p> <p>Example: <pre><code>from qadence import X, Y, chain\nb = chain(X(0), Y(0))\n# or use a generator\nb = chain(X(i) for i in range(3))\nprint(b)\n</code></pre> <pre><code>ChainBlock(0,1,2)\n\u251c\u2500\u2500 X(0)\n\u251c\u2500\u2500 X(1)\n\u2514\u2500\u2500 X(2)\n</code></pre> </p> Source code in <code>qadence/blocks/utils.py</code> <pre><code>def chain(*args: Union[AbstractBlock, Generator, List[AbstractBlock]]) -&gt; ChainBlock:\n\"\"\"Chain blocks sequentially. On digital backends this can be interpreted\n    loosely as a matrix mutliplication of blocks. In the analog case it chains\n    blocks in time.\n    Arguments:\n        *args: Blocks to chain. Can also be a generator.\n    Returns:\n        ChainBlock\n    Example:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import X, Y, chain\n    b = chain(X(0), Y(0))\n    # or use a generator\n    b = chain(X(i) for i in range(3))\n    print(b)\n    ```\n    \"\"\"\n# ugly hack to use `AnalogChain` if we are dealing only with analog blocks\nif len(args) and all(\nisinstance(a, AnalogBlock) or isinstance(a, AnalogComposite) for a in args\n):\nreturn analog_chain(*args)  # type: ignore[return-value,arg-type]\nreturn _construct(ChainBlock, args)\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.utils.kron","title":"<code>kron(*args)</code>","text":"<p>Stack blocks vertically. On digital backends this can be intepreted loosely as a kronecker product of blocks. In the analog case it executes blocks parallel in time.</p> PARAMETER  DESCRIPTION <code>*args</code> <p>Blocks to kron. Can also be a generator.</p> <p> TYPE: <code>Union[AbstractBlock, Generator]</code> DEFAULT: <code>()</code> </p> RETURNS DESCRIPTION <code>KronBlock</code> <p>KronBlock</p> <p>Example: <pre><code>from qadence import X, Y, kron\nb = kron(X(0), Y(1))\n# or use a generator\nb = kron(X(i) for i in range(3))\nprint(b)\n</code></pre> <pre><code>KronBlock(0,1,2)\n\u251c\u2500\u2500 X(0)\n\u251c\u2500\u2500 X(1)\n\u2514\u2500\u2500 X(2)\n</code></pre> </p> Source code in <code>qadence/blocks/utils.py</code> <pre><code>def kron(*args: Union[AbstractBlock, Generator]) -&gt; KronBlock:\n\"\"\"Stack blocks vertically. On digital backends this can be intepreted\n    loosely as a kronecker product of blocks. In the analog case it executes\n    blocks parallel in time.\n    Arguments:\n        *args: Blocks to kron. Can also be a generator.\n    Returns:\n        KronBlock\n    Example:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import X, Y, kron\n    b = kron(X(0), Y(1))\n    # or use a generator\n    b = kron(X(i) for i in range(3))\n    print(b)\n    ```\n    \"\"\"\n# ugly hack to use `AnalogKron` if we are dealing only with analog blocks\nif len(args) and all(\nisinstance(a, AnalogBlock) or isinstance(a, AnalogComposite) for a in args\n):\nreturn analog_kron(*args)  # type: ignore[return-value,arg-type]\nreturn _construct(KronBlock, args)\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.utils.add","title":"<code>add(*args)</code>","text":"<p>Sums blocks.</p> PARAMETER  DESCRIPTION <code>*args</code> <p>Blocks to add. Can also be a generator.</p> <p> TYPE: <code>Union[AbstractBlock, Generator]</code> DEFAULT: <code>()</code> </p> RETURNS DESCRIPTION <code>AddBlock</code> <p>AddBlock</p> <p>Example: <pre><code>from qadence import X, Y, add\nb = add(X(0), Y(0))\n# or use a generator\nb = add(X(i) for i in range(3))\nprint(b)\n</code></pre> <pre><code>AddBlock(0,1,2)\n\u251c\u2500\u2500 X(0)\n\u251c\u2500\u2500 X(1)\n\u2514\u2500\u2500 X(2)\n</code></pre> </p> Source code in <code>qadence/blocks/utils.py</code> <pre><code>def add(*args: Union[AbstractBlock, Generator]) -&gt; AddBlock:\n\"\"\"Sums blocks.\n    Arguments:\n        *args: Blocks to add. Can also be a generator.\n    Returns:\n        AddBlock\n    Example:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import X, Y, add\n    b = add(X(0), Y(0))\n    # or use a generator\n    b = add(X(i) for i in range(3))\n    print(b)\n    ```\n    \"\"\"\nreturn _construct(AddBlock, args)\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.composite.AddBlock","title":"<code>AddBlock(blocks)</code>","text":"<p>             Bases: <code>CompositeBlock</code></p> <p>Adds blocks. Constructed via <code>add</code>.</p> Source code in <code>qadence/blocks/composite.py</code> <pre><code>def __init__(self, blocks: Tuple[AbstractBlock, ...]):\nself.blocks = blocks\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.composite.ChainBlock","title":"<code>ChainBlock(blocks)</code>","text":"<p>             Bases: <code>CompositeBlock</code></p> <p>Chains blocks sequentially. Constructed via <code>chain</code></p> Source code in <code>qadence/blocks/composite.py</code> <pre><code>def __init__(self, blocks: Tuple[AbstractBlock, ...]):\nself.blocks = blocks\n</code></pre>"},{"location":"qadence/blocks/#qadence.blocks.composite.CompositeBlock","title":"<code>CompositeBlock</code>","text":"<p>             Bases: <code>AbstractBlock</code></p> <p>Block which composes multiple blocks into one larger block (which can again be composed). Composite blocks are constructed via <code>chain</code>, <code>kron</code>, and <code>add</code>.</p>"},{"location":"qadence/blocks/#qadence.blocks.composite.KronBlock","title":"<code>KronBlock(blocks)</code>","text":"<p>             Bases: <code>CompositeBlock</code></p> <p>Stacks blocks horizontally. Constructed via <code>kron</code>.</p> Source code in <code>qadence/blocks/composite.py</code> <pre><code>def __init__(self, blocks: Tuple[AbstractBlock, ...]):\nif len(blocks) == 0:\nraise NotImplementedError(\"Empty KronBlocks not supported\")\nqubit_support = QubitSupport()\nfor b in blocks:\nassert (\nQubitSupportType.GLOBAL,\n) != b.qubit_support, \"Blocks with global support cannot be kron'ed.\"\nassert qubit_support.is_disjoint(\nb.qubit_support\n), \"Make sure blocks act on distinct qubits!\"\nqubit_support += b.qubit_support\nself.blocks = blocks\n</code></pre>"},{"location":"qadence/blocks/#converting-blocks-to-matrices","title":"Converting blocks to matrices","text":""},{"location":"qadence/blocks/#qadence.blocks.block_to_tensor.block_to_tensor","title":"<code>block_to_tensor(block, values={}, qubit_support=None, use_full_support=True, tensor_type=TensorType.DENSE, endianness=Endianness.BIG)</code>","text":"<p>Convert a block into a torch tensor.</p> PARAMETER  DESCRIPTION <code>block</code> <p>The block to convert.</p> <p> TYPE: <code>AbstractBlock</code> </p> <code>values</code> <p>A optional dict with values for parameters.</p> <p> TYPE: <code>dict</code> DEFAULT: <code>{}</code> </p> <code>qubit_support</code> <p>The qubit_support of the block.</p> <p> TYPE: <code>tuple</code> DEFAULT: <code>None</code> </p> <code>use_full_support</code> <p>True infers the total number of qubits.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>True</code> </p> <code>tensor_type</code> <p>the target tensor type.</p> <p> TYPE: <code>TensorType</code> DEFAULT: <code>DENSE</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A torch.Tensor.</p> <p>Examples: <pre><code>from qadence import hea, hamiltonian_factory, Z, block_to_tensor\nblock = hea(2,2)\nprint(block_to_tensor(block))\n# In case you have a diagonal observable, you can use\nobs = hamiltonian_factory(2, detuning = Z)\nprint(block_to_tensor(obs, tensor_type=\"SparseDiagonal\"))\n</code></pre> <pre><code>tensor([[[ 0.5034+0.1645j, -0.2575-0.4773j, -0.1863-0.2398j, -0.5771+0.0125j],\n[ 0.0301-0.4791j,  0.5561+0.0912j, -0.5891-0.2234j, -0.1547-0.1766j],\n[-0.1238-0.5348j, -0.3862-0.0394j,  0.2656+0.1068j, -0.1997-0.6528j],\n[-0.3733-0.2200j, -0.1777-0.4539j,  0.0268-0.6544j,  0.3337+0.1853j]]],\ngrad_fn=&lt;UnsafeViewBackward0&gt;)\ntensor(indices=tensor([[0, 3],\n[0, 3]]),\nvalues=tensor([ 2.+0.j, -2.+0.j]),\nsize=(4, 4), nnz=2, layout=torch.sparse_coo)\n</code></pre> </p> Source code in <code>qadence/blocks/block_to_tensor.py</code> <pre><code>def block_to_tensor(\nblock: AbstractBlock,\nvalues: dict[str, TNumber | torch.Tensor] = {},\nqubit_support: tuple | None = None,\nuse_full_support: bool = True,\ntensor_type: TensorType = TensorType.DENSE,\nendianness: Endianness = Endianness.BIG,\n) -&gt; torch.Tensor:\n\"\"\"\n    Convert a block into a torch tensor.\n    Arguments:\n        block (AbstractBlock): The block to convert.\n        values (dict): A optional dict with values for parameters.\n        qubit_support (tuple): The qubit_support of the block.\n        use_full_support (bool): True infers the total number of qubits.\n        tensor_type (TensorType): the target tensor type.\n    Returns:\n        A torch.Tensor.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import hea, hamiltonian_factory, Z, block_to_tensor\n    block = hea(2,2)\n    print(block_to_tensor(block))\n    # In case you have a diagonal observable, you can use\n    obs = hamiltonian_factory(2, detuning = Z)\n    print(block_to_tensor(obs, tensor_type=\"SparseDiagonal\"))\n    ```\n    \"\"\"\n# FIXME: default use_full_support to False. In general, it would\n# be more efficient to do that, and make sure that computations such\n# as observables only do the matmul of the size of the qubit support.\nif tensor_type == TensorType.DENSE:\nfrom qadence.blocks import embedding\n(ps, embed) = embedding(block)\nreturn _block_to_tensor_embedded(\nblock, embed(ps, values), qubit_support, use_full_support, endianness=endianness\n)\nelif tensor_type == TensorType.SPARSEDIAGONAL:\nt = block_to_diagonal(block, endianness=endianness)\nindices, values, size = torch.nonzero(t), t[t != 0], len(t)\nindices = torch.stack((indices.flatten(), indices.flatten()))\nreturn torch.sparse_coo_tensor(indices, values, (size, size))\n</code></pre>"},{"location":"qadence/constructors/","title":"Constructors for common quantum circuits","text":""},{"location":"qadence/constructors/#qadence.constructors.feature_maps.chebyshev_feature_map","title":"<code>chebyshev_feature_map(n_qubits, support=None, param='phi', op=RX)</code>","text":"<p>Construct a Chebyshev feature map</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>number of qubits across which the FM is created</p> <p> TYPE: <code>int</code> </p> <code>support</code> <p>The qubit support</p> <p> TYPE: <code>Iterable[int]</code> DEFAULT: <code>None</code> </p> <code>param</code> <p>The base name for the feature <code>Parameter</code></p> <p> TYPE: <code>str</code> DEFAULT: <code>'phi'</code> </p> Source code in <code>qadence/constructors/feature_maps.py</code> <pre><code>def chebyshev_feature_map(\nn_qubits: int, support: tuple[int, ...] = None, param: str = \"phi\", op: Type[Rotation] = RX\n) -&gt; AbstractBlock:\n\"\"\"Construct a Chebyshev feature map\n    Args:\n        n_qubits: number of qubits across which the FM is created\n        support (Iterable[int]): The qubit support\n        param: The base name for the feature `Parameter`\n    \"\"\"\nfm = feature_map(n_qubits, support=support, param=param, op=op, fm_type=\"chebyshev\")\nreturn tag(fm, tag=\"ChebyshevFM\")\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.feature_maps.exp_fourier_feature_map","title":"<code>exp_fourier_feature_map(n_qubits, support=None, param='x', feature_range=None)</code>","text":"<p>Exponential fourier feature map.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>number of qubits in the feature</p> <p> TYPE: <code>int</code> </p> <code>support</code> <p>qubit support</p> <p> TYPE: <code>tuple[int, ...]</code> DEFAULT: <code>None</code> </p> <code>param</code> <p>name of feature <code>Parameter</code></p> <p> TYPE: <code>str</code> DEFAULT: <code>'x'</code> </p> <code>feature_range</code> <p>min and max value of the feature, as floats in a Tuple</p> <p> TYPE: <code>tuple[float, float]</code> DEFAULT: <code>None</code> </p> Source code in <code>qadence/constructors/feature_maps.py</code> <pre><code>def exp_fourier_feature_map(\nn_qubits: int,\nsupport: tuple[int, ...] = None,\nparam: str = \"x\",\nfeature_range: tuple[float, float] = None,\n) -&gt; AbstractBlock:\n\"\"\"\n    Exponential fourier feature map.\n    Args:\n        n_qubits: number of qubits in the feature\n        support: qubit support\n        param: name of feature `Parameter`\n        feature_range: min and max value of the feature, as floats in a Tuple\n    \"\"\"\nif feature_range is None:\nfeature_range = (0.0, 2.0**n_qubits)\nif support is None:\nsupport = tuple(range(n_qubits))\nxmax = max(feature_range)\nxmin = min(feature_range)\nx = Parameter(param, trainable=False)\n# The feature map works on the range of 0 to 2**n\nx_rescaled = 2 * np.pi * (x - xmin) / (xmax - xmin)\nhlayer = kron(H(qubit) for qubit in support)\nrlayer = kron(RZ(support[i], x_rescaled * (2**i)) for i in range(n_qubits))\nreturn tag(chain(hlayer, rlayer), f\"ExpFourierFM({param})\")\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.feature_maps.feature_map","title":"<code>feature_map(n_qubits, support=None, param='phi', op=RX, fm_type='fourier')</code>","text":"<p>Construct a feature map of a given type.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>Number of qubits the feature map covers. Results in <code>support=range(n_qubits)</code>.</p> <p> TYPE: <code>int</code> </p> <code>support</code> <p>Overrides <code>n_qubits</code>. Puts one rotation gate on every qubit in <code>support</code>.</p> <p> TYPE: <code>tuple[int, ...]</code> DEFAULT: <code>None</code> </p> <code>param</code> <p>Parameter of the feature map.</p> <p> TYPE: <code>str</code> DEFAULT: <code>'phi'</code> </p> <code>op</code> <p>Rotation operation of the feature map.</p> <p> TYPE: <code>Type[Rotation]</code> DEFAULT: <code>RX</code> </p> <code>fm_type</code> <p>Determines the additional expression the final feature parameter (the addtional term in front of <code>param</code>). <code>\"fourier\": param</code> (nothing is done to <code>param</code>) <code>\"chebyshev\": 2*acos(param)</code>, <code>\"tower\": (i+1)*2*acos(param)</code> (where <code>i</code> is the qubit index).</p> <p> TYPE: <code>str</code> DEFAULT: <code>'fourier'</code> </p> <p>Example: <pre><code>from qadence import feature_map\nfm = feature_map(3, fm_type=\"fourier\")\nprint(f\"{fm = }\")\nfm = feature_map(3, fm_type=\"chebyshev\")\nprint(f\"{fm = }\")\nfm = feature_map(3, fm_type=\"tower\")\nprint(f\"{fm = }\")\n</code></pre> <pre><code>fm = KronBlock(0,1,2) [tag: FM]\n\u251c\u2500\u2500 RX(0) [params: ['phi']]\n\u251c\u2500\u2500 RX(1) [params: ['phi']]\n\u2514\u2500\u2500 RX(2) [params: ['phi']]\nfm = KronBlock(0,1,2) [tag: FM]\n\u251c\u2500\u2500 RX(0) [params: ['2*acos(phi)']]\n\u251c\u2500\u2500 RX(1) [params: ['2*acos(phi)']]\n\u2514\u2500\u2500 RX(2) [params: ['2*acos(phi)']]\nfm = KronBlock(0,1,2) [tag: FM]\n\u251c\u2500\u2500 RX(0) [params: ['2*acos(phi)']]\n\u251c\u2500\u2500 RX(1) [params: ['4*acos(phi)']]\n\u2514\u2500\u2500 RX(2) [params: ['6*acos(phi)']]\n</code></pre> </p> Source code in <code>qadence/constructors/feature_maps.py</code> <pre><code>def feature_map(\nn_qubits: int,\nsupport: tuple[int, ...] = None,\nparam: str = \"phi\",\nop: Type[Rotation] = RX,\nfm_type: str = \"fourier\",\n) -&gt; KronBlock:\n\"\"\"Construct a feature map of a given type.\n    Arguments:\n        n_qubits: Number of qubits the feature map covers. Results in `support=range(n_qubits)`.\n        support: Overrides `n_qubits`. Puts one rotation gate on every qubit in `support`.\n        param: Parameter of the feature map.\n        op: Rotation operation of the feature map.\n        fm_type: Determines the additional expression the final feature parameter (the addtional\n            term in front of `param`). `\"fourier\": param` (nothing is done to `param`)\n            `\"chebyshev\": 2*acos(param)`, `\"tower\": (i+1)*2*acos(param)` (where `i` is the qubit\n            index).\n    Example:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import feature_map\n    fm = feature_map(3, fm_type=\"fourier\")\n    print(f\"{fm = }\")\n    fm = feature_map(3, fm_type=\"chebyshev\")\n    print(f\"{fm = }\")\n    fm = feature_map(3, fm_type=\"tower\")\n    print(f\"{fm = }\")\n    ```\n    \"\"\"\nfparam = FeatureParameter(param)\nif support is None:\nsupport = tuple(range(n_qubits))\nassert len(support) &lt;= n_qubits, \"Wrong qubit support supplied\"\nif fm_type == \"fourier\":\nfm = kron(*[op(qubit, fparam) for qubit in support])\nelif fm_type == \"chebyshev\":\nfm = kron(*[op(qubit, 2 * sympy.acos(fparam)) for qubit in support])\nelif fm_type == \"tower\":\nfm = kron(*[op(qubit, (i + 1) * 2 * sympy.acos(fparam)) for i, qubit in enumerate(support)])\nelse:\nraise NotImplementedError(f\"Feature map {fm_type} not implemented\")\nfm.tag = \"FM\"\nreturn fm\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.feature_maps.fourier_feature_map","title":"<code>fourier_feature_map(n_qubits, support=None, param='phi', op=RX)</code>","text":"<p>Construct a Fourier feature map</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>number of qubits across which the FM is created</p> <p> TYPE: <code>int</code> </p> <code>param</code> <p>The base name for the feature <code>Parameter</code></p> <p> TYPE: <code>str</code> DEFAULT: <code>'phi'</code> </p> Source code in <code>qadence/constructors/feature_maps.py</code> <pre><code>def fourier_feature_map(\nn_qubits: int, support: tuple[int, ...] = None, param: str = \"phi\", op: Type[Rotation] = RX\n) -&gt; AbstractBlock:\n\"\"\"Construct a Fourier feature map\n    Args:\n        n_qubits: number of qubits across which the FM is created\n        param: The base name for the feature `Parameter`\n    \"\"\"\nfm = feature_map(n_qubits, support=support, param=param, op=op, fm_type=\"fourier\")\nreturn tag(fm, tag=\"FourierFM\")\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.feature_maps.tower_feature_map","title":"<code>tower_feature_map(n_qubits, support=None, param='phi', op=RX)</code>","text":"<p>Construct a Chebyshev tower feature map</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>number of qubits across which the FM is created</p> <p> TYPE: <code>int</code> </p> <code>param</code> <p>The base name for the feature <code>Parameter</code></p> <p> TYPE: <code>str</code> DEFAULT: <code>'phi'</code> </p> Source code in <code>qadence/constructors/feature_maps.py</code> <pre><code>def tower_feature_map(\nn_qubits: int, support: tuple[int, ...] = None, param: str = \"phi\", op: Type[Rotation] = RX\n) -&gt; AbstractBlock:\n\"\"\"Construct a Chebyshev tower feature map\n    Args:\n        n_qubits: number of qubits across which the FM is created\n        param: The base name for the feature `Parameter`\n    \"\"\"\nfm = feature_map(n_qubits, support=support, param=param, op=op, fm_type=\"tower\")\nreturn tag(fm, tag=\"TowerFM\")\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.ansatze.build_qnn","title":"<code>build_qnn(n_qubits, n_features, depth=None, ansatz=None, fm_pauli=RY, spectrum='simple', basis='fourier', fm_strategy='parallel')</code>","text":"<p>Helper function to build a qadence QNN quantum circuit</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> <code>n_features</code> <p>The number of input dimensions.</p> <p> TYPE: <code>int</code> </p> <code>depth</code> <p>The depth of the ansatz.</p> <p> TYPE: <code>int</code> DEFAULT: <code>None</code> </p> <code>ansatz</code> <p>An optional argument to pass a custom qadence ansatz.</p> <p> TYPE: <code>Optional[AbstractBlock]</code> DEFAULT: <code>None</code> </p> <code>fm_pauli</code> <p>The type of Pauli gate for the feature map. Must be one of 'RX', 'RY', or 'RZ'.</p> <p> TYPE: <code>str</code> DEFAULT: <code>RY</code> </p> <code>spectrum</code> <p>The desired spectrum of the feature map generator. The options simple, tower and exponential produce a spectrum with linear, quadratic and exponential eigenvalues with respect to the number of qubits.</p> <p> TYPE: <code>str</code> DEFAULT: <code>'simple'</code> </p> <code>basis</code> <p>The encoding function. The options fourier and chebyshev correspond to \u03a6(x)=x and arcos(x) respectively.</p> <p> TYPE: <code>str</code> DEFAULT: <code>'fourier'</code> </p> <code>fm_strategy</code> <p>The feature map encoding strategy. If \"parallel\", the features are encoded in one block of rotation gates, with each feature given an equal number of qubits. If \"serial\", the features are encoded sequentially, with a HEA block between.</p> <p> TYPE: <code>str</code> DEFAULT: <code>'parallel'</code> </p> RETURNS DESCRIPTION <code>list[AbstractBlock]</code> <p>A list of Abstract blocks to be used for constructing a quantum circuit</p> Source code in <code>qadence/constructors/ansatze.py</code> <pre><code>def build_qnn(\nn_qubits: int,\nn_features: int,\ndepth: int = None,\nansatz: Optional[AbstractBlock] = None,\nfm_pauli: Type[RY] = RY,\nspectrum: str = \"simple\",\nbasis: str = \"fourier\",\nfm_strategy: str = \"parallel\",\n) -&gt; list[AbstractBlock]:\n\"\"\"Helper function to build a qadence QNN quantum circuit\n    Args:\n        n_qubits (int): The number of qubits.\n        n_features (int): The number of input dimensions.\n        depth (int): The depth of the ansatz.\n        ansatz (Optional[AbstractBlock]):  An optional argument to pass a custom qadence ansatz.\n        fm_pauli (str): The type of Pauli gate for the feature map. Must be one of 'RX',\n            'RY', or 'RZ'.\n        spectrum (str): The desired spectrum of the feature map generator. The options simple,\n            tower and exponential produce a spectrum with linear, quadratic and exponential\n            eigenvalues with respect to the number of qubits.\n        basis (str): The encoding function. The options fourier and chebyshev correspond to \u03a6(x)=x\n            and arcos(x) respectively.\n        fm_strategy (str): The feature map encoding strategy. If \"parallel\", the features\n            are encoded in one block of rotation gates, with each feature given\n            an equal number of qubits. If \"serial\", the features are encoded\n            sequentially, with a HEA block between.\n    Returns:\n        A list of Abstract blocks to be used for constructing a quantum circuit\n    \"\"\"\ndepth = n_qubits if depth is None else depth\nidx_fms = build_idx_fms(basis, fm_pauli, fm_strategy, n_features, n_qubits, spectrum)\nif fm_strategy == \"parallel\":\n_fm = kron(*idx_fms)\nfm = tag(_fm, tag=\"FM\")\nelif fm_strategy == \"serial\":\nfm_components: list[AbstractBlock] = []\nfor j, fm_idx in enumerate(idx_fms[:-1]):\nfm_idx = tag(fm_idx, tag=f\"FM{j}\")  # type: ignore[assignment]\nfm_component = (fm_idx, hea(n_qubits, 1, f\"theta_{j}\"))\nfm_components.extend(fm_component)\nfm_components.append(tag(idx_fms[-1], tag=f\"FM{len(idx_fms) - 1}\"))\nfm = chain(*fm_components)  # type: ignore[assignment]\nansatz = hea(n_qubits, depth=depth) if ansatz is None else ansatz\nreturn [fm, ansatz]\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.ansatze.hea","title":"<code>hea(n_qubits, depth=1, param_prefix='theta', support=None, strategy=Strategy.DIGITAL, **strategy_args)</code>","text":"<p>Factory function for the Hardware Efficient Ansatz (HEA).</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>number of qubits in the block</p> <p> TYPE: <code>int</code> </p> <code>depth</code> <p>number of layers of the HEA</p> <p> TYPE: <code>int</code> DEFAULT: <code>1</code> </p> <code>param_prefix</code> <p>the base name of the variational parameters</p> <p> TYPE: <code>str</code> DEFAULT: <code>'theta'</code> </p> <code>support</code> <p>qubit indexes where the HEA is applied</p> <p> TYPE: <code>tuple[int, ...]</code> DEFAULT: <code>None</code> </p> <code>strategy</code> <p>Strategy.Digital or Strategy.DigitalAnalog</p> <p> TYPE: <code>Strategy</code> DEFAULT: <code>DIGITAL</code> </p> <code>**strategy_args</code> <p>see below</p> <p> TYPE: <code>Any</code> DEFAULT: <code>{}</code> </p> PARAMETER DESCRIPTION <code>operations</code> <p>list of operations to cycle through in the digital single-qubit rotations of each layer. Valid for Digital and DigitalAnalog HEA.</p> <p> TYPE: <code>list</code> </p> <code>periodic</code> <p>if the qubits should be linked periodically. periodic=False is not supported in emu-c. Valid for only for Digital HEA.</p> <p> TYPE: <code>bool</code> </p> <code>entangler</code> <ul> <li>Digital: 2-qubit entangling operation. Supports CNOT, CZ, CRX, CRY, CRZ, CPHASE. Controlled rotations will have variational parameters on the rotation angles.</li> <li>DigitaAnalog | Analog: Hamiltonian generator for the analog entangling layer. Defaults to global ZZ Hamiltonian. Time parameter is considered variational.</li> </ul> <p> TYPE: <code>AbstractBlock</code> </p> <p>Examples: <pre><code>from qadence import RZ, RX\nfrom qadence import hea\n# create the circuit\nn_qubits, depth = 2, 4\nansatz = hea(\nn_qubits=n_qubits,\ndepth=depth,\nstrategy=\"sDAQC\",\noperations=[RZ,RX,RZ]\n)\n</code></pre> <pre><code>\n</code></pre> </p> Source code in <code>qadence/constructors/ansatze.py</code> <pre><code>def hea(\nn_qubits: int,\ndepth: int = 1,\nparam_prefix: str = \"theta\",\nsupport: tuple[int, ...] = None,\nstrategy: Strategy = Strategy.DIGITAL,\n**strategy_args: Any,\n) -&gt; AbstractBlock:\n\"\"\"\n    Factory function for the Hardware Efficient Ansatz (HEA).\n    Args:\n        n_qubits: number of qubits in the block\n        depth: number of layers of the HEA\n        param_prefix: the base name of the variational parameters\n        support: qubit indexes where the HEA is applied\n        strategy: Strategy.Digital or Strategy.DigitalAnalog\n        **strategy_args: see below\n    Keyword Arguments:\n        operations (list): list of operations to cycle through in the\n            digital single-qubit rotations of each layer. Valid for\n            Digital and DigitalAnalog HEA.\n        periodic (bool): if the qubits should be linked periodically.\n            periodic=False is not supported in emu-c. Valid for only\n            for Digital HEA.\n        entangler (AbstractBlock):\n            - Digital: 2-qubit entangling operation. Supports CNOT, CZ,\n            CRX, CRY, CRZ, CPHASE. Controlled rotations will have variational\n            parameters on the rotation angles.\n            - DigitaAnalog | Analog: Hamiltonian generator for the\n            analog entangling layer. Defaults to global ZZ Hamiltonian.\n            Time parameter is considered variational.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import RZ, RX\n    from qadence import hea\n    # create the circuit\n    n_qubits, depth = 2, 4\n    ansatz = hea(\n        n_qubits=n_qubits,\n        depth=depth,\n        strategy=\"sDAQC\",\n        operations=[RZ,RX,RZ]\n    )\n    ```\n    \"\"\"\nif support is None:\nsupport = tuple(range(n_qubits))\nhea_func_dict = {\nStrategy.DIGITAL: hea_digital,\nStrategy.SDAQC: hea_sDAQC,\nStrategy.BDAQC: hea_bDAQC,\nStrategy.ANALOG: hea_analog,\n}\ntry:\nhea_func = hea_func_dict[strategy]\nexcept KeyError:\nraise KeyError(f\"Strategy {strategy} not recognized.\")\nhea_block: AbstractBlock = hea_func(\nn_qubits=n_qubits,\ndepth=depth,\nparam_prefix=param_prefix,\nsupport=support,\n**strategy_args,\n)  # type: ignore\nreturn hea_block\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.ansatze.hea_digital","title":"<code>hea_digital(n_qubits, depth=1, param_prefix='theta', periodic=False, operations=[RX, RY, RX], support=None, entangler=CNOT)</code>","text":"<p>Construct the Digital Hardware Efficient Ansatz (HEA).</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>number of qubits in the block.</p> <p> TYPE: <code>int</code> </p> <code>depth</code> <p>number of layers of the HEA.</p> <p> TYPE: <code>int</code> DEFAULT: <code>1</code> </p> <code>param_prefix</code> <p>the base name of the variational parameters</p> <p> TYPE: <code>str</code> DEFAULT: <code>'theta'</code> </p> <code>periodic</code> <p>if the qubits should be linked periodically. periodic=False is not supported in emu-c.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>operations</code> <p>list of operations to cycle through in the digital single-qubit rotations of each layer.</p> <p> TYPE: <code>list</code> DEFAULT: <code>[RX, RY, RX]</code> </p> <code>support</code> <p>qubit indexes where the HEA is applied.</p> <p> TYPE: <code>tuple</code> DEFAULT: <code>None</code> </p> <code>entangler</code> <p>2-qubit entangling operation. Supports CNOT, CZ, CRX, CRY, CRZ. Controlld rotations will have variational parameters on the rotation angles.</p> <p> TYPE: <code>AbstractBlock</code> DEFAULT: <code>CNOT</code> </p> Source code in <code>qadence/constructors/ansatze.py</code> <pre><code>def hea_digital(\nn_qubits: int,\ndepth: int = 1,\nparam_prefix: str = \"theta\",\nperiodic: bool = False,\noperations: list[type[AbstractBlock]] = [RX, RY, RX],\nsupport: tuple[int, ...] = None,\nentangler: Type[DigitalEntanglers] = CNOT,\n) -&gt; AbstractBlock:\n\"\"\"\n    Construct the Digital Hardware Efficient Ansatz (HEA).\n    Args:\n        n_qubits (int): number of qubits in the block.\n        depth (int): number of layers of the HEA.\n        param_prefix (str): the base name of the variational parameters\n        periodic (bool): if the qubits should be linked periodically.\n            periodic=False is not supported in emu-c.\n        operations (list): list of operations to cycle through in the\n            digital single-qubit rotations of each layer.\n        support (tuple): qubit indexes where the HEA is applied.\n        entangler (AbstractBlock): 2-qubit entangling operation.\n            Supports CNOT, CZ, CRX, CRY, CRZ. Controlld rotations\n            will have variational parameters on the rotation angles.\n    \"\"\"\ntry:\nif entangler not in [CNOT, CZ, CRX, CRY, CRZ, CPHASE]:\nraise ValueError(\n\"Please provide a valid two-qubit entangler operation for digital HEA.\"\n)\nexcept TypeError:\nraise ValueError(\"Please provide a valid two-qubit entangler operation for digital HEA.\")\nrot_list = _rotations_digital(\nn_qubits=n_qubits,\ndepth=depth,\nparam_prefix=param_prefix,\nsupport=support,\noperations=operations,\n)\nent_list = _entanglers_digital(\nn_qubits=n_qubits,\ndepth=depth,\nparam_prefix=param_prefix,\nsupport=support,\nperiodic=periodic,\nentangler=entangler,\n)\nlayers = []\nfor d in range(depth):\nlayers.append(rot_list[d])\nlayers.append(ent_list[d])\nreturn tag(chain(*layers), \"HEA\")\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.ansatze.hea_sDAQC","title":"<code>hea_sDAQC(n_qubits, depth=1, param_prefix='theta', operations=[RX, RY, RX], support=None, entangler=None)</code>","text":"<p>Construct the Hardware Efficient Ansatz (HEA) with analog entangling layers using step-wise digital-analog computation.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>number of qubits in the block.</p> <p> TYPE: <code>int</code> </p> <code>depth</code> <p>number of layers of the HEA.</p> <p> TYPE: <code>int</code> DEFAULT: <code>1</code> </p> <code>param_prefix</code> <p>the base name of the variational parameters</p> <p> TYPE: <code>str</code> DEFAULT: <code>'theta'</code> </p> <code>operations</code> <p>list of operations to cycle through in the digital single-qubit rotations of each layer.</p> <p> TYPE: <code>list</code> DEFAULT: <code>[RX, RY, RX]</code> </p> <code>support</code> <p>qubit indexes where the HEA is applied.</p> <p> TYPE: <code>tuple</code> DEFAULT: <code>None</code> </p> <code>entangler</code> <p>Hamiltonian generator for the analog entangling layer. Defaults to global ZZ Hamiltonian. Time parameter is considered variational.</p> <p> TYPE: <code>AbstractBlock</code> DEFAULT: <code>None</code> </p> Source code in <code>qadence/constructors/ansatze.py</code> <pre><code>def hea_sDAQC(\nn_qubits: int,\ndepth: int = 1,\nparam_prefix: str = \"theta\",\noperations: list[type[AbstractBlock]] = [RX, RY, RX],\nsupport: tuple[int, ...] = None,\nentangler: AbstractBlock | None = None,\n) -&gt; AbstractBlock:\n\"\"\"\n    Construct the Hardware Efficient Ansatz (HEA) with analog entangling layers\n    using step-wise digital-analog computation.\n    Args:\n        n_qubits (int): number of qubits in the block.\n        depth (int): number of layers of the HEA.\n        param_prefix (str): the base name of the variational parameters\n        operations (list): list of operations to cycle through in the\n            digital single-qubit rotations of each layer.\n        support (tuple): qubit indexes where the HEA is applied.\n        entangler (AbstractBlock): Hamiltonian generator for the\n            analog entangling layer. Defaults to global ZZ Hamiltonian.\n            Time parameter is considered variational.\n    \"\"\"\n# TODO: Add qubit support\nif entangler is None:\nentangler = hamiltonian_factory(n_qubits, interaction=Interaction.NN)\ntry:\nif not block_is_qubit_hamiltonian(entangler):\nraise ValueError(\n\"Please provide a valid Pauli Hamiltonian generator for digital-analog HEA.\"\n)\nexcept NotImplementedError:\nraise ValueError(\n\"Please provide a valid Pauli Hamiltonian generator for digital-analog HEA.\"\n)\nrot_list = _rotations_digital(\nn_qubits=n_qubits,\ndepth=depth,\nparam_prefix=param_prefix,\nsupport=support,\noperations=operations,\n)\nent_list = _entanglers_analog(\ndepth=depth,\nparam_prefix=param_prefix,\nentangler=entangler,\n)\nlayers = []\nfor d in range(depth):\nlayers.append(rot_list[d])\nlayers.append(ent_list[d])\nreturn tag(chain(*layers), \"HEA-sDA\")\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.hamiltonians.hamiltonian_factory","title":"<code>hamiltonian_factory(register, interaction=None, detuning=None, interaction_strength=None, detuning_strength=None, random_strength=False, force_update=False)</code>","text":"<p>General Hamiltonian creation function. Can be used to create Hamiltonians with 2-qubit interactions and single-qubit detunings, both with arbitrary strength or parameterized.</p> PARAMETER  DESCRIPTION <code>register</code> <p>register of qubits with a specific graph topology, or number of qubits. When passing a number of qubits a register with all-to-all connectivity is created.</p> <p> TYPE: <code>Register | int</code> </p> <code>interaction</code> <p>Interaction.ZZ, Interaction.NN, Interaction.XY, or Interacton.XYZ.</p> <p> TYPE: <code>Interaction | None</code> DEFAULT: <code>None</code> </p> <code>detuning</code> <p>single-qubit operator N, X, Y, or Z.</p> <p> TYPE: <code>TDetuning | None</code> DEFAULT: <code>None</code> </p> <code>interaction_strength</code> <p>list of values to be used as the interaction strength for each pair of qubits. Should be ordered following the order of <code>Register(n_qubits).edges</code>. Alternatively, some string \"x\" can be passed, which will create a parameterized interactions for each pair of qubits, each labelled as <code>\"x_ij\"</code>.</p> <p> TYPE: <code>TArray | str | None</code> DEFAULT: <code>None</code> </p> <code>detuning_strength</code> <p>list of values to be used as the detuning strength for each qubit. Alternatively, some string \"x\" can be passed, which will create a parameterized detuning for each qubit, each labelled as <code>\"x_i\"</code>.</p> <p> TYPE: <code>TArray | str | None</code> DEFAULT: <code>None</code> </p> <code>random_strength</code> <p>set random interaction and detuning strengths between -1 and 1.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>force_update</code> <p>force override register detuning and interaction strengths.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <p>Examples:</p> <pre><code>from qadence import hamiltonian_factory, Interaction, Register, Z\nn_qubits = 3\n# Constant total magnetization observable:\nobservable = hamiltonian_factory(n_qubits, detuning = Z)\n# Parameterized total magnetization observable:\nobservable = hamiltonian_factory(n_qubits, detuning = Z, detuning_strength = \"z\")\n# Random all-to-all XY Hamiltonian generator:\ngenerator = hamiltonian_factory(\nn_qubits,\ninteraction = Interaction.XY,\nrandom_strength = True,\n)\n# Parameterized NN Hamiltonian generator with a square grid interaction topology:\nregister = Register.square(qubits_side = n_qubits)\ngenerator = hamiltonian_factory(\nregister,\ninteraction = Interaction.NN,\ninteraction_strength = \"theta\"\n)\n</code></pre> <pre><code>\n</code></pre> Source code in <code>qadence/constructors/hamiltonians.py</code> <pre><code>def hamiltonian_factory(\nregister: Register | int,\ninteraction: Interaction | None = None,\ndetuning: TDetuning | None = None,\ninteraction_strength: TArray | str | None = None,\ndetuning_strength: TArray | str | None = None,\nrandom_strength: bool = False,\nforce_update: bool = False,\n) -&gt; AbstractBlock:\n\"\"\"\n    General Hamiltonian creation function. Can be used to create Hamiltonians with 2-qubit\n    interactions and single-qubit detunings, both with arbitrary strength or parameterized.\n    Arguments:\n        register: register of qubits with a specific graph topology, or number of qubits.\n            When passing a number of qubits a register with all-to-all connectivity\n            is created.\n        interaction: Interaction.ZZ, Interaction.NN, Interaction.XY, or Interacton.XYZ.\n        detuning: single-qubit operator N, X, Y, or Z.\n        interaction_strength: list of values to be used as the interaction strength for each\n            pair of qubits. Should be ordered following the order of `Register(n_qubits).edges`.\n            Alternatively, some string \"x\" can be passed, which will create a parameterized\n            interactions for each pair of qubits, each labelled as `\"x_ij\"`.\n        detuning_strength: list of values to be used as the detuning strength for each qubit.\n            Alternatively, some string \"x\" can be passed, which will create a parameterized\n            detuning for each qubit, each labelled as `\"x_i\"`.\n        random_strength: set random interaction and detuning strengths between -1 and 1.\n        force_update: force override register detuning and interaction strengths.\n    Examples:\n        ```python exec=\"on\" source=\"material-block\" result=\"json\"\n        from qadence import hamiltonian_factory, Interaction, Register, Z\n        n_qubits = 3\n        # Constant total magnetization observable:\n        observable = hamiltonian_factory(n_qubits, detuning = Z)\n        # Parameterized total magnetization observable:\n        observable = hamiltonian_factory(n_qubits, detuning = Z, detuning_strength = \"z\")\n        # Random all-to-all XY Hamiltonian generator:\n        generator = hamiltonian_factory(\n            n_qubits,\n            interaction = Interaction.XY,\n            random_strength = True,\n            )\n        # Parameterized NN Hamiltonian generator with a square grid interaction topology:\n        register = Register.square(qubits_side = n_qubits)\n        generator = hamiltonian_factory(\n            register,\n            interaction = Interaction.NN,\n            interaction_strength = \"theta\"\n            )\n        ```\n    \"\"\"\nif interaction is None and detuning is None:\nraise ValueError(\"Please provide an interaction and/or detuning for the Hamiltonian.\")\n# If number of qubits is given, creates all-to-all register\nregister = Register(register) if isinstance(register, int) else register\n# Get interaction function\ntry:\nint_fn = INTERACTION_DICT[interaction]  # type: ignore [index]\nexcept (KeyError, ValueError) as error:\nif interaction is None:\npass\nelse:\nraise KeyError(f\"Interaction {interaction} not supported.\")\n# Check single-qubit detuning\nif (detuning is not None) and (detuning not in DETUNINGS):\nraise TypeError(f\"Detuning of type {type(detuning)} not supported.\")\n# Pre-process detuning and interaction strengths and update register\nhas_detuning_strength, detuning_strength = _preprocess_strengths(\nregister, detuning_strength, \"nodes\", force_update, random_strength\n)\nhas_interaction_strength, interaction_strength = _preprocess_strengths(\nregister, interaction_strength, \"edges\", force_update, random_strength\n)\nif (not has_detuning_strength) or force_update:\nregister = _update_detuning_strength(register, detuning_strength)\nif (not has_interaction_strength) or force_update:\nregister = _update_interaction_strength(register, interaction_strength)\n# Create single-qubit detunings:\nsingle_qubit_terms: List[AbstractBlock] = []\nif detuning is not None:\nfor node in register.nodes:\nblock_sq = detuning(node)  # type: ignore [operator]\nstrength_sq = register.nodes[node][\"strength\"]\nsingle_qubit_terms.append(strength_sq * block_sq)\n# Create two-qubit interactions:\ntwo_qubit_terms: List[AbstractBlock] = []\nif interaction is not None:\nfor edge in register.edges:\nblock_tq = int_fn(*edge)  # type: ignore [operator]\nstrength_tq = register.edges[edge][\"strength\"]\ntwo_qubit_terms.append(strength_tq * block_tq)\nreturn add(*single_qubit_terms, *two_qubit_terms)\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.hamiltonians.interaction_nn","title":"<code>interaction_nn(i, j)</code>","text":"<p>Ising NN interaction.</p> Source code in <code>qadence/constructors/hamiltonians.py</code> <pre><code>def interaction_nn(i: int, j: int) -&gt; AbstractBlock:\n\"\"\"Ising NN interaction.\"\"\"\nreturn N(i) @ N(j)\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.hamiltonians.interaction_xy","title":"<code>interaction_xy(i, j)</code>","text":"<p>XY interaction.</p> Source code in <code>qadence/constructors/hamiltonians.py</code> <pre><code>def interaction_xy(i: int, j: int) -&gt; AbstractBlock:\n\"\"\"XY interaction.\"\"\"\nreturn X(i) @ X(j) + Y(i) @ Y(j)\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.hamiltonians.interaction_xyz","title":"<code>interaction_xyz(i, j)</code>","text":"<p>Heisenberg XYZ interaction.</p> Source code in <code>qadence/constructors/hamiltonians.py</code> <pre><code>def interaction_xyz(i: int, j: int) -&gt; AbstractBlock:\n\"\"\"Heisenberg XYZ interaction.\"\"\"\nreturn X(i) @ X(j) + Y(i) @ Y(j) + Z(i) @ Z(j)\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.hamiltonians.interaction_zz","title":"<code>interaction_zz(i, j)</code>","text":"<p>Ising ZZ interaction.</p> Source code in <code>qadence/constructors/hamiltonians.py</code> <pre><code>def interaction_zz(i: int, j: int) -&gt; AbstractBlock:\n\"\"\"Ising ZZ interaction.\"\"\"\nreturn Z(i) @ Z(j)\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.qft.qft","title":"<code>qft(n_qubits, support=None, inverse=False, reverse_in=False, swaps_out=False, strategy=Strategy.DIGITAL, gen_build=None)</code>","text":"<p>The Quantum Fourier Transform</p> <p>Depending on the application, user should be careful with qubit ordering in the input and output. This can be controlled with reverse_in and swaps_out arguments.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>number of qubits in the QFT</p> <p> TYPE: <code>int</code> </p> <code>support</code> <p>qubit support to use</p> <p> TYPE: <code>tuple[int, ...]</code> DEFAULT: <code>None</code> </p> <code>inverse</code> <p>True performs the inverse QFT</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>reverse_in</code> <p>Reverses the input qubits to account for endianness</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>swaps_out</code> <p>Performs swaps on the output qubits to match the \"textbook\" QFT.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>strategy</code> <p>Strategy.Digital or Strategy.sDAQC</p> <p> TYPE: <code>Strategy</code> DEFAULT: <code>DIGITAL</code> </p> <code>gen_build</code> <p>building block Ising Hamiltonian for the DAQC transform. Defaults to constant all-to-all Ising.</p> <p> TYPE: <code>AbstractBlock | None</code> DEFAULT: <code>None</code> </p> <p>Examples:</p> <pre><code>from qadence import qft\nn_qubits = 3\nqft_circuit = qft(n_qubits, strategy = \"sDAQC\")\n</code></pre> <pre><code>\n</code></pre> Source code in <code>qadence/constructors/qft.py</code> <pre><code>def qft(\nn_qubits: int,\nsupport: tuple[int, ...] = None,\ninverse: bool = False,\nreverse_in: bool = False,\nswaps_out: bool = False,\nstrategy: Strategy = Strategy.DIGITAL,\ngen_build: AbstractBlock | None = None,\n) -&gt; AbstractBlock:\n\"\"\"\n    The Quantum Fourier Transform\n    Depending on the application, user should be careful with qubit ordering\n    in the input and output. This can be controlled with reverse_in and swaps_out\n    arguments.\n    Args:\n        n_qubits: number of qubits in the QFT\n        support: qubit support to use\n        inverse: True performs the inverse QFT\n        reverse_in: Reverses the input qubits to account for endianness\n        swaps_out: Performs swaps on the output qubits to match the \"textbook\" QFT.\n        strategy: Strategy.Digital or Strategy.sDAQC\n        gen_build: building block Ising Hamiltonian for the DAQC transform.\n            Defaults to constant all-to-all Ising.\n    Examples:\n        ```python exec=\"on\" source=\"material-block\" result=\"json\"\n        from qadence import qft\n        n_qubits = 3\n        qft_circuit = qft(n_qubits, strategy = \"sDAQC\")\n        ```\n    \"\"\"\nif support is None:\nsupport = tuple(range(n_qubits))\nassert len(support) &lt;= n_qubits, \"Wrong qubit support supplied\"\nif reverse_in:\nsupport = support[::-1]\nqft_layer_dict = {\nStrategy.DIGITAL: _qft_layer_digital,\nStrategy.SDAQC: _qft_layer_sDAQC,\nStrategy.BDAQC: _qft_layer_bDAQC,\nStrategy.ANALOG: _qft_layer_analog,\n}\ntry:\nlayer_func = qft_layer_dict[strategy]\nexcept KeyError:\nraise KeyError(f\"Strategy {strategy} not recognized.\")\nqft_layers = reversed(range(n_qubits)) if inverse else range(n_qubits)\nqft_circ = chain(\nlayer_func(\nn_qubits=n_qubits, support=support, layer=layer, inverse=inverse, gen_build=gen_build\n)  # type: ignore\nfor layer in qft_layers\n)\nif swaps_out:\nswap_ops = [SWAP(support[i], support[n_qubits - i - 1]) for i in range(n_qubits // 2)]\nqft_circ = chain(*swap_ops, qft_circ) if inverse else chain(qft_circ, *swap_ops)\nreturn tag(qft_circ, tag=\"iQFT\") if inverse else tag(qft_circ, tag=\"QFT\")\n</code></pre>"},{"location":"qadence/constructors/#the-daqc-transform","title":"The DAQC Transform","text":""},{"location":"qadence/constructors/#qadence.constructors.daqc.daqc.daqc_transform","title":"<code>daqc_transform(n_qubits, gen_target, t_f, gen_build=None, zero_tol=1e-08, strategy=Strategy.SDAQC, ignore_global_phases=False)</code>","text":"<p>Implements the DAQC transform for representing an arbitrary 2-body Hamiltonian with another fixed 2-body Hamiltonian.</p> <p>Reference for universality of 2-body Hamiltonians:</p> <p>-- https://arxiv.org/abs/quant-ph/0106064</p> <p>Based on the transformation for Ising (ZZ) interactions, as described in the paper</p> <p>-- https://arxiv.org/abs/1812.03637</p> <p>The transform translates a target weighted generator of the type:</p> <pre><code>`gen_target = add(g_jk * kron(op(j), op(k)) for j &lt; k)`\n</code></pre> <p>To a circuit using analog evolutions with a fixed building block generator:</p> <pre><code>`gen_build = add(f_jk * kron(op(j), op(k)) for j &lt; k)`\n</code></pre> <p>where <code>op = Z</code> or <code>op = N</code>.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>total number of qubits to use.</p> <p> TYPE: <code>int</code> </p> <code>gen_target</code> <p>target generator built with the structure above. The type of the generator will be automatically evaluated when parsing.</p> <p> TYPE: <code>AbstractBlock</code> </p> <code>t_f</code> <p>total time for the gen_target evolution.</p> <p> TYPE: <code>float</code> </p> <code>gen_build</code> <p>fixed generator to act as a building block. Defaults to constant NN: add(1.0 * kron(N(j), N(k)) for j &lt; k). The type of the generator will be automatically evaluated when parsing.</p> <p> TYPE: <code>AbstractBlock | None</code> DEFAULT: <code>None</code> </p> <code>zero_tol</code> <p>default \"zero\" for a missing interaction. Included for numerical reasons, see notes below.</p> <p> TYPE: <code>float</code> DEFAULT: <code>1e-08</code> </p> <code>strategy</code> <p>sDAQC or bDAQC, following definitions in the reference paper.</p> <p> TYPE: <code>Strategy</code> DEFAULT: <code>SDAQC</code> </p> <code>ignore_global_phases</code> <p>if <code>True</code> the transform does not correct the global phases coming from the mapping between ZZ and NN interactions.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <p>Notes:</p> <pre><code>The paper follows an index convention of running from 1 to N. A few functions\nhere also use that convention to be consistent with the paper. However, for qadence\nrelated things the indices are converted to [0, N-1].\n\nThe case for `n_qubits = 4` is an edge case where the sign matrix is not invertible.\nThere is a workaround for this described in the paper, but it is currently not implemented.\n\nThe current implementation may result in evolution times that are both positive or\nnegative. In practice, both can be represented by simply changing the signs of the\ninteractions. However, for a real implementation where the interactions should remain\nfixed, the paper discusses a workaround that is not currently implemented.\n\nThe transformation works by representing each interaction in the target hamiltonian by\na set of evolutions using the build hamiltonian. As a consequence, some care must be\ntaken when choosing the build hamiltonian. Some cases:\n\n- The target hamiltonian can have any interaction, as long as it is sufficiently\nrepresented in the build hamiltonian. E.g., if the interaction `g_01 * kron(Z(0), Z(1))`\nis in the target hamiltonian, the corresponding interaction `f_01 * kron(Z(0), Z(1))`\nneeds to be in the build hamiltonian. This is checked when the generators are parsed.\n\n- The build hamiltonian can have any interaction, irrespectively of it being needed\nfor the target hamiltonian. This is especially useful for designing local operations\nthrough the repeated evolution of a \"global\" hamiltonian.\n\n- The parameter `zero_tol` controls what it means for an interaction to be \"missing\".\nAny interaction strength smaller than `zero_tol` in the build hamiltonian will not be\nconsidered, and thus that interaction is missing.\n\n- The various ratios `g_jk / f_jk` will influence the time parameter for the various\nevolution slices, meaning that if there is a big discrepancy in the interaction strength\nfor a given qubit pair (j, k), the output circuit may require the usage of hamiltonian\nevolutions with very large times.\n\n- A warning will be issued for evolution times larger than `1/sqrt(zero_tol)`. Evolution\ntimes smaller than `zero_tol` will not be represented.\n</code></pre> <p>Examples:</p> <pre><code>from qadence import Z, N, daqc_transform\nn_qubits = 3\ngen_build = 0.5 * (N(0)@N(1)) + 0.7 * (N(1)@N(2)) + 0.2 * (N(0)@N(2))\ngen_target = 0.1 * (Z(1)@Z(2))\nt_f = 2.0\ntransformed_circuit = daqc_transform(\nn_qubits = n_qubits,\ngen_target = gen_target,\nt_f = t_f,\ngen_build = gen_build,\n)\n</code></pre> <pre><code>\n</code></pre> Source code in <code>qadence/constructors/daqc/daqc.py</code> <pre><code>def daqc_transform(\nn_qubits: int,\ngen_target: AbstractBlock,\nt_f: float,\ngen_build: AbstractBlock | None = None,\nzero_tol: float = 1e-08,\nstrategy: Strategy = Strategy.SDAQC,\nignore_global_phases: bool = False,\n) -&gt; AbstractBlock:\n\"\"\"\n    Implements the DAQC transform for representing an arbitrary 2-body Hamiltonian\n    with another fixed 2-body Hamiltonian.\n    Reference for universality of 2-body Hamiltonians:\n    -- https://arxiv.org/abs/quant-ph/0106064\n    Based on the transformation for Ising (ZZ) interactions, as described in the paper\n    -- https://arxiv.org/abs/1812.03637\n    The transform translates a target weighted generator of the type:\n        `gen_target = add(g_jk * kron(op(j), op(k)) for j &lt; k)`\n    To a circuit using analog evolutions with a fixed building block generator:\n        `gen_build = add(f_jk * kron(op(j), op(k)) for j &lt; k)`\n    where `op = Z` or `op = N`.\n    Args:\n        n_qubits: total number of qubits to use.\n        gen_target: target generator built with the structure above. The type\n            of the generator will be automatically evaluated when parsing.\n        t_f (float): total time for the gen_target evolution.\n        gen_build: fixed generator to act as a building block. Defaults to\n            constant NN: add(1.0 * kron(N(j), N(k)) for j &lt; k). The type\n            of the generator will be automatically evaluated when parsing.\n        zero_tol: default \"zero\" for a missing interaction. Included for\n            numerical reasons, see notes below.\n        strategy: sDAQC or bDAQC, following definitions in the reference paper.\n        ignore_global_phases: if `True` the transform does not correct the global\n            phases coming from the mapping between ZZ and NN interactions.\n    Notes:\n        The paper follows an index convention of running from 1 to N. A few functions\n        here also use that convention to be consistent with the paper. However, for qadence\n        related things the indices are converted to [0, N-1].\n        The case for `n_qubits = 4` is an edge case where the sign matrix is not invertible.\n        There is a workaround for this described in the paper, but it is currently not implemented.\n        The current implementation may result in evolution times that are both positive or\n        negative. In practice, both can be represented by simply changing the signs of the\n        interactions. However, for a real implementation where the interactions should remain\n        fixed, the paper discusses a workaround that is not currently implemented.\n        The transformation works by representing each interaction in the target hamiltonian by\n        a set of evolutions using the build hamiltonian. As a consequence, some care must be\n        taken when choosing the build hamiltonian. Some cases:\n        - The target hamiltonian can have any interaction, as long as it is sufficiently\n        represented in the build hamiltonian. E.g., if the interaction `g_01 * kron(Z(0), Z(1))`\n        is in the target hamiltonian, the corresponding interaction `f_01 * kron(Z(0), Z(1))`\n        needs to be in the build hamiltonian. This is checked when the generators are parsed.\n        - The build hamiltonian can have any interaction, irrespectively of it being needed\n        for the target hamiltonian. This is especially useful for designing local operations\n        through the repeated evolution of a \"global\" hamiltonian.\n        - The parameter `zero_tol` controls what it means for an interaction to be \"missing\".\n        Any interaction strength smaller than `zero_tol` in the build hamiltonian will not be\n        considered, and thus that interaction is missing.\n        - The various ratios `g_jk / f_jk` will influence the time parameter for the various\n        evolution slices, meaning that if there is a big discrepancy in the interaction strength\n        for a given qubit pair (j, k), the output circuit may require the usage of hamiltonian\n        evolutions with very large times.\n        - A warning will be issued for evolution times larger than `1/sqrt(zero_tol)`. Evolution\n        times smaller than `zero_tol` will not be represented.\n    Examples:\n        ```python exec=\"on\" source=\"material-block\" result=\"json\"\n        from qadence import Z, N, daqc_transform\n        n_qubits = 3\n        gen_build = 0.5 * (N(0)@N(1)) + 0.7 * (N(1)@N(2)) + 0.2 * (N(0)@N(2))\n        gen_target = 0.1 * (Z(1)@Z(2))\n        t_f = 2.0\n        transformed_circuit = daqc_transform(\n            n_qubits = n_qubits,\n            gen_target = gen_target,\n            t_f = t_f,\n            gen_build = gen_build,\n        )\n        ```\n    \"\"\"\n##################\n# Input controls #\n##################\nif strategy != Strategy.SDAQC:\nraise NotImplementedError(\"Currently only the sDAQC transform is implemented.\")\nif n_qubits == 4:\nraise NotImplementedError(\"DAQC transform 4-qubit edge case not implemented.\")\nif gen_build is None:\ngen_build = hamiltonian_factory(n_qubits, interaction=Interaction.NN)\ntry:\nif (not block_is_qubit_hamiltonian(gen_target)) or (\nnot block_is_qubit_hamiltonian(gen_build)\n):\nraise ValueError(\n\"Generator block is not a qubit Hamiltonian. Only ZZ or NN interactions allowed.\"\n)\nexcept NotImplementedError:\n# Happens when block_is_qubit_hamiltonian is called on something that is not a block.\nraise TypeError(\n\"Generator block is not a qubit Hamiltonian. Only ZZ or NN interactions allowed.\"\n)\n#####################\n# Generator parsing #\n#####################\ng_jk_target, mat_jk_target, target_type = _parse_generator(n_qubits, gen_target, 0.0)\ng_jk_build, mat_jk_build, build_type = _parse_generator(n_qubits, gen_build, zero_tol)\n# Get the global phase hamiltonian and single-qubit detuning hamiltonian\nif build_type == GenDAQC.NN:\nh_phase_build, h_sq_build = _nn_phase_and_detunings(n_qubits, mat_jk_build)\nif target_type == GenDAQC.NN:\nh_phase_target, h_sq_target = _nn_phase_and_detunings(n_qubits, mat_jk_target)\n# Time re-scalings\nif build_type == GenDAQC.ZZ and target_type == GenDAQC.NN:\nt_star = t_f / 4.0\nelif build_type == GenDAQC.NN and target_type == GenDAQC.ZZ:\nt_star = 4.0 * t_f\nelse:\nt_star = t_f\n# Check if target Hamiltonian can be mapped with the build Hamiltonian\nassert _check_compatibility(g_jk_target, g_jk_build, zero_tol)\n##################\n# DAQC Transform #\n##################\n# Section III A of https://arxiv.org/abs/1812.03637:\n# Matrix M for the linear system, exemplified in Table I:\nmatrix_M = _build_matrix_M(n_qubits)\n# Linear system mapping interaction ratios -&gt; evolution times.\nt_slices = torch.linalg.solve(matrix_M, g_jk_target / g_jk_build) * t_star\n# ZZ-DAQC with ZZ or NN build Hamiltonian\ndaqc_slices = []\nfor m in range(2, n_qubits + 1):\nfor n in range(1, m):\nalpha = _ix_map(n_qubits, n, m)\nt = t_slices[alpha - 1]\nif abs(t) &gt; zero_tol:\nif abs(t) &gt; (1 / (zero_tol**0.5)):\nlogger.warning(\n\"\"\"\nTransformed circuit with very long evolution time.\nMake sure your target interactions are sufficiently\nrepresented in the build Hamiltonian.\"\"\"\n)\nx_gates = kron(X(n - 1), X(m - 1))\nanalog_evo = HamEvo(gen_build, t)\n# TODO: Fix repeated X-gates\nif build_type == GenDAQC.NN:\n# Local detuning at each DAQC layer for NN build Hamiltonian\nsq_detuning_build = HamEvo(h_sq_build, t)\ndaqc_slices.append(chain(x_gates, sq_detuning_build, analog_evo, x_gates))\nelif build_type == GenDAQC.ZZ:\ndaqc_slices.append(chain(x_gates, analog_evo, x_gates))\ndaqc_circuit = chain(*daqc_slices)\n########################\n# Phases and Detunings #\n########################\nif target_type == GenDAQC.NN:\n# Local detuning given a NN target Hamiltonian\nsq_detuning_target = HamEvo(h_sq_target, t_f).dagger()\ndaqc_circuit = chain(sq_detuning_target, daqc_circuit)\nif not ignore_global_phases:\nif build_type == GenDAQC.NN:\n# Constant global phase given a NN build Hamiltonian\nglobal_phase_build = HamEvo(h_phase_build, t_slices.sum())\ndaqc_circuit = chain(global_phase_build, daqc_circuit)\nif target_type == GenDAQC.NN:\n# Constant global phase and given a NN target Hamiltonian\nglobal_phase_target = HamEvo(h_phase_target, t_f).dagger()\ndaqc_circuit = chain(global_phase_target, daqc_circuit)\nreturn daqc_circuit\n</code></pre>"},{"location":"qadence/constructors/#some-utility-functions","title":"Some utility functions","text":""},{"location":"qadence/constructors/#qadence.constructors.utils.build_idx_fms","title":"<code>build_idx_fms(basis, fm_pauli, fm_strategy, n_features, n_qubits, spectrum)</code>","text":"<p>Builds the index feature maps based on the given parameters.</p> PARAMETER  DESCRIPTION <code>basis</code> <p>Type of basis chosen for the feature map.</p> <p> TYPE: <code>str</code> </p> <code>fm_pauli</code> <p>The chosen Pauli rotation type.</p> <p> TYPE: <code>PrimitiveBlock type</code> </p> <code>fm_strategy</code> <p>The feature map strategy to be used. Possible values are 'parallel' or 'serial'.</p> <p> TYPE: <code>str</code> </p> <code>n_features</code> <p>The number of features.</p> <p> TYPE: <code>int</code> </p> <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> <code>spectrum</code> <p>The chosen spectrum.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>list[KronBlock]</code> <p>List[KronBlock]: The list of index feature maps.</p> Source code in <code>qadence/constructors/utils.py</code> <pre><code>def build_idx_fms(\nbasis: str,\nfm_pauli: Type[RY],\nfm_strategy: str,\nn_features: int,\nn_qubits: int,\nspectrum: str,\n) -&gt; list[KronBlock]:\n\"\"\"Builds the index feature maps based on the given parameters.\n    Args:\n        basis (str): Type of basis chosen for the feature map.\n        fm_pauli (PrimitiveBlock type): The chosen Pauli rotation type.\n        fm_strategy (str): The feature map strategy to be used. Possible values are\n            'parallel' or 'serial'.\n        n_features (int): The number of features.\n        n_qubits (int): The number of qubits.\n        spectrum (str): The chosen spectrum.\n    Returns:\n        List[KronBlock]: The list of index feature maps.\n    \"\"\"\nidx_fms = []\nfor i in range(n_features):\ntarget_qubits = get_fm_qubits(fm_strategy, i, n_qubits, n_features)\nparam = FeatureParameter(f\"x{i}\")\nblock = kron(\n*[\nfm_pauli(qubit, generator_prefactor(spectrum, j) * basis_func(basis, param))\nfor j, qubit in enumerate(target_qubits)\n]\n)\nidx_fm = block\nidx_fms.append(idx_fm)\nreturn idx_fms\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.utils.generator_prefactor","title":"<code>generator_prefactor(spectrum, qubit_index)</code>","text":"<p>Converts a spectrum string (e.g., tower or exponential) to the correct generator prefactor.</p> Source code in <code>qadence/constructors/utils.py</code> <pre><code>def generator_prefactor(spectrum: str, qubit_index: int) -&gt; float | int:\n\"\"\"\n    Converts a spectrum string (e.g., tower or exponential) to the correct generator prefactor.\n    \"\"\"\nspectrum = spectrum.lower()\nconversion_dict: dict[str, float | int] = {\n\"simple\": 1,\n\"tower\": qubit_index + 1,\n\"exponential\": 2 * np.pi / (2 ** (qubit_index + 1)),\n}\nreturn conversion_dict[spectrum]\n</code></pre>"},{"location":"qadence/constructors/#qadence.constructors.utils.get_fm_qubits","title":"<code>get_fm_qubits(fm_strategy, i, n_qubits, n_features)</code>","text":"<p>Returns the list of target qubits for the given feature map strategy and feature index</p> PARAMETER  DESCRIPTION <code>fm_strategy</code> <p>The feature map strategy to be used. Possible values are 'parallel' or 'serial'.</p> <p> TYPE: <code>str</code> </p> <code>i</code> <p>The feature index.</p> <p> TYPE: <code>int</code> </p> <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> <code>n_features</code> <p>The number of features.</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>Iterable</code> <p>List[int]: The list of target qubits.</p> RAISES DESCRIPTION <code>ValueError</code> <p>If the feature map strategy is not implemented.</p> Source code in <code>qadence/constructors/utils.py</code> <pre><code>def get_fm_qubits(fm_strategy: str, i: int, n_qubits: int, n_features: int) -&gt; Iterable:\n\"\"\"Returns the list of target qubits for the given feature map strategy and feature index\n    Args:\n        fm_strategy (str): The feature map strategy to be used. Possible values\n            are 'parallel' or 'serial'.\n        i (int): The feature index.\n        n_qubits (int): The number of qubits.\n        n_features (int): The number of features.\n    Returns:\n        List[int]: The list of target qubits.\n    Raises:\n        ValueError: If the feature map strategy is not implemented.\n    \"\"\"\nif fm_strategy == \"parallel\":\nn_qubits_per_feature = int(n_qubits / n_features)\ntarget_qubits = range(i * n_qubits_per_feature, (i + 1) * n_qubits_per_feature)\nelif fm_strategy == \"serial\":\ntarget_qubits = range(0, n_qubits)\nelse:\nraise ValueError(f\"Feature map strategy {fm_strategy} not implemented.\")\nreturn target_qubits\n</code></pre>"},{"location":"qadence/execution/","title":"Execution","text":""},{"location":"qadence/execution/#qadence.execution.expectation","title":"<code>expectation(x, observable, values={}, state=None, backend=BackendName.PYQTORCH, diff_mode=None, endianness=Endianness.BIG, configuration=None)</code>","text":"<p>Convenience wrapper for the <code>QuantumModel.expectation</code> method.  This is a <code>functools.singledispatch</code>ed function so it can be called with a number of different arguments (see in the examples).</p> PARAMETER  DESCRIPTION <code>x</code> <p>Circuit, block, or (register+block) to run.</p> <p> TYPE: <code>Union[QuantumCircuit, AbstractBlock, Register, int]</code> </p> <code>observable</code> <p>Observable(s) w.r.t. which the expectation is computed.</p> <p> TYPE: <code>Union[list[AbstractBlock], AbstractBlock]</code> </p> <code>values</code> <p>User-facing parameter dict.</p> <p> TYPE: <code>dict</code> DEFAULT: <code>{}</code> </p> <code>state</code> <p>Initial state.</p> <p> TYPE: <code>Tensor</code> DEFAULT: <code>None</code> </p> <code>backend</code> <p>Name of the backend to run on.</p> <p> TYPE: <code>BackendName</code> DEFAULT: <code>PYQTORCH</code> </p> <code>diff_mode</code> <p>Which differentiation mode to use.</p> <p> TYPE: <code>Union[DiffMode, str, None]</code> DEFAULT: <code>None</code> </p> <code>endianness</code> <p>The target device endianness.</p> <p> TYPE: <code>Endianness</code> DEFAULT: <code>BIG</code> </p> <code>configuration</code> <p>The backend configuration.</p> <p> TYPE: <code>Union[BackendConfiguration, dict, None]</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A wavefunction</p> <pre><code>from qadence import RX, Z, Register, QuantumCircuit, expectation\nreg = Register(1)\nblock = RX(0, 0.5)\nobservable = Z(0)\ncirc = QuantumCircuit(reg, block)\n# You can compute the expectation for a\n# QuantumCircuit with a given observable.\nexpectation(circ, observable)\n# You can also use only a block.\n# In this case the register is constructed automatically to\n# Register.line(block.n_qubits)\nexpectation(block, observable)\n# Or a register and block\nexpectation(reg, block, observable)\n</code></pre> Source code in <code>qadence/execution.py</code> <pre><code>@singledispatch\ndef expectation(\nx: Union[QuantumCircuit, AbstractBlock, Register, int],\nobservable: Union[list[AbstractBlock], AbstractBlock],\nvalues: dict = {},\nstate: Tensor = None,\nbackend: BackendName = BackendName.PYQTORCH,\ndiff_mode: Union[DiffMode, str, None] = None,\nendianness: Endianness = Endianness.BIG,\nconfiguration: Union[BackendConfiguration, dict, None] = None,\n) -&gt; Tensor:\n\"\"\"Convenience wrapper for the `QuantumModel.expectation` method.  This is a\n    `functools.singledispatch`ed function so it can be called with a number of different arguments\n    (see in the examples).\n    Arguments:\n        x: Circuit, block, or (register+block) to run.\n        observable: Observable(s) w.r.t. which the expectation is computed.\n        values: User-facing parameter dict.\n        state: Initial state.\n        backend: Name of the backend to run on.\n        diff_mode: Which differentiation mode to use.\n        endianness: The target device endianness.\n        configuration: The backend configuration.\n    Returns:\n        A wavefunction\n    ```python exec=\"on\" source=\"material-block\"\n    from qadence import RX, Z, Register, QuantumCircuit, expectation\n    reg = Register(1)\n    block = RX(0, 0.5)\n    observable = Z(0)\n    circ = QuantumCircuit(reg, block)\n    # You can compute the expectation for a\n    # QuantumCircuit with a given observable.\n    expectation(circ, observable)\n    # You can also use only a block.\n    # In this case the register is constructed automatically to\n    # Register.line(block.n_qubits)\n    expectation(block, observable)\n    # Or a register and block\n    expectation(reg, block, observable)\n    ```\"\"\"\nraise ValueError(f\"Cannot execute {type(x)}\")\n</code></pre>"},{"location":"qadence/execution/#qadence.execution.run","title":"<code>run(x, *args, values={}, state=None, backend=BackendName.PYQTORCH, endianness=Endianness.BIG, configuration=None)</code>","text":"<p>Convenience wrapper for the <code>QuantumModel.run</code> method.  This is a <code>functools.singledispatch</code>ed function so it can be called with a number of different arguments. See the examples of the <code>expectation</code> function. This function works exactly the same.</p> PARAMETER  DESCRIPTION <code>x</code> <p>Circuit, block, or (register+block) to run.</p> <p> TYPE: <code>Union[QuantumCircuit, AbstractBlock, Register, int]</code> </p> <code>values</code> <p>User-facing parameter dict.</p> <p> TYPE: <code>dict</code> DEFAULT: <code>{}</code> </p> <code>state</code> <p>Initial state.</p> <p> TYPE: <code>Tensor</code> DEFAULT: <code>None</code> </p> <code>backend</code> <p>Name of the backend to run on.</p> <p> TYPE: <code>BackendName</code> DEFAULT: <code>PYQTORCH</code> </p> <code>endianness</code> <p>The target device endianness.</p> <p> TYPE: <code>Endianness</code> DEFAULT: <code>BIG</code> </p> <code>configuration</code> <p>The backend configuration.</p> <p> TYPE: <code>Union[BackendConfiguration, dict, None]</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A wavefunction</p> Source code in <code>qadence/execution.py</code> <pre><code>@singledispatch\ndef run(\nx: Union[QuantumCircuit, AbstractBlock, Register, int],\n*args: Any,\nvalues: dict = {},\nstate: Tensor = None,\nbackend: BackendName = BackendName.PYQTORCH,\nendianness: Endianness = Endianness.BIG,\nconfiguration: Union[BackendConfiguration, dict, None] = None,\n) -&gt; Tensor:\n\"\"\"Convenience wrapper for the `QuantumModel.run` method.  This is a\n    `functools.singledispatch`ed function so it can be called with a number of different arguments.\n    See the examples of the [`expectation`][qadence.execution.expectation] function. This function\n    works exactly the same.\n    Arguments:\n        x: Circuit, block, or (register+block) to run.\n        values: User-facing parameter dict.\n        state: Initial state.\n        backend: Name of the backend to run on.\n        endianness: The target device endianness.\n        configuration: The backend configuration.\n    Returns:\n        A wavefunction\n    \"\"\"\nraise ValueError(f\"Cannot run {type(x)}\")\n</code></pre>"},{"location":"qadence/execution/#qadence.execution.sample","title":"<code>sample(x, *args, values={}, state=None, n_shots=100, backend=BackendName.PYQTORCH, endianness=Endianness.BIG, configuration=None)</code>","text":"<p>Convenience wrapper for the <code>QuantumModel.sample</code> method.  This is a <code>functools.singledispatch</code>ed function so it can be called with a number of different arguments. See the examples of the <code>expectation</code> function. This function works exactly the same.</p> PARAMETER  DESCRIPTION <code>x</code> <p>Circuit, block, or (register+block) to run.</p> <p> TYPE: <code>Union[QuantumCircuit, AbstractBlock, Register, int]</code> </p> <code>values</code> <p>User-facing parameter dict.</p> <p> TYPE: <code>dict</code> DEFAULT: <code>{}</code> </p> <code>state</code> <p>Initial state.</p> <p> TYPE: <code>Union[Tensor, None]</code> DEFAULT: <code>None</code> </p> <code>n_shots</code> <p>Number of shots per element in the batch.</p> <p> TYPE: <code>int</code> DEFAULT: <code>100</code> </p> <code>backend</code> <p>Name of the backend to run on.</p> <p> TYPE: <code>BackendName</code> DEFAULT: <code>PYQTORCH</code> </p> <code>endianness</code> <p>The target device endianness.</p> <p> TYPE: <code>Endianness</code> DEFAULT: <code>BIG</code> </p> <code>configuration</code> <p>The backend configuration.</p> <p> TYPE: <code>Union[BackendConfiguration, dict, None]</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <code>list[Counter]</code> <p>A list of Counter instances with the sample results</p> Source code in <code>qadence/execution.py</code> <pre><code>@singledispatch\ndef sample(\nx: Union[QuantumCircuit, AbstractBlock, Register, int],\n*args: Any,\nvalues: dict = {},\nstate: Union[Tensor, None] = None,\nn_shots: int = 100,\nbackend: BackendName = BackendName.PYQTORCH,\nendianness: Endianness = Endianness.BIG,\nconfiguration: Union[BackendConfiguration, dict, None] = None,\n) -&gt; list[Counter]:\n\"\"\"Convenience wrapper for the `QuantumModel.sample` method.  This is a\n    `functools.singledispatch`ed function so it can be called with a number of different arguments.\n    See the examples of the [`expectation`][qadence.execution.expectation] function. This function\n    works exactly the same.\n    Arguments:\n        x: Circuit, block, or (register+block) to run.\n        values: User-facing parameter dict.\n        state: Initial state.\n        n_shots: Number of shots per element in the batch.\n        backend: Name of the backend to run on.\n        endianness: The target device endianness.\n        configuration: The backend configuration.\n    Returns:\n        A list of Counter instances with the sample results\n    \"\"\"\nraise ValueError(f\"Cannot sample from {type(x)}\")\n</code></pre>"},{"location":"qadence/ml_tools/","title":"QML tools","text":""},{"location":"qadence/ml_tools/#ml-tools","title":"ML Tools","text":"<p>This module implements gradient-free and gradient-based training loops for torch Modules and QuantumModel.</p>"},{"location":"qadence/ml_tools/#qadence.ml_tools.config.TrainConfig","title":"<code>TrainConfig</code>  <code>dataclass</code>","text":"<p>Default config for the train function. The default value of each field can be customize with the constructor:</p> <pre><code>from qadence.ml_tools import TrainConfig\nc = TrainConfig(folder=\"/tmp/train\")\n</code></pre> <pre><code>TrainConfig(max_iter=10000, print_every=1000, write_every=50, checkpoint_every=5000, folder=PosixPath('/tmp/train'), create_subfolder_per_run=False, checkpoint_best_only=False, validation_criterion=&lt;function TrainConfig.__post_init__.&lt;locals&gt;.&lt;lambda&gt; at 0x1797d7040&gt;, trainstop_criterion=&lt;function TrainConfig.__post_init__.&lt;locals&gt;.&lt;lambda&gt; at 0x1797d7e50&gt;, batch_size=1)\n</code></pre>"},{"location":"qadence/ml_tools/#qadence.ml_tools.config.TrainConfig.batch_size","title":"<code>batch_size: int = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The batch_size to use when passing a list/tuple of torch.Tensors.</p>"},{"location":"qadence/ml_tools/#qadence.ml_tools.config.TrainConfig.checkpoint_best_only","title":"<code>checkpoint_best_only: bool = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Write model/optimizer checkpoint only if a metric has improved</p>"},{"location":"qadence/ml_tools/#qadence.ml_tools.config.TrainConfig.checkpoint_every","title":"<code>checkpoint_every: int = 5000</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Write model/optimizer checkpoint</p>"},{"location":"qadence/ml_tools/#qadence.ml_tools.config.TrainConfig.create_subfolder_per_run","title":"<code>create_subfolder_per_run: bool = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Checkpoint/tensorboard logs stored in subfolder with name <code>&lt;timestamp&gt;_&lt;PID&gt;</code>. Prevents continuing from previous checkpoint, useful for fast prototyping.</p>"},{"location":"qadence/ml_tools/#qadence.ml_tools.config.TrainConfig.folder","title":"<code>folder: Optional[Path] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Checkpoint/tensorboard logs folder</p>"},{"location":"qadence/ml_tools/#qadence.ml_tools.config.TrainConfig.max_iter","title":"<code>max_iter: int = 10000</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Number of training iterations.</p>"},{"location":"qadence/ml_tools/#qadence.ml_tools.config.TrainConfig.print_every","title":"<code>print_every: int = 1000</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Print loss/metrics.</p>"},{"location":"qadence/ml_tools/#qadence.ml_tools.config.TrainConfig.trainstop_criterion","title":"<code>trainstop_criterion: Optional[Callable] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A boolean function which evaluates a given training stopping metric is satisfied</p>"},{"location":"qadence/ml_tools/#qadence.ml_tools.config.TrainConfig.validation_criterion","title":"<code>validation_criterion: Optional[Callable] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A boolean function which evaluates a given validation metric is satisfied</p>"},{"location":"qadence/ml_tools/#qadence.ml_tools.config.TrainConfig.write_every","title":"<code>write_every: int = 50</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Write tensorboard logs</p>"},{"location":"qadence/ml_tools/#qadence.ml_tools.parameters.get_parameters","title":"<code>get_parameters(model)</code>","text":"<p>Retrieve all trainable model parameters in a single vector</p> PARAMETER  DESCRIPTION <code>model</code> <p>the input PyTorch model</p> <p> TYPE: <code>Module</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>a 1-dimensional tensor with the parameters</p> <p> TYPE: <code>Tensor</code> </p> Source code in <code>qadence/ml_tools/parameters.py</code> <pre><code>def get_parameters(model: Module) -&gt; Tensor:\n\"\"\"Retrieve all trainable model parameters in a single vector\n    Args:\n        model (Module): the input PyTorch model\n    Returns:\n        Tensor: a 1-dimensional tensor with the parameters\n    \"\"\"\nps = [p.reshape(-1) for p in model.parameters() if p.requires_grad]\nreturn torch.concat(ps)\n</code></pre>"},{"location":"qadence/ml_tools/#qadence.ml_tools.parameters.num_parameters","title":"<code>num_parameters(model)</code>","text":"<p>Return the total number of parameters of the given model</p> Source code in <code>qadence/ml_tools/parameters.py</code> <pre><code>def num_parameters(model: Module) -&gt; int:\n\"\"\"Return the total number of parameters of the given model\"\"\"\nreturn len(get_parameters(model))\n</code></pre>"},{"location":"qadence/ml_tools/#qadence.ml_tools.parameters.set_parameters","title":"<code>set_parameters(model, theta)</code>","text":"<p>Set all trainable parameters of a model from a single vector</p> <p>Notice that this function assumes prior knowledge of right number of parameters in the model</p> PARAMETER  DESCRIPTION <code>model</code> <p>the input PyTorch model</p> <p> TYPE: <code>Module</code> </p> <code>theta</code> <p>the parameters to assign</p> <p> TYPE: <code>Tensor</code> </p> Source code in <code>qadence/ml_tools/parameters.py</code> <pre><code>def set_parameters(model: Module, theta: Tensor) -&gt; None:\n\"\"\"Set all trainable parameters of a model from a single vector\n    Notice that this function assumes prior knowledge of right number\n    of parameters in the model\n    Args:\n        model (Module): the input PyTorch model\n        theta (Tensor): the parameters to assign\n    \"\"\"\nwith torch.no_grad():\nidx = 0\nfor ps in model.parameters():\nif ps.requires_grad:\nn = torch.numel(ps)\nif ps.ndim == 0:\nps[()] = theta[idx : idx + n]\nelse:\nps[:] = theta[idx : idx + n].reshape(ps.size())\nidx += n\n</code></pre>"},{"location":"qadence/ml_tools/#qadence.ml_tools.optimize_step.data_to_model","title":"<code>data_to_model(xs, device='cpu')</code>","text":"<p>Default behavior for single-dispatched function</p> <p>Just return the given data independently on the type</p> PARAMETER  DESCRIPTION <code>xs</code> <p>the input data</p> <p> TYPE: <code>Any</code> </p> <code>device</code> <p>The torch device. Not used in this implementation.</p> <p> TYPE: <code>str</code> DEFAULT: <code>'cpu'</code> </p> RETURNS DESCRIPTION <code>Any</code> <p>the <code>xs</code> argument untouched</p> <p> TYPE: <code>Any</code> </p> Source code in <code>qadence/ml_tools/optimize_step.py</code> <pre><code>@singledispatch\ndef data_to_model(xs: Any, device: str = \"cpu\") -&gt; Any:\n\"\"\"Default behavior for single-dispatched function\n    Just return the given data independently on the type\n    Args:\n        xs (Any): the input data\n        device (str, optional): The torch device. Not used in this implementation.\n    Returns:\n        Any: the `xs` argument untouched\n    \"\"\"\nreturn xs\n</code></pre>"},{"location":"qadence/ml_tools/#qadence.ml_tools.optimize_step.optimize_step","title":"<code>optimize_step(model, optimizer, loss_fn, xs, device='cpu')</code>","text":"<p>Default Torch optimize step with closure</p> <p>This is the default optimization step which should work for most of the standard use cases of optimization of Torch models</p> PARAMETER  DESCRIPTION <code>model</code> <p>The input model</p> <p> TYPE: <code>Module</code> </p> <code>optimizer</code> <p>The chosen Torch optimizer</p> <p> TYPE: <code>Optimizer</code> </p> <code>loss_fn</code> <p>A custom loss function</p> <p> TYPE: <code>Callable</code> </p> <code>xs</code> <p>the input data. If None it means that the given model does not require any input data</p> <p> TYPE: <code>dict | list | Tensor | None</code> </p> <code>device</code> <p>The device were computations are executed. Defaults to \"cpu\".</p> <p> TYPE: <code>str</code> DEFAULT: <code>'cpu'</code> </p> RETURNS DESCRIPTION <code>tuple</code> <p>tuple containing the model, the optimizer, a dictionary with the collected metrics and the compute value loss</p> <p> TYPE: <code>tuple[Tensor | float, dict | None]</code> </p> Source code in <code>qadence/ml_tools/optimize_step.py</code> <pre><code>def optimize_step(\nmodel: Module,\noptimizer: Optimizer,\nloss_fn: Callable,\nxs: dict | list | torch.Tensor | None,\ndevice: str = \"cpu\",\n) -&gt; tuple[torch.Tensor | float, dict | None]:\n\"\"\"Default Torch optimize step with closure\n    This is the default optimization step which should work for most\n    of the standard use cases of optimization of Torch models\n    Args:\n        model (Module): The input model\n        optimizer (Optimizer): The chosen Torch optimizer\n        loss_fn (Callable): A custom loss function\n        xs (dict | list | torch.Tensor | None): the input data. If None it means\n            that the given model does not require any input data\n        device (str, optional): The device were computations are executed.\n            Defaults to \"cpu\".\n    Returns:\n        tuple: tuple containing the model, the optimizer, a dictionary with\n            the collected metrics and the compute value loss\n    \"\"\"\nloss, metrics = None, {}\ndef closure() -&gt; Any:\n# NOTE: We need the nonlocal as we can't return a metric dict and\n# because e.g. LBFGS calls this closure multiple times but for some\n# reason the returned loss is always the first one...\nnonlocal metrics, loss\noptimizer.zero_grad()\nloss, metrics = loss_fn(model, xs)\nloss.backward(retain_graph=True)\nreturn loss.item()\noptimizer.step(closure)\n# return the loss/metrics that are being mutated inside the closure...\nreturn loss, metrics\n</code></pre>"},{"location":"qadence/ml_tools/#qadence.ml_tools.train_grad.train","title":"<code>train(model, dataloader, optimizer, config, loss_fn, device='cpu', optimize_step=optimize_step, write_tensorboard=write_tensorboard)</code>","text":"<p>Runs the training loop with gradient-based optimizer</p> <p>Assumes that <code>loss_fn</code> returns a tuple of (loss, metrics: dict), where <code>metrics</code> is a dict of scalars. Loss and metrics are written to tensorboard. Checkpoints are written every <code>config.checkpoint_every</code> steps (and after the last training step).  If a checkpoint is found at <code>config.folder</code> we resume training from there.  The tensorboard logs can be viewed via <code>tensorboard --logdir /path/to/folder</code>.</p> PARAMETER  DESCRIPTION <code>model</code> <p>The model to train.</p> <p> TYPE: <code>Module</code> </p> <code>dataloader</code> <p>dataloader of different types. If None, no data is required by the model</p> <p> TYPE: <code>DictDataLoader | DataLoader | list[Tensor] | tuple[Tensor, Tensor] | None</code> </p> <code>optimizer</code> <p>The optimizer to use.</p> <p> TYPE: <code>Optimizer</code> </p> <code>config</code> <p><code>TrainConfig</code> with additional training options.</p> <p> TYPE: <code>TrainConfig</code> </p> <code>loss_fn</code> <p>Loss function returning (loss: float, metrics: dict[str, float])</p> <p> TYPE: <code>Callable</code> </p> <code>device</code> <p>String defining device to train on, pass 'cuda' for GPU.</p> <p> TYPE: <code>str</code> DEFAULT: <code>'cpu'</code> </p> <code>optimize_step</code> <p>Customizable optimization callback which is called at every iteration.= The function must have the signature <code>optimize_step(model, optimizer, loss_fn, xs, device=\"cpu\")</code> (see the example below). Apart from the default we already supply three other optimization functions <code>optimize_step_evo</code>, <code>optimize_step_grad_norm</code>, and <code>optimize_step_inv_dirichlet</code>. Learn more about how to use this in the Advancded features tutorial of the documentation.</p> <p> TYPE: <code>Callable</code> DEFAULT: <code>optimize_step</code> </p> <code>write_tensorboard</code> <p>Customizable tensorboard logging callback which is called every <code>config.write_every</code> iterations. The function must have the signature <code>write_tensorboard(writer, loss, metrics, iteration)</code> (see the example below).</p> <p> TYPE: <code>Callable</code> DEFAULT: <code>write_tensorboard</code> </p> <p>Example: <pre><code>from pathlib import Path\nimport torch\nfrom itertools import count\nfrom qadence.constructors import hamiltonian_factory, hea, feature_map\nfrom qadence import chain, Parameter, QuantumCircuit, Z\nfrom qadence.models import QNN\nfrom qadence.ml_tools import train_with_grad, TrainConfig\nn_qubits = 2\nfm = feature_map(n_qubits)\nansatz = hea(n_qubits=n_qubits, depth=3)\nobservable = hamiltonian_factory(n_qubits, detuning = Z)\ncircuit = QuantumCircuit(n_qubits, fm, ansatz)\nmodel = QNN(circuit, observable, backend=\"pyqtorch\", diff_mode=\"ad\")\nbatch_size = 1\ninput_values = {\"phi\": torch.rand(batch_size, requires_grad=True)}\npred = model(input_values)\n## lets prepare the train routine\ncnt = count()\ncriterion = torch.nn.MSELoss()\noptimizer = torch.optim.Adam(model.parameters(), lr=0.1)\ndef loss_fn(model: torch.nn.Module, data: torch.Tensor) -&gt; tuple[torch.Tensor, dict]:\nnext(cnt)\nx, y = data[0], data[1]\nout = model(x)\nloss = criterion(out, y)\nreturn loss, {}\ntmp_path = Path(\"/tmp\")\nn_epochs = 5\nconfig = TrainConfig(\nfolder=tmp_path,\nmax_iter=n_epochs,\ncheckpoint_every=100,\nwrite_every=100,\nbatch_size=batch_size,\n)\nbatch_size = 25\nx = torch.linspace(0, 1, batch_size).reshape(-1, 1)\ny = torch.sin(x)\ntrain_with_grad(model, (x, y), optimizer, config, loss_fn=loss_fn)\n</code></pre> </p> Source code in <code>qadence/ml_tools/train_grad.py</code> <pre><code>def train(\nmodel: Module,\ndataloader: DictDataLoader | DataLoader | list[Tensor] | tuple[Tensor, Tensor] | None,\noptimizer: Optimizer,\nconfig: TrainConfig,\nloss_fn: Callable,\ndevice: str = \"cpu\",\noptimize_step: Callable = optimize_step,\nwrite_tensorboard: Callable = write_tensorboard,\n) -&gt; tuple[Module, Optimizer]:\n\"\"\"Runs the training loop with gradient-based optimizer\n    Assumes that `loss_fn` returns a tuple of (loss,\n    metrics: dict), where `metrics` is a dict of scalars. Loss and metrics are\n    written to tensorboard. Checkpoints are written every\n    `config.checkpoint_every` steps (and after the last training step).  If a\n    checkpoint is found at `config.folder` we resume training from there.  The\n    tensorboard logs can be viewed via `tensorboard --logdir /path/to/folder`.\n    Args:\n        model: The model to train.\n        dataloader: dataloader of different types. If None, no data is required by\n            the model\n        optimizer: The optimizer to use.\n        config: `TrainConfig` with additional training options.\n        loss_fn: Loss function returning (loss: float, metrics: dict[str, float])\n        device: String defining device to train on, pass 'cuda' for GPU.\n        optimize_step: Customizable optimization callback which is called at every iteration.=\n            The function must have the signature `optimize_step(model,\n            optimizer, loss_fn, xs, device=\"cpu\")` (see the example below).\n            Apart from the default we already supply three other optimization\n            functions `optimize_step_evo`, `optimize_step_grad_norm`, and\n            `optimize_step_inv_dirichlet`. Learn more about how to use this in\n            the [Advancded features](../../tutorials/advanced) tutorial of the\n            documentation.\n        write_tensorboard: Customizable tensorboard logging callback which is\n            called every `config.write_every` iterations. The function must have\n            the signature `write_tensorboard(writer, loss, metrics, iteration)`\n            (see the example below).\n    Example:\n    ```python exec=\"on\" source=\"material-block\"\n    from pathlib import Path\n    import torch\n    from itertools import count\n    from qadence.constructors import hamiltonian_factory, hea, feature_map\n    from qadence import chain, Parameter, QuantumCircuit, Z\n    from qadence.models import QNN\n    from qadence.ml_tools import train_with_grad, TrainConfig\n    n_qubits = 2\n    fm = feature_map(n_qubits)\n    ansatz = hea(n_qubits=n_qubits, depth=3)\n    observable = hamiltonian_factory(n_qubits, detuning = Z)\n    circuit = QuantumCircuit(n_qubits, fm, ansatz)\n    model = QNN(circuit, observable, backend=\"pyqtorch\", diff_mode=\"ad\")\n    batch_size = 1\n    input_values = {\"phi\": torch.rand(batch_size, requires_grad=True)}\n    pred = model(input_values)\n    ## lets prepare the train routine\n    cnt = count()\n    criterion = torch.nn.MSELoss()\n    optimizer = torch.optim.Adam(model.parameters(), lr=0.1)\n    def loss_fn(model: torch.nn.Module, data: torch.Tensor) -&gt; tuple[torch.Tensor, dict]:\n        next(cnt)\n        x, y = data[0], data[1]\n        out = model(x)\n        loss = criterion(out, y)\n        return loss, {}\n    tmp_path = Path(\"/tmp\")\n    n_epochs = 5\n    config = TrainConfig(\n        folder=tmp_path,\n        max_iter=n_epochs,\n        checkpoint_every=100,\n        write_every=100,\n        batch_size=batch_size,\n    )\n    batch_size = 25\n    x = torch.linspace(0, 1, batch_size).reshape(-1, 1)\n    y = torch.sin(x)\n    train_with_grad(model, (x, y), optimizer, config, loss_fn=loss_fn)\n    ```\n    \"\"\"\nassert loss_fn is not None, \"Provide a valid loss function\"\n# Move model to device before optimizer is loaded\nmodel = model.to(device)\n# load available checkpoint\ninit_iter = 0\nif config.folder:\nmodel, optimizer, init_iter = load_checkpoint(config.folder, model, optimizer)\nlogger.debug(f\"Loaded model and optimizer from {config.folder}\")\n# initialize tensorboard\nwriter = SummaryWriter(config.folder, purge_step=init_iter)\n## Training\nprogress = Progress(\nTextColumn(\"[progress.description]{task.description}\"),\nBarColumn(),\nTaskProgressColumn(),\nTimeRemainingColumn(elapsed_when_finished=True),\n)\nif isinstance(dataloader, (list, tuple)):\nfrom qadence.ml_tools.data import to_dataloader\nassert len(dataloader) == 2, \"Please provide exactly two torch tensors.\"\nx, y = dataloader\ndataloader = to_dataloader(x=x, y=y, batch_size=config.batch_size)\nwith progress:\ndl_iter = iter(dataloader) if isinstance(dataloader, DictDataLoader) else None\n# outer epoch loop\nfor iteration in progress.track(range(init_iter, init_iter + config.max_iter)):\ntry:\n# in case there is not data needed by the model\n# this is the case, for example, of quantum models\n# which do not have classical input data (e.g. chemistry)\nif dataloader is None:\nloss, metrics = optimize_step(\nmodel, optimizer, loss_fn, dataloader, device=device\n)\nloss = loss.item()\n# single epoch with DictDataloader using a single iteration method\n# DictDataloader returns a single sample of the data\n# with a given batch size decided when the dataloader is defined\nelif isinstance(dataloader, DictDataLoader):\n# resample all the time from the dataloader\n# by creating a fresh iterator if the dataloader\n# does not support automatically iterating datasets\nif not dataloader.has_automatic_iter:\ndl_iter = iter(dataloader)\ndata = next(dl_iter)  # type: ignore[arg-type]\nloss, metrics = optimize_step(model, optimizer, loss_fn, data, device=device)\nelif isinstance(dataloader, DataLoader):\n# single-epoch with standard DataLoader\n# otherwise a standard PyTorch DataLoader behavior\n# is assumed with optional mini-batches\nrunning_loss = 0.0\nfor i, data in enumerate(dataloader):\n# TODO: make sure to average metrics as well\nloss, metrics = optimize_step(\nmodel, optimizer, loss_fn, data, device=device\n)\nrunning_loss += loss.item()\nloss = running_loss / (i + 1)\nelse:\nraise NotImplementedError(\"Unsupported dataloader type!\")\nif iteration % config.print_every == 0:\nprint_metrics(loss, metrics, iteration)\nif iteration % config.write_every == 0:\nwrite_tensorboard(writer, loss, metrics, iteration)\nif config.folder:\nif iteration % config.checkpoint_every == 0:\nwrite_checkpoint(config.folder, model, optimizer, iteration)\nexcept KeyboardInterrupt:\nprint(\"Terminating training gracefully after the current iteration.\")\nbreak\n# Final writing and checkpointing\nif config.folder:\nwrite_checkpoint(config.folder, model, optimizer, iteration)\nwrite_tensorboard(writer, loss, metrics, iteration)\nwriter.close()\nreturn model, optimizer\n</code></pre>"},{"location":"qadence/ml_tools/#qadence.ml_tools.train_no_grad.train","title":"<code>train(model, dataloader, optimizer, config, loss_fn)</code>","text":"<p>Runs the training loop with a gradient-free optimizer</p> <p>Assumes that <code>loss_fn</code> returns a tuple of (loss, metrics: dict), where <code>metrics</code> is a dict of scalars. Loss and metrics are written to tensorboard. Checkpoints are written every <code>config.checkpoint_every</code> steps (and after the last training step).  If a checkpoint is found at <code>config.folder</code> we resume training from there.  The tensorboard logs can be viewed via <code>tensorboard --logdir /path/to/folder</code>.</p> PARAMETER  DESCRIPTION <code>model</code> <p>The model to train</p> <p> TYPE: <code>Module</code> </p> <code>dataloader</code> <p>Dataloader constructed via <code>dictdataloader</code></p> <p> TYPE: <code>DictDataLoader | DataLoader | None</code> </p> <code>optimizer</code> <p>The optimizer to use taken from the Nevergrad library. If this is not the case the function will raise an AssertionError</p> <p> TYPE: <code>Optimizer</code> </p> <code>loss_fn</code> <p>Loss function returning (loss: float, metrics: dict[str, float])</p> <p> TYPE: <code>Callable</code> </p> Source code in <code>qadence/ml_tools/train_no_grad.py</code> <pre><code>def train(\nmodel: Module,\ndataloader: DictDataLoader | DataLoader | None,\noptimizer: NGOptimizer,\nconfig: TrainConfig,\nloss_fn: Callable,\n) -&gt; tuple[Module, NGOptimizer]:\n\"\"\"Runs the training loop with a gradient-free optimizer\n    Assumes that `loss_fn` returns a tuple of (loss, metrics: dict), where\n    `metrics` is a dict of scalars. Loss and metrics are written to\n    tensorboard. Checkpoints are written every `config.checkpoint_every` steps\n    (and after the last training step).  If a checkpoint is found at `config.folder`\n    we resume training from there.  The tensorboard logs can be viewed via\n    `tensorboard --logdir /path/to/folder`.\n    Args:\n        model: The model to train\n        dataloader: Dataloader constructed via `dictdataloader`\n        optimizer: The optimizer to use taken from the Nevergrad library. If this is not\n            the case the function will raise an AssertionError\n        loss_fn: Loss function returning (loss: float, metrics: dict[str, float])\n    \"\"\"\ninit_iter = 0\nif config.folder:\nmodel, optimizer, init_iter = load_checkpoint(config.folder, model, optimizer)\nlogger.debug(f\"Loaded model and optimizer from {config.folder}\")\ndef _update_parameters(\ndata: Tensor | None, ng_params: ng.p.Array\n) -&gt; tuple[float, dict, ng.p.Array]:\nloss, metrics = loss_fn(model, data)  # type: ignore[misc]\noptimizer.tell(ng_params, float(loss))\nng_params = optimizer.ask()  # type: ignore [assignment]\nparams = promote_to_tensor(ng_params.value, requires_grad=False)\nset_parameters(model, params)\nreturn loss, metrics, ng_params\nassert loss_fn is not None, \"Provide a valid loss function\"\n# TODO: support also Scipy optimizers\nassert isinstance(optimizer, NGOptimizer), \"Use only optimizers from the Nevergrad library\"\n# initialize tensorboard\nwriter = SummaryWriter(config.folder, purge_step=init_iter)\n# set optimizer configuration and initial parameters\noptimizer.budget = config.max_iter\noptimizer.enable_pickling()\n# TODO: Make it GPU compatible if possible\nparams = get_parameters(model).detach().numpy()\nng_params = ng.p.Array(init=params)\n# serial training\n# TODO: Add a parallelization using the num_workers argument in Nevergrad\nprogress = Progress(\nTextColumn(\"[progress.description]{task.description}\"),\nBarColumn(),\nTaskProgressColumn(),\nTimeRemainingColumn(elapsed_when_finished=True),\n)\nwith progress:\ndl_iter = iter(dataloader) if isinstance(dataloader, DictDataLoader) else None\nfor iteration in progress.track(range(init_iter, init_iter + config.max_iter)):\nif dataloader is None:\nloss, metrics, ng_params = _update_parameters(None, ng_params)\nelif isinstance(dataloader, DictDataLoader):\n# resample all the time from the dataloader\n# by creating a fresh iterator if the dataloader\n# does not support automatically iterating datasets\nif not dataloader.has_automatic_iter:\ndl_iter = iter(dataloader)\ndata = next(dl_iter)  # type: ignore[arg-type]\nloss, metrics, ng_params = _update_parameters(data, ng_params)\nelif isinstance(dataloader, DataLoader):\n# single-epoch with standard DataLoader\n# otherwise a standard PyTorch DataLoader behavior\n# is assumed with optional mini-batches\nrunning_loss = 0.0\nfor i, data in enumerate(dataloader):\nloss, metrics, ng_params = _update_parameters(data, ng_params)\nrunning_loss += loss\nloss = running_loss / (i + 1)\nelse:\nraise NotImplementedError(\"Unsupported dataloader type!\")\nif iteration % config.print_every == 0:\nprint_metrics(loss, metrics, iteration)\nif iteration % config.write_every == 0:\nwrite_tensorboard(writer, loss, metrics, iteration)\nif config.folder:\nif iteration % config.checkpoint_every == 0:\nwrite_checkpoint(config.folder, model, optimizer, iteration)\nif iteration &gt;= init_iter + config.max_iter:\nbreak\n## Final writing and stuff\nif config.folder:\nwrite_checkpoint(config.folder, model, optimizer, iteration)\nwrite_tensorboard(writer, loss, metrics, iteration)\nwriter.close()\nreturn model, optimizer\n</code></pre>"},{"location":"qadence/operations/","title":"Operations","text":"<p>Operations are common <code>PrimitiveBlocks</code>, these are often called gates elsewhere.</p>"},{"location":"qadence/operations/#constant-blocks","title":"Constant blocks","text":"<p>CY gate not implemented</p>"},{"location":"qadence/operations/#qadence.operations.X","title":"<code>X(target)</code>","text":"<p>             Bases: <code>PrimitiveBlock</code></p> <p>The X gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int):\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.Y","title":"<code>Y(target)</code>","text":"<p>             Bases: <code>PrimitiveBlock</code></p> <p>The Y gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int):\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.Z","title":"<code>Z(target)</code>","text":"<p>             Bases: <code>PrimitiveBlock</code></p> <p>The Z gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int):\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.I","title":"<code>I(target)</code>","text":"<p>             Bases: <code>PrimitiveBlock</code></p> <p>The identity gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int):\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.H","title":"<code>H(target)</code>","text":"<p>             Bases: <code>PrimitiveBlock</code></p> <p>The Hadamard or H gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int):\nself.generator = (1 / np.sqrt(2)) * (X(target) + Z(target) - np.sqrt(2) * I(target))\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.S","title":"<code>S(target)</code>","text":"<p>             Bases: <code>PrimitiveBlock</code></p> <p>The S / Phase gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int):\nself.generator = I(target) - Z(target)\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.SDagger","title":"<code>SDagger(target)</code>","text":"<p>             Bases: <code>PrimitiveBlock</code></p> <p>The Hermitian adjoint/conjugate transpose of the S / Phase gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int):\nself.generator = I(target) - Z(target)\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.SWAP","title":"<code>SWAP(control, target)</code>","text":"<p>             Bases: <code>PrimitiveBlock</code></p> <p>The SWAP gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, control: int, target: int) -&gt; None:\na11 = 0.5 * (Z(control) - I(control))\na22 = -0.5 * (Z(target) + I(target))\na12 = 0.5 * (chain(X(control), Z(control)) + X(control))\na21 = 0.5 * (chain(Z(target), X(target)) + X(target))\nself.generator = (\nkron(-1.0 * a22, a11) + kron(-1.0 * a11, a22) + kron(a12, a21) + kron(a21, a12)\n)\nsuper().__init__((control, target))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.T","title":"<code>T(target)</code>","text":"<p>             Bases: <code>PrimitiveBlock</code></p> <p>The T gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int):\nself.generator = I(target) - Z(target)\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.TDagger","title":"<code>TDagger(target)</code>","text":"<p>             Bases: <code>PrimitiveBlock</code></p> <p>The Hermitian adjoint/conjugate transpose of the T gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int):\nself.generator = I(target) - Z(target)\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.CNOT","title":"<code>CNOT(control, target)</code>","text":"<p>             Bases: <code>ControlBlock</code></p> <p>The CNot, or CX, gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, control: int, target: int) -&gt; None:\nself.generator = kron((I(control) - Z(control)) * 0.5, X(target) - I(target))\nsuper().__init__((control,), X(target))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.CZ","title":"<code>CZ(control, target)</code>","text":"<p>             Bases: <code>MCZ</code></p> <p>The CZ gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, control: int, target: int) -&gt; None:\nsuper().__init__((control,), target)\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.CPHASE","title":"<code>CPHASE(control, target, parameter)</code>","text":"<p>             Bases: <code>MCPHASE</code></p> <p>The CPHASE gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(\nself,\ncontrol: int,\ntarget: int,\nparameter: Parameter | TNumber | sympy.Expr | str,\n):\nsuper().__init__((control,), target, parameter)\n</code></pre>"},{"location":"qadence/operations/#parametrized-blocks","title":"Parametrized blocks","text":""},{"location":"qadence/operations/#qadence.operations.RX","title":"<code>RX(target, parameter)</code>","text":"<p>             Bases: <code>ParametricBlock</code></p> <p>The Rx gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int, parameter: Parameter | TParameter | ParamMap):\n# TODO: should we give them more meaningful names? like 'angle'?\nself.parameters = (\nparameter if isinstance(parameter, ParamMap) else ParamMap(parameter=parameter)\n)\nself.generator = X(target)\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.RY","title":"<code>RY(target, parameter)</code>","text":"<p>             Bases: <code>ParametricBlock</code></p> <p>The Ry gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int, parameter: Parameter | TParameter | ParamMap):\nself.parameters = (\nparameter if isinstance(parameter, ParamMap) else ParamMap(parameter=parameter)\n)\nself.generator = Y(target)\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.RZ","title":"<code>RZ(target, parameter)</code>","text":"<p>             Bases: <code>ParametricBlock</code></p> <p>The Rz gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int, parameter: Parameter | TParameter | ParamMap):\nself.parameters = (\nparameter if isinstance(parameter, ParamMap) else ParamMap(parameter=parameter)\n)\nself.generator = Z(target)\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.CRX","title":"<code>CRX(control, target, parameter)</code>","text":"<p>             Bases: <code>MCRX</code></p> <p>The CRX gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(\nself,\ncontrol: int,\ntarget: int,\nparameter: Parameter | TNumber | sympy.Expr | str,\n):\nsuper().__init__((control,), target, parameter)\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.CRY","title":"<code>CRY(control, target, parameter)</code>","text":"<p>             Bases: <code>MCRY</code></p> <p>The CRY gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(\nself,\ncontrol: int,\ntarget: int,\nparameter: Parameter | TNumber | sympy.Expr | str,\n):\nsuper().__init__((control,), target, parameter)\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.CRZ","title":"<code>CRZ(control, target, parameter)</code>","text":"<p>             Bases: <code>MCRZ</code></p> <p>The CRZ gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(\nself,\ncontrol: int,\ntarget: int,\nparameter: Parameter | TNumber | sympy.Expr | str,\n):\nsuper().__init__((control,), target, parameter)\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.PHASE","title":"<code>PHASE(target, parameter)</code>","text":"<p>             Bases: <code>ParametricBlock</code></p> <p>The Parametric Phase / S gate</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, target: int, parameter: Parameter | TNumber | sympy.Expr | str):\nself.parameters = ParamMap(parameter=parameter)\nself.generator = I(target) - Z(target)\nsuper().__init__((target,))\n</code></pre>"},{"location":"qadence/operations/#hamiltonian-evolution","title":"Hamiltonian Evolution","text":"<p>AnalogSWAP should be turned into a proper analog block</p>"},{"location":"qadence/operations/#qadence.operations.HamEvo","title":"<code>HamEvo(generator, parameter, qubit_support=None)</code>","text":"<p>             Bases: <code>TimeEvolutionBlock</code></p> A block implementing the Hamiltonian evolution operation H where <p>H = exp(-iG, t)</p> <p>where G represents a square generator and t represents the time parameter which can be parametrized.</p> PARAMETER  DESCRIPTION <code>generator</code> <p>Either a AbstractBlock, torch.Tensor or numpy.ndarray.</p> <p> TYPE: <code>Union[TGenerator, AbstractBlock]</code> </p> <code>parameter</code> <p>A scalar or vector of numeric or torch.Tensor type.</p> <p> TYPE: <code>TParameter</code> </p> <code>qubit_support</code> <p>The qubits on which the evolution will be performed on.</p> <p> TYPE: <code>tuple[int, ...]</code> DEFAULT: <code>None</code> </p> <p>Examples:</p> <pre><code>from qadence import RX, HamEvo, run\nimport torch\nhevo = HamEvo(generator=RX(0, torch.pi), parameter=torch.rand(2))\nprint(run(hevo))\n# Now lets use a torch.Tensor as a generator, Now we have to pass the support\ngen = torch.rand(2,2, dtype=torch.complex128)\nhevo = HamEvo(generator=gen, parameter=torch.rand(2), qubit_support=(0,))\nprint(run(hevo))\n</code></pre> <pre><code>tensor([[ 1.2719-5.6199e-17j, -0.7859+3.4726e-17j],\n[ 1.1563-3.9082e-17j, -0.5805+1.9620e-17j]])\ntensor([[1.3878-0.3013j, 0.1284-0.0967j],\n[1.7438-0.7405j, 0.2479-0.2353j]])\n</code></pre> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(\nself,\ngenerator: Union[TGenerator, AbstractBlock],\nparameter: TParameter,\nqubit_support: tuple[int, ...] = None,\n):\ngen_exprs = {}\nif qubit_support is None and not isinstance(generator, AbstractBlock):\nraise ValueError(\"You have to supply a qubit support for non-block generators.\")\nsuper().__init__(qubit_support if qubit_support else generator.qubit_support)\nif isinstance(generator, AbstractBlock):\nqubit_support = generator.qubit_support\nif generator.is_parametric:\ngen_exprs = {str(e): e for e in expressions(generator)}\nelif isinstance(generator, torch.Tensor):\nmsg = \"Please provide a square generator.\"\nif len(generator.shape) == 2:\nassert generator.shape[0] == generator.shape[1], msg\nelif len(generator.shape) == 3:\nassert generator.shape[1] == generator.shape[2], msg\nassert generator.shape[0] == 1, \"Qadence doesnt support batched generators.\"\nelse:\nraise TypeError(\n\"Only 2D or 3D generators are supported.\\\n                            In case of a 3D generator, the batch dim\\\n                            is expected to be at dim 0.\"\n)\ngen_exprs = {str(generator.__hash__()): generator}\nelif isinstance(generator, (sympy.Basic, sympy.Array)):\ngen_exprs = {str(generator): generator}\nelse:\nraise TypeError(\nf\"Generator of type {type(generator)} not supported.\\\n                        If you're using a numpy.ndarray, please cast it to a torch tensor.\"\n)\nps = {\"parameter\": Parameter(parameter), **gen_exprs}\nself.parameters = ParamMap(**ps)\nself.generator = generator\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.HamEvo.digital_decomposition","title":"<code>digital_decomposition(approximation=LTSOrder.ST4)</code>","text":"<p>Decompose the Hamiltonian evolution into digital gates</p> PARAMETER  DESCRIPTION <code>approximation</code> <p>Choose the type of decomposition. Defaults to \"st4\". Available types are: * 'basic' = apply first-order Trotter formula and decompose each term of     the exponential into digital gates. It is exact only if applied to an     operator whose terms are mutually commuting. * 'st2' = Trotter-Suzuki 2nd order formula for approximating non-commuting     Hamiltonians. * 'st4' = Trotter-Suzuki 4th order formula for approximating non-commuting     Hamiltonians.</p> <p> TYPE: <code>str</code> DEFAULT: <code>ST4</code> </p> RETURNS DESCRIPTION <code>AbstractBlock</code> <p>a block with the digital decomposition</p> <p> TYPE: <code>AbstractBlock</code> </p> Source code in <code>qadence/operations.py</code> <pre><code>def digital_decomposition(self, approximation: LTSOrder = LTSOrder.ST4) -&gt; AbstractBlock:\n\"\"\"Decompose the Hamiltonian evolution into digital gates\n    Args:\n        approximation (str, optional): Choose the type of decomposition. Defaults to \"st4\".\n            Available types are:\n            * 'basic' = apply first-order Trotter formula and decompose each term of\n                the exponential into digital gates. It is exact only if applied to an\n                operator whose terms are mutually commuting.\n            * 'st2' = Trotter-Suzuki 2nd order formula for approximating non-commuting\n                Hamiltonians.\n            * 'st4' = Trotter-Suzuki 4th order formula for approximating non-commuting\n                Hamiltonians.\n    Returns:\n        AbstractBlock: a block with the digital decomposition\n    \"\"\"\n# psi(t) = exp(-i * H * t * psi0)\n# psi(t) = exp(-i * lambda * t * psi0)\n# H = sum(Paulin) + sum(Pauli1*Pauli2)\nlogger.info(\"Quantum simulation of the time-independent Schr\u00f6dinger equation.\")\nblocks = []\n# how to change the type/dict to enum effectively\n# when there is a term including non-commuting matrices use st2 or st4\n# 1) should check that the given generator respects the constraints\n# single-qubit gates\nassert isinstance(\nself.generator, AbstractBlock\n), \"Only a generator represented as a block can be decomposed\"\nif block_is_qubit_hamiltonian(self.generator):\ntry:\nblock_is_commuting_hamiltonian(self.generator)\napproximation = LTSOrder.BASIC  # use the simpler approach if the H is commuting\nexcept TypeError:\nlogger.warning(\n\"\"\"Non-commuting terms in the Pauli operator.\n                The Suzuki-Trotter approximation is applied.\"\"\"\n)\nblocks.extend(\nlie_trotter_suzuki(\nblock=self.generator,\nparameter=self.parameters.parameter,\norder=LTSOrder[approximation],\n)\n)\n# 2) return an AbstractBlock instance with the set of gates\n# resulting from the decomposition\nreturn chain(*blocks)\nelse:\nraise NotImplementedError(\n\"The current digital decomposition can be applied only to Pauli Hamiltonians.\"\n)\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.AnalogSWAP","title":"<code>AnalogSWAP(control, target, parameter=3 * np.pi / 4)</code>","text":"<p>             Bases: <code>HamEvo</code></p> <p>Single time-independent Hamiltonian evolution over a Rydberg Ising hamiltonian yielding a SWAP (up to global phase).</p> <p>Derived from Bapat et al. where it is applied to XX-type Hamiltonian</p> Source code in <code>qadence/operations.py</code> <pre><code>def __init__(self, control: int, target: int, parameter: TParameter = 3 * np.pi / 4):\nrydberg_ising_hamiltonian_generator = (\n4.0 * kron((I(control) - Z(control)) / 2.0, (I(target) - Z(target)) / 2.0)\n+ (2.0 / 3.0) * np.sqrt(2.0) * X(control)\n+ (2.0 / 3.0) * np.sqrt(2.0) * X(target)\n+ (1.0 + np.sqrt(5.0) / 3) * Z(control)\n+ (1.0 + np.sqrt(5.0) / 3) * Z(target)\n)\nsuper().__init__(rydberg_ising_hamiltonian_generator, parameter, (control, target))\n</code></pre>"},{"location":"qadence/operations/#analog-blocks","title":"Analog blocks","text":""},{"location":"qadence/operations/#qadence.operations.AnalogRX","title":"<code>AnalogRX(angle, qubit_support='global')</code>","text":"<p>Analog X rotation. Shorthand for <code>AnalogRot</code>:</p> <pre><code>\u03c6=2.4; \u03a9=\u03c0; t = \u03c6/\u03a9 * 1000\nAnalogRot(duration=t, omega=\u03a9)\n</code></pre> PARAMETER  DESCRIPTION <code>angle</code> <p>Rotation angle [rad]</p> <p> TYPE: <code>float | str | Parameter</code> </p> <code>qubit_support</code> <p>Defines the (local/global) qubit support</p> <p> TYPE: <code>str | QubitSupport | Tuple</code> DEFAULT: <code>'global'</code> </p> RETURNS DESCRIPTION <code>ConstantAnalogRotation</code> <p>ConstantAnalogRotation</p> Source code in <code>qadence/operations.py</code> <pre><code>def AnalogRX(\nangle: float | str | Parameter,\nqubit_support: str | QubitSupport | Tuple = \"global\",\n) -&gt; ConstantAnalogRotation:\n\"\"\"Analog X rotation. Shorthand for [`AnalogRot`][qadence.operations.AnalogRot]:\n    ```python\n    \u03c6=2.4; \u03a9=\u03c0; t = \u03c6/\u03a9 * 1000\n    AnalogRot(duration=t, omega=\u03a9)\n    ```\n    Arguments:\n        angle: Rotation angle [rad]\n        qubit_support: Defines the (local/global) qubit support\n    Returns:\n        ConstantAnalogRotation\n    \"\"\"\nreturn _analog_rot(angle, qubit_support, phase=0)\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.AnalogRY","title":"<code>AnalogRY(angle, qubit_support='global')</code>","text":"<p>Analog Y rotation. Shorthand for <code>AnalogRot</code>:</p> <p><pre><code>\u03c6=2.4; \u03a9=\u03c0; t = \u03c6/\u03a9 * 1000\nAnalogRot(duration=t, omega=\u03a9, phase=-\u03c0/2)\n</code></pre> Arguments:     angle: Rotation angle [rad]     qubit_support: Defines the (local/global) qubit support</p> RETURNS DESCRIPTION <code>ConstantAnalogRotation</code> <p>ConstantAnalogRotation</p> Source code in <code>qadence/operations.py</code> <pre><code>def AnalogRY(\nangle: float | str | Parameter,\nqubit_support: str | QubitSupport | Tuple = \"global\",\n) -&gt; ConstantAnalogRotation:\n\"\"\"Analog Y rotation. Shorthand for [`AnalogRot`][qadence.operations.AnalogRot]:\n    ```python\n    \u03c6=2.4; \u03a9=\u03c0; t = \u03c6/\u03a9 * 1000\n    AnalogRot(duration=t, omega=\u03a9, phase=-\u03c0/2)\n    ```\n    Arguments:\n        angle: Rotation angle [rad]\n        qubit_support: Defines the (local/global) qubit support\n    Returns:\n        ConstantAnalogRotation\n    \"\"\"\nreturn _analog_rot(angle, qubit_support, phase=-np.pi / 2)\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.AnalogRZ","title":"<code>AnalogRZ(angle, qubit_support='global')</code>","text":"<p>Analog Z rotation. Shorthand for <code>AnalogRot</code>: <pre><code>\u03c6=2.4; \u03b4=\u03c0; t = \u03c6/\u03b4 * 100)\nAnalogRot(duration=t, delta=\u03b4, phase=\u03c0/2)\n</code></pre></p> Source code in <code>qadence/operations.py</code> <pre><code>def AnalogRZ(\nangle: float | str | Parameter,\nqubit_support: str | QubitSupport | Tuple = \"global\",\n) -&gt; ConstantAnalogRotation:\n\"\"\"Analog Z rotation. Shorthand for [`AnalogRot`][qadence.operations.AnalogRot]:\n    ```\n    \u03c6=2.4; \u03b4=\u03c0; t = \u03c6/\u03b4 * 100)\n    AnalogRot(duration=t, delta=\u03b4, phase=\u03c0/2)\n    ```\n    \"\"\"\nq = _cast(QubitSupport, qubit_support)\nalpha = _cast(Parameter, angle)\ndelta = np.pi\nduration = alpha / delta * 1000\nps = ParamMap(alpha=alpha, duration=duration, omega=0, delta=delta, phase=np.pi / 2)\nreturn ConstantAnalogRotation(qubit_support=q, parameters=ps)\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.AnalogRot","title":"<code>AnalogRot(duration=1000.0, omega=0, delta=0, phase=0, qubit_support='global')</code>","text":"<p>General analog rotation operation.</p> PARAMETER  DESCRIPTION <code>duration</code> <p>Duration of the rotation [ns].</p> <p> TYPE: <code>float | str | Parameter</code> DEFAULT: <code>1000.0</code> </p> <code>omega</code> <p>Rotation frequency [rad/\u03bcs]</p> <p> TYPE: <code>float | str | Parameter</code> DEFAULT: <code>0</code> </p> <code>delta</code> <p>Rotation frequency [rad/\u03bcs]</p> <p> TYPE: <code>float | str | Parameter</code> DEFAULT: <code>0</code> </p> <code>phase</code> <p>Phase angle [rad]</p> <p> TYPE: <code>float | str | Parameter</code> DEFAULT: <code>0</code> </p> <code>qubit_support</code> <p>Defines the (local/global) qubit support</p> <p> TYPE: <code>str | QubitSupport | Tuple</code> DEFAULT: <code>'global'</code> </p> RETURNS DESCRIPTION <code>ConstantAnalogRotation</code> <p>ConstantAnalogRotation</p> Source code in <code>qadence/operations.py</code> <pre><code>def AnalogRot(\nduration: float | str | Parameter = 1000.0,\nomega: float | str | Parameter = 0,\ndelta: float | str | Parameter = 0,\nphase: float | str | Parameter = 0,\nqubit_support: str | QubitSupport | Tuple = \"global\",\n) -&gt; ConstantAnalogRotation:\n\"\"\"General analog rotation operation.\n    Arguments:\n        duration: Duration of the rotation [ns].\n        omega: Rotation frequency [rad/\u03bcs]\n        delta: Rotation frequency [rad/\u03bcs]\n        phase: Phase angle [rad]\n        qubit_support: Defines the (local/global) qubit support\n    Returns:\n        ConstantAnalogRotation\n    \"\"\"\nq = _cast(QubitSupport, qubit_support)\nif isinstance(duration, str):\nduration = Parameter(duration)\nalpha = duration * sympy.sqrt(omega**2 + delta**2) / 1000  # type: ignore [operator]\nps = ParamMap(alpha=alpha, duration=duration, omega=omega, delta=delta, phase=phase)\nreturn ConstantAnalogRotation(parameters=ps, qubit_support=q)\n</code></pre>"},{"location":"qadence/operations/#qadence.operations.wait","title":"<code>wait(duration, qubit_support='global')</code>","text":"<p>Constructs a <code>WaitBlock</code>.</p> PARAMETER  DESCRIPTION <code>duration</code> <p>Time to wait in nanoseconds.</p> <p> TYPE: <code>TNumber | Basic</code> </p> <code>qubit_support</code> <p>Qubits the <code>WaitBlock</code> is applied to. Can be either <code>\"global\"</code> to apply the wait block to all qubits or a tuple of integers.</p> <p> TYPE: <code>str | QubitSupport | tuple</code> DEFAULT: <code>'global'</code> </p> RETURNS DESCRIPTION <code>WaitBlock</code> <p>a <code>WaitBlock</code></p> Source code in <code>qadence/operations.py</code> <pre><code>def wait(\nduration: TNumber | sympy.Basic,\nqubit_support: str | QubitSupport | tuple = \"global\",\n) -&gt; WaitBlock:\n\"\"\"Constructs a [`WaitBlock`][qadence.blocks.analog.WaitBlock].\n    Arguments:\n        duration: Time to wait in nanoseconds.\n        qubit_support: Qubits the `WaitBlock` is applied to. Can be either\n            `\"global\"` to apply the wait block to all qubits or a tuple of integers.\n    Returns:\n        a `WaitBlock`\n    \"\"\"\nq = _cast(QubitSupport, qubit_support)\nps = ParamMap(duration=duration)\nreturn WaitBlock(parameters=ps, qubit_support=q)\n</code></pre>"},{"location":"qadence/parameters/","title":"Parameters","text":""},{"location":"qadence/parameters/#parameters","title":"Parameters","text":""},{"location":"qadence/parameters/#qadence.parameters.ParamMap","title":"<code>ParamMap(**kwargs)</code>","text":"<p>Connects UUIDs of parameters to their expressions and names. This class is not user-facing and only needed for more complex block definitions. It provides convenient access to expressions/UUIDs/names needed in different backends.</p> PARAMETER  DESCRIPTION <code>kwargs</code> <p>Parameters.</p> <p> TYPE: <code>str | TNumber | Tensor | Basic | Parameter</code> DEFAULT: <code>{}</code> </p> <p>Example: <pre><code>import sympy\nfrom qadence.parameters import ParamMap\n(x,y) = sympy.symbols(\"x y\")\nps = ParamMap(omega=2.0, duration=x+y)\nprint(f\"{ps.names() = }\")\nprint(f\"{ps.expressions() = }\")\nprint(f\"{ps.uuids() = }\")\n</code></pre> <pre><code>ps.names() = dict_keys(['omega', 'duration'])\nps.expressions() = dict_values([2.00000000000000, x + y])\nps.uuids() = dict_keys(['e3fd2114-f692-4c43-bb1e-d8c87db7741d', '70a8d721-eb22-4f9b-aeeb-1de9e5c1b2f8'])\n</code></pre> </p> Source code in <code>qadence/parameters.py</code> <pre><code>def __init__(self, **kwargs: str | TNumber | Tensor | Basic | Parameter):\nself._name_dict: dict[str, tuple[str, Basic]] = {}\nself._uuid_dict: dict[str, str] = {}\nfor name, v in kwargs.items():\nparam = v if isinstance(v, sympy.Basic) else Parameter(v)\nuuid = str(uuid4())\nself._name_dict[name] = (uuid, param)\nself._uuid_dict[uuid] = param\n</code></pre>"},{"location":"qadence/parameters/#qadence.parameters.Parameter","title":"<code>Parameter</code>","text":"<p>             Bases: <code>Symbol</code></p> <p>A wrapper on top of <code>sympy.Symbol</code> to include two additional keywords: <code>trainable</code> and <code>value</code>. This class is to define both feature parameter and variational parameters.</p>"},{"location":"qadence/parameters/#qadence.parameters.Parameter.trainable","title":"<code>trainable: bool</code>  <code>instance-attribute</code>","text":"<p>Trainable parameters are variational parameters. Non-trainable parameters are feature parameters.</p>"},{"location":"qadence/parameters/#qadence.parameters.Parameter.value","title":"<code>value: TNumber</code>  <code>instance-attribute</code>","text":"<p>(Initial) value of the parameter.</p>"},{"location":"qadence/parameters/#qadence.parameters.Parameter.__new__","title":"<code>__new__(name, **assumptions)</code>","text":"PARAMETER  DESCRIPTION <code>name</code> <p>When given a string only, the class constructs a trainable Parameter with a a randomly initialized value.</p> <p> TYPE: <code>str | TNumber | Tensor | Basic | Parameter</code> </p> <code>**assumptions</code> <p>are passed on to the parent class <code>sympy.Symbol</code>. Two new assumption kwargs are supported by this constructor: <code>trainable: bool</code>, and <code>value: TNumber</code>.</p> <p> TYPE: <code>Any</code> DEFAULT: <code>{}</code> </p> <p>Example: <pre><code>from qadence import Parameter, VariationalParameter\ntheta = Parameter(\"theta\")\nprint(f\"{theta}: trainable={theta.trainable} value={theta.value}\")\nassert not theta.is_number\n# you can specify both trainable/value in the constructor\ntheta = Parameter(\"theta\", trainable=True, value=2.0)\nprint(f\"{theta}: trainable={theta.trainable} value={theta.value}\")\n# VariationalParameter/FeatureParameter are constructing\n# trainable/untrainable Parameters\ntheta = VariationalParameter(\"theta\", value=2.0)\nassert theta == Parameter(\"theta\", trainable=True, value=2.0)\n# When provided with a numeric type, Parameter constructs a sympy numeric type\":\nconstant_zero = Parameter(0)\nassert constant_zero.is_number\n# When passed a Parameter or a sympy expression, it just returns it.\nexpr = Parameter(\"x\") * Parameter(\"y\")\nprint(f\"{expr=} : {expr.free_symbols}\")\n</code></pre> <pre><code>theta: trainable=True value=0.4794504055083816\ntheta: trainable=True value=2.0\nexpr=x*y : {y, x}\n</code></pre> </p> Source code in <code>qadence/parameters.py</code> <pre><code>def __new__(\ncls, name: str | TNumber | Tensor | Basic | Parameter, **assumptions: Any\n) -&gt; Parameter | Basic | Expr | Array:\n\"\"\"\n    Arguments:\n        name: When given a string only, the class\n            constructs a trainable Parameter with a a randomly initialized value.\n        **assumptions: are passed on to the parent class `sympy.Symbol`. Two new assumption\n            kwargs are supported by this constructor: `trainable: bool`, and `value: TNumber`.\n    Example:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import Parameter, VariationalParameter\n    theta = Parameter(\"theta\")\n    print(f\"{theta}: trainable={theta.trainable} value={theta.value}\")\n    assert not theta.is_number\n    # you can specify both trainable/value in the constructor\n    theta = Parameter(\"theta\", trainable=True, value=2.0)\n    print(f\"{theta}: trainable={theta.trainable} value={theta.value}\")\n    # VariationalParameter/FeatureParameter are constructing\n    # trainable/untrainable Parameters\n    theta = VariationalParameter(\"theta\", value=2.0)\n    assert theta == Parameter(\"theta\", trainable=True, value=2.0)\n    # When provided with a numeric type, Parameter constructs a sympy numeric type\":\n    constant_zero = Parameter(0)\n    assert constant_zero.is_number\n    # When passed a Parameter or a sympy expression, it just returns it.\n    expr = Parameter(\"x\") * Parameter(\"y\")\n    print(f\"{expr=} : {expr.free_symbols}\")\n    ```\n    \"\"\"\np: Parameter\nif isinstance(name, get_args(TNumber)):\nreturn sympify(name)\nelif isinstance(name, Tensor):\nif name.numel() == 1:\nreturn sympify(name)\nelse:\nreturn Array(name.detach().numpy())\nelif isinstance(name, Parameter):\np = super().__new__(cls, name.name, **assumptions)\np.name = name.name\np.trainable = name.trainable\np.value = name.value\nreturn p\nelif isinstance(name, (Basic, Expr)):\nif name.is_number:\nreturn sympify(evaluate(name))\nreturn name\nelif isinstance(name, str):\np = super().__new__(cls, name, **assumptions)\np.trainable = assumptions.get(\"trainable\", True)\np.value = assumptions.get(\"value\", None)\nif p.value is None:\np.value = torch.rand(1).item()\nreturn p\nelse:\nraise TypeError(f\"Parameter does not support type {type(name)}\")\n</code></pre>"},{"location":"qadence/parameters/#qadence.parameters.FeatureParameter","title":"<code>FeatureParameter(name, **kwargs)</code>","text":"<p>Shorthand for <code>Parameter(..., trainable=False)</code>.</p> Source code in <code>qadence/parameters.py</code> <pre><code>def FeatureParameter(name: str, **kwargs: Any) -&gt; Parameter:\n\"\"\"Shorthand for `Parameter(..., trainable=False)`.\"\"\"\nreturn Parameter(name, trainable=False, **kwargs)\n</code></pre>"},{"location":"qadence/parameters/#qadence.parameters.VariationalParameter","title":"<code>VariationalParameter(name, **kwargs)</code>","text":"<p>Shorthand for <code>Parameter(..., trainable=True)</code>.</p> Source code in <code>qadence/parameters.py</code> <pre><code>def VariationalParameter(name: str, **kwargs: Any) -&gt; Parameter:\n\"\"\"Shorthand for `Parameter(..., trainable=True)`.\"\"\"\nreturn Parameter(name, trainable=True, **kwargs)\n</code></pre>"},{"location":"qadence/parameters/#qadence.parameters.evaluate","title":"<code>evaluate(expr, values={}, as_torch=False)</code>","text":"PARAMETER  DESCRIPTION <code>expr</code> <p>An expression consisting of Parameters.</p> <p> TYPE: <code>Expr</code> </p> <code>values</code> <p>values dict which contains values for the Parameters, if empty, Parameter.value will be used.</p> <p> TYPE: <code>dict</code> DEFAULT: <code>{}</code> </p> <code>as_torch</code> <p>Whether to retrieve a torch-differentiable expression result.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <p>Example: <pre><code>from qadence.parameters import Parameter, evaluate\nexpr = Parameter(\"x\") * Parameter(\"y\")\n# Unless specified, Parameter initialized random values\n# Lets evaluate this expression and see what the result is\nres = evaluate(expr)\nprint(res)\n# We can also evaluate the expr using a custom dict\nd = {\"x\": 1, \"y\":2}\nres = evaluate(expr, d)\nprint(res)\n# Lastly, if we want a differentiable result, lets put the as_torch flag\nres = evaluate(expr, d, as_torch=True)\nprint(res)\n</code></pre> <pre><code>0.1160196184796376\n2.0\ntensor([2])\n</code></pre> </p> Source code in <code>qadence/parameters.py</code> <pre><code>def evaluate(expr: Expr, values: dict = {}, as_torch: bool = False) -&gt; TNumber | Tensor:\n\"\"\"\n    Arguments:\n        expr: An expression consisting of Parameters.\n        values: values dict which contains values for the Parameters,\n            if empty, Parameter.value will be used.\n        as_torch: Whether to retrieve a torch-differentiable expression result.\n    Example:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.parameters import Parameter, evaluate\n    expr = Parameter(\"x\") * Parameter(\"y\")\n    # Unless specified, Parameter initialized random values\n    # Lets evaluate this expression and see what the result is\n    res = evaluate(expr)\n    print(res)\n    # We can also evaluate the expr using a custom dict\n    d = {\"x\": 1, \"y\":2}\n    res = evaluate(expr, d)\n    print(res)\n    # Lastly, if we want a differentiable result, lets put the as_torch flag\n    res = evaluate(expr, d, as_torch=True)\n    print(res)\n    ```\n    \"\"\"\nres: Basic\nres_value: TNumber | Tensor\nquery: dict[Parameter, TNumber | Tensor] = {}\nif isinstance(expr, Array):\nreturn torch.Tensor(expr.tolist())\nelse:\nif not expr.is_number:\nfor s in expr.free_symbols:\nif s.name in values.keys():\nquery[s] = values[s.name]\nelif hasattr(s, \"value\"):\nquery[s] = s.value\nelse:\nraise ValueError(f\"No value provided for symbol {s.name}\")\nif as_torch:\nres_value = torchify(expr)(**{s.name: torch.tensor(v) for s, v in query.items()})\nelse:\nres = expr.subs(query)\nres_value = sympy_to_numeric(res)\nreturn res_value\n</code></pre>"},{"location":"qadence/parameters/#qadence.parameters.extract_original_param_entry","title":"<code>extract_original_param_entry(param)</code>","text":"<p>Given an Expression, what was the original \"param\" given by the user? It is either going to be a numeric value, or a sympy Expression (in case a string was given, it was converted via Parameter(\"string\").</p> Source code in <code>qadence/parameters.py</code> <pre><code>def extract_original_param_entry(\nparam: Expr,\n) -&gt; TNumber | Tensor | Expr:\n\"\"\"\n    Given an Expression, what was the original \"param\" given by the user? It is either\n    going to be a numeric value, or a sympy Expression (in case a string was given,\n    it was converted via Parameter(\"string\").\n    \"\"\"\nreturn param if not param.is_number else evaluate(param)\n</code></pre>"},{"location":"qadence/parameters/#qadence.parameters.torchify","title":"<code>torchify(expr)</code>","text":"PARAMETER  DESCRIPTION <code>expr</code> <p>An expression consisting of Parameters.</p> <p> TYPE: <code>Expr</code> </p> RETURNS DESCRIPTION <code>SymPyModule</code> <p>A torchified, differentiable Expression.</p> Source code in <code>qadence/parameters.py</code> <pre><code>def torchify(expr: Expr) -&gt; SymPyModule:\n\"\"\"\n    Arguments:\n        expr: An expression consisting of Parameters.\n    Returns:\n        A torchified, differentiable Expression.\n    \"\"\"\nextra_funcs = {sympy.core.numbers.ImaginaryUnit: 1.0j}\nreturn SymPyModule(expressions=[expr], extra_funcs=extra_funcs)\n</code></pre>"},{"location":"qadence/parameters/#parameter-embedding","title":"Parameter embedding","text":""},{"location":"qadence/parameters/#qadence.blocks.embedding.embedding","title":"<code>embedding(block, to_gate_params=False)</code>","text":"<p>Construct embedding function which maps user-facing parameters to either expression-level parameters or gate-level parameters. The construced embedding function has the signature:</p> <pre><code> embedding_fn(params: StrTensorDict, inputs: StrTensorDict) -&gt; StrTensorDict:\n</code></pre> <p>which means that it maps the variational parameter dict <code>params</code> and the feature parameter dict <code>inputs</code> to one new parameter dict <code>embedded_dict</code> which holds all parameters that are needed to execute a circuit on a given backend. There are two different modes for this mapping:</p> <ul> <li>Expression-level parameters: For AD-based optimization. For every unique expression we end   up with one entry in the embedded dict:   <code>len(embedded_dict) == len(unique_parameter_expressions)</code>.</li> <li>Gate-level parameters: For PSR-based optimization or real devices. One parameter for each   gate parameter, regardless if they are based on the same expression. <code>len(embedded_dict) ==   len(parametric_gates)</code>. This is needed because PSR requires to shift the angles of every   gate where the same parameter appears.</li> </ul> PARAMETER  DESCRIPTION <code>block</code> <p>parametrized block into which we want to embed parameters.</p> <p> TYPE: <code>AbstractBlock</code> </p> <code>to_gate_params</code> <p>A boolean flag whether to generate gate-level parameters or expression-level parameters.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> RETURNS DESCRIPTION <code>tuple[StrTensorDict, Callable[[StrTensorDict, StrTensorDict], StrTensorDict]]</code> <p>A tuple with variational parameter dict and the embedding function.</p> Source code in <code>qadence/blocks/embedding.py</code> <pre><code>def embedding(\nblock: AbstractBlock, to_gate_params: bool = False\n) -&gt; tuple[StrTensorDict, Callable[[StrTensorDict, StrTensorDict], StrTensorDict],]:\n\"\"\"Construct embedding function which maps user-facing parameters to either *expression-level*\n    parameters or *gate-level* parameters. The construced embedding function has the signature:\n         embedding_fn(params: StrTensorDict, inputs: StrTensorDict) -&gt; StrTensorDict:\n    which means that it maps the *variational* parameter dict `params` and the *feature* parameter\n    dict `inputs` to one new parameter dict `embedded_dict` which holds all parameters that are\n    needed to execute a circuit on a given backend. There are two different *modes* for this\n    mapping:\n    - *Expression-level* parameters: For AD-based optimization. For every unique expression we end\n      up with one entry in the embedded dict:\n      `len(embedded_dict) == len(unique_parameter_expressions)`.\n    - *Gate-level* parameters: For PSR-based optimization or real devices. One parameter for each\n      gate parameter, regardless if they are based on the same expression. `len(embedded_dict) ==\n      len(parametric_gates)`. This is needed because PSR requires to shift the angles of **every**\n      gate where the same parameter appears.\n    Arguments:\n        block: parametrized block into which we want to embed parameters.\n        to_gate_params: A boolean flag whether to generate gate-level parameters or\n            expression-level parameters.\n    Returns:\n        A tuple with variational parameter dict and the embedding function.\n    \"\"\"\nunique_expressions = unique(expressions(block))\nunique_symbols = [p for p in unique(parameters(block)) if not isinstance(p, sympy.Array)]\nunique_const_matrices = [e for e in unique_expressions if isinstance(e, sympy.Array)]\nunique_expressions = [e for e in unique_expressions if not isinstance(e, sympy.Array)]\n# NOTE\n# there are 3 kinds of parameters in qadence\n# - non-trainable which are considered as inputs for classical data\n# - trainable which are the variational parameters to be optimized\n# - fixed: which are non-trainable parameters with fixed value (e.g. pi/2)\n#\n# both non-trainable and trainable parameters can have the same element applied\n# to different operations in the quantum circuit, e.g. assigning the same parameter\n# to multiple gates.\nnon_numeric_symbols = [p for p in unique_symbols if not p.is_number]\ntrainable_symbols = [p for p in non_numeric_symbols if p.trainable]\nconstant_expressions = [expr for expr in unique_expressions if expr.is_number]\n# we dont need to care about constant symbols if they are contained in an symbolic expression\n# we only care about gate params which are ONLY a constant\nembeddings: dict[sympy.Expr, sympytorch.SymPyModule] = {\nexpr: torchify(expr) for expr in unique_expressions if not expr.is_number\n}\nuuid_to_expr = uuid_to_expression(block)\ndef embedding_fn(params: StrTensorDict, inputs: StrTensorDict) -&gt; StrTensorDict:\nembedded_params: dict[sympy.Expr, Tensor] = {}\nfor expr, fn in embeddings.items():\nangle: Tensor\nvalues = {}\nfor symbol in expr.free_symbols:\nif symbol.name in inputs:\nvalue = inputs[symbol.name]\nelif symbol.name in params:\nvalue = params[symbol.name]\nelse:\nmsg_trainable = \"Trainable\" if symbol.trainable else \"Non-trainable\"\nraise KeyError(\nf\"{msg_trainable} parameter '{symbol.name}' not found in the \"\nf\"inputs list: {list(inputs.keys())} nor the \"\nf\"params list: {list(params.keys())}.\"\n)\nvalues[symbol.name] = value\nangle = fn(**values)\n# do not reshape parameters which are multi-dimensional\n# tensors, such as for example generator matrices\nif not len(angle.squeeze().shape) &gt; 1:\nangle = angle.reshape(-1)\nembedded_params[expr] = angle\nfor e in constant_expressions + unique_const_matrices:\nembedded_params[e] = params[stringify(e)]\nif to_gate_params:\ngate_lvl_params: StrTensorDict = {}\nfor uuid, e in uuid_to_expr.items():\ngate_lvl_params[uuid] = embedded_params[e]\nreturn gate_lvl_params\nelse:\nreturn {stringify(k): v for k, v in embedded_params.items()}\nparams: StrTensorDict\nparams = {p.name: torch.tensor([p.value], requires_grad=True) for p in trainable_symbols}\nparams.update(\n{\nstringify(expr): torch.tensor([evaluate(expr)], requires_grad=False)\nfor expr in constant_expressions\n}\n)\nparams.update(\n{\nstringify(expr): torch.tensor(\nnp.array(expr.tolist(), dtype=np.cdouble), requires_grad=False\n)\nfor expr in unique_const_matrices\n}\n)\nreturn params, embedding_fn\n</code></pre>"},{"location":"qadence/quantumcircuit/","title":"QuantumCircuit","text":""},{"location":"qadence/quantumcircuit/#quantumcircuit","title":"QuantumCircuit","text":"<p>The abstract <code>QuantumCircuit</code> is the key object in Qadence, as it is what can be executed.</p>"},{"location":"qadence/quantumcircuit/#qadence.circuit.QuantumCircuit","title":"<code>QuantumCircuit(support, *blocks)</code>  <code>dataclass</code>","text":"<p>A QuantumCircuit instance is completely abstract and it needs to be passed to a quantum backend in order to be executed.</p> PARAMETER  DESCRIPTION <code>support</code> <p><code>Register</code> or number of qubits. If an integer is provided, a register is constructed with <code>Register.all_to_all(x)</code></p> <p> TYPE: <code>int | Register</code> </p> <code>*blocks</code> <p>(Possibly multiple) blocks to construct the circuit from.</p> <p> TYPE: <code>AbstractBlock</code> DEFAULT: <code>()</code> </p> Source code in <code>qadence/circuit.py</code> <pre><code>def __init__(self, support: int | Register, *blocks: AbstractBlock):\n\"\"\"\n    Arguments:\n        support: `Register` or number of qubits. If an integer is provided, a register is\n            constructed with `Register.all_to_all(x)`\n        *blocks: (Possibly multiple) blocks to construct the circuit from.\n    \"\"\"\nself.block = chain(*blocks) if len(blocks) != 1 else blocks[0]\nself.register = Register(support) if isinstance(support, int) else support\nglobal_block = isinstance(self.block, AnalogBlock) and self.block.qubit_support.is_global\nif not global_block and len(self.block) and self.block.n_qubits &gt; self.register.n_qubits:\nraise ValueError(\nf\"Register with {self.register.n_qubits} qubits is too small for the \"\nf\"given block with {self.block.n_qubits} qubits\"\n)\n</code></pre>"},{"location":"qadence/quantumcircuit/#qadence.circuit.QuantumCircuit.unique_parameters","title":"<code>unique_parameters: list[Parameter]</code>  <code>property</code>","text":"<p>Return the unique parameters in the circuit</p> <p>These parameters are the actual user-facing parameters which can be assigned by the user. Multiple gates can contain the same unique parameter</p> RETURNS DESCRIPTION <code>list[Parameter]</code> <p>list[Parameter]: List of unique parameters in the circuit</p>"},{"location":"qadence/quantumcircuit/#qadence.circuit.QuantumCircuit.get_blocks_by_tag","title":"<code>get_blocks_by_tag(tag)</code>","text":"<p>Extract one or more blocks using the human-readable tag</p> <p>This function recurservily explores all composite blocks to find all the occurrences of a certain tag in the blocks</p> PARAMETER  DESCRIPTION <code>tag</code> <p>the tag to look for</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>list[AbstractBlock]</code> <p>list[AbstractBlock]: The block(s) corresponding to the given tag</p> Source code in <code>qadence/circuit.py</code> <pre><code>def get_blocks_by_tag(self, tag: str) -&gt; list[AbstractBlock]:\n\"\"\"Extract one or more blocks using the human-readable tag\n    This function recurservily explores all composite blocks to find\n    all the occurrences of a certain tag in the blocks\n    Args:\n        tag (str): the tag to look for\n    Returns:\n        list[AbstractBlock]: The block(s) corresponding to the given tag\n    \"\"\"\ndef _get_block(block: AbstractBlock) -&gt; list[AbstractBlock]:\nblocks = []\nif block.tag == tag:\nblocks += [block]\nif isinstance(block, CompositeBlock):\nblocks += flatten(*[_get_block(b) for b in block.blocks])\nreturn blocks\nreturn _get_block(self.block)\n</code></pre>"},{"location":"qadence/quantumcircuit/#qadence.circuit.QuantumCircuit.parameters","title":"<code>parameters()</code>","text":"<p>Extract all parameters for primitive blocks in the circuit</p> <p>Notice that this function returns all the unique Parameters used in the quantum circuit. These can correspond to constants too.</p> RETURNS DESCRIPTION <code>list[Parameter | Basic] | list[tuple[Parameter | Basic, ...]]</code> <p>List[tuple[Parameter]]: A list of tuples containing the Parameter</p> <code>list[Parameter | Basic] | list[tuple[Parameter | Basic, ...]]</code> <p>instance of each of the primitive blocks in the circuit or, if the <code>flatten</code></p> <code>list[Parameter | Basic] | list[tuple[Parameter | Basic, ...]]</code> <p>flag is set to True, a flattened list of all circuit parameters</p> Source code in <code>qadence/circuit.py</code> <pre><code>def parameters(self) -&gt; list[Parameter | Basic] | list[tuple[Parameter | Basic, ...]]:\n\"\"\"Extract all parameters for primitive blocks in the circuit\n    Notice that this function returns all the unique Parameters used\n    in the quantum circuit. These can correspond to constants too.\n    Returns:\n        List[tuple[Parameter]]: A list of tuples containing the Parameter\n        instance of each of the primitive blocks in the circuit or, if the `flatten`\n        flag is set to True, a flattened list of all circuit parameters\n    \"\"\"\nreturn parameters(self.block)\n</code></pre>"},{"location":"qadence/register/","title":"Register","text":""},{"location":"qadence/register/#quantum-registers","title":"Quantum Registers","text":""},{"location":"qadence/register/#qadence.register.Register","title":"<code>Register(support)</code>","text":"<p>A 2D register of qubits which includes their coordinates (needed for e.g. analog computing). The coordinates are ignored in backends that don't need them. The easiest way to construct a register is via its classmethods like <code>Register.triangular_lattice</code>.</p> PARAMETER  DESCRIPTION <code>support</code> <p>A graph or number of qubits. Nodes can include a <code>\"pos\"</code> attribute such that e.g.: <code>graph.nodes = {0: {\"pos\": (2,3)}, 1: {\"pos\": (0,0)}, ...}</code> which will be used in backends that need qubit coordinates. See the classmethods for simple construction of some predefined lattices if you don't want to build a graph manually. If you pass an integer the resulting register is the same as <code>Register.all_to_all(n_qubits)</code>.</p> <p> TYPE: <code>Graph | int</code> </p> <p>Examples: <pre><code>from qadence import Register\nreg = Register.honeycomb_lattice(2,3)\nreg.draw()\n</code></pre> <pre><code>\n</code></pre> </p> Source code in <code>qadence/register.py</code> <pre><code>def __init__(self, support: nx.Graph | int):\n\"\"\"A 2D register of qubits which includes their coordinates (needed for e.g. analog\n    computing). The coordinates are ignored in backends that don't need them. The easiest\n    way to construct a register is via its classmethods like `Register.triangular_lattice`.\n    Arguments:\n        support: A graph or number of qubits. Nodes can include a `\"pos\"` attribute\n            such that e.g.: `graph.nodes = {0: {\"pos\": (2,3)}, 1: {\"pos\": (0,0)}, ...}` which\n            will be used in backends that need qubit coordinates.\n            See the classmethods for simple construction of some predefined lattices if you\n            don't want to build a graph manually.\n            If you pass an integer the resulting register is the same as\n            `Register.all_to_all(n_qubits)`.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import Register\n    reg = Register.honeycomb_lattice(2,3)\n    reg.draw()\n    ```\n    \"\"\"\nself.graph = support if isinstance(support, nx.Graph) else alltoall_graph(support)\n</code></pre>"},{"location":"qadence/register/#qadence.register.line_graph","title":"<code>line_graph(n_qubits, spacing=1.0)</code>","text":"<p>Create graph representing linear lattice.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>number of nodes in the graph</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>Graph</code> <p>graph instance</p> Source code in <code>qadence/register.py</code> <pre><code>def line_graph(n_qubits: int, spacing: float = 1.0) -&gt; nx.Graph:\n\"\"\"Create graph representing linear lattice.\n    Args:\n        n_qubits (int): number of nodes in the graph\n    Returns:\n        graph instance\n    \"\"\"\ngraph = nx.Graph()\nfor i in range(n_qubits):\ngraph.add_node(i, pos=(i * spacing, 0.0))\nfor i, j in zip(range(n_qubits - 1), range(1, n_qubits)):\ngraph.add_edge(i, j)\nreturn graph\n</code></pre>"},{"location":"qadence/serialization/","title":"Serialization","text":""},{"location":"qadence/serialization/#serialization","title":"Serialization","text":""},{"location":"qadence/serialization/#qadence.serialization.deserialize","title":"<code>deserialize(d, as_torch=False)</code>","text":"<p>Supported Types: AbstractBlock | QuantumCircuit | QuantumModel | TransformedModule | Register | Module Deserializes a dict to one of the supported types.</p> PARAMETER  DESCRIPTION <code>d</code> <p>A dict containing a serialized object.</p> <p> TYPE: <code>dict</code> </p> <p>Returns:     AbstractBlock, QuantumCircuit, QuantumModel, TransformedModule, Register, Module.</p> <p>Examples: <pre><code>import torch\nfrom qadence import serialize, deserialize, hea, hamiltonian_factory, Z\nfrom qadence import QuantumCircuit, QuantumModel\nn_qubits = 2\nmyblock = hea(n_qubits=n_qubits, depth=1)\nblock_dict = serialize(myblock)\nprint(block_dict)\n## Lets use myblock in a QuantumCircuit and serialize it.\nqc = QuantumCircuit(n_qubits, myblock)\nqc_dict = serialize(qc)\nqc_deserialized = deserialize(qc_dict)\nassert qc == qc_deserialized\n## Finally, let's wrap it in a QuantumModel\nobs = hamiltonian_factory(n_qubits, detuning = Z)\nqm = QuantumModel(qc, obs, backend='pyqtorch', diff_mode='ad')\nqm_dict = serialize(qm)\nqm_deserialized = deserialize(qm_dict)\n# Lets check if the loaded QuantumModel returns the same expectation\nassert torch.isclose(qm.expectation({}), qm_deserialized.expectation({}))\n</code></pre> <pre><code>{'type': 'ChainBlock', 'qubit_support': (0, 1), 'tag': 'HEA', 'blocks': [{'type': 'ChainBlock', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'KronBlock', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'RX', 'qubit_support': (0,), 'tag': None, 'parameters': {'_name_dict': {'parameter': ('0af1542c-6809-4131-8fb5-be74d12d16e5', {'name': 'theta_0', 'expression': \"Parameter('theta_0')\", 'symbols': {'theta_0': {'name': 'theta_0', 'trainable': 'True', 'value': '0.9256455905063217'}}})}}}, {'type': 'RX', 'qubit_support': (1,), 'tag': None, 'parameters': {'_name_dict': {'parameter': ('ae9d1d52-ccb5-4e07-a933-754a1abec97e', {'name': 'theta_1', 'expression': \"Parameter('theta_1')\", 'symbols': {'theta_1': {'name': 'theta_1', 'trainable': 'True', 'value': '0.2761860032683078'}}})}}}]}, {'type': 'KronBlock', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'RY', 'qubit_support': (0,), 'tag': None, 'parameters': {'_name_dict': {'parameter': ('30ab3f84-0a30-42f3-b957-93d52d246451', {'name': 'theta_2', 'expression': \"Parameter('theta_2')\", 'symbols': {'theta_2': {'name': 'theta_2', 'trainable': 'True', 'value': '0.3431735922025061'}}})}}}, {'type': 'RY', 'qubit_support': (1,), 'tag': None, 'parameters': {'_name_dict': {'parameter': ('26ca2b37-c340-42cb-92db-34afa54fb020', {'name': 'theta_3', 'expression': \"Parameter('theta_3')\", 'symbols': {'theta_3': {'name': 'theta_3', 'trainable': 'True', 'value': '0.22890485647276537'}}})}}}]}, {'type': 'KronBlock', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'RX', 'qubit_support': (0,), 'tag': None, 'parameters': {'_name_dict': {'parameter': ('935cee0f-62e5-423e-a3ac-31c20398dbb2', {'name': 'theta_4', 'expression': \"Parameter('theta_4')\", 'symbols': {'theta_4': {'name': 'theta_4', 'trainable': 'True', 'value': '0.43231338587278156'}}})}}}, {'type': 'RX', 'qubit_support': (1,), 'tag': None, 'parameters': {'_name_dict': {'parameter': ('e5d2c847-953f-4bd8-9ba6-20b95c062e8c', {'name': 'theta_5', 'expression': \"Parameter('theta_5')\", 'symbols': {'theta_5': {'name': 'theta_5', 'trainable': 'True', 'value': '0.21562456614937775'}}})}}}]}]}, {'type': 'ChainBlock', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'KronBlock', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'CNOT', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'X', 'qubit_support': (1,), 'tag': None}]}]}]}]}\n</code></pre> </p> Source code in <code>qadence/serialization.py</code> <pre><code>def deserialize(d: dict, as_torch: bool = False) -&gt; SUPPORTED_TYPES:\n\"\"\"\n    Supported Types:\n    AbstractBlock | QuantumCircuit | QuantumModel | TransformedModule | Register | Module\n    Deserializes a dict to one of the supported types.\n    Arguments:\n        d (dict): A dict containing a serialized object.\n    Returns:\n        AbstractBlock, QuantumCircuit, QuantumModel, TransformedModule, Register, Module.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    import torch\n    from qadence import serialize, deserialize, hea, hamiltonian_factory, Z\n    from qadence import QuantumCircuit, QuantumModel\n    n_qubits = 2\n    myblock = hea(n_qubits=n_qubits, depth=1)\n    block_dict = serialize(myblock)\n    print(block_dict)\n    ## Lets use myblock in a QuantumCircuit and serialize it.\n    qc = QuantumCircuit(n_qubits, myblock)\n    qc_dict = serialize(qc)\n    qc_deserialized = deserialize(qc_dict)\n    assert qc == qc_deserialized\n    ## Finally, let's wrap it in a QuantumModel\n    obs = hamiltonian_factory(n_qubits, detuning = Z)\n    qm = QuantumModel(qc, obs, backend='pyqtorch', diff_mode='ad')\n    qm_dict = serialize(qm)\n    qm_deserialized = deserialize(qm_dict)\n    # Lets check if the loaded QuantumModel returns the same expectation\n    assert torch.isclose(qm.expectation({}), qm_deserialized.expectation({}))\n    ```\n    \"\"\"\nobj: Any\nif d.get(\"expression\"):\nexpr = eval(d[\"expression\"])\nif hasattr(expr, \"free_symbols\"):\nfor symb in expr.free_symbols:\nsymb.value = float(d[\"symbols\"][symb.name][\"value\"])\nobj = expr\nelif d.get(\"QuantumModel\"):\nobj = QuantumModel._from_dict(d, as_torch)\nelif d.get(\"QNN\"):\nobj = QNN._from_dict(d, as_torch)\nelif d.get(\"TransformedModule\"):\nobj = TransformedModule._from_dict(d, as_torch)\nelif d.get(\"block\") and d.get(\"register\"):\nobj = QuantumCircuit._from_dict(d)\nelif d.get(\"graph\"):\nobj = Register._from_dict(d)\nelif d.get(\"type\"):\nif d[\"type\"] in ALL_BLOCK_NAMES:\nblock: AbstractBlock = (\ngetattr(operations, d[\"type\"])._from_dict(d)\nif hasattr(operations, d[\"type\"])\nelse getattr(qadenceblocks, d[\"type\"])._from_dict(d)\n)\nif d[\"tag\"] is not None:\nblock = tag(block, d[\"tag\"])\nobj = block\nelse:\nimport warnings\nmsg = warnings.warn(\n\"In order to load a custom torch.nn.Module, make sure its imported in the namespace.\"\n)\ntry:\nmodule_name = list(d.keys())[0]\nobj = getattr(globals(), module_name)\nobj.load_state_dict(d[module_name])\nexcept Exception as e:\nlogger.error(\nTypeError(\nf\"{msg}. Unable to deserialize object due to {e}.\\\n                    Supported objects are: {SUPPORTED_OBJECTS}\"\n)\n)\nreturn obj\n</code></pre>"},{"location":"qadence/serialization/#qadence.serialization.load","title":"<code>load(file_path, map_location='cpu')</code>","text":"<p>Same as serialize/deserialize but for storing/loading files. Supported types: AbstractBlock | QuantumCircuit | QuantumModel | TransformedModule | Register Loads a .json or .pt file to one of the supported types.</p> PARAMETER  DESCRIPTION <code>file_path</code> <p>The name of the file.</p> <p> TYPE: <code>str</code> </p> <code>map_location</code> <p>In case of a .pt file, on which device to load the object (cpu,cuda).</p> <p> TYPE: <code>str</code> DEFAULT: <code>'cpu'</code> </p> <p>Returns:     A object of type AbstractBlock, QuantumCircuit, QuantumModel, TransformedModule, Register.</p> <p>Examples: <pre><code>import torch\nfrom pathlib import Path\nimport os\nfrom qadence import save, load, hea, hamiltonian_factory, Z\nfrom qadence import QuantumCircuit, QuantumModel\nn_qubits = 2\nmyblock = hea(n_qubits=n_qubits, depth=1)\nqc = QuantumCircuit(n_qubits, myblock)\n# Lets store the circuit in a json file\nsave(qc, '.', 'circ')\nloaded_qc = load(Path('circ.json'))\nqc == loaded_qc\nos.remove('circ.json')\n## Let's wrap it in a QuantumModel and store that\nobs = hamiltonian_factory(n_qubits, detuning = Z)\nqm = QuantumModel(qc, obs, backend='pyqtorch', diff_mode='ad')\nsave(qm, folder= '.',file_name= 'quantum_model')\nqm_loaded = load('quantum_model.json')\nos.remove('quantum_model.json')\n</code></pre> <pre><code>\n</code></pre> </p> Source code in <code>qadence/serialization.py</code> <pre><code>def load(file_path: str | Path, map_location: str = \"cpu\") -&gt; SUPPORTED_TYPES:\n\"\"\"\n    Same as serialize/deserialize but for storing/loading files.\n    Supported types: AbstractBlock | QuantumCircuit | QuantumModel | TransformedModule | Register\n    Loads a .json or .pt file to one of the supported types.\n    Arguments:\n        file_path (str): The name of the file.\n        map_location (str): In case of a .pt file, on which device to load the object (cpu,cuda).\n    Returns:\n        A object of type AbstractBlock, QuantumCircuit, QuantumModel, TransformedModule, Register.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    import torch\n    from pathlib import Path\n    import os\n    from qadence import save, load, hea, hamiltonian_factory, Z\n    from qadence import QuantumCircuit, QuantumModel\n    n_qubits = 2\n    myblock = hea(n_qubits=n_qubits, depth=1)\n    qc = QuantumCircuit(n_qubits, myblock)\n    # Lets store the circuit in a json file\n    save(qc, '.', 'circ')\n    loaded_qc = load(Path('circ.json'))\n    qc == loaded_qc\n    os.remove('circ.json')\n    ## Let's wrap it in a QuantumModel and store that\n    obs = hamiltonian_factory(n_qubits, detuning = Z)\n    qm = QuantumModel(qc, obs, backend='pyqtorch', diff_mode='ad')\n    save(qm, folder= '.',file_name= 'quantum_model')\n    qm_loaded = load('quantum_model.json')\n    os.remove('quantum_model.json')\n    ```\n    \"\"\"\nd = {}\nif isinstance(file_path, str):\nfile_path = Path(file_path)\nif not os.path.exists(file_path):\nlogger.error(f\"File {file_path} not found.\")\nraise FileNotFoundError\nFORMAT = file_extension(file_path)\n_, _, load_fn, _ = FORMAT_DICT[FORMAT]  # type: ignore[index]\ntry:\nd = load_fn(file_path, map_location)\nlogger.debug(f\"Successfully loaded {d} from {file_path}.\")\nexcept Exception as e:\nlogger.error(f\"Unable to load Object from {file_path} due to {e}\")\nreturn deserialize(d)\n</code></pre>"},{"location":"qadence/serialization/#qadence.serialization.save","title":"<code>save(obj, folder, file_name='', format=SerializationFormat.JSON)</code>","text":"<p>Same as serialize/deserialize but for storing/loading files. Supported types: AbstractBlock | QuantumCircuit | QuantumModel | TransformedModule | Register | torch.nn.Module Saves a qadence object to a json/.pt.</p> PARAMETER  DESCRIPTION <code>obj</code> <pre><code>Either AbstractBlock, QuantumCircuit, QuantumModel, TransformedModule, Register.\n</code></pre> <p> TYPE: <code>AbstractBlock | QuantumCircuit | QuantumModel | Register</code> </p> <code>file_name</code> <p>The name of the file.</p> <p> TYPE: <code>str</code> DEFAULT: <code>''</code> </p> <code>format</code> <p>The type of file to save.</p> <p> TYPE: <code>str</code> DEFAULT: <code>JSON</code> </p> <p>Returns:     None.</p> <p>Examples: <pre><code>import torch\nfrom pathlib import Path\nimport os\nfrom qadence import save, load, hea, hamiltonian_factory, Z\nfrom qadence import QuantumCircuit, QuantumModel\nn_qubits = 2\nmyblock = hea(n_qubits=n_qubits, depth=1)\nqc = QuantumCircuit(n_qubits, myblock)\n# Lets store the circuit in a json file\nsave(qc, '.', 'circ')\nloaded_qc = load(Path('circ.json'))\nqc == loaded_qc\nos.remove('circ.json')\n## Let's wrap it in a QuantumModel and store that\nobs = hamiltonian_factory(n_qubits, detuning = Z)\nqm = QuantumModel(qc, obs, backend='pyqtorch', diff_mode='ad')\nsave(qm, folder= '.',file_name= 'quantum_model')\nqm_loaded = load('quantum_model.json')\nos.remove('quantum_model.json')\n</code></pre> <pre><code>\n</code></pre> </p> Source code in <code>qadence/serialization.py</code> <pre><code>def save(\nobj: SUPPORTED_TYPES,\nfolder: str | Path,\nfile_name: str = \"\",\nformat: SerializationFormat = SerializationFormat.JSON,\n) -&gt; None:\n\"\"\"\n    Same as serialize/deserialize but for storing/loading files.\n    Supported types:\n    AbstractBlock | QuantumCircuit | QuantumModel | TransformedModule | Register | torch.nn.Module\n    Saves a qadence object to a json/.pt.\n    Arguments:\n        obj (AbstractBlock | QuantumCircuit | QuantumModel | Register):\n                Either AbstractBlock, QuantumCircuit, QuantumModel, TransformedModule, Register.\n        file_name (str): The name of the file.\n        format (str): The type of file to save.\n    Returns:\n        None.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    import torch\n    from pathlib import Path\n    import os\n    from qadence import save, load, hea, hamiltonian_factory, Z\n    from qadence import QuantumCircuit, QuantumModel\n    n_qubits = 2\n    myblock = hea(n_qubits=n_qubits, depth=1)\n    qc = QuantumCircuit(n_qubits, myblock)\n    # Lets store the circuit in a json file\n    save(qc, '.', 'circ')\n    loaded_qc = load(Path('circ.json'))\n    qc == loaded_qc\n    os.remove('circ.json')\n    ## Let's wrap it in a QuantumModel and store that\n    obs = hamiltonian_factory(n_qubits, detuning = Z)\n    qm = QuantumModel(qc, obs, backend='pyqtorch', diff_mode='ad')\n    save(qm, folder= '.',file_name= 'quantum_model')\n    qm_loaded = load('quantum_model.json')\n    os.remove('quantum_model.json')\n    ```\n    \"\"\"\nif not isinstance(obj, get_args(SUPPORTED_TYPES)):\nlogger.error(f\"Serialization of object type {type(obj)} not supported.\")\nfolder = Path(folder)\nif not folder.is_dir():\nlogger.error(NotADirectoryError)\nif file_name == \"\":\nfile_name = type(obj).__name__\ntry:\nsuffix, save_fn, _, save_params = FORMAT_DICT[format]\nd = serialize(obj, save_params)\nfile_path = folder / Path(file_name + suffix)\nsave_fn(d, file_path)\nlogger.debug(f\"Successfully saved {obj} from to {folder}.\")\nexcept Exception as e:\nlogger.error(f\"Unable to write {type(obj)} to disk due to {e}\")\n</code></pre>"},{"location":"qadence/serialization/#qadence.serialization.serialize","title":"<code>serialize(obj, save_params=False)</code>","text":"<p>Supported Types: AbstractBlock | QuantumCircuit | QuantumModel | TransformedModule | Register | Module Serializes a qadence object to a dictionary.</p> PARAMETER  DESCRIPTION <code>obj</code> <p> TYPE: <code>AbstractBlock | QuantumCircuit | QuantumModel | Register | Module</code> </p> <p>Returns:     A dict.</p> <p>Examples: <pre><code>import torch\nfrom qadence import serialize, deserialize, hea, hamiltonian_factory, Z\nfrom qadence import QuantumCircuit, QuantumModel\nn_qubits = 2\nmyblock = hea(n_qubits=n_qubits, depth=1)\nblock_dict = serialize(myblock)\nprint(block_dict)\n## Lets use myblock in a QuantumCircuit and serialize it.\nqc = QuantumCircuit(n_qubits, myblock)\nqc_dict = serialize(qc)\nqc_deserialized = deserialize(qc_dict)\nassert qc == qc_deserialized\n## Finally, let's wrap it in a QuantumModel\nobs = hamiltonian_factory(n_qubits, detuning = Z)\nqm = QuantumModel(qc, obs, backend='pyqtorch', diff_mode='ad')\nqm_dict = serialize(qm)\nqm_deserialized = deserialize(qm_dict)\n# Lets check if the loaded QuantumModel returns the same expectation\nassert torch.isclose(qm.expectation({}), qm_deserialized.expectation({}))\n</code></pre> <pre><code>{'type': 'ChainBlock', 'qubit_support': (0, 1), 'tag': 'HEA', 'blocks': [{'type': 'ChainBlock', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'KronBlock', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'RX', 'qubit_support': (0,), 'tag': None, 'parameters': {'_name_dict': {'parameter': ('5c11141b-430a-4b7a-bb62-82732aedd9c0', {'name': 'theta_0', 'expression': \"Parameter('theta_0')\", 'symbols': {'theta_0': {'name': 'theta_0', 'trainable': 'True', 'value': '0.7804281301994218'}}})}}}, {'type': 'RX', 'qubit_support': (1,), 'tag': None, 'parameters': {'_name_dict': {'parameter': ('5efad026-4f66-4af6-9b77-76af1eedd77e', {'name': 'theta_1', 'expression': \"Parameter('theta_1')\", 'symbols': {'theta_1': {'name': 'theta_1', 'trainable': 'True', 'value': '0.1183504577113843'}}})}}}]}, {'type': 'KronBlock', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'RY', 'qubit_support': (0,), 'tag': None, 'parameters': {'_name_dict': {'parameter': ('1a917d68-d036-404d-8831-d01a07a627c2', {'name': 'theta_2', 'expression': \"Parameter('theta_2')\", 'symbols': {'theta_2': {'name': 'theta_2', 'trainable': 'True', 'value': '0.5368528594854806'}}})}}}, {'type': 'RY', 'qubit_support': (1,), 'tag': None, 'parameters': {'_name_dict': {'parameter': ('268402b0-a8cf-45e5-89c0-7dbd7c7a33c3', {'name': 'theta_3', 'expression': \"Parameter('theta_3')\", 'symbols': {'theta_3': {'name': 'theta_3', 'trainable': 'True', 'value': '0.9740934558296818'}}})}}}]}, {'type': 'KronBlock', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'RX', 'qubit_support': (0,), 'tag': None, 'parameters': {'_name_dict': {'parameter': ('09d050d6-ed64-4495-bbfe-d13aa8869fa3', {'name': 'theta_4', 'expression': \"Parameter('theta_4')\", 'symbols': {'theta_4': {'name': 'theta_4', 'trainable': 'True', 'value': '0.07339806211741362'}}})}}}, {'type': 'RX', 'qubit_support': (1,), 'tag': None, 'parameters': {'_name_dict': {'parameter': ('b685e671-7f00-4660-bfa7-5ecaf1febe54', {'name': 'theta_5', 'expression': \"Parameter('theta_5')\", 'symbols': {'theta_5': {'name': 'theta_5', 'trainable': 'True', 'value': '0.24026971249743434'}}})}}}]}]}, {'type': 'ChainBlock', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'KronBlock', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'CNOT', 'qubit_support': (0, 1), 'tag': None, 'blocks': [{'type': 'X', 'qubit_support': (1,), 'tag': None}]}]}]}]}\n</code></pre> </p> Source code in <code>qadence/serialization.py</code> <pre><code>def serialize(obj: SUPPORTED_TYPES, save_params: bool = False) -&gt; dict:\n\"\"\"\n    Supported Types:\n    AbstractBlock | QuantumCircuit | QuantumModel | TransformedModule | Register | Module\n    Serializes a qadence object to a dictionary.\n    Arguments:\n        obj (AbstractBlock | QuantumCircuit | QuantumModel | Register | Module):\n    Returns:\n        A dict.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    import torch\n    from qadence import serialize, deserialize, hea, hamiltonian_factory, Z\n    from qadence import QuantumCircuit, QuantumModel\n    n_qubits = 2\n    myblock = hea(n_qubits=n_qubits, depth=1)\n    block_dict = serialize(myblock)\n    print(block_dict)\n    ## Lets use myblock in a QuantumCircuit and serialize it.\n    qc = QuantumCircuit(n_qubits, myblock)\n    qc_dict = serialize(qc)\n    qc_deserialized = deserialize(qc_dict)\n    assert qc == qc_deserialized\n    ## Finally, let's wrap it in a QuantumModel\n    obs = hamiltonian_factory(n_qubits, detuning = Z)\n    qm = QuantumModel(qc, obs, backend='pyqtorch', diff_mode='ad')\n    qm_dict = serialize(qm)\n    qm_deserialized = deserialize(qm_dict)\n    # Lets check if the loaded QuantumModel returns the same expectation\n    assert torch.isclose(qm.expectation({}), qm_deserialized.expectation({}))\n    ```\n    \"\"\"\nif not isinstance(obj, get_args(SUPPORTED_TYPES)):\nlogger.error(TypeError(f\"Serialization of object type {type(obj)} not supported.\"))\nd: dict = {}\ntry:\nif isinstance(obj, Expr):\nsymb_dict = {}\nexpr_dict = {\"name\": str(obj), \"expression\": srepr(obj)}\nsymbs: set[Parameter | Basic] = obj.free_symbols\nif symbs:\nsymb_dict = {\"symbols\": {str(s): s._to_dict() for s in symbs}}\nd = {**expr_dict, **symb_dict}\nelif isinstance(obj, (QuantumModel, QNN, TransformedModule)):\nd = obj._to_dict(save_params)\nelif isinstance(obj, torch.nn.Module):\nd = {type(obj).__name__: obj.state_dict()}\nelse:\nd = obj._to_dict()\nexcept Exception as e:\nlogger.error(f\"Serialization of object {obj} failed due to {e}\")\nreturn d\n</code></pre>"},{"location":"qadence/states/","title":"State preparation","text":""},{"location":"qadence/states/#state-preparation-routines","title":"State Preparation Routines","text":""},{"location":"qadence/states/#qadence.states.ghz_block","title":"<code>ghz_block(n_qubits)</code>","text":"<p>Generates the abstract ghz state for a specified number of qubits.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>ChainBlock</code> <p>A ChainBlock representing the GHZ state.</p> <p>Examples: <pre><code>from qadence.states import ghz_block\nblock = ghz_block(n_qubits=2)\nprint(block)\n</code></pre> <pre><code>ChainBlock(0,1)\n\u251c\u2500\u2500 H(0)\n\u2514\u2500\u2500 ChainBlock(0,1)\n\u2514\u2500\u2500 CNOT(0,1)\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def ghz_block(n_qubits: int) -&gt; ChainBlock:\n\"\"\"\n    Generates the abstract ghz state for a specified number of qubits.\n    Arguments:\n        n_qubits (int): The number of qubits.\n    Returns:\n        A ChainBlock representing the GHZ state.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import ghz_block\n    block = ghz_block(n_qubits=2)\n    print(block)\n    ```\n    \"\"\"\ncnots = chain(CNOT(i - 1, i) for i in range(1, n_qubits))\nreturn chain(H(0), cnots)\n</code></pre>"},{"location":"qadence/states/#qadence.states.ghz_state","title":"<code>ghz_state(n_qubits, batch_size=1)</code>","text":"<p>Creates a GHZ state.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> <code>batch_size</code> <p>How many bitstrings to use.</p> <p> TYPE: <code>int</code> DEFAULT: <code>1</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A torch.Tensor.</p> <p>Examples: <pre><code>from qadence.states import ghz_state\nprint(ghz_state(n_qubits=2, batch_size=2))\n</code></pre> <pre><code>tensor([[0.7071+0.j, 0.0000+0.j, 0.0000+0.j, 0.7071+0.j],\n[0.7071+0.j, 0.0000+0.j, 0.0000+0.j, 0.7071+0.j]])\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def ghz_state(n_qubits: int, batch_size: int = 1) -&gt; Tensor:\n\"\"\"\n    Creates a GHZ state.\n    Arguments:\n        n_qubits (int): The number of qubits.\n        batch_size (int): How many bitstrings to use.\n    Returns:\n        A torch.Tensor.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import ghz_state\n    print(ghz_state(n_qubits=2, batch_size=2))\n    ```\n    \"\"\"\nnorm = 1 / torch.sqrt(torch.tensor(2))\nreturn norm * (zero_state(n_qubits, batch_size) + one_state(n_qubits, batch_size))\n</code></pre>"},{"location":"qadence/states/#qadence.states.is_normalized","title":"<code>is_normalized(wf, atol=NORMALIZATION_ATOL)</code>","text":"<p>Checks if a wave function is normalized.</p> PARAMETER  DESCRIPTION <code>wf</code> <p>The wave function as a torch tensor.</p> <p> TYPE: <code>Tensor</code> </p> <code>atol</code> <p>The tolerance.</p> <p> TYPE: <code>float) </code> DEFAULT: <code>NORMALIZATION_ATOL</code> </p> RETURNS DESCRIPTION <code>bool</code> <p>A bool.</p> <p>Examples: <pre><code>from qadence.states import uniform_state, is_normalized\nprint(is_normalized(uniform_state(2)))\n</code></pre> <pre><code>True\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def is_normalized(wf: Tensor, atol: float = NORMALIZATION_ATOL) -&gt; bool:\n\"\"\"\n    Checks if a wave function is normalized.\n    Arguments:\n        wf (torch.Tensor): The wave function as a torch tensor.\n        atol (float) : The tolerance.\n    Returns:\n        A bool.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import uniform_state, is_normalized\n    print(is_normalized(uniform_state(2)))\n    ```\n    \"\"\"\nif wf.dim() == 1:\nwf = wf.unsqueeze(0)\nsum_probs: Tensor = (wf.abs() ** 2).sum(dim=1)\nones = torch.ones_like(sum_probs)\nreturn torch.allclose(sum_probs, ones, rtol=0.0, atol=atol)  # type: ignore[no-any-return]\n</code></pre>"},{"location":"qadence/states/#qadence.states.normalize","title":"<code>normalize(wf)</code>","text":"<p>Normalizes a wavefunction or batch of wave functions.</p> PARAMETER  DESCRIPTION <code>wf</code> <p>Normalized wavefunctions.</p> <p> TYPE: <code>Tensor</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A torch.Tensor.</p> <p>Examples: <pre><code>from qadence.states import uniform_state, normalize\nprint(normalize(uniform_state(2, 2)))\n</code></pre> <pre><code>tensor([[0.5000+0.j, 0.5000+0.j, 0.5000+0.j, 0.5000+0.j],\n[0.5000+0.j, 0.5000+0.j, 0.5000+0.j, 0.5000+0.j]])\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def normalize(wf: Tensor) -&gt; Tensor:\n\"\"\"\n    Normalizes a wavefunction or batch of wave functions.\n    Arguments:\n        wf (torch.Tensor): Normalized wavefunctions.\n    Returns:\n        A torch.Tensor.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import uniform_state, normalize\n    print(normalize(uniform_state(2, 2)))\n    ```\n    \"\"\"\nif wf.dim() == 1:\nreturn wf / torch.sqrt((wf.abs() ** 2).sum())\nelse:\nreturn wf / torch.sqrt((wf.abs() ** 2).sum(1)).unsqueeze(1)\n</code></pre>"},{"location":"qadence/states/#qadence.states.one_block","title":"<code>one_block(n_qubits)</code>","text":"<p>Generates the abstract one state for a specified number of qubits.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>KronBlock</code> <p>A KronBlock representing the one state.</p> <p>Examples: <pre><code>from qadence.states import one_block\nblock = one_block(n_qubits=2)\nprint(block)\n</code></pre> <pre><code>KronBlock(0,1)\n\u251c\u2500\u2500 X(0)\n\u2514\u2500\u2500 X(1)\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def one_block(n_qubits: int) -&gt; KronBlock:\n\"\"\"\n    Generates the abstract one state for a specified number of qubits.\n    Arguments:\n        n_qubits (int): The number of qubits.\n    Returns:\n        A KronBlock representing the one state.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import one_block\n    block = one_block(n_qubits=2)\n    print(block)\n    ```\n    \"\"\"\nreturn _from_op(X, n_qubits=n_qubits)\n</code></pre>"},{"location":"qadence/states/#qadence.states.one_state","title":"<code>one_state(n_qubits, batch_size=1)</code>","text":"<p>Generates the one state for a specified number of qubits.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> <code>batch_size</code> <p>The batch size.</p> <p> TYPE: <code>int</code> DEFAULT: <code>1</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A torch.Tensor.</p> <p>Examples: <pre><code>from qadence.states import one_state\nstate = one_state(n_qubits=2)\nprint(state)\n</code></pre> <pre><code>tensor([[0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j]])\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def one_state(n_qubits: int, batch_size: int = 1) -&gt; Tensor:\n\"\"\"\n    Generates the one state for a specified number of qubits.\n    Arguments:\n        n_qubits (int): The number of qubits.\n        batch_size (int): The batch size.\n    Returns:\n        A torch.Tensor.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import one_state\n    state = one_state(n_qubits=2)\n    print(state)\n    ```\n    \"\"\"\nbitstring = \"1\" * n_qubits\nreturn _state_from_bitstring(bitstring, batch_size)\n</code></pre>"},{"location":"qadence/states/#qadence.states.pmf","title":"<code>pmf(wf)</code>","text":"<p>Converts a wave function into a torch Distribution.</p> PARAMETER  DESCRIPTION <code>wf</code> <p>The wave function as a torch tensor.</p> <p> TYPE: <code>Tensor</code> </p> RETURNS DESCRIPTION <code>Distribution</code> <p>A torch.distributions.Distribution.</p> <p>Examples: <pre><code>from qadence.states import uniform_state, pmf\nprint(pmf(uniform_state(2)).probs)\n</code></pre> <pre><code>tensor([[0.2500, 0.2500, 0.2500, 0.2500]])\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def pmf(wf: Tensor) -&gt; Distribution:\n\"\"\"\n    Converts a wave function into a torch Distribution.\n    Arguments:\n        wf (torch.Tensor): The wave function as a torch tensor.\n    Returns:\n        A torch.distributions.Distribution.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import uniform_state, pmf\n    print(pmf(uniform_state(2)).probs)\n    ```\n    \"\"\"\nreturn Categorical(torch.abs(torch.pow(wf, 2)))\n</code></pre>"},{"location":"qadence/states/#qadence.states.product_block","title":"<code>product_block(bitstring)</code>","text":"<p>Creates an abstract product state from a bitstring.</p> PARAMETER  DESCRIPTION <code>bitstring</code> <p>A bitstring.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>KronBlock</code> <p>A KronBlock representing the product state.</p> <p>Examples: <pre><code>from qadence.states import product_block\nprint(product_block(\"1100\"))\n</code></pre> <pre><code>KronBlock(0,1,2,3)\n\u251c\u2500\u2500 X(0)\n\u251c\u2500\u2500 X(1)\n\u251c\u2500\u2500 I(2)\n\u2514\u2500\u2500 I(3)\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def product_block(bitstring: str) -&gt; KronBlock:\n\"\"\"\n    Creates an abstract product state from a bitstring.\n    Arguments:\n        bitstring (str): A bitstring.\n    Returns:\n        A KronBlock representing the product state.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import product_block\n    print(product_block(\"1100\"))\n    ```\n    \"\"\"\nreturn _block_from_bitstring(bitstring)\n</code></pre>"},{"location":"qadence/states/#qadence.states.product_state","title":"<code>product_state(bitstring, batch_size=1, endianness=Endianness.BIG)</code>","text":"<p>Creates a product state from a bitstring.</p> PARAMETER  DESCRIPTION <code>bitstring</code> <p>A bitstring.</p> <p> TYPE: <code>str</code> </p> <code>batch_size</code> <p>Batch size.</p> <p> TYPE: <code>int) </code> DEFAULT: <code>1</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A torch.Tensor.</p> <p>Examples: <pre><code>from qadence.states import product_state\nprint(product_state(\"1100\"))\n</code></pre> <pre><code>tensor([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,\n1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]])\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>@singledispatch\ndef product_state(\nbitstring: str, batch_size: int = 1, endianness: Endianness = Endianness.BIG\n) -&gt; Tensor:\n\"\"\"\n    Creates a product state from a bitstring.\n    Arguments:\n        bitstring (str): A bitstring.\n        batch_size (int) : Batch size.\n    Returns:\n        A torch.Tensor.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import product_state\n    print(product_state(\"1100\"))\n    ```\n    \"\"\"\nreturn _state_from_bitstring(bitstring, batch_size, endianness=endianness)\n</code></pre>"},{"location":"qadence/states/#qadence.states.rand_bitstring","title":"<code>rand_bitstring(N)</code>","text":"<p>Creates a random bistring.</p> PARAMETER  DESCRIPTION <code>N</code> <p>The length of the bitstring.</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>str</code> <p>A string.</p> <p>Examples: <pre><code>from qadence.states import rand_bitstring\nprint(rand_bitstring(N=8))\n</code></pre> <pre><code>11110110\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def rand_bitstring(N: int) -&gt; str:\n\"\"\"\n    Creates a random bistring.\n    Arguments:\n        N (int): The length of the bitstring.\n    Returns:\n        A string.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import rand_bitstring\n    print(rand_bitstring(N=8))\n    ```\n    \"\"\"\nreturn \"\".join(str(random.randint(0, 1)) for _ in range(N))\n</code></pre>"},{"location":"qadence/states/#qadence.states.rand_product_block","title":"<code>rand_product_block(n_qubits)</code>","text":"<p>Creates a block representing a random abstract product state.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>KronBlock</code> <p>A KronBlock representing the product state.</p> <p>Examples: <pre><code>from qadence.states import rand_product_block\nprint(rand_product_block(n_qubits=2))\n</code></pre> <pre><code>KronBlock(0,1)\n\u251c\u2500\u2500 X(0)\n\u2514\u2500\u2500 I(1)\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def rand_product_block(n_qubits: int) -&gt; KronBlock:\n\"\"\"\n    Creates a block representing a random abstract product state.\n    Arguments:\n        n_qubits (int): The number of qubits.\n    Returns:\n        A KronBlock representing the product state.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import rand_product_block\n    print(rand_product_block(n_qubits=2))\n    ```\n    \"\"\"\nreturn product_block(rand_bitstring(n_qubits))\n</code></pre>"},{"location":"qadence/states/#qadence.states.rand_product_state","title":"<code>rand_product_state(n_qubits, batch_size=1)</code>","text":"<p>Creates a random product state.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> <code>batch_size</code> <p>How many bitstrings to use.</p> <p> TYPE: <code>int</code> DEFAULT: <code>1</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A torch.Tensor.</p> <p>Examples: <pre><code>from qadence.states import rand_product_state\nprint(rand_product_state(n_qubits=2, batch_size=2))\n</code></pre> <pre><code>tensor([[0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j],\n[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]])\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def rand_product_state(n_qubits: int, batch_size: int = 1) -&gt; Tensor:\n\"\"\"\n    Creates a random product state.\n    Arguments:\n        n_qubits (int): The number of qubits.\n        batch_size (int): How many bitstrings to use.\n    Returns:\n        A torch.Tensor.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import rand_product_state\n    print(rand_product_state(n_qubits=2, batch_size=2))\n    ```\n    \"\"\"\nwf_batch = torch.zeros(batch_size, 2**n_qubits, dtype=DTYPE)\nrand_pos = torch.randint(0, 2**n_qubits, (batch_size,))\nwf_batch[torch.arange(batch_size), rand_pos] = torch.tensor(1.0 + 0j, dtype=DTYPE)\nreturn wf_batch\n</code></pre>"},{"location":"qadence/states/#qadence.states.random_state","title":"<code>random_state(n_qubits, batch_size=1, backend=BackendName.PYQTORCH, type=StateGeneratorType.HAAR_MEASURE_FAST)</code>","text":"<p>Generates a random state for a specified number of qubits.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> <code>backend</code> <p>The backend to use.</p> <p> TYPE: <code>str</code> DEFAULT: <code>PYQTORCH</code> </p> <code>batch_size</code> <p>The batch size.</p> <p> TYPE: <code>int</code> DEFAULT: <code>1</code> </p> <code>type</code> <p>StateGeneratorType.</p> <p> DEFAULT: <code>HAAR_MEASURE_FAST</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A torch.Tensor.</p> <p>Examples: <pre><code>from qadence.states import random_state, StateGeneratorType\nfrom qadence.states import random_state, is_normalized, pmf\nfrom qadence.backend import BackendName\nfrom torch.distributions import Distribution\n### We have the following options:\nprint([g.value for g in StateGeneratorType])\nn_qubits = 2\n# The default is StateGeneratorType.HAAR_MEASURE_FAST\nstate = random_state(n_qubits=n_qubits)\nprint(state)\n### Lets initialize a state using random rotations, i.e., StateGeneratorType.RANDOM_ROTATIONS.\nrandom = random_state(n_qubits=n_qubits, type=StateGeneratorType.RANDOM_ROTATIONS)\nprint(random)\n</code></pre> <pre><code>['RandomRotations', 'HaarMeasureFast', 'HaarMeasureSlow']\ntensor([[ 0.3215+0.2041j, -0.0156-0.1371j, -0.6557+0.5829j, -0.0965-0.2386j]])\ntensor([[ 0.5278-0.6893j, -0.3018+0.3941j,  0.0000+0.0000j,  0.0000+0.0000j]])\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def random_state(\nn_qubits: int,\nbatch_size: int = 1,\nbackend: str = BackendName.PYQTORCH,\ntype: StateGeneratorType = StateGeneratorType.HAAR_MEASURE_FAST,\n) -&gt; Tensor:\n\"\"\"\n    Generates a random state for a specified number of qubits.\n    Arguments:\n        n_qubits (int): The number of qubits.\n        backend (str): The backend to use.\n        batch_size (int): The batch size.\n        type : StateGeneratorType.\n    Returns:\n        A torch.Tensor.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import random_state, StateGeneratorType\n    from qadence.states import random_state, is_normalized, pmf\n    from qadence.backend import BackendName\n    from torch.distributions import Distribution\n    ### We have the following options:\n    print([g.value for g in StateGeneratorType])\n    n_qubits = 2\n    # The default is StateGeneratorType.HAAR_MEASURE_FAST\n    state = random_state(n_qubits=n_qubits)\n    print(state)\n    ### Lets initialize a state using random rotations, i.e., StateGeneratorType.RANDOM_ROTATIONS.\n    random = random_state(n_qubits=n_qubits, type=StateGeneratorType.RANDOM_ROTATIONS)\n    print(random)\n    ```\n    \"\"\"\nif type == StateGeneratorType.HAAR_MEASURE_FAST:\nstate = concat(tuple(_rand_haar_fast(n_qubits) for _ in range(batch_size)), dim=0)\nelif type == StateGeneratorType.HAAR_MEASURE_SLOW:\nstate = concat(tuple(_rand_haar_slow(n_qubits) for _ in range(batch_size)), dim=0)\nelif type == StateGeneratorType.RANDOM_ROTATIONS:\nstate = _run_state(_abstract_random_state(n_qubits, batch_size), backend)  # type: ignore\nassert all(list(map(is_normalized, state)))\nreturn state\n</code></pre>"},{"location":"qadence/states/#qadence.states.uniform_block","title":"<code>uniform_block(n_qubits)</code>","text":"<p>Generates the abstract uniform state for a specified number of qubits.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>KronBlock</code> <p>A KronBlock representing the uniform state.</p> <p>Examples: <pre><code>from qadence.states import uniform_block\nblock = uniform_block(n_qubits=2)\nprint(block)\n</code></pre> <pre><code>KronBlock(0,1)\n\u251c\u2500\u2500 H(0)\n\u2514\u2500\u2500 H(1)\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def uniform_block(n_qubits: int) -&gt; KronBlock:\n\"\"\"\n    Generates the abstract uniform state for a specified number of qubits.\n    Arguments:\n        n_qubits (int): The number of qubits.\n    Returns:\n        A KronBlock representing the uniform state.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import uniform_block\n    block = uniform_block(n_qubits=2)\n    print(block)\n    ```\n    \"\"\"\nreturn _from_op(H, n_qubits=n_qubits)\n</code></pre>"},{"location":"qadence/states/#qadence.states.uniform_state","title":"<code>uniform_state(n_qubits, batch_size=1)</code>","text":"<p>Generates the uniform state for a specified number of qubits.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> <code>batch_size</code> <p>The batch size.</p> <p> TYPE: <code>int</code> DEFAULT: <code>1</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A torch.Tensor.</p> <p>Examples: <pre><code>from qadence.states import uniform_state\nstate = uniform_state(n_qubits=2)\nprint(state)\n</code></pre> <pre><code>tensor([[0.5000+0.j, 0.5000+0.j, 0.5000+0.j, 0.5000+0.j]])\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def uniform_state(n_qubits: int, batch_size: int = 1) -&gt; Tensor:\n\"\"\"\n    Generates the uniform state for a specified number of qubits.\n    Arguments:\n        n_qubits (int): The number of qubits.\n        batch_size (int): The batch size.\n    Returns:\n        A torch.Tensor.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import uniform_state\n    state = uniform_state(n_qubits=2)\n    print(state)\n    ```\n    \"\"\"\nnorm = 1 / torch.sqrt(torch.tensor(2**n_qubits))\nreturn norm * torch.ones(batch_size, 2**n_qubits, dtype=DTYPE)\n</code></pre>"},{"location":"qadence/states/#qadence.states.zero_block","title":"<code>zero_block(n_qubits)</code>","text":"<p>Generates the abstract zero state for a specified number of qubits.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>The number of qubits.</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>KronBlock</code> <p>A KronBlock representing the zero state.</p> <p>Examples: <pre><code>from qadence.states import zero_block\nblock = zero_block(n_qubits=2)\nprint(block)\n</code></pre> <pre><code>KronBlock(0,1)\n\u251c\u2500\u2500 I(0)\n\u2514\u2500\u2500 I(1)\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def zero_block(n_qubits: int) -&gt; KronBlock:\n\"\"\"\n    Generates the abstract zero state for a specified number of qubits.\n    Arguments:\n        n_qubits (int): The number of qubits.\n    Returns:\n        A KronBlock representing the zero state.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import zero_block\n    block = zero_block(n_qubits=2)\n    print(block)\n    ```\n    \"\"\"\nreturn _from_op(I, n_qubits=n_qubits)\n</code></pre>"},{"location":"qadence/states/#qadence.states.zero_state","title":"<code>zero_state(n_qubits, batch_size=1)</code>","text":"<p>Generates the zero state for a specified number of qubits.</p> PARAMETER  DESCRIPTION <code>n_qubits</code> <p>The number of qubits for which the zero state is to be generated.</p> <p> TYPE: <code>int</code> </p> <code>batch_size</code> <p>The batch size for the zero state.</p> <p> TYPE: <code>int</code> DEFAULT: <code>1</code> </p> RETURNS DESCRIPTION <code>Tensor</code> <p>A torch.Tensor.</p> <p>Examples: <pre><code>from qadence.states import zero_state\nstate = zero_state(n_qubits=2)\nprint(state)\n</code></pre> <pre><code>tensor([[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]])\n</code></pre> </p> Source code in <code>qadence/states.py</code> <pre><code>def zero_state(n_qubits: int, batch_size: int = 1) -&gt; Tensor:\n\"\"\"\n    Generates the zero state for a specified number of qubits.\n    Arguments:\n        n_qubits (int): The number of qubits for which the zero state is to be generated.\n        batch_size (int): The batch size for the zero state.\n    Returns:\n        A torch.Tensor.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence.states import zero_state\n    state = zero_state(n_qubits=2)\n    print(state)\n    ```\n    \"\"\"\nbitstring = \"0\" * n_qubits\nreturn _state_from_bitstring(bitstring, batch_size)\n</code></pre>"},{"location":"qadence/transpile/","title":"Transpilation","text":"<p>Contains functions that operate on blocks and circuits to <code>transpile</code> them to new blocks/circuits.</p>"},{"location":"qadence/transpile/#qadence.transpile.transpile.transpile","title":"<code>transpile(*fs)</code>","text":"<p><code>AbstractBlock</code> or <code>QuantumCircuit</code> transpilation. Compose functions that accept a circuit/block and returns a circuit/block.</p> PARAMETER  DESCRIPTION <code>*fs</code> <p>composable functions that either map blocks to blocks (<code>Callable[[AbstractBlock], AbstractBlock]</code>) or circuits to circuits (<code>Callable[[QuantumCircuit], QuantumCircuit]</code>).</p> <p> TYPE: <code>Callable</code> DEFAULT: <code>()</code> </p> RETURNS DESCRIPTION <code>Callable</code> <p>Composed function.</p> <p>Examples:</p> <p>Flatten a block of nested chains and krons: <pre><code>from qadence import *\nfrom qadence.transpile import transpile, flatten, scale_primitive_blocks_only\nb = chain(2 * chain(chain(X(0), Y(0))), kron(kron(X(0), X(1))))\nprint(b)\n# both flatten and scale_primitive_blocks_only are functions that accept and\n# return a block\nt = transpile(flatten, scale_primitive_blocks_only)(b)\nprint(t)\n</code></pre> <pre><code>ChainBlock(0,1)\n\u251c\u2500\u2500 [mul: 2] \u2502   \u2514\u2500\u2500 ChainBlock(0)\n\u2502       \u2514\u2500\u2500 ChainBlock(0)\n\u2502           \u251c\u2500\u2500 X(0)\n\u2502           \u2514\u2500\u2500 Y(0)\n\u2514\u2500\u2500 KronBlock(0,1)\n\u2514\u2500\u2500 KronBlock(0,1)\n\u251c\u2500\u2500 X(0)\n\u2514\u2500\u2500 X(1)\nChainBlock(0,1)\n\u251c\u2500\u2500 [mul: 2.00000000000000] \u2502   \u2514\u2500\u2500 X(0)\n\u251c\u2500\u2500 Y(0)\n\u2514\u2500\u2500 KronBlock(0,1)\n\u251c\u2500\u2500 X(0)\n\u2514\u2500\u2500 X(1)\n</code></pre> </p> <p>We also proved a decorator to easily turn a function <code>Callable[[AbstractBlock], AbstractBlock]</code> into a <code>Callable[[QuantumCircuit], QuantumCircuit]</code> to be used in circuit transpilation. <pre><code>from qadence import *\nfrom qadence.transpile import transpile, blockfn_to_circfn, flatten\n# We want to pass this circuit to `transpile` instead of a block,\n# so we need functions that map from a circuit to a circuit.\ncirc = QuantumCircuit(2, chain(chain(X(0), chain(X(1)))))\n@blockfn_to_circfn\ndef fn(block):\n# un-decorated function accepts a block and returns a block\nreturn block * block\ntransp = transpile(\n# the decorated function accepts a circuit and returns a circuit\nfn,\n# already existing functions can also be decorated\nblockfn_to_circfn(flatten)\n)\nprint(transp(circ))\n</code></pre> <pre><code>ChainBlock(0,1)\n\u251c\u2500\u2500 ChainBlock(0,1)\n\u2502   \u251c\u2500\u2500 X(0)\n\u2502   \u2514\u2500\u2500 X(1)\n\u2514\u2500\u2500 ChainBlock(0,1)\n\u251c\u2500\u2500 X(0)\n\u2514\u2500\u2500 X(1)\n</code></pre> </p> Source code in <code>qadence/transpile/transpile.py</code> <pre><code>def transpile(*fs: Callable) -&gt; Callable:\n\"\"\"`AbstractBlock` or `QuantumCircuit` transpilation. Compose functions that\n    accept a circuit/block and returns a circuit/block.\n    Arguments:\n        *fs: composable functions that either map blocks to blocks\n            (`Callable[[AbstractBlock], AbstractBlock]`)\n            or circuits to circuits (`Callable[[QuantumCircuit], QuantumCircuit]`).\n    Returns:\n        Composed function.\n    Examples:\n    Flatten a block of nested chains and krons:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import *\n    from qadence.transpile import transpile, flatten, scale_primitive_blocks_only\n    b = chain(2 * chain(chain(X(0), Y(0))), kron(kron(X(0), X(1))))\n    print(b)\n    print() # markdown-exec: hide\n    # both flatten and scale_primitive_blocks_only are functions that accept and\n    # return a block\n    t = transpile(flatten, scale_primitive_blocks_only)(b)\n    print(t)\n    ```\n    We also proved a decorator to easily turn a function `Callable[[AbstractBlock], AbstractBlock]`\n    into a `Callable[[QuantumCircuit], QuantumCircuit]` to be used in circuit transpilation.\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import *\n    from qadence.transpile import transpile, blockfn_to_circfn, flatten\n    # We want to pass this circuit to `transpile` instead of a block,\n    # so we need functions that map from a circuit to a circuit.\n    circ = QuantumCircuit(2, chain(chain(X(0), chain(X(1)))))\n    @blockfn_to_circfn\n    def fn(block):\n        # un-decorated function accepts a block and returns a block\n        return block * block\n    transp = transpile(\n        # the decorated function accepts a circuit and returns a circuit\n        fn,\n        # already existing functions can also be decorated\n        blockfn_to_circfn(flatten)\n    )\n    print(transp(circ))\n    ```\n    \"\"\"\nreturn lambda x: reduce(lambda acc, f: f(acc), reversed(fs), x)\n</code></pre>"},{"location":"qadence/transpile/#qadence.transpile.block.chain_single_qubit_ops","title":"<code>chain_single_qubit_ops(block)</code>","text":"<p>Transpile a chain of krons into a kron of chains of single qubit operations.</p> <p>Examples: <pre><code>from qadence import hea\nfrom qadence.transpile.block import chain_single_qubit_ops\n# Consider a single HEA layer\nblock = hea(2,1)\nprint(block)\n# After applying chain_single_qubit_ops, we get:\nprint(chain_single_qubit_ops(block))\n</code></pre> <pre><code>ChainBlock(0,1) [tag: HEA]\n\u251c\u2500\u2500 ChainBlock(0,1)\n\u2502   \u251c\u2500\u2500 KronBlock(0,1)\n\u2502   \u2502   \u251c\u2500\u2500 RX(0) [params: ['theta_0']]\n\u2502   \u2502   \u2514\u2500\u2500 RX(1) [params: ['theta_1']]\n\u2502   \u251c\u2500\u2500 KronBlock(0,1)\n\u2502   \u2502   \u251c\u2500\u2500 RY(0) [params: ['theta_2']]\n\u2502   \u2502   \u2514\u2500\u2500 RY(1) [params: ['theta_3']]\n\u2502   \u2514\u2500\u2500 KronBlock(0,1)\n\u2502       \u251c\u2500\u2500 RX(0) [params: ['theta_4']]\n\u2502       \u2514\u2500\u2500 RX(1) [params: ['theta_5']]\n\u2514\u2500\u2500 ChainBlock(0,1)\n\u2514\u2500\u2500 KronBlock(0,1)\n\u2514\u2500\u2500 CNOT(0,1)\nChainBlock(0,1)\n\u251c\u2500\u2500 KronBlock(0,1)\n\u2502   \u251c\u2500\u2500 ChainBlock(0)\n\u2502   \u2502   \u251c\u2500\u2500 RX(0) [params: ['theta_0']]\n\u2502   \u2502   \u251c\u2500\u2500 RY(0) [params: ['theta_2']]\n\u2502   \u2502   \u2514\u2500\u2500 RX(0) [params: ['theta_4']]\n\u2502   \u2514\u2500\u2500 ChainBlock(1)\n\u2502       \u251c\u2500\u2500 RX(1) [params: ['theta_1']]\n\u2502       \u251c\u2500\u2500 RY(1) [params: ['theta_3']]\n\u2502       \u2514\u2500\u2500 RX(1) [params: ['theta_5']]\n\u2514\u2500\u2500 ChainBlock(0,1)\n\u2514\u2500\u2500 KronBlock(0,1)\n\u2514\u2500\u2500 CNOT(0,1)\n</code></pre></p> Source code in <code>qadence/transpile/block.py</code> <pre><code>def chain_single_qubit_ops(block: AbstractBlock) -&gt; AbstractBlock:\n\"\"\"Transpile a chain of krons into a kron of chains of single qubit operations.\n    Examples:\n    ```python exec=\"on\" source=\"above\" result=\"json\"\n    from qadence import hea\n    from qadence.transpile.block import chain_single_qubit_ops\n    # Consider a single HEA layer\n    block = hea(2,1)\n    print(block)\n    # After applying chain_single_qubit_ops, we get:\n    print(chain_single_qubit_ops(block))\n    ```\n    \"\"\"\nif is_chain_of_primitivekrons(block):\nkronblocks = block.blocks  # type: ignore[attr-defined]\nn_blocks = len(kronblocks)\nchains = []\nfor qb_idx in range(block.n_qubits):\nprim_gates = []\nfor kron_idx in range(n_blocks):\nprim_gates.append(kronblocks[kron_idx][qb_idx])  # type: ignore[index]\nchains.append(chain(*prim_gates))\ntry:\nreturn kron(*chains)\nexcept Exception as e:\nlogger.debug(\nf\"Unable to transpile {block} using chain_single_qubit_ops\\\n                         due to {e}. Returning original circuit.\"\n)\nreturn block\nelif isinstance(block, CompositeBlock):\nreturn _construct(type(block), tuple(chain_single_qubit_ops(b) for b in block.blocks))\nelse:\nreturn block\n</code></pre>"},{"location":"qadence/transpile/#qadence.transpile.block.flatten","title":"<code>flatten(block, types=[ChainBlock, KronBlock, AddBlock])</code>","text":"<p>Flattens the given types of <code>CompositeBlock</code>s if possible.</p> <p>Example: <pre><code>from qadence import chain, kron, X\nfrom qadence.transpile import flatten\nfrom qadence.blocks import ChainBlock, KronBlock, AddBlock\nx = chain(chain(chain(X(0))), kron(kron(X(0))))\n# flatten only `ChainBlock`s\nassert flatten(x, [ChainBlock]) == chain(X(0), kron(kron(X(0))))\n# flatten `ChainBlock`s and `KronBlock`s\nassert flatten(x, [ChainBlock, KronBlock]) == chain(X(0), kron(X(0)))\n# flatten `AddBlock`s (does nothing in this case)\nassert flatten(x, [AddBlock]) == x\n</code></pre> <pre><code>\n</code></pre> </p> Source code in <code>qadence/transpile/block.py</code> <pre><code>def flatten(block: AbstractBlock, types: list = [ChainBlock, KronBlock, AddBlock]) -&gt; AbstractBlock:\n\"\"\"Flattens the given types of `CompositeBlock`s if possible.\n    Example:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import chain, kron, X\n    from qadence.transpile import flatten\n    from qadence.blocks import ChainBlock, KronBlock, AddBlock\n    x = chain(chain(chain(X(0))), kron(kron(X(0))))\n    # flatten only `ChainBlock`s\n    assert flatten(x, [ChainBlock]) == chain(X(0), kron(kron(X(0))))\n    # flatten `ChainBlock`s and `KronBlock`s\n    assert flatten(x, [ChainBlock, KronBlock]) == chain(X(0), kron(X(0)))\n    # flatten `AddBlock`s (does nothing in this case)\n    assert flatten(x, [AddBlock]) == x\n    ```\n    \"\"\"\nif isinstance(block, CompositeBlock):\ndef fn(b: AbstractBlock, T: Type) -&gt; AbstractBlock:\nreturn _construct(type(block), tuple(_flat_blocks(b, T)))\nreturn reduce(fn, types, block)  # type: ignore[arg-type]\nelif isinstance(block, ScaleBlock):\nblk = deepcopy(block)\nblk.block = flatten(block.block, types=types)\nreturn blk\nelse:\nreturn block\n</code></pre>"},{"location":"qadence/transpile/#qadence.transpile.block.scale_primitive_blocks_only","title":"<code>scale_primitive_blocks_only(block, scale=None)</code>","text":"<p>When given a scaled CompositeBlock consisting of several PrimitiveBlocks, move the scale all the way down into the leaves of the block tree.</p> PARAMETER  DESCRIPTION <code>block</code> <p>The block to be transpiled.</p> <p> TYPE: <code>AbstractBlock</code> </p> <code>scale</code> <p>An optional scale parameter. Only to be used for recursive calls internally.</p> <p> TYPE: <code>Basic</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <code>AbstractBlock</code> <p>A block of the same type where the scales have been moved into the subblocks.</p> <p> TYPE: <code>AbstractBlock</code> </p> <p>Examples:</p> <p>There are two different cases: <code>ChainBlock</code>s/<code>KronBlock</code>s: Only the first subblock needs to be scaled because chains/krons represent multiplications. <pre><code>from qadence import chain, X, RX\nfrom qadence.transpile import scale_primitive_blocks_only\nb = 2 * chain(X(0), RX(0, \"theta\"))\nprint(b)\n# After applying scale_primitive_blocks_only\nprint(scale_primitive_blocks_only(b))\n</code></pre> <pre><code>[mul: 2] \u2514\u2500\u2500 ChainBlock(0)\n\u251c\u2500\u2500 X(0)\n\u2514\u2500\u2500 RX(0) [params: ['theta']]\nChainBlock(0)\n\u251c\u2500\u2500 [mul: 2.00000000000000] \u2502   \u2514\u2500\u2500 X(0)\n\u2514\u2500\u2500 RX(0) [params: ['theta']]\n</code></pre></p> <p><code>AddBlock</code>s: Consider 2 * add(X(0), RX(0, \"theta\")).  The scale needs to be added to all subblocks.  We get add(2 * X(0), 2 * RX(0, \"theta\")). <pre><code>from qadence import add, X, RX\nfrom qadence.transpile import scale_primitive_blocks_only\nb = 2 * add(X(0), RX(0, \"theta\"))\nprint(b)\n# After applying scale_primitive_blocks_only\nprint(scale_primitive_blocks_only(b))\n</code></pre> <pre><code>[mul: 2] \u2514\u2500\u2500 AddBlock(0)\n\u251c\u2500\u2500 X(0)\n\u2514\u2500\u2500 RX(0) [params: ['theta']]\nAddBlock(0)\n\u251c\u2500\u2500 [mul: 2.00000000000000] \u2502   \u2514\u2500\u2500 X(0)\n\u2514\u2500\u2500 [mul: 2.00000000000000] \u2514\u2500\u2500 RX(0) [params: ['theta']]\n</code></pre></p> Source code in <code>qadence/transpile/block.py</code> <pre><code>@singledispatch\ndef scale_primitive_blocks_only(block: AbstractBlock, scale: sympy.Basic = None) -&gt; AbstractBlock:\n\"\"\"When given a scaled CompositeBlock consisting of several PrimitiveBlocks,\n    move the scale all the way down into the leaves of the block tree.\n    Arguments:\n        block: The block to be transpiled.\n        scale: An optional scale parameter. Only to be used for recursive calls internally.\n    Returns:\n        AbstractBlock: A block of the same type where the scales have been moved into the subblocks.\n    Examples:\n    There are two different cases:\n    `ChainBlock`s/`KronBlock`s: Only the first subblock needs to be scaled because chains/krons\n    represent multiplications.\n    ```python exec=\"on\" source=\"above\" result=\"json\"\n    from qadence import chain, X, RX\n    from qadence.transpile import scale_primitive_blocks_only\n    b = 2 * chain(X(0), RX(0, \"theta\"))\n    print(b)\n    # After applying scale_primitive_blocks_only\n    print(scale_primitive_blocks_only(b))\n    ```\n    `AddBlock`s: Consider 2 * add(X(0), RX(0, \"theta\")).  The scale needs to be added to all\n    subblocks.  We get add(2 * X(0), 2 * RX(0, \"theta\")).\n    ```python exec=\"on\" source=\"above\" result=\"json\"\n    from qadence import add, X, RX\n    from qadence.transpile import scale_primitive_blocks_only\n    b = 2 * add(X(0), RX(0, \"theta\"))\n    print(b)\n    # After applying scale_primitive_blocks_only\n    print(scale_primitive_blocks_only(b))\n    ```\n    \"\"\"\nraise NotImplementedError(f\"scale_primitive_blocks_only is not implemented for {type(block)}\")\n</code></pre>"},{"location":"qadence/transpile/#qadence.transpile.block.set_trainable","title":"<code>set_trainable(blocks, value=True, inplace=True)</code>","text":"<p>Set the trainability of all parameters in a block to a given value</p> PARAMETER  DESCRIPTION <code>blocks</code> <p>Block or list of blocks for which to set the trainable attribute</p> <p> TYPE: <code>AbstractBlock | list[AbstractBlock]</code> </p> <code>value</code> <p>The value of the trainable attribute to assign to the input blocks</p> <p> TYPE: <code>bool</code> DEFAULT: <code>True</code> </p> <code>inplace</code> <p>Whether to modify the block(s) in place or not. Currently, only</p> <p> TYPE: <code>bool</code> DEFAULT: <code>True</code> </p> RAISES DESCRIPTION <code>NotImplementedError</code> <p>if the <code>inplace</code> argument is set to False, the function will raise  this exception</p> RETURNS DESCRIPTION <code>AbstractBlock | list[AbstractBlock]</code> <p>AbstractBlock | list[AbstractBlock]: the input block or list of blocks with the trainable attribute set to the given value</p> Source code in <code>qadence/transpile/block.py</code> <pre><code>def set_trainable(\nblocks: AbstractBlock | list[AbstractBlock], value: bool = True, inplace: bool = True\n) -&gt; AbstractBlock | list[AbstractBlock]:\n\"\"\"Set the trainability of all parameters in a block to a given value\n    Args:\n        blocks (AbstractBlock | list[AbstractBlock]): Block or list of blocks for which\n            to set the trainable attribute\n        value (bool, optional): The value of the trainable attribute to assign to the input blocks\n        inplace (bool, optional): Whether to modify the block(s) in place or not. Currently, only\n    Raises:\n        NotImplementedError: if the `inplace` argument is set to False, the function will\n            raise  this exception\n    Returns:\n        AbstractBlock | list[AbstractBlock]: the input block or list of blocks with the trainable\n            attribute set to the given value\n    \"\"\"\nif isinstance(blocks, AbstractBlock):\nblocks = [blocks]\nif inplace:\nfor block in blocks:\nparams: list[sympy.Basic] = parameters(block)\nfor p in params:\nif not p.is_number:\np.trainable = value\nelse:\nraise NotImplementedError(\"Not inplace set_trainable is not yet available\")\nreturn blocks if len(blocks) &gt; 1 else blocks[0]\n</code></pre>"},{"location":"qadence/transpile/#qadence.transpile.block.validate","title":"<code>validate(block)</code>","text":"<p>Moves a block from global to local qubit numbers by adding PutBlocks and reassigning qubit locations approriately.</p>"},{"location":"qadence/transpile/#qadence.transpile.block.validate--example","title":"Example","text":"<pre><code>from qadence.blocks import chain\nfrom qadence.operations import X\nfrom qadence.transpile import validate\nx = chain(chain(X(0)), chain(X(1)))\nprint(x)\nprint(validate(x))\n</code></pre> <pre><code>ChainBlock(0,1)\n\u251c\u2500\u2500 ChainBlock(0)\n\u2502   \u2514\u2500\u2500 X(0)\n\u2514\u2500\u2500 ChainBlock(1)\n\u2514\u2500\u2500 X(1)\nChainBlock(0,1)\n\u251c\u2500\u2500 put on (0)\n\u2502   \u2514\u2500\u2500 ChainBlock(0)\n\u2502       \u2514\u2500\u2500 put on (0)\n\u2502           \u2514\u2500\u2500 X(0)\n\u2514\u2500\u2500 put on (1)\n\u2514\u2500\u2500 ChainBlock(0)\n\u2514\u2500\u2500 put on (0)\n\u2514\u2500\u2500 X(0)\n</code></pre> Source code in <code>qadence/transpile/block.py</code> <pre><code>def validate(block: AbstractBlock) -&gt; AbstractBlock:\n\"\"\"Moves a block from global to local qubit numbers by adding PutBlocks and reassigning\n    qubit locations approriately.\n    # Example\n    ```python exec=\"on\" source=\"above\" result=\"json\"\n    from qadence.blocks import chain\n    from qadence.operations import X\n    from qadence.transpile import validate\n    x = chain(chain(X(0)), chain(X(1)))\n    print(x)\n    print(validate(x))\n    ```\n    \"\"\"\nvblock: AbstractBlock\nfrom qadence.transpile import reassign\nif isinstance(block, ControlBlock):\nvblock = deepcopy(block)\nb: AbstractBlock\n(b,) = block.blocks\nb = reassign(b, {i: i - min(b.qubit_support) for i in b.qubit_support})\nb = validate(b)\nvblock.blocks = (b,)  # type: ignore[assignment]\nelif isinstance(block, CompositeBlock):\nblocks = []\nfor b in block.blocks:\nmi, ma = min(b.qubit_support), max(b.qubit_support)\nnb = reassign(b, {i: i - min(b.qubit_support) for i in b.qubit_support})\nnb = validate(nb)\nnb = PutBlock(nb, tuple(range(mi, ma + 1)))\nblocks.append(nb)\ntry:\nvblock = _construct(type(block), tuple(blocks))\nexcept AssertionError as e:\nif str(e) == \"Make sure blocks act on distinct qubits!\":\nvblock = chain(*blocks)\nelse:\nraise e\nelif isinstance(block, PrimitiveBlock):\nvblock = deepcopy(block)\nelse:\nraise NotImplementedError\nvblock.tag = block.tag\nreturn vblock\n</code></pre>"},{"location":"qadence/transpile/#qadence.transpile.emulate.add_interaction","title":"<code>add_interaction(x, *args, interaction=Interaction.NN, spacing=1.0)</code>","text":"<p>Turns blocks or circuits into (a chain of) <code>HamEvo</code> blocks including a chosen interaction term.</p> <p>This is a <code>@singledipatch</code>ed function which can be called in three ways:</p> <ul> <li>With a <code>QuantumCircuit</code> which contains all necessary information: <code>add_interaction(circuit)</code></li> <li>With a <code>Register</code> and an <code>AbstractBlock</code>: <code>add_interaction(reg, block)</code></li> <li>With an <code>AbstractBlock</code> only: <code>add_interaction(block)</code></li> </ul> <p>See the section about analog blocks for detailed information about how which types of blocks are translated.</p> PARAMETER  DESCRIPTION <code>x</code> <p>Circuit or block to be emulated. See the examples on which argument combinations are accepted.</p> <p> TYPE: <code>Register | QuantumCircuit | AbstractBlock</code> </p> <code>interaction</code> <p>Type of interaction that is added. Can also be a function that accepts a register and a list of edges that define which qubits interact (see the examples).</p> <p> TYPE: <code>Interaction | Callable</code> DEFAULT: <code>NN</code> </p> <code>spacing</code> <p>All qubit coordinates are multiplied by <code>spacing</code>.</p> <p> TYPE: <code>float</code> DEFAULT: <code>1.0</code> </p> <p>Examples: <pre><code>from qadence import QuantumCircuit, AnalogRX, add_interaction\nc = QuantumCircuit(2, AnalogRX(2.0))\ne = add_interaction(c)\n</code></pre> <pre><code>[mul: 0.0] \u2514\u2500\u2500 AddBlock(0,1)\n\u251c\u2500\u2500 AddBlock(0,1)\n\u2502   \u2514\u2500\u2500 AddBlock(0,1)\n\u2502       \u251c\u2500\u2500 [mul: 1.571] \u2502       \u2502   \u2514\u2500\u2500 AddBlock(0,1)\n\u2502       \u2502       \u251c\u2500\u2500 AddBlock(0)\n\u2502       \u2502       \u2502   \u251c\u2500\u2500 [mul: 1.00000000000000] \u2502       \u2502       \u2502   \u2502   \u2514\u2500\u2500 X(0)\n\u2502       \u2502       \u2502   \u2514\u2500\u2500 [mul: 0.0] \u2502       \u2502       \u2502       \u2514\u2500\u2500 Y(0)\n\u2502       \u2502       \u2514\u2500\u2500 AddBlock(1)\n\u2502       \u2502           \u251c\u2500\u2500 [mul: 1.00000000000000] \u2502       \u2502           \u2502   \u2514\u2500\u2500 X(1)\n\u2502       \u2502           \u2514\u2500\u2500 [mul: 0.0] \u2502       \u2502               \u2514\u2500\u2500 Y(1)\n\u2502       \u2514\u2500\u2500 [mul: 0.0] \u2502           \u2514\u2500\u2500 AddBlock(0,1)\n\u2502               \u251c\u2500\u2500 N(0)\n\u2502               \u2514\u2500\u2500 N(1)\n\u2514\u2500\u2500 AddBlock(0,1)\n\u2514\u2500\u2500 [mul: 865723.020] \u2514\u2500\u2500 KronBlock(0,1)\n\u251c\u2500\u2500 N(0)\n\u2514\u2500\u2500 N(1)\n</code></pre>  You can also use <code>add_interaction</code> directly on a block, but you have to provide either the <code>Register</code> or define a non-global qubit support. <pre><code>from qadence import AnalogRX, Register, add_interaction\nb = AnalogRX(2.0)\nr = Register(1)\ne = add_interaction(r, b)\n# or provide only the block with local qubit support\n# in this case the register is created via `Register(b.n_qubits)`\ne = add_interaction(AnalogRX(2.0, qubit_support=(0,)))\nprint(e.generator)\n</code></pre> <pre><code>[mul: 0.450] \u2514\u2500\u2500 AddBlock(0)\n\u2514\u2500\u2500 AddBlock(0)\n\u251c\u2500\u2500 [mul: 1.571] \u2502   \u2514\u2500\u2500 AddBlock(0)\n\u2502       \u2514\u2500\u2500 AddBlock(0)\n\u2502           \u251c\u2500\u2500 [mul: 1.00000000000000] \u2502           \u2502   \u2514\u2500\u2500 X(0)\n\u2502           \u2514\u2500\u2500 [mul: 0.0] \u2502               \u2514\u2500\u2500 Y(0)\n\u2514\u2500\u2500 [mul: 0.0] \u2514\u2500\u2500 AddBlock(0)\n\u2514\u2500\u2500 N(0)\n[mul: 0.450] \u2514\u2500\u2500 AddBlock(0)\n\u2514\u2500\u2500 AddBlock(0)\n\u251c\u2500\u2500 [mul: 1.571] \u2502   \u2514\u2500\u2500 AddBlock(0)\n\u2502       \u2514\u2500\u2500 AddBlock(0)\n\u2502           \u251c\u2500\u2500 [mul: 1.00000000000000] \u2502           \u2502   \u2514\u2500\u2500 X(0)\n\u2502           \u2514\u2500\u2500 [mul: 0.0] \u2502               \u2514\u2500\u2500 Y(0)\n\u2514\u2500\u2500 [mul: 0.0] \u2514\u2500\u2500 AddBlock(0)\n\u2514\u2500\u2500 N(0)\n</code></pre>  You can specify a custom <code>interaction</code> function which has to accept a <code>Register</code> and a list of <code>edges: list[tuple[int, int]]</code>: <pre><code>from qadence import AnalogRX, Register, add_interaction\nfrom qadence.transpile.emulate import ising_interaction\ndef int_fn(r: Register, pairs: list[tuple[int, int]]) -&gt; AbstractBlock:\n# do either something completely custom\n# ...\n# or e.g. change the default kwargs to `ising_interaction`\nreturn ising_interaction(r, pairs, rydberg_level=70)\nb = AnalogRX(2.0)\nr = Register(1)\ne = add_interaction(r, b, interaction=int_fn)\n</code></pre> <pre><code>\n</code></pre> </p> Source code in <code>qadence/transpile/emulate.py</code> <pre><code>@singledispatch\ndef add_interaction(\nx: Register | QuantumCircuit | AbstractBlock,\n*args: Any,\ninteraction: Interaction | Callable = Interaction.NN,\nspacing: float = 1.0,\n) -&gt; QuantumCircuit | AbstractBlock:\n\"\"\"Turns blocks or circuits into (a chain of) `HamEvo` blocks including a\n    chosen interaction term.\n    This is a `@singledipatch`ed function which can be called in three ways:\n    * With a `QuantumCircuit` which contains all necessary information: `add_interaction(circuit)`\n    * With a `Register` and an `AbstractBlock`: `add_interaction(reg, block)`\n    * With an `AbstractBlock` only: `add_interaction(block)`\n    See the section about [analog blocks](/digital_analog_qc/analog-basics.md) for\n    detailed information about how which types of blocks are translated.\n    Arguments:\n        x: Circuit or block to be emulated. See the examples on which argument\n            combinations are accepted.\n        interaction: Type of interaction that is added. Can also be a function that accepts a\n            register and a list of edges that define which qubits interact (see the examples).\n        spacing: All qubit coordinates are multiplied by `spacing`.\n    Examples:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import QuantumCircuit, AnalogRX, add_interaction\n    c = QuantumCircuit(2, AnalogRX(2.0))\n    e = add_interaction(c)\n    print(str(e.block.generator)) # markdown-exec: hide\n    ```\n    You can also use `add_interaction` directly on a block, but you have to provide either\n    the `Register` or define a non-global qubit support.\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import AnalogRX, Register, add_interaction\n    b = AnalogRX(2.0)\n    r = Register(1)\n    e = add_interaction(r, b)\n    print(e.generator) # markdown-exec: hide\n    # or provide only the block with local qubit support\n    # in this case the register is created via `Register(b.n_qubits)`\n    e = add_interaction(AnalogRX(2.0, qubit_support=(0,)))\n    print(e.generator)\n    ```\n    You can specify a custom `interaction` function which has to accept a `Register` and a list\n    of `edges: list[tuple[int, int]]`:\n    ```python exec=\"on\" source=\"material-block\" result=\"json\"\n    from qadence import AnalogRX, Register, add_interaction\n    from qadence.transpile.emulate import ising_interaction\n    def int_fn(r: Register, pairs: list[tuple[int, int]]) -&gt; AbstractBlock:\n        # do either something completely custom\n        # ...\n        # or e.g. change the default kwargs to `ising_interaction`\n        return ising_interaction(r, pairs, rydberg_level=70)\n    b = AnalogRX(2.0)\n    r = Register(1)\n    e = add_interaction(r, b, interaction=int_fn)\n    ```\n    \"\"\"\nraise ValueError(f\"`add_interaction` is not implemented for {type(x)}\")\n</code></pre>"},{"location":"qadence/types/","title":"Types","text":""},{"location":"qadence/types/#qadence-types","title":"Qadence Types","text":""},{"location":"qadence/types/#qadence.types.TArray","title":"<code>TArray = Union[Iterable, torch.Tensor, np.ndarray]</code>  <code>module-attribute</code>","text":"<p>Union of common array types.</p>"},{"location":"qadence/types/#qadence.types.TGenerator","title":"<code>TGenerator = Union[torch.Tensor, sympy.Array, sympy.Basic]</code>  <code>module-attribute</code>","text":"<p>Union of torch tensors and numpy arrays.</p>"},{"location":"qadence/types/#qadence.types.TNumber","title":"<code>TNumber = Union[int, float, complex]</code>  <code>module-attribute</code>","text":"<p>Union of python number types.</p>"},{"location":"qadence/types/#qadence.types.TParameter","title":"<code>TParameter = Union[TNumber, torch.Tensor, sympy.Basic, str]</code>  <code>module-attribute</code>","text":"<p>Union of numbers, tensors, and parameter types.</p>"},{"location":"qadence/types/#qadence.types.AlgoHEvo","title":"<code>AlgoHEvo</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Hamiltonian Evolution algorithms that can be used by the backend.</p>"},{"location":"qadence/types/#qadence.types.AlgoHEvo.EIG","title":"<code>EIG = 'EIG'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Using Hamiltonian diagonalization.</p>"},{"location":"qadence/types/#qadence.types.AlgoHEvo.EXP","title":"<code>EXP = 'EXP'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Using torch.matrix_exp on the generator matrix.</p>"},{"location":"qadence/types/#qadence.types.AlgoHEvo.RK4","title":"<code>RK4 = 'RK4'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>4th order Runge-Kutta approximation.</p>"},{"location":"qadence/types/#qadence.types.Endianness","title":"<code>Endianness</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>The endianness convention to use.</p>"},{"location":"qadence/types/#qadence.types.Endianness.BIG","title":"<code>BIG = 'Big'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Use Big endianness.</p>"},{"location":"qadence/types/#qadence.types.Endianness.LITTLE","title":"<code>LITTLE = 'Little'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Use little endianness.</p>"},{"location":"qadence/types/#qadence.types.FigFormat","title":"<code>FigFormat</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Available output formats for exporting visualized circuits to a file.</p>"},{"location":"qadence/types/#qadence.types.FigFormat.PDF","title":"<code>PDF = 'PDF'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>PDF format.</p>"},{"location":"qadence/types/#qadence.types.FigFormat.PNG","title":"<code>PNG = 'PNG'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>PNG format.</p>"},{"location":"qadence/types/#qadence.types.FigFormat.SVG","title":"<code>SVG = 'SVG'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>SVG format.</p>"},{"location":"qadence/types/#qadence.types.GenDAQC","title":"<code>GenDAQC</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>The type of interaction for the DAQC transform.</p>"},{"location":"qadence/types/#qadence.types.GenDAQC.NN","title":"<code>NN = 'NN'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>NN</p>"},{"location":"qadence/types/#qadence.types.GenDAQC.ZZ","title":"<code>ZZ = 'ZZ'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>ZZ</p>"},{"location":"qadence/types/#qadence.types.Interaction","title":"<code>Interaction</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Interaction types used in - <code>add_interaction</code>. - <code>hamiltonian_factory</code>.</p>"},{"location":"qadence/types/#qadence.types.Interaction.NN","title":"<code>NN = 'NN'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>NN-Ising Interaction, N=(I-Z)/2</p>"},{"location":"qadence/types/#qadence.types.Interaction.XY","title":"<code>XY = 'XY'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>XY Interaction</p>"},{"location":"qadence/types/#qadence.types.Interaction.XYZ","title":"<code>XYZ = 'XYZ'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>XYZ Interaction</p>"},{"location":"qadence/types/#qadence.types.Interaction.ZZ","title":"<code>ZZ = 'ZZ'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>ZZ-Ising Interaction</p>"},{"location":"qadence/types/#qadence.types.LTSOrder","title":"<code>LTSOrder</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Lie-Trotter-Suzuki approximation order.</p>"},{"location":"qadence/types/#qadence.types.LTSOrder.BASIC","title":"<code>BASIC = 'BASIC'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Basic.</p>"},{"location":"qadence/types/#qadence.types.LTSOrder.ST2","title":"<code>ST2 = 'ST2'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>ST2.</p>"},{"location":"qadence/types/#qadence.types.LTSOrder.ST4","title":"<code>ST4 = 'ST4'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>ST4.</p>"},{"location":"qadence/types/#qadence.types.LatticeTopology","title":"<code>LatticeTopology</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Lattice topologies to choose from for the register.</p>"},{"location":"qadence/types/#qadence.types.LatticeTopology.ALL_TO_ALL","title":"<code>ALL_TO_ALL = 'all_to_all'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>All to all- connected lattice.</p>"},{"location":"qadence/types/#qadence.types.LatticeTopology.ARBITRARY","title":"<code>ARBITRARY = 'arbitrary'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Arbitrarily-shaped lattice.</p>"},{"location":"qadence/types/#qadence.types.LatticeTopology.CIRCLE","title":"<code>CIRCLE = 'circle'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Circular lattice.</p>"},{"location":"qadence/types/#qadence.types.LatticeTopology.HONEYCOMB_LATTICE","title":"<code>HONEYCOMB_LATTICE = 'honeycomb_lattice'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Honeycomb-shaped lattice.</p>"},{"location":"qadence/types/#qadence.types.LatticeTopology.LINE","title":"<code>LINE = 'line'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Line-format lattice.</p>"},{"location":"qadence/types/#qadence.types.LatticeTopology.RECTANGULAR_LATTICE","title":"<code>RECTANGULAR_LATTICE = 'rectangular_lattice'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Rectangular-shaped lattice.</p>"},{"location":"qadence/types/#qadence.types.LatticeTopology.SQUARE","title":"<code>SQUARE = 'square'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Square lattice.</p>"},{"location":"qadence/types/#qadence.types.LatticeTopology.TRIANGULAR_LATTICE","title":"<code>TRIANGULAR_LATTICE = 'triangular_lattice'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Triangular-shaped shape.</p>"},{"location":"qadence/types/#qadence.types.OpName","title":"<code>OpName</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>A list of all available of digital-analog operations.</p>"},{"location":"qadence/types/#qadence.types.OpName.ANALOGENTANG","title":"<code>ANALOGENTANG = 'AnalogEntanglement'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The analog entanglement operation.</p>"},{"location":"qadence/types/#qadence.types.OpName.ANALOGRX","title":"<code>ANALOGRX = 'AnalogRX'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The analog RX operation.</p>"},{"location":"qadence/types/#qadence.types.OpName.ANALOGRY","title":"<code>ANALOGRY = 'AnalogRY'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The analog RY operation.</p>"},{"location":"qadence/types/#qadence.types.OpName.ANALOGRZ","title":"<code>ANALOGRZ = 'AnalogRZ'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The analog RZ operation.</p>"},{"location":"qadence/types/#qadence.types.OpName.ANALOGSWAP","title":"<code>ANALOGSWAP = 'AnalogSWAP'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The analog SWAP operation.</p>"},{"location":"qadence/types/#qadence.types.OpName.CNOT","title":"<code>CNOT = 'CNOT'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The CNOT gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.CPHASE","title":"<code>CPHASE = 'CPHASE'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The controlled PHASE gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.CRX","title":"<code>CRX = 'CRX'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Control RX gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.CRY","title":"<code>CRY = 'CRY'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Controlled RY gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.CRZ","title":"<code>CRZ = 'CRZ'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Control RZ gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.CSWAP","title":"<code>CSWAP = 'CSWAP'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Control SWAP gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.CZ","title":"<code>CZ = 'CZ'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The CZ gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.ENTANG","title":"<code>ENTANG = 'entangle'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The entanglement operation.</p>"},{"location":"qadence/types/#qadence.types.OpName.H","title":"<code>H = 'H'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Hadamard gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.HAMEVO","title":"<code>HAMEVO = 'HamEvo'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Hamiltonian Evolution operation.</p>"},{"location":"qadence/types/#qadence.types.OpName.I","title":"<code>I = 'I'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Identity gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.MCPHASE","title":"<code>MCPHASE = 'MCPHASE'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Multicontrol PHASE gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.MCRX","title":"<code>MCRX = 'MCRX'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Multicontrol RX gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.MCRY","title":"<code>MCRY = 'MCRY'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Multicontrol RY gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.MCRZ","title":"<code>MCRZ = 'MCRZ'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Multicontrol RZ gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.MCZ","title":"<code>MCZ = 'MCZ'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Multicontrol CZ gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.N","title":"<code>N = 'N'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The N = (1/2)(I-Z) operator</p>"},{"location":"qadence/types/#qadence.types.OpName.PHASE","title":"<code>PHASE = 'PHASE'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The PHASE gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.RX","title":"<code>RX = 'RX'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The RX gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.RY","title":"<code>RY = 'RY'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The RY gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.RZ","title":"<code>RZ = 'RZ'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The RZ gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.S","title":"<code>S = 'S'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The S gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.SDAGGER","title":"<code>SDAGGER = 'SDagger'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The S dagger gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.SWAP","title":"<code>SWAP = 'SWAP'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The SWAP gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.T","title":"<code>T = 'T'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The T gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.TDAGGER","title":"<code>TDAGGER = 'TDagger'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The T dagger gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.TOFFOLI","title":"<code>TOFFOLI = 'Toffoli'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Toffoli gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.U","title":"<code>U = 'U'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The U gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.WAIT","title":"<code>WAIT = 'wait'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The wait operation.</p>"},{"location":"qadence/types/#qadence.types.OpName.X","title":"<code>X = 'X'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The X gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.Y","title":"<code>Y = 'Y'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Y gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.Z","title":"<code>Z = 'Z'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Z gate.</p>"},{"location":"qadence/types/#qadence.types.OpName.ZERO","title":"<code>ZERO = 'Zero'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The zero gate.</p>"},{"location":"qadence/types/#qadence.types.OverlapMethod","title":"<code>OverlapMethod</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Overlap Methods to choose from.</p>"},{"location":"qadence/types/#qadence.types.OverlapMethod.COMPUTE_UNCOMPUTE","title":"<code>COMPUTE_UNCOMPUTE = 'compute_uncompute'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compute-uncompute.</p>"},{"location":"qadence/types/#qadence.types.OverlapMethod.EXACT","title":"<code>EXACT = 'exact'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Exact.</p>"},{"location":"qadence/types/#qadence.types.OverlapMethod.HADAMARD_TEST","title":"<code>HADAMARD_TEST = 'hadamard_test'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Hadamard-test.</p>"},{"location":"qadence/types/#qadence.types.OverlapMethod.JENSEN_SHANNON","title":"<code>JENSEN_SHANNON = 'jensen_shannon'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Jensen-shannon.</p>"},{"location":"qadence/types/#qadence.types.OverlapMethod.SWAP_TEST","title":"<code>SWAP_TEST = 'swap_test'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Swap-test.</p>"},{"location":"qadence/types/#qadence.types.ParameterType","title":"<code>ParameterType</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Parameter types available in qadence.</p>"},{"location":"qadence/types/#qadence.types.ParameterType.FEATURE","title":"<code>FEATURE = 'Feature'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>FeatureParameters act as input and are not trainable.</p>"},{"location":"qadence/types/#qadence.types.ParameterType.FIXED","title":"<code>FIXED = 'Fixed'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Fixed/ constant parameters are neither trainable nor act as input.</p>"},{"location":"qadence/types/#qadence.types.ParameterType.VARIATIONAL","title":"<code>VARIATIONAL = 'Variational'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>VariationalParameters are trainable.</p>"},{"location":"qadence/types/#qadence.types.QubitSupportType","title":"<code>QubitSupportType</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Qubit support types.</p>"},{"location":"qadence/types/#qadence.types.QubitSupportType.GLOBAL","title":"<code>GLOBAL = 'global'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Use global qubit support.</p>"},{"location":"qadence/types/#qadence.types.ResultType","title":"<code>ResultType</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Available data types for generating certain results.</p>"},{"location":"qadence/types/#qadence.types.ResultType.NUMPY","title":"<code>NUMPY = 'Numpy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Numpy Array Type.</p>"},{"location":"qadence/types/#qadence.types.ResultType.STRING","title":"<code>STRING = 'String'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>String Type.</p>"},{"location":"qadence/types/#qadence.types.ResultType.TORCH","title":"<code>TORCH = 'Torch'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Torch Tensor Type.</p>"},{"location":"qadence/types/#qadence.types.SerializationFormat","title":"<code>SerializationFormat</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Available serialization formats for circuits.</p>"},{"location":"qadence/types/#qadence.types.SerializationFormat.JSON","title":"<code>JSON = 'JSON'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The Json format.</p>"},{"location":"qadence/types/#qadence.types.SerializationFormat.PT","title":"<code>PT = 'PT'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The PT format used by Torch.</p>"},{"location":"qadence/types/#qadence.types.StateGeneratorType","title":"<code>StateGeneratorType</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Methods to generate random states.</p>"},{"location":"qadence/types/#qadence.types.StateGeneratorType.HAAR_MEASURE_FAST","title":"<code>HAAR_MEASURE_FAST = 'HaarMeasureFast'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>HaarMeasure.</p>"},{"location":"qadence/types/#qadence.types.StateGeneratorType.HAAR_MEASURE_SLOW","title":"<code>HAAR_MEASURE_SLOW = 'HaarMeasureSlow'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>HaarMeasure non-optimized version.</p>"},{"location":"qadence/types/#qadence.types.StateGeneratorType.RANDOM_ROTATIONS","title":"<code>RANDOM_ROTATIONS = 'RandomRotations'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Random Rotations.</p>"},{"location":"qadence/types/#qadence.types.StrEnum","title":"<code>StrEnum</code>","text":"<p>             Bases: <code>str</code>, <code>Enum</code></p>"},{"location":"qadence/types/#qadence.types.StrEnum.__str__","title":"<code>__str__()</code>","text":"<p>Used when dumping enum fields in a schema.</p> Source code in <code>qadence/types.py</code> <pre><code>def __str__(self) -&gt; str:\n\"\"\"Used when dumping enum fields in a schema.\"\"\"\nret: str = self.value\nreturn ret\n</code></pre>"},{"location":"qadence/types/#qadence.types.Strategy","title":"<code>Strategy</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Computing paradigm.</p>"},{"location":"qadence/types/#qadence.types.Strategy.ANALOG","title":"<code>ANALOG = 'Analog'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Use the analog paradigm.</p>"},{"location":"qadence/types/#qadence.types.Strategy.BDAQC","title":"<code>BDAQC = 'bDAQC'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Use the banged digital-analog QC paradigm.</p>"},{"location":"qadence/types/#qadence.types.Strategy.DIGITAL","title":"<code>DIGITAL = 'Digital'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Use the digital paradigm.</p>"},{"location":"qadence/types/#qadence.types.Strategy.SDAQC","title":"<code>SDAQC = 'sDAQC'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Use the step-wise digital-analog QC paradigm.</p>"},{"location":"qadence/types/#qadence.types.TensorType","title":"<code>TensorType</code>","text":"<p>             Bases: <code>StrEnum</code></p> <p>Tensor Types for converting blocks to tensors.</p>"},{"location":"qadence/types/#qadence.types.TensorType.DENSE","title":"<code>DENSE = 'Dense'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Convert a block to a dense tensor.</p>"},{"location":"qadence/types/#qadence.types.TensorType.SPARSE","title":"<code>SPARSE = 'Sparse'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Convert a observable block to a sparse tensor.</p>"},{"location":"qadence/types/#qadence.types.TensorType.SPARSEDIAGONAL","title":"<code>SPARSEDIAGONAL = 'SparseDiagonal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Convert a diagonal observable block to a sparse diagonal if possible.</p>"},{"location":"qml/","title":"Variational quantum algorithms","text":"<p>Variational algorithms on noisy devices and quantum machine learning (QML) [^1] in particular are the target applications for Qadence. For this purpose, the library offers both flexible symbolic expressions for the quantum circuit parameters via <code>sympy</code> (see here for more details) and native automatic differentiation via integration with PyTorch deep learning framework.</p> <p>Qadence symbolic parameter interface allows to create arbitrary feature maps to encode classical data into quantum circuits with an arbitrary non-linear function embedding for the input values:</p> <pre><code>import qadence as qd\nfrom qadence.operations import *\nimport torch\nfrom sympy import acos\nn_qubits = 4\nfp = qd.FeatureParameter(\"phi\")\nfeature_map = qd.kron(RX(i, 2 * acos(fp)) for i in range(n_qubits))\n# the key in the dictionary must correspond to\n# the name of the assigned to the feature parameter\ninputs = {\"phi\": torch.rand(3)}\nsamples = qd.sample(feature_map, values=inputs)\nprint(samples)\n</code></pre>   [Counter({'0000': 19, '1000': 15, '0100': 9, '0001': 8, '0010': 8, '0101': 6, '1010': 6, '0011': 5, '1001': 4, '1100': 4, '1101': 4, '0111': 3, '1110': 3, '0110': 2, '1011': 2, '1111': 2}), Counter({'0000': 28, '1000': 14, '0001': 11, '0100': 8, '0010': 7, '1010': 7, '1100': 6, '0110': 4, '1101': 4, '0111': 3, '0011': 2, '1001': 2, '0101': 1, '1011': 1, '1110': 1, '1111': 1}), Counter({'1111': 29, '0111': 13, '1011': 11, '1110': 10, '1101': 8, '0011': 4, '0101': 4, '1010': 4, '0010': 3, '0110': 3, '1000': 3, '1001': 3, '0001': 2, '0000': 1, '0100': 1, '1100': 1})]    <p>The <code>constructors.feature_map</code> module provides convenience functions to build commonly used feature maps where the input parameter is encoded in the single-qubit gates rotation angle.</p> <p>Furthermore, Qadence is natively integrated with PyTorch automatic differentiation engine thus Qadence quantum models can be used seamlessly in a PyTorch workflow.</p> <p>Let's create a quantum neural network model using the feature map just defined, a digital-analog variational ansaztz and a simple observable \\(X(0) \\otimes X(1)\\). We use the convenience <code>QNN</code> quantum model abstraction.</p> <pre><code>ansatz = qd.hea(n_qubits, strategy=\"sDAQC\")\ncircuit = qd.QuantumCircuit(n_qubits, feature_map, ansatz)\nobservable = qd.kron(X(0), X(1))\nmodel = qd.QNN(circuit, observable)\n# NOTE: the `QNN` is a torch.nn.Module\nassert isinstance(model, torch.nn.Module)\n</code></pre> <pre><code>\n</code></pre> <p>Differentiation works the same way as any other PyTorch module:</p> <pre><code>values = {\"phi\": torch.rand(10, requires_grad=True)}\n# the forward pass of the quantum model returns the expectation\n# value of the input observable\nout = model(values)\nprint(f\"Quantum model output: {out}\")\n# you can compute the gradient with respect to inputs using\n# PyTorch autograd differentiation engine\ndout = torch.autograd.grad(out, values[\"phi\"], torch.ones_like(out), create_graph=True)[0]\nprint(f\"First-order derivative w.r.t. the feature parameter: {dout}\")\n# you can also call directly a backward pass to compute derivatives with respect\n# to the variational parameters and use it for implementing variational\n# optimization\nout.sum().backward()\n</code></pre>   Quantum model output: tensor([[ 0.3380],         [ 0.3526],         [ 0.0839],         [ 0.4578],         [ 0.4946],         [ 0.3522],         [ 0.0447],         [-0.0138],         [ 0.2831],         [-0.0146]], grad_fn=) First-order derivative w.r.t. the feature parameter: tensor([ -1.1865,   2.6427,   1.5276,  -0.9308,   2.4990, -13.1417,   1.1742,          -0.1297,  -1.2414,  -0.0503], grad_fn=)    <p>To run QML on real devices, Qadence offers generalized parameter shift rules (GPSR) <sup>1</sup> for arbitrary quantum operations which can be selected when constructing the <code>QNN</code> model:</p> <pre><code>model = qd.QNN(circuit, observable, diff_mode=\"gpsr\")\nout = model(values)\ndout = torch.autograd.grad(out, values[\"phi\"], torch.ones_like(out), create_graph=True)[0]\nprint(f\"First-order derivative w.r.t. the feature parameter: {dout}\")\n</code></pre>   First-order derivative w.r.t. the feature parameter: tensor([ -1.1865,   2.6427,   1.5276,  -0.9308,   2.4990, -13.1417,   1.1742,          -0.1297,  -1.2414,  -0.0503], grad_fn=)    <p>See here for more details on how the parameter shift rules implementation works in Qadence.</p>"},{"location":"qml/#references","title":"References","text":"<p>[^1] Schuld, Petruccione, Machine learning on Quantum Computers, Springer Nature (2021)</p> <ol> <li> <p>Kyriienko et al., General quantum circuit differentiation rules \u21a9</p> </li> </ol>"},{"location":"qml/qaoa/","title":"Solving MaxCut with QAOA","text":"<p>This tutorial shows how to solve the maximum cut (MaxCut) combinatorial optimization problem on a graph using the Quantum Approximate Optimization Algorithm (QAOA), first introduced by Farhi et al. in 2014 <sup>1</sup>.</p> <p>Given an arbitrary graph, the MaxCut problem consists in finding a graph cut which partitions the nodes into two disjoint sets, such that the number of edges in the cut is maximized. This is a very common combinatorial optimization problem which is computationally hard.</p> <p>The graph used for this tutorial is a randomly generated using the <code>networkx</code> library with a \\(0.5\\) probability of having an edge between two arbitrary nodes.</p> <pre><code>import numpy as np\nimport networkx as nx\nimport matplotlib.pyplot as plt\n# ensure reproducibility\nseed = 10\nnp.random.seed(seed)\nn_nodes = 8\nedge_prob = 0.5\ngraph = nx.gnp_random_graph(n_nodes, edge_prob)\nnx.draw(graph)\n</code></pre> 2023-10-12T10:40:08.548415 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/ <p>The goal of the MaxCut algorithm is to maximize the following cost function:</p> \\[ \\mathcal{C}(p) = \\sum_{\\alpha}^m \\mathcal{C}_{\\alpha}(p) \\] <p>where \\(p\\) is the given partition of the graph, \\(\\alpha\\) is an index over the edges and \\(\\mathcal{C}_{\\alpha}(p)\\) is written such that if the nodes connected by the \\(\\alpha\\) edge are in the same set, it returns \\(0\\), otherwise it returns \\(1\\).</p>"},{"location":"qml/qaoa/#the-qaoa-quantum-circuit","title":"The QAOA quantum circuit","text":"<p>This problem can be solved by using a parametrized quantum circuit with the QAOA algorithm. This requires a circuit with two main components:</p> <ul> <li>the cost component: a circuit generated by a diagonal Hamiltonian which   encodes the cost function described above into a quantum circuit.</li> <li>the mixing component: a simple set of single-qubit rotations with adjustable   angles which are tuned during the classical optimization loop to minimize the cost</li> </ul> <p>Below, the QAOA quantum circuit with the cost and mixing components is defined using <code>qadence</code> operations. The cost component of each layer of the circuit is decomposed into digital single and two-qubits operations via the <code>.digital_decomposition()</code> method. The decomposition is exact since the Hamiltonian generator is diagonal.</p> <pre><code>from qadence import Zero, I, HamEvo, tag, kron, chain, QuantumCircuit, RX, Z\n# generators associated with the edges of the given graph\nzz_ops = [kron(Z(edge[0]), Z(edge[1])) for edge in graph.edges()]\nn_qubits = graph.number_of_nodes()\nn_layers = 2\ncost_ham = Zero()\nfor op in zz_ops:\ncost_ham += 0.5 * op\ncost_ham = 0.5 * kron(I(i) for i in range(n_qubits)) - cost_ham\nlayers = []\nfor layer in range(n_layers):\n# cost layer with digital decomposition\ncost_layer = HamEvo(cost_ham, f\"g{layer}\").digital_decomposition()\ncost_layer = tag(cost_layer, \"cost\")\n# mixing layer with single qubit rotations\nmixing_layer = kron(RX(i, f\"b{layer}{i}\") for i in range(n_qubits))\nmixing_layer = tag(mixing_layer, \"mixing\")\n# putting all together in a single ChainBlock\nlayers.append(chain(cost_layer, mixing_layer))\nfinal_b = chain(*layers)\ncircuit = QuantumCircuit(n_qubits, final_b)\n</code></pre> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;\n&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;\n&lt;!-- Generated by graphviz version 9.0.0 (20230911.1827)\n--&gt;\n&lt;!-- Pages: 1 --&gt;\n&lt;svg width=\"25510pt\" height=\"607pt\"\nviewBox=\"0.00 0.00 25510.40 607.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;\n&lt;g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 603)\"&gt;\n&lt;polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-603 25506.4,-603 25506.4,4 -4,4\"/&gt;\n&lt;g id=\"clust2\" class=\"cluster\"&gt;\n&lt;title&gt;cluster_ae24025482b546868bfde50e275b4174&lt;/title&gt;\n&lt;path fill=\"white\" stroke=\"black\" stroke-width=\"2\" d=\"M12773.2,-8C12773.2,-8 25245.2,-8 25245.2,-8 25251.2,-8 25257.2,-14 25257.2,-20 25257.2,-20 25257.2,-557 25257.2,-557 25257.2,-563 25251.2,-569 25245.2,-569 25245.2,-569 12773.2,-569 12773.2,-569 12767.2,-569 12761.2,-563 12761.2,-557 12761.2,-557 12761.2,-20 12761.2,-20 12761.2,-14 12767.2,-8 12773.2,-8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"19009.2\" y=\"-552.65\" font-family=\"JetBrains Mono\" font-size=\"13.00\"&gt;cost&lt;/text&gt;\n&lt;/g&gt;\n&lt;g id=\"clust3\" class=\"cluster\"&gt;\n&lt;title&gt;cluster_a666382ce0124eb28d90e536d8c7fd89&lt;/title&gt;\n&lt;path fill=\"white\" stroke=\"black\" stroke-width=\"2\" d=\"M12610,-8C12610,-8 12729.2,-8 12729.2,-8 12735.2,-8 12741.2,-14 12741.2,-20 12741.2,-20 12741.2,-579 12741.2,-579 12741.2,-585 12735.2,-591 12729.2,-591 12729.2,-591 12610,-591 12610,-591 12604,-591 12598,-585 12598,-579 12598,-579 12598,-20 12598,-20 12598,-14 12604,-8 12610,-8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12669.6\" y=\"-574.65\" font-family=\"JetBrains Mono\" font-size=\"13.00\"&gt;mixing&lt;/text&gt;\n&lt;/g&gt;\n&lt;g id=\"clust4\" class=\"cluster\"&gt;\n&lt;title&gt;cluster_e91d82eb8a9444fd900d6a61e163510b&lt;/title&gt;\n&lt;path fill=\"white\" stroke=\"black\" stroke-width=\"2\" d=\"M94,-30C94,-30 12566,-30 12566,-30 12572,-30 12578,-36 12578,-42 12578,-42 12578,-535 12578,-535 12578,-541 12572,-547 12566,-547 12566,-547 94,-547 94,-547 88,-547 82,-541 82,-535 82,-535 82,-42 82,-42 82,-36 88,-30 94,-30\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"6330\" y=\"-530.65\" font-family=\"JetBrains Mono\" font-size=\"13.00\"&gt;cost&lt;/text&gt;\n&lt;/g&gt;\n&lt;g id=\"clust1\" class=\"cluster\"&gt;\n&lt;title&gt;cluster_4cbd453574c341b9ac5db4b11437c6df&lt;/title&gt;\n&lt;path fill=\"white\" stroke=\"black\" stroke-width=\"2\" d=\"M25289.2,-8C25289.2,-8 25408.4,-8 25408.4,-8 25414.4,-8 25420.4,-14 25420.4,-20 25420.4,-20 25420.4,-579 25420.4,-579 25420.4,-585 25414.4,-591 25408.4,-591 25408.4,-591 25289.2,-591 25289.2,-591 25283.2,-591 25277.2,-585 25277.2,-579 25277.2,-579 25277.2,-20 25277.2,-20 25277.2,-14 25283.2,-8 25289.2,-8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"25348.8\" y=\"-574.65\" font-family=\"JetBrains Mono\" font-size=\"13.00\"&gt;mixing&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 625a0659233c428da8b90ab7ab378421 --&gt;\n&lt;g id=\"node1\" class=\"node\"&gt;\n&lt;title&gt;625a0659233c428da8b90ab7ab378421&lt;/title&gt;\n&lt;text text-anchor=\"middle\" x=\"27\" y=\"-501.88\" font-family=\"JetBrains Mono\" font-size=\"15.00\"&gt;0&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 7aa8f544c5ac424b89ce3f01a40ee2b1 --&gt;\n&lt;g id=\"node2\" class=\"node\"&gt;\n&lt;title&gt;7aa8f544c5ac424b89ce3f01a40ee2b1&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"118.8\" cy=\"-506\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 625a0659233c428da8b90ab7ab378421&amp;#45;&amp;#45;7aa8f544c5ac424b89ce3f01a40ee2b1 --&gt;\n&lt;g id=\"edge1\" class=\"edge\"&gt;\n&lt;title&gt;625a0659233c428da8b90ab7ab378421&amp;#45;&amp;#45;7aa8f544c5ac424b89ce3f01a40ee2b1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M53.97,-506C73.66,-506 99.28,-506 111.19,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- b37065ada34a4f23ad37148d6c7b7b52 --&gt;\n&lt;g id=\"node235\" class=\"node\"&gt;\n&lt;title&gt;b37065ada34a4f23ad37148d6c7b7b52&lt;/title&gt;\n&lt;text text-anchor=\"middle\" x=\"27\" y=\"-454.88\" font-family=\"JetBrains Mono\" font-size=\"15.00\"&gt;1&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 625a0659233c428da8b90ab7ab378421&amp;#45;&amp;#45;b37065ada34a4f23ad37148d6c7b7b52 --&gt;\n&lt;!-- 013cbeba776545159699eec159b7d5ae --&gt;\n&lt;g id=\"node3\" class=\"node\"&gt;\n&lt;title&gt;013cbeba776545159699eec159b7d5ae&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"213.12,-506.72 211.68,-506.72 211.68,-505.28 213.12,-505.28 213.12,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7aa8f544c5ac424b89ce3f01a40ee2b1&amp;#45;&amp;#45;013cbeba776545159699eec159b7d5ae --&gt;\n&lt;g id=\"edge2\" class=\"edge\"&gt;\n&lt;title&gt;7aa8f544c5ac424b89ce3f01a40ee2b1&amp;#45;&amp;#45;013cbeba776545159699eec159b7d5ae&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M126.39,-506C146.73,-506 207.44,-506 211.22,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- f7684b62361c450db54108a0496dee46 --&gt;\n&lt;g id=\"node4\" class=\"node\"&gt;\n&lt;title&gt;f7684b62361c450db54108a0496dee46&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"306.72,-506.72 305.28,-506.72 305.28,-505.28 306.72,-505.28 306.72,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 013cbeba776545159699eec159b7d5ae&amp;#45;&amp;#45;f7684b62361c450db54108a0496dee46 --&gt;\n&lt;g id=\"edge3\" class=\"edge\"&gt;\n&lt;title&gt;013cbeba776545159699eec159b7d5ae&amp;#45;&amp;#45;f7684b62361c450db54108a0496dee46&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M213.47,-506C216.2,-506 302.25,-506 304.94,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 56c2fc49e5f14baf9121df1b67bfb24c --&gt;\n&lt;g id=\"node5\" class=\"node\"&gt;\n&lt;title&gt;56c2fc49e5f14baf9121df1b67bfb24c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"400.32,-506.72 398.88,-506.72 398.88,-505.28 400.32,-505.28 400.32,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f7684b62361c450db54108a0496dee46&amp;#45;&amp;#45;56c2fc49e5f14baf9121df1b67bfb24c --&gt;\n&lt;g id=\"edge4\" class=\"edge\"&gt;\n&lt;title&gt;f7684b62361c450db54108a0496dee46&amp;#45;&amp;#45;56c2fc49e5f14baf9121df1b67bfb24c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M307.07,-506C309.8,-506 395.85,-506 398.54,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 29f421dd5da242a8b70c7207a78ff069 --&gt;\n&lt;g id=\"node6\" class=\"node\"&gt;\n&lt;title&gt;29f421dd5da242a8b70c7207a78ff069&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"493.92,-506.72 492.48,-506.72 492.48,-505.28 493.92,-505.28 493.92,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 56c2fc49e5f14baf9121df1b67bfb24c&amp;#45;&amp;#45;29f421dd5da242a8b70c7207a78ff069 --&gt;\n&lt;g id=\"edge5\" class=\"edge\"&gt;\n&lt;title&gt;56c2fc49e5f14baf9121df1b67bfb24c&amp;#45;&amp;#45;29f421dd5da242a8b70c7207a78ff069&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M400.67,-506C403.4,-506 489.45,-506 492.14,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8da88e1c9024583842fa28f6abb9585 --&gt;\n&lt;g id=\"node7\" class=\"node\"&gt;\n&lt;title&gt;f8da88e1c9024583842fa28f6abb9585&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"587.52,-506.72 586.08,-506.72 586.08,-505.28 587.52,-505.28 587.52,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 29f421dd5da242a8b70c7207a78ff069&amp;#45;&amp;#45;f8da88e1c9024583842fa28f6abb9585 --&gt;\n&lt;g id=\"edge6\" class=\"edge\"&gt;\n&lt;title&gt;29f421dd5da242a8b70c7207a78ff069&amp;#45;&amp;#45;f8da88e1c9024583842fa28f6abb9585&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M494.27,-506C497,-506 583.05,-506 585.74,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2f834ccf087d4601b7801be10b7dbd7d --&gt;\n&lt;g id=\"node8\" class=\"node\"&gt;\n&lt;title&gt;2f834ccf087d4601b7801be10b7dbd7d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"681.12,-506.72 679.68,-506.72 679.68,-505.28 681.12,-505.28 681.12,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8da88e1c9024583842fa28f6abb9585&amp;#45;&amp;#45;2f834ccf087d4601b7801be10b7dbd7d --&gt;\n&lt;g id=\"edge7\" class=\"edge\"&gt;\n&lt;title&gt;f8da88e1c9024583842fa28f6abb9585&amp;#45;&amp;#45;2f834ccf087d4601b7801be10b7dbd7d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M587.87,-506C590.6,-506 676.65,-506 679.34,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- a1965d4a74384962b4ca6ae2c45c0fda --&gt;\n&lt;g id=\"node9\" class=\"node\"&gt;\n&lt;title&gt;a1965d4a74384962b4ca6ae2c45c0fda&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"827.52,-506.72 826.08,-506.72 826.08,-505.28 827.52,-505.28 827.52,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2f834ccf087d4601b7801be10b7dbd7d&amp;#45;&amp;#45;a1965d4a74384962b4ca6ae2c45c0fda --&gt;\n&lt;g id=\"edge8\" class=\"edge\"&gt;\n&lt;title&gt;2f834ccf087d4601b7801be10b7dbd7d&amp;#45;&amp;#45;a1965d4a74384962b4ca6ae2c45c0fda&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M681.5,-506C685.81,-506 821.46,-506 825.7,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- a6f7e159b1a34ea89820803baed2f9a0 --&gt;\n&lt;g id=\"node10\" class=\"node\"&gt;\n&lt;title&gt;a6f7e159b1a34ea89820803baed2f9a0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"973.92,-506.72 972.48,-506.72 972.48,-505.28 973.92,-505.28 973.92,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a1965d4a74384962b4ca6ae2c45c0fda&amp;#45;&amp;#45;a6f7e159b1a34ea89820803baed2f9a0 --&gt;\n&lt;g id=\"edge9\" class=\"edge\"&gt;\n&lt;title&gt;a1965d4a74384962b4ca6ae2c45c0fda&amp;#45;&amp;#45;a6f7e159b1a34ea89820803baed2f9a0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M827.9,-506C832.21,-506 967.86,-506 972.1,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 06bad68094404e69be9670cafe6de247 --&gt;\n&lt;g id=\"node11\" class=\"node\"&gt;\n&lt;title&gt;06bad68094404e69be9670cafe6de247&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1067.52,-506.72 1066.08,-506.72 1066.08,-505.28 1067.52,-505.28 1067.52,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a6f7e159b1a34ea89820803baed2f9a0&amp;#45;&amp;#45;06bad68094404e69be9670cafe6de247 --&gt;\n&lt;g id=\"edge10\" class=\"edge\"&gt;\n&lt;title&gt;a6f7e159b1a34ea89820803baed2f9a0&amp;#45;&amp;#45;06bad68094404e69be9670cafe6de247&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M974.27,-506C977,-506 1063.05,-506 1065.74,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- b325784e9c6248e7ac189d1cc0d5e5f6 --&gt;\n&lt;g id=\"node12\" class=\"node\"&gt;\n&lt;title&gt;b325784e9c6248e7ac189d1cc0d5e5f6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1161.12,-506.72 1159.68,-506.72 1159.68,-505.28 1161.12,-505.28 1161.12,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 06bad68094404e69be9670cafe6de247&amp;#45;&amp;#45;b325784e9c6248e7ac189d1cc0d5e5f6 --&gt;\n&lt;g id=\"edge11\" class=\"edge\"&gt;\n&lt;title&gt;06bad68094404e69be9670cafe6de247&amp;#45;&amp;#45;b325784e9c6248e7ac189d1cc0d5e5f6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1067.87,-506C1070.6,-506 1156.65,-506 1159.34,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 56de741c6dcc43b5b219678c8b5e95e1 --&gt;\n&lt;g id=\"node13\" class=\"node\"&gt;\n&lt;title&gt;56de741c6dcc43b5b219678c8b5e95e1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1254.72,-506.72 1253.28,-506.72 1253.28,-505.28 1254.72,-505.28 1254.72,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b325784e9c6248e7ac189d1cc0d5e5f6&amp;#45;&amp;#45;56de741c6dcc43b5b219678c8b5e95e1 --&gt;\n&lt;g id=\"edge12\" class=\"edge\"&gt;\n&lt;title&gt;b325784e9c6248e7ac189d1cc0d5e5f6&amp;#45;&amp;#45;56de741c6dcc43b5b219678c8b5e95e1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1161.47,-506C1164.2,-506 1250.25,-506 1252.94,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f0b9cb051804fb18bfa04e27e310ee8 --&gt;\n&lt;g id=\"node14\" class=\"node\"&gt;\n&lt;title&gt;6f0b9cb051804fb18bfa04e27e310ee8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1348.32,-506.72 1346.88,-506.72 1346.88,-505.28 1348.32,-505.28 1348.32,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 56de741c6dcc43b5b219678c8b5e95e1&amp;#45;&amp;#45;6f0b9cb051804fb18bfa04e27e310ee8 --&gt;\n&lt;g id=\"edge13\" class=\"edge\"&gt;\n&lt;title&gt;56de741c6dcc43b5b219678c8b5e95e1&amp;#45;&amp;#45;6f0b9cb051804fb18bfa04e27e310ee8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1255.07,-506C1257.8,-506 1343.85,-506 1346.54,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- d008176f52d94cd8adfc4ead204bc759 --&gt;\n&lt;g id=\"node15\" class=\"node\"&gt;\n&lt;title&gt;d008176f52d94cd8adfc4ead204bc759&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1441.92,-506.72 1440.48,-506.72 1440.48,-505.28 1441.92,-505.28 1441.92,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f0b9cb051804fb18bfa04e27e310ee8&amp;#45;&amp;#45;d008176f52d94cd8adfc4ead204bc759 --&gt;\n&lt;g id=\"edge14\" class=\"edge\"&gt;\n&lt;title&gt;6f0b9cb051804fb18bfa04e27e310ee8&amp;#45;&amp;#45;d008176f52d94cd8adfc4ead204bc759&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1348.67,-506C1351.4,-506 1437.45,-506 1440.14,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d9ef67dd399412395f02ec2312685f0 --&gt;\n&lt;g id=\"node16\" class=\"node\"&gt;\n&lt;title&gt;4d9ef67dd399412395f02ec2312685f0&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"1534.8\" cy=\"-506\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- d008176f52d94cd8adfc4ead204bc759&amp;#45;&amp;#45;4d9ef67dd399412395f02ec2312685f0 --&gt;\n&lt;g id=\"edge15\" class=\"edge\"&gt;\n&lt;title&gt;d008176f52d94cd8adfc4ead204bc759&amp;#45;&amp;#45;4d9ef67dd399412395f02ec2312685f0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1442.27,-506C1444.57,-506 1506.41,-506 1527.12,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3043cddae7b147b187438f01fefa8927 --&gt;\n&lt;g id=\"node17\" class=\"node\"&gt;\n&lt;title&gt;3043cddae7b147b187438f01fefa8927&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"1628.4\" cy=\"-506\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d9ef67dd399412395f02ec2312685f0&amp;#45;&amp;#45;3043cddae7b147b187438f01fefa8927 --&gt;\n&lt;g id=\"edge16\" class=\"edge\"&gt;\n&lt;title&gt;4d9ef67dd399412395f02ec2312685f0&amp;#45;&amp;#45;3043cddae7b147b187438f01fefa8927&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1542.39,-506C1559.29,-506 1604.04,-506 1620.87,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 03e34589d22d4e81b982bfeeecae0aa4 --&gt;\n&lt;g id=\"node18\" class=\"node\"&gt;\n&lt;title&gt;03e34589d22d4e81b982bfeeecae0aa4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1781.52,-506.72 1780.08,-506.72 1780.08,-505.28 1781.52,-505.28 1781.52,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3043cddae7b147b187438f01fefa8927&amp;#45;&amp;#45;03e34589d22d4e81b982bfeeecae0aa4 --&gt;\n&lt;g id=\"edge17\" class=\"edge\"&gt;\n&lt;title&gt;3043cddae7b147b187438f01fefa8927&amp;#45;&amp;#45;03e34589d22d4e81b982bfeeecae0aa4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1635.86,-506C1664.2,-506 1776.22,-506 1779.72,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- bbafc908184f4aceb44020e7fc6a278c --&gt;\n&lt;g id=\"node19\" class=\"node\"&gt;\n&lt;title&gt;bbafc908184f4aceb44020e7fc6a278c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"1933.2\" cy=\"-506\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 03e34589d22d4e81b982bfeeecae0aa4&amp;#45;&amp;#45;bbafc908184f4aceb44020e7fc6a278c --&gt;\n&lt;g id=\"edge18\" class=\"edge\"&gt;\n&lt;title&gt;03e34589d22d4e81b982bfeeecae0aa4&amp;#45;&amp;#45;bbafc908184f4aceb44020e7fc6a278c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1781.91,-506C1785.88,-506 1896.97,-506 1925.55,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 86972722b2be4bc1b669addb16e84f07 --&gt;\n&lt;g id=\"node20\" class=\"node\"&gt;\n&lt;title&gt;86972722b2be4bc1b669addb16e84f07&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"2026.8\" cy=\"-506\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- bbafc908184f4aceb44020e7fc6a278c&amp;#45;&amp;#45;86972722b2be4bc1b669addb16e84f07 --&gt;\n&lt;g id=\"edge19\" class=\"edge\"&gt;\n&lt;title&gt;bbafc908184f4aceb44020e7fc6a278c&amp;#45;&amp;#45;86972722b2be4bc1b669addb16e84f07&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1940.79,-506C1957.69,-506 2002.44,-506 2019.27,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- c8b4d9f519e643699aa9c01a80ca1b6c --&gt;\n&lt;g id=\"node21\" class=\"node\"&gt;\n&lt;title&gt;c8b4d9f519e643699aa9c01a80ca1b6c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2121.12,-506.72 2119.68,-506.72 2119.68,-505.28 2121.12,-505.28 2121.12,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 86972722b2be4bc1b669addb16e84f07&amp;#45;&amp;#45;c8b4d9f519e643699aa9c01a80ca1b6c --&gt;\n&lt;g id=\"edge20\" class=\"edge\"&gt;\n&lt;title&gt;86972722b2be4bc1b669addb16e84f07&amp;#45;&amp;#45;c8b4d9f519e643699aa9c01a80ca1b6c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2034.39,-506C2054.73,-506 2115.44,-506 2119.22,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- a4bbd02bc6fe477d9cfca42bf53b36e7 --&gt;\n&lt;g id=\"node22\" class=\"node\"&gt;\n&lt;title&gt;a4bbd02bc6fe477d9cfca42bf53b36e7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2214.72,-506.72 2213.28,-506.72 2213.28,-505.28 2214.72,-505.28 2214.72,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c8b4d9f519e643699aa9c01a80ca1b6c&amp;#45;&amp;#45;a4bbd02bc6fe477d9cfca42bf53b36e7 --&gt;\n&lt;g id=\"edge21\" class=\"edge\"&gt;\n&lt;title&gt;c8b4d9f519e643699aa9c01a80ca1b6c&amp;#45;&amp;#45;a4bbd02bc6fe477d9cfca42bf53b36e7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2121.47,-506C2124.2,-506 2210.25,-506 2212.94,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 59cb72c135954f1f8b157d24a538d8f0 --&gt;\n&lt;g id=\"node23\" class=\"node\"&gt;\n&lt;title&gt;59cb72c135954f1f8b157d24a538d8f0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2308.32,-506.72 2306.88,-506.72 2306.88,-505.28 2308.32,-505.28 2308.32,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a4bbd02bc6fe477d9cfca42bf53b36e7&amp;#45;&amp;#45;59cb72c135954f1f8b157d24a538d8f0 --&gt;\n&lt;g id=\"edge22\" class=\"edge\"&gt;\n&lt;title&gt;a4bbd02bc6fe477d9cfca42bf53b36e7&amp;#45;&amp;#45;59cb72c135954f1f8b157d24a538d8f0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2215.07,-506C2217.8,-506 2303.85,-506 2306.54,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8e6931654110464f8ae15ff7ae9433d0 --&gt;\n&lt;g id=\"node24\" class=\"node\"&gt;\n&lt;title&gt;8e6931654110464f8ae15ff7ae9433d0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2401.92,-506.72 2400.48,-506.72 2400.48,-505.28 2401.92,-505.28 2401.92,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 59cb72c135954f1f8b157d24a538d8f0&amp;#45;&amp;#45;8e6931654110464f8ae15ff7ae9433d0 --&gt;\n&lt;g id=\"edge23\" class=\"edge\"&gt;\n&lt;title&gt;59cb72c135954f1f8b157d24a538d8f0&amp;#45;&amp;#45;8e6931654110464f8ae15ff7ae9433d0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2308.67,-506C2311.4,-506 2397.45,-506 2400.14,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 79b49e25e3da4c49b773a1f829cf5e48 --&gt;\n&lt;g id=\"node25\" class=\"node\"&gt;\n&lt;title&gt;79b49e25e3da4c49b773a1f829cf5e48&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2554.32,-506.72 2552.88,-506.72 2552.88,-505.28 2554.32,-505.28 2554.32,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8e6931654110464f8ae15ff7ae9433d0&amp;#45;&amp;#45;79b49e25e3da4c49b773a1f829cf5e48 --&gt;\n&lt;g id=\"edge24\" class=\"edge\"&gt;\n&lt;title&gt;8e6931654110464f8ae15ff7ae9433d0&amp;#45;&amp;#45;79b49e25e3da4c49b773a1f829cf5e48&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2402.31,-506C2406.79,-506 2548.08,-506 2552.49,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- ffaf597d625a44deafbc65a288272fee --&gt;\n&lt;g id=\"node26\" class=\"node\"&gt;\n&lt;title&gt;ffaf597d625a44deafbc65a288272fee&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2706.72,-506.72 2705.28,-506.72 2705.28,-505.28 2706.72,-505.28 2706.72,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 79b49e25e3da4c49b773a1f829cf5e48&amp;#45;&amp;#45;ffaf597d625a44deafbc65a288272fee --&gt;\n&lt;g id=\"edge25\" class=\"edge\"&gt;\n&lt;title&gt;79b49e25e3da4c49b773a1f829cf5e48&amp;#45;&amp;#45;ffaf597d625a44deafbc65a288272fee&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2554.71,-506C2559.19,-506 2700.48,-506 2704.89,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 29453b7e9e3c4863aa68921299c4c343 --&gt;\n&lt;g id=\"node27\" class=\"node\"&gt;\n&lt;title&gt;29453b7e9e3c4863aa68921299c4c343&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2800.32,-506.72 2798.88,-506.72 2798.88,-505.28 2800.32,-505.28 2800.32,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ffaf597d625a44deafbc65a288272fee&amp;#45;&amp;#45;29453b7e9e3c4863aa68921299c4c343 --&gt;\n&lt;g id=\"edge26\" class=\"edge\"&gt;\n&lt;title&gt;ffaf597d625a44deafbc65a288272fee&amp;#45;&amp;#45;29453b7e9e3c4863aa68921299c4c343&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2707.07,-506C2709.8,-506 2795.85,-506 2798.54,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- e37b1982617f499493d95646ed0860be --&gt;\n&lt;g id=\"node28\" class=\"node\"&gt;\n&lt;title&gt;e37b1982617f499493d95646ed0860be&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2893.92,-506.72 2892.48,-506.72 2892.48,-505.28 2893.92,-505.28 2893.92,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 29453b7e9e3c4863aa68921299c4c343&amp;#45;&amp;#45;e37b1982617f499493d95646ed0860be --&gt;\n&lt;g id=\"edge27\" class=\"edge\"&gt;\n&lt;title&gt;29453b7e9e3c4863aa68921299c4c343&amp;#45;&amp;#45;e37b1982617f499493d95646ed0860be&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2800.67,-506C2803.4,-506 2889.45,-506 2892.14,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- aab9f06c7e9a414fa6386ec540fdb1d3 --&gt;\n&lt;g id=\"node29\" class=\"node\"&gt;\n&lt;title&gt;aab9f06c7e9a414fa6386ec540fdb1d3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2987.52,-506.72 2986.08,-506.72 2986.08,-505.28 2987.52,-505.28 2987.52,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e37b1982617f499493d95646ed0860be&amp;#45;&amp;#45;aab9f06c7e9a414fa6386ec540fdb1d3 --&gt;\n&lt;g id=\"edge28\" class=\"edge\"&gt;\n&lt;title&gt;e37b1982617f499493d95646ed0860be&amp;#45;&amp;#45;aab9f06c7e9a414fa6386ec540fdb1d3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2894.27,-506C2897,-506 2983.05,-506 2985.74,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 450c14d645364b7f8e52df7cf4bb526c --&gt;\n&lt;g id=\"node30\" class=\"node\"&gt;\n&lt;title&gt;450c14d645364b7f8e52df7cf4bb526c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"3080.4\" cy=\"-506\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- aab9f06c7e9a414fa6386ec540fdb1d3&amp;#45;&amp;#45;450c14d645364b7f8e52df7cf4bb526c --&gt;\n&lt;g id=\"edge29\" class=\"edge\"&gt;\n&lt;title&gt;aab9f06c7e9a414fa6386ec540fdb1d3&amp;#45;&amp;#45;450c14d645364b7f8e52df7cf4bb526c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2987.87,-506C2990.17,-506 3052.01,-506 3072.72,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3f22a220b7b145c6804d24cbb1a73f88 --&gt;\n&lt;g id=\"node31\" class=\"node\"&gt;\n&lt;title&gt;3f22a220b7b145c6804d24cbb1a73f88&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3174.72,-506.72 3173.28,-506.72 3173.28,-505.28 3174.72,-505.28 3174.72,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 450c14d645364b7f8e52df7cf4bb526c&amp;#45;&amp;#45;3f22a220b7b145c6804d24cbb1a73f88 --&gt;\n&lt;g id=\"edge30\" class=\"edge\"&gt;\n&lt;title&gt;450c14d645364b7f8e52df7cf4bb526c&amp;#45;&amp;#45;3f22a220b7b145c6804d24cbb1a73f88&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3087.99,-506C3108.33,-506 3169.04,-506 3172.82,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3c01a66a91084af49a397f9b17d0fc96 --&gt;\n&lt;g id=\"node32\" class=\"node\"&gt;\n&lt;title&gt;3c01a66a91084af49a397f9b17d0fc96&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3268.32,-506.72 3266.88,-506.72 3266.88,-505.28 3268.32,-505.28 3268.32,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3f22a220b7b145c6804d24cbb1a73f88&amp;#45;&amp;#45;3c01a66a91084af49a397f9b17d0fc96 --&gt;\n&lt;g id=\"edge31\" class=\"edge\"&gt;\n&lt;title&gt;3f22a220b7b145c6804d24cbb1a73f88&amp;#45;&amp;#45;3c01a66a91084af49a397f9b17d0fc96&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3175.07,-506C3177.8,-506 3263.85,-506 3266.54,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- a7363b2867d4408b8e0bb2209af3a9ba --&gt;\n&lt;g id=\"node33\" class=\"node\"&gt;\n&lt;title&gt;a7363b2867d4408b8e0bb2209af3a9ba&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3361.92,-506.72 3360.48,-506.72 3360.48,-505.28 3361.92,-505.28 3361.92,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3c01a66a91084af49a397f9b17d0fc96&amp;#45;&amp;#45;a7363b2867d4408b8e0bb2209af3a9ba --&gt;\n&lt;g id=\"edge32\" class=\"edge\"&gt;\n&lt;title&gt;3c01a66a91084af49a397f9b17d0fc96&amp;#45;&amp;#45;a7363b2867d4408b8e0bb2209af3a9ba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3268.67,-506C3271.4,-506 3357.45,-506 3360.14,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- a0372b905a644b1f8aa46bf5a1aa2583 --&gt;\n&lt;g id=\"node34\" class=\"node\"&gt;\n&lt;title&gt;a0372b905a644b1f8aa46bf5a1aa2583&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3514.32,-506.72 3512.88,-506.72 3512.88,-505.28 3514.32,-505.28 3514.32,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a7363b2867d4408b8e0bb2209af3a9ba&amp;#45;&amp;#45;a0372b905a644b1f8aa46bf5a1aa2583 --&gt;\n&lt;g id=\"edge33\" class=\"edge\"&gt;\n&lt;title&gt;a7363b2867d4408b8e0bb2209af3a9ba&amp;#45;&amp;#45;a0372b905a644b1f8aa46bf5a1aa2583&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3362.31,-506C3366.79,-506 3508.08,-506 3512.49,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 876c0befe72c42859da4c4d49e60db7c --&gt;\n&lt;g id=\"node35\" class=\"node\"&gt;\n&lt;title&gt;876c0befe72c42859da4c4d49e60db7c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3666.72,-506.72 3665.28,-506.72 3665.28,-505.28 3666.72,-505.28 3666.72,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a0372b905a644b1f8aa46bf5a1aa2583&amp;#45;&amp;#45;876c0befe72c42859da4c4d49e60db7c --&gt;\n&lt;g id=\"edge34\" class=\"edge\"&gt;\n&lt;title&gt;a0372b905a644b1f8aa46bf5a1aa2583&amp;#45;&amp;#45;876c0befe72c42859da4c4d49e60db7c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3514.71,-506C3519.19,-506 3660.48,-506 3664.89,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 706e3cb5611b4964a75423a353bd669d --&gt;\n&lt;g id=\"node36\" class=\"node\"&gt;\n&lt;title&gt;706e3cb5611b4964a75423a353bd669d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3760.32,-506.72 3758.88,-506.72 3758.88,-505.28 3760.32,-505.28 3760.32,-506.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 876c0befe72c42859da4c4d49e60db7c&amp;#45;&amp;#45;706e3cb5611b4964a75423a353bd669d --&gt;\n&lt;g id=\"edge35\" class=\"edge\"&gt;\n&lt;title&gt;876c0befe72c42859da4c4d49e60db7c&amp;#45;&amp;#45;706e3cb5611b4964a75423a353bd669d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3667.07,-506C3669.8,-506 3755.85,-506 3758.54,-506\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1432b2d33bb041019d518f4bc493c834 --&gt;\n&lt;g id=\"node37\" class=\"node\"&gt;\n&lt;title&gt;1432b2d33bb041019d518f4bc493c834&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3853.92,-509.72 3852.48,-509.72 3852.48,-508.28 3853.92,-508.28 3853.92,-509.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 706e3cb5611b4964a75423a353bd669d&amp;#45;&amp;#45;1432b2d33bb041019d518f4bc493c834 --&gt;\n&lt;g id=\"edge36\" class=\"edge\"&gt;\n&lt;title&gt;706e3cb5611b4964a75423a353bd669d&amp;#45;&amp;#45;1432b2d33bb041019d518f4bc493c834&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3760.67,-506C3763.4,-506.09 3849.45,-508.91 3852.14,-509\"/&gt;\n&lt;/g&gt;\n&lt;!-- 63e8330c79e8452693b3bc2e6f6067e6 --&gt;\n&lt;g id=\"node38\" class=\"node\"&gt;\n&lt;title&gt;63e8330c79e8452693b3bc2e6f6067e6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3947.52,-509.72 3946.08,-509.72 3946.08,-508.28 3947.52,-508.28 3947.52,-509.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1432b2d33bb041019d518f4bc493c834&amp;#45;&amp;#45;63e8330c79e8452693b3bc2e6f6067e6 --&gt;\n&lt;g id=\"edge37\" class=\"edge\"&gt;\n&lt;title&gt;1432b2d33bb041019d518f4bc493c834&amp;#45;&amp;#45;63e8330c79e8452693b3bc2e6f6067e6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3854.27,-509C3857,-509 3943.05,-509 3945.74,-509\"/&gt;\n&lt;/g&gt;\n&lt;!-- 51b9483f33bc49c0b3731b991de836b2 --&gt;\n&lt;g id=\"node39\" class=\"node\"&gt;\n&lt;title&gt;51b9483f33bc49c0b3731b991de836b2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4041.12,-510.72 4039.68,-510.72 4039.68,-509.28 4041.12,-509.28 4041.12,-510.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 63e8330c79e8452693b3bc2e6f6067e6&amp;#45;&amp;#45;51b9483f33bc49c0b3731b991de836b2 --&gt;\n&lt;g id=\"edge38\" class=\"edge\"&gt;\n&lt;title&gt;63e8330c79e8452693b3bc2e6f6067e6&amp;#45;&amp;#45;51b9483f33bc49c0b3731b991de836b2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3947.87,-509C3950.6,-509.03 4036.65,-509.97 4039.34,-510\"/&gt;\n&lt;/g&gt;\n&lt;!-- 42dac4cac3b746abb636d22a5b782d54 --&gt;\n&lt;g id=\"node40\" class=\"node\"&gt;\n&lt;title&gt;42dac4cac3b746abb636d22a5b782d54&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4134.72,-510.72 4133.28,-510.72 4133.28,-509.28 4134.72,-509.28 4134.72,-510.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 51b9483f33bc49c0b3731b991de836b2&amp;#45;&amp;#45;42dac4cac3b746abb636d22a5b782d54 --&gt;\n&lt;g id=\"edge39\" class=\"edge\"&gt;\n&lt;title&gt;51b9483f33bc49c0b3731b991de836b2&amp;#45;&amp;#45;42dac4cac3b746abb636d22a5b782d54&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4041.47,-510C4044.2,-510 4130.25,-510 4132.94,-510\"/&gt;\n&lt;/g&gt;\n&lt;!-- 146e6eb0fc584987b44882c652d31320 --&gt;\n&lt;g id=\"node41\" class=\"node\"&gt;\n&lt;title&gt;146e6eb0fc584987b44882c652d31320&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4228.32,-510.72 4226.88,-510.72 4226.88,-509.28 4228.32,-509.28 4228.32,-510.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 42dac4cac3b746abb636d22a5b782d54&amp;#45;&amp;#45;146e6eb0fc584987b44882c652d31320 --&gt;\n&lt;g id=\"edge40\" class=\"edge\"&gt;\n&lt;title&gt;42dac4cac3b746abb636d22a5b782d54&amp;#45;&amp;#45;146e6eb0fc584987b44882c652d31320&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4135.07,-510C4137.8,-510 4223.85,-510 4226.54,-510\"/&gt;\n&lt;/g&gt;\n&lt;!-- 28dd9f4fb77143b69685cd84de9ed31b --&gt;\n&lt;g id=\"node42\" class=\"node\"&gt;\n&lt;title&gt;28dd9f4fb77143b69685cd84de9ed31b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4380.72,-510.72 4379.28,-510.72 4379.28,-509.28 4380.72,-509.28 4380.72,-510.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 146e6eb0fc584987b44882c652d31320&amp;#45;&amp;#45;28dd9f4fb77143b69685cd84de9ed31b --&gt;\n&lt;g id=\"edge41\" class=\"edge\"&gt;\n&lt;title&gt;146e6eb0fc584987b44882c652d31320&amp;#45;&amp;#45;28dd9f4fb77143b69685cd84de9ed31b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4228.71,-510C4233.19,-510 4374.48,-510 4378.89,-510\"/&gt;\n&lt;/g&gt;\n&lt;!-- dcbf42d965aa4ae8be02a6e5e1b7ce66 --&gt;\n&lt;g id=\"node43\" class=\"node\"&gt;\n&lt;title&gt;dcbf42d965aa4ae8be02a6e5e1b7ce66&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4533.12,-510.72 4531.68,-510.72 4531.68,-509.28 4533.12,-509.28 4533.12,-510.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 28dd9f4fb77143b69685cd84de9ed31b&amp;#45;&amp;#45;dcbf42d965aa4ae8be02a6e5e1b7ce66 --&gt;\n&lt;g id=\"edge42\" class=\"edge\"&gt;\n&lt;title&gt;28dd9f4fb77143b69685cd84de9ed31b&amp;#45;&amp;#45;dcbf42d965aa4ae8be02a6e5e1b7ce66&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4381.11,-510C4385.59,-510 4526.88,-510 4531.29,-510\"/&gt;\n&lt;/g&gt;\n&lt;!-- 99fe98e9ff6f4b6c926b89089d22676a --&gt;\n&lt;g id=\"node44\" class=\"node\"&gt;\n&lt;title&gt;99fe98e9ff6f4b6c926b89089d22676a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4626.72,-510.72 4625.28,-510.72 4625.28,-509.28 4626.72,-509.28 4626.72,-510.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dcbf42d965aa4ae8be02a6e5e1b7ce66&amp;#45;&amp;#45;99fe98e9ff6f4b6c926b89089d22676a --&gt;\n&lt;g id=\"edge43\" class=\"edge\"&gt;\n&lt;title&gt;dcbf42d965aa4ae8be02a6e5e1b7ce66&amp;#45;&amp;#45;99fe98e9ff6f4b6c926b89089d22676a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4533.47,-510C4536.2,-510 4622.25,-510 4624.94,-510\"/&gt;\n&lt;/g&gt;\n&lt;!-- fda6d9011d214c80a6f1d942637f05dd --&gt;\n&lt;g id=\"node45\" class=\"node\"&gt;\n&lt;title&gt;fda6d9011d214c80a6f1d942637f05dd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4720.32,-510.72 4718.88,-510.72 4718.88,-509.28 4720.32,-509.28 4720.32,-510.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 99fe98e9ff6f4b6c926b89089d22676a&amp;#45;&amp;#45;fda6d9011d214c80a6f1d942637f05dd --&gt;\n&lt;g id=\"edge44\" class=\"edge\"&gt;\n&lt;title&gt;99fe98e9ff6f4b6c926b89089d22676a&amp;#45;&amp;#45;fda6d9011d214c80a6f1d942637f05dd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4627.07,-510C4629.8,-510 4715.85,-510 4718.54,-510\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7bd819d7d43944609cdc6ca5bb57dad0 --&gt;\n&lt;g id=\"node46\" class=\"node\"&gt;\n&lt;title&gt;7bd819d7d43944609cdc6ca5bb57dad0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4813.92,-511.72 4812.48,-511.72 4812.48,-510.28 4813.92,-510.28 4813.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fda6d9011d214c80a6f1d942637f05dd&amp;#45;&amp;#45;7bd819d7d43944609cdc6ca5bb57dad0 --&gt;\n&lt;g id=\"edge45\" class=\"edge\"&gt;\n&lt;title&gt;fda6d9011d214c80a6f1d942637f05dd&amp;#45;&amp;#45;7bd819d7d43944609cdc6ca5bb57dad0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4720.67,-510C4723.4,-510.03 4809.45,-510.97 4812.14,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- a70e2457c8fd4aa8b38cdca5d5a72cf9 --&gt;\n&lt;g id=\"node47\" class=\"node\"&gt;\n&lt;title&gt;a70e2457c8fd4aa8b38cdca5d5a72cf9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4907.52,-511.72 4906.08,-511.72 4906.08,-510.28 4907.52,-510.28 4907.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7bd819d7d43944609cdc6ca5bb57dad0&amp;#45;&amp;#45;a70e2457c8fd4aa8b38cdca5d5a72cf9 --&gt;\n&lt;g id=\"edge46\" class=\"edge\"&gt;\n&lt;title&gt;7bd819d7d43944609cdc6ca5bb57dad0&amp;#45;&amp;#45;a70e2457c8fd4aa8b38cdca5d5a72cf9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4814.27,-511C4817,-511 4903.05,-511 4905.74,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- a2431b95c9fe47b798ecbf435d74d0f5 --&gt;\n&lt;g id=\"node48\" class=\"node\"&gt;\n&lt;title&gt;a2431b95c9fe47b798ecbf435d74d0f5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5001.12,-511.72 4999.68,-511.72 4999.68,-510.28 5001.12,-510.28 5001.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a70e2457c8fd4aa8b38cdca5d5a72cf9&amp;#45;&amp;#45;a2431b95c9fe47b798ecbf435d74d0f5 --&gt;\n&lt;g id=\"edge47\" class=\"edge\"&gt;\n&lt;title&gt;a70e2457c8fd4aa8b38cdca5d5a72cf9&amp;#45;&amp;#45;a2431b95c9fe47b798ecbf435d74d0f5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4907.87,-511C4910.6,-511 4996.65,-511 4999.34,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- d00020222f2941ea8e6319155eb9bd59 --&gt;\n&lt;g id=\"node49\" class=\"node\"&gt;\n&lt;title&gt;d00020222f2941ea8e6319155eb9bd59&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5094.72,-511.72 5093.28,-511.72 5093.28,-510.28 5094.72,-510.28 5094.72,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a2431b95c9fe47b798ecbf435d74d0f5&amp;#45;&amp;#45;d00020222f2941ea8e6319155eb9bd59 --&gt;\n&lt;g id=\"edge48\" class=\"edge\"&gt;\n&lt;title&gt;a2431b95c9fe47b798ecbf435d74d0f5&amp;#45;&amp;#45;d00020222f2941ea8e6319155eb9bd59&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5001.47,-511C5004.2,-511 5090.25,-511 5092.94,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9cc0f5ab287943a8bb00052cd1aa62ce --&gt;\n&lt;g id=\"node50\" class=\"node\"&gt;\n&lt;title&gt;9cc0f5ab287943a8bb00052cd1aa62ce&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5188.32,-511.72 5186.88,-511.72 5186.88,-510.28 5188.32,-510.28 5188.32,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d00020222f2941ea8e6319155eb9bd59&amp;#45;&amp;#45;9cc0f5ab287943a8bb00052cd1aa62ce --&gt;\n&lt;g id=\"edge49\" class=\"edge\"&gt;\n&lt;title&gt;d00020222f2941ea8e6319155eb9bd59&amp;#45;&amp;#45;9cc0f5ab287943a8bb00052cd1aa62ce&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5095.07,-511C5097.8,-511 5183.85,-511 5186.54,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8da7071c30214c99bba70f390052c5b1 --&gt;\n&lt;g id=\"node51\" class=\"node\"&gt;\n&lt;title&gt;8da7071c30214c99bba70f390052c5b1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5281.92,-511.72 5280.48,-511.72 5280.48,-510.28 5281.92,-510.28 5281.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9cc0f5ab287943a8bb00052cd1aa62ce&amp;#45;&amp;#45;8da7071c30214c99bba70f390052c5b1 --&gt;\n&lt;g id=\"edge50\" class=\"edge\"&gt;\n&lt;title&gt;9cc0f5ab287943a8bb00052cd1aa62ce&amp;#45;&amp;#45;8da7071c30214c99bba70f390052c5b1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5188.67,-511C5191.4,-511 5277.45,-511 5280.14,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 78f4c2b325d048409f1bbb35ab691077 --&gt;\n&lt;g id=\"node52\" class=\"node\"&gt;\n&lt;title&gt;78f4c2b325d048409f1bbb35ab691077&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5434.32,-511.72 5432.88,-511.72 5432.88,-510.28 5434.32,-510.28 5434.32,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8da7071c30214c99bba70f390052c5b1&amp;#45;&amp;#45;78f4c2b325d048409f1bbb35ab691077 --&gt;\n&lt;g id=\"edge51\" class=\"edge\"&gt;\n&lt;title&gt;8da7071c30214c99bba70f390052c5b1&amp;#45;&amp;#45;78f4c2b325d048409f1bbb35ab691077&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5282.31,-511C5286.79,-511 5428.08,-511 5432.49,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 833092379ec94803b71727ef77ea36d6 --&gt;\n&lt;g id=\"node53\" class=\"node\"&gt;\n&lt;title&gt;833092379ec94803b71727ef77ea36d6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5586.72,-511.72 5585.28,-511.72 5585.28,-510.28 5586.72,-510.28 5586.72,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 78f4c2b325d048409f1bbb35ab691077&amp;#45;&amp;#45;833092379ec94803b71727ef77ea36d6 --&gt;\n&lt;g id=\"edge52\" class=\"edge\"&gt;\n&lt;title&gt;78f4c2b325d048409f1bbb35ab691077&amp;#45;&amp;#45;833092379ec94803b71727ef77ea36d6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5434.71,-511C5439.19,-511 5580.48,-511 5584.89,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- a3aaf9d70d024332880d3ddecc879be4 --&gt;\n&lt;g id=\"node54\" class=\"node\"&gt;\n&lt;title&gt;a3aaf9d70d024332880d3ddecc879be4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5680.32,-511.72 5678.88,-511.72 5678.88,-510.28 5680.32,-510.28 5680.32,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 833092379ec94803b71727ef77ea36d6&amp;#45;&amp;#45;a3aaf9d70d024332880d3ddecc879be4 --&gt;\n&lt;g id=\"edge53\" class=\"edge\"&gt;\n&lt;title&gt;833092379ec94803b71727ef77ea36d6&amp;#45;&amp;#45;a3aaf9d70d024332880d3ddecc879be4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5587.07,-511C5589.8,-511 5675.85,-511 5678.54,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 607f292e75754034bc6e82b9d152f63f --&gt;\n&lt;g id=\"node55\" class=\"node\"&gt;\n&lt;title&gt;607f292e75754034bc6e82b9d152f63f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5773.92,-511.72 5772.48,-511.72 5772.48,-510.28 5773.92,-510.28 5773.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a3aaf9d70d024332880d3ddecc879be4&amp;#45;&amp;#45;607f292e75754034bc6e82b9d152f63f --&gt;\n&lt;g id=\"edge54\" class=\"edge\"&gt;\n&lt;title&gt;a3aaf9d70d024332880d3ddecc879be4&amp;#45;&amp;#45;607f292e75754034bc6e82b9d152f63f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5680.67,-511C5683.4,-511 5769.45,-511 5772.14,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- df5a602445db4f1985fb4625a536bd48 --&gt;\n&lt;g id=\"node56\" class=\"node\"&gt;\n&lt;title&gt;df5a602445db4f1985fb4625a536bd48&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5867.52,-511.72 5866.08,-511.72 5866.08,-510.28 5867.52,-510.28 5867.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 607f292e75754034bc6e82b9d152f63f&amp;#45;&amp;#45;df5a602445db4f1985fb4625a536bd48 --&gt;\n&lt;g id=\"edge55\" class=\"edge\"&gt;\n&lt;title&gt;607f292e75754034bc6e82b9d152f63f&amp;#45;&amp;#45;df5a602445db4f1985fb4625a536bd48&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5774.27,-511C5777,-511 5863.05,-511 5865.74,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- a0b9f2cb7b18422d89f9ac4eecafa0ae --&gt;\n&lt;g id=\"node57\" class=\"node\"&gt;\n&lt;title&gt;a0b9f2cb7b18422d89f9ac4eecafa0ae&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5961.12,-511.72 5959.68,-511.72 5959.68,-510.28 5961.12,-510.28 5961.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- df5a602445db4f1985fb4625a536bd48&amp;#45;&amp;#45;a0b9f2cb7b18422d89f9ac4eecafa0ae --&gt;\n&lt;g id=\"edge56\" class=\"edge\"&gt;\n&lt;title&gt;df5a602445db4f1985fb4625a536bd48&amp;#45;&amp;#45;a0b9f2cb7b18422d89f9ac4eecafa0ae&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5867.87,-511C5870.6,-511 5956.65,-511 5959.34,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- bff7ae0710054c8abca6f4475fb3268e --&gt;\n&lt;g id=\"node58\" class=\"node\"&gt;\n&lt;title&gt;bff7ae0710054c8abca6f4475fb3268e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6054.72,-511.72 6053.28,-511.72 6053.28,-510.28 6054.72,-510.28 6054.72,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a0b9f2cb7b18422d89f9ac4eecafa0ae&amp;#45;&amp;#45;bff7ae0710054c8abca6f4475fb3268e --&gt;\n&lt;g id=\"edge57\" class=\"edge\"&gt;\n&lt;title&gt;a0b9f2cb7b18422d89f9ac4eecafa0ae&amp;#45;&amp;#45;bff7ae0710054c8abca6f4475fb3268e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5961.47,-511C5964.2,-511 6050.25,-511 6052.94,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- b13f76ad78c648c58f04ac656010a2c6 --&gt;\n&lt;g id=\"node59\" class=\"node\"&gt;\n&lt;title&gt;b13f76ad78c648c58f04ac656010a2c6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6148.32,-511.72 6146.88,-511.72 6146.88,-510.28 6148.32,-510.28 6148.32,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bff7ae0710054c8abca6f4475fb3268e&amp;#45;&amp;#45;b13f76ad78c648c58f04ac656010a2c6 --&gt;\n&lt;g id=\"edge58\" class=\"edge\"&gt;\n&lt;title&gt;bff7ae0710054c8abca6f4475fb3268e&amp;#45;&amp;#45;b13f76ad78c648c58f04ac656010a2c6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6055.07,-511C6057.8,-511 6143.85,-511 6146.54,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- db598b296aa545439d255a9f8bbaff02 --&gt;\n&lt;g id=\"node60\" class=\"node\"&gt;\n&lt;title&gt;db598b296aa545439d255a9f8bbaff02&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6241.92,-511.72 6240.48,-511.72 6240.48,-510.28 6241.92,-510.28 6241.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b13f76ad78c648c58f04ac656010a2c6&amp;#45;&amp;#45;db598b296aa545439d255a9f8bbaff02 --&gt;\n&lt;g id=\"edge59\" class=\"edge\"&gt;\n&lt;title&gt;b13f76ad78c648c58f04ac656010a2c6&amp;#45;&amp;#45;db598b296aa545439d255a9f8bbaff02&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6148.67,-511C6151.4,-511 6237.45,-511 6240.14,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 11dbee954dd34f95bd890c47def34632 --&gt;\n&lt;g id=\"node61\" class=\"node\"&gt;\n&lt;title&gt;11dbee954dd34f95bd890c47def34632&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6335.52,-511.72 6334.08,-511.72 6334.08,-510.28 6335.52,-510.28 6335.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- db598b296aa545439d255a9f8bbaff02&amp;#45;&amp;#45;11dbee954dd34f95bd890c47def34632 --&gt;\n&lt;g id=\"edge60\" class=\"edge\"&gt;\n&lt;title&gt;db598b296aa545439d255a9f8bbaff02&amp;#45;&amp;#45;11dbee954dd34f95bd890c47def34632&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6242.27,-511C6245,-511 6331.05,-511 6333.74,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8ef7a45c7376474e99afbedc9ed837df --&gt;\n&lt;g id=\"node62\" class=\"node\"&gt;\n&lt;title&gt;8ef7a45c7376474e99afbedc9ed837df&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6429.12,-511.72 6427.68,-511.72 6427.68,-510.28 6429.12,-510.28 6429.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 11dbee954dd34f95bd890c47def34632&amp;#45;&amp;#45;8ef7a45c7376474e99afbedc9ed837df --&gt;\n&lt;g id=\"edge61\" class=\"edge\"&gt;\n&lt;title&gt;11dbee954dd34f95bd890c47def34632&amp;#45;&amp;#45;8ef7a45c7376474e99afbedc9ed837df&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6335.87,-511C6338.6,-511 6424.65,-511 6427.34,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 61deb593387b4015b41b42ea878406d5 --&gt;\n&lt;g id=\"node63\" class=\"node\"&gt;\n&lt;title&gt;61deb593387b4015b41b42ea878406d5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6522.72,-511.72 6521.28,-511.72 6521.28,-510.28 6522.72,-510.28 6522.72,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8ef7a45c7376474e99afbedc9ed837df&amp;#45;&amp;#45;61deb593387b4015b41b42ea878406d5 --&gt;\n&lt;g id=\"edge62\" class=\"edge\"&gt;\n&lt;title&gt;8ef7a45c7376474e99afbedc9ed837df&amp;#45;&amp;#45;61deb593387b4015b41b42ea878406d5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6429.47,-511C6432.2,-511 6518.25,-511 6520.94,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- b9815d3f213142dfb1e053a56565ca5b --&gt;\n&lt;g id=\"node64\" class=\"node\"&gt;\n&lt;title&gt;b9815d3f213142dfb1e053a56565ca5b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6675.12,-511.72 6673.68,-511.72 6673.68,-510.28 6675.12,-510.28 6675.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 61deb593387b4015b41b42ea878406d5&amp;#45;&amp;#45;b9815d3f213142dfb1e053a56565ca5b --&gt;\n&lt;g id=\"edge63\" class=\"edge\"&gt;\n&lt;title&gt;61deb593387b4015b41b42ea878406d5&amp;#45;&amp;#45;b9815d3f213142dfb1e053a56565ca5b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6523.11,-511C6527.59,-511 6668.88,-511 6673.29,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- b9cbe627c4ac4662b38da75c08d492ec --&gt;\n&lt;g id=\"node65\" class=\"node\"&gt;\n&lt;title&gt;b9cbe627c4ac4662b38da75c08d492ec&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6827.52,-511.72 6826.08,-511.72 6826.08,-510.28 6827.52,-510.28 6827.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b9815d3f213142dfb1e053a56565ca5b&amp;#45;&amp;#45;b9cbe627c4ac4662b38da75c08d492ec --&gt;\n&lt;g id=\"edge64\" class=\"edge\"&gt;\n&lt;title&gt;b9815d3f213142dfb1e053a56565ca5b&amp;#45;&amp;#45;b9cbe627c4ac4662b38da75c08d492ec&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6675.51,-511C6679.99,-511 6821.28,-511 6825.69,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3178bbfa3eba4ae0be431fd2bfc3f59b --&gt;\n&lt;g id=\"node66\" class=\"node\"&gt;\n&lt;title&gt;3178bbfa3eba4ae0be431fd2bfc3f59b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6921.12,-511.72 6919.68,-511.72 6919.68,-510.28 6921.12,-510.28 6921.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b9cbe627c4ac4662b38da75c08d492ec&amp;#45;&amp;#45;3178bbfa3eba4ae0be431fd2bfc3f59b --&gt;\n&lt;g id=\"edge65\" class=\"edge\"&gt;\n&lt;title&gt;b9cbe627c4ac4662b38da75c08d492ec&amp;#45;&amp;#45;3178bbfa3eba4ae0be431fd2bfc3f59b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6827.87,-511C6830.6,-511 6916.65,-511 6919.34,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 04c778a2cc2d409883e604a67dc61dc3 --&gt;\n&lt;g id=\"node67\" class=\"node\"&gt;\n&lt;title&gt;04c778a2cc2d409883e604a67dc61dc3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7014.72,-511.72 7013.28,-511.72 7013.28,-510.28 7014.72,-510.28 7014.72,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3178bbfa3eba4ae0be431fd2bfc3f59b&amp;#45;&amp;#45;04c778a2cc2d409883e604a67dc61dc3 --&gt;\n&lt;g id=\"edge66\" class=\"edge\"&gt;\n&lt;title&gt;3178bbfa3eba4ae0be431fd2bfc3f59b&amp;#45;&amp;#45;04c778a2cc2d409883e604a67dc61dc3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6921.47,-511C6924.2,-511 7010.25,-511 7012.94,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- b9f17ffd6296435393f1d80704166ece --&gt;\n&lt;g id=\"node68\" class=\"node\"&gt;\n&lt;title&gt;b9f17ffd6296435393f1d80704166ece&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7108.32,-511.72 7106.88,-511.72 7106.88,-510.28 7108.32,-510.28 7108.32,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 04c778a2cc2d409883e604a67dc61dc3&amp;#45;&amp;#45;b9f17ffd6296435393f1d80704166ece --&gt;\n&lt;g id=\"edge67\" class=\"edge\"&gt;\n&lt;title&gt;04c778a2cc2d409883e604a67dc61dc3&amp;#45;&amp;#45;b9f17ffd6296435393f1d80704166ece&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7015.07,-511C7017.8,-511 7103.85,-511 7106.54,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- c446f4e9a606405eb4b1327740575947 --&gt;\n&lt;g id=\"node69\" class=\"node\"&gt;\n&lt;title&gt;c446f4e9a606405eb4b1327740575947&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7201.92,-511.72 7200.48,-511.72 7200.48,-510.28 7201.92,-510.28 7201.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b9f17ffd6296435393f1d80704166ece&amp;#45;&amp;#45;c446f4e9a606405eb4b1327740575947 --&gt;\n&lt;g id=\"edge68\" class=\"edge\"&gt;\n&lt;title&gt;b9f17ffd6296435393f1d80704166ece&amp;#45;&amp;#45;c446f4e9a606405eb4b1327740575947&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7108.67,-511C7111.4,-511 7197.45,-511 7200.14,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2261eabd9b334f9ca42af9b402773c41 --&gt;\n&lt;g id=\"node70\" class=\"node\"&gt;\n&lt;title&gt;2261eabd9b334f9ca42af9b402773c41&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7295.52,-511.72 7294.08,-511.72 7294.08,-510.28 7295.52,-510.28 7295.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c446f4e9a606405eb4b1327740575947&amp;#45;&amp;#45;2261eabd9b334f9ca42af9b402773c41 --&gt;\n&lt;g id=\"edge69\" class=\"edge\"&gt;\n&lt;title&gt;c446f4e9a606405eb4b1327740575947&amp;#45;&amp;#45;2261eabd9b334f9ca42af9b402773c41&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7202.27,-511C7205,-511 7291.05,-511 7293.74,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 464a4173624a4654b135a8c30bcf08b5 --&gt;\n&lt;g id=\"node71\" class=\"node\"&gt;\n&lt;title&gt;464a4173624a4654b135a8c30bcf08b5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7389.12,-511.72 7387.68,-511.72 7387.68,-510.28 7389.12,-510.28 7389.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2261eabd9b334f9ca42af9b402773c41&amp;#45;&amp;#45;464a4173624a4654b135a8c30bcf08b5 --&gt;\n&lt;g id=\"edge70\" class=\"edge\"&gt;\n&lt;title&gt;2261eabd9b334f9ca42af9b402773c41&amp;#45;&amp;#45;464a4173624a4654b135a8c30bcf08b5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7295.87,-511C7298.6,-511 7384.65,-511 7387.34,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ba8cd3d96d24055a64b474d04c9147b --&gt;\n&lt;g id=\"node72\" class=\"node\"&gt;\n&lt;title&gt;6ba8cd3d96d24055a64b474d04c9147b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7482.72,-511.72 7481.28,-511.72 7481.28,-510.28 7482.72,-510.28 7482.72,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 464a4173624a4654b135a8c30bcf08b5&amp;#45;&amp;#45;6ba8cd3d96d24055a64b474d04c9147b --&gt;\n&lt;g id=\"edge71\" class=\"edge\"&gt;\n&lt;title&gt;464a4173624a4654b135a8c30bcf08b5&amp;#45;&amp;#45;6ba8cd3d96d24055a64b474d04c9147b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7389.47,-511C7392.2,-511 7478.25,-511 7480.94,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3d74996355cd49b9b07dcd037fac131d --&gt;\n&lt;g id=\"node73\" class=\"node\"&gt;\n&lt;title&gt;3d74996355cd49b9b07dcd037fac131d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7576.32,-511.72 7574.88,-511.72 7574.88,-510.28 7576.32,-510.28 7576.32,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ba8cd3d96d24055a64b474d04c9147b&amp;#45;&amp;#45;3d74996355cd49b9b07dcd037fac131d --&gt;\n&lt;g id=\"edge72\" class=\"edge\"&gt;\n&lt;title&gt;6ba8cd3d96d24055a64b474d04c9147b&amp;#45;&amp;#45;3d74996355cd49b9b07dcd037fac131d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7483.07,-511C7485.8,-511 7571.85,-511 7574.54,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2897bacf212b45b496920a17de4e809e --&gt;\n&lt;g id=\"node74\" class=\"node\"&gt;\n&lt;title&gt;2897bacf212b45b496920a17de4e809e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7669.92,-511.72 7668.48,-511.72 7668.48,-510.28 7669.92,-510.28 7669.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3d74996355cd49b9b07dcd037fac131d&amp;#45;&amp;#45;2897bacf212b45b496920a17de4e809e --&gt;\n&lt;g id=\"edge73\" class=\"edge\"&gt;\n&lt;title&gt;3d74996355cd49b9b07dcd037fac131d&amp;#45;&amp;#45;2897bacf212b45b496920a17de4e809e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7576.67,-511C7579.4,-511 7665.45,-511 7668.14,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- b14e65ff6a8745098407ce0cc14f6eb5 --&gt;\n&lt;g id=\"node75\" class=\"node\"&gt;\n&lt;title&gt;b14e65ff6a8745098407ce0cc14f6eb5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7763.52,-511.72 7762.08,-511.72 7762.08,-510.28 7763.52,-510.28 7763.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2897bacf212b45b496920a17de4e809e&amp;#45;&amp;#45;b14e65ff6a8745098407ce0cc14f6eb5 --&gt;\n&lt;g id=\"edge74\" class=\"edge\"&gt;\n&lt;title&gt;2897bacf212b45b496920a17de4e809e&amp;#45;&amp;#45;b14e65ff6a8745098407ce0cc14f6eb5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7670.27,-511C7673,-511 7759.05,-511 7761.74,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4985537c08ae4746908ae49e5cc1a818 --&gt;\n&lt;g id=\"node76\" class=\"node\"&gt;\n&lt;title&gt;4985537c08ae4746908ae49e5cc1a818&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7915.92,-511.72 7914.48,-511.72 7914.48,-510.28 7915.92,-510.28 7915.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b14e65ff6a8745098407ce0cc14f6eb5&amp;#45;&amp;#45;4985537c08ae4746908ae49e5cc1a818 --&gt;\n&lt;g id=\"edge75\" class=\"edge\"&gt;\n&lt;title&gt;b14e65ff6a8745098407ce0cc14f6eb5&amp;#45;&amp;#45;4985537c08ae4746908ae49e5cc1a818&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7763.91,-511C7768.39,-511 7909.68,-511 7914.09,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0969bd7d865e4400b5402d9511ed6616 --&gt;\n&lt;g id=\"node77\" class=\"node\"&gt;\n&lt;title&gt;0969bd7d865e4400b5402d9511ed6616&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8068.32,-511.72 8066.88,-511.72 8066.88,-510.28 8068.32,-510.28 8068.32,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4985537c08ae4746908ae49e5cc1a818&amp;#45;&amp;#45;0969bd7d865e4400b5402d9511ed6616 --&gt;\n&lt;g id=\"edge76\" class=\"edge\"&gt;\n&lt;title&gt;4985537c08ae4746908ae49e5cc1a818&amp;#45;&amp;#45;0969bd7d865e4400b5402d9511ed6616&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7916.31,-511C7920.79,-511 8062.08,-511 8066.49,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f24bf23841c49898dd201f30bfe03de --&gt;\n&lt;g id=\"node78\" class=\"node\"&gt;\n&lt;title&gt;6f24bf23841c49898dd201f30bfe03de&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8161.92,-511.72 8160.48,-511.72 8160.48,-510.28 8161.92,-510.28 8161.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0969bd7d865e4400b5402d9511ed6616&amp;#45;&amp;#45;6f24bf23841c49898dd201f30bfe03de --&gt;\n&lt;g id=\"edge77\" class=\"edge\"&gt;\n&lt;title&gt;0969bd7d865e4400b5402d9511ed6616&amp;#45;&amp;#45;6f24bf23841c49898dd201f30bfe03de&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8068.67,-511C8071.4,-511 8157.45,-511 8160.14,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 506b254ab262426e889e805c20b6e0ad --&gt;\n&lt;g id=\"node79\" class=\"node\"&gt;\n&lt;title&gt;506b254ab262426e889e805c20b6e0ad&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8255.52,-511.72 8254.08,-511.72 8254.08,-510.28 8255.52,-510.28 8255.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f24bf23841c49898dd201f30bfe03de&amp;#45;&amp;#45;506b254ab262426e889e805c20b6e0ad --&gt;\n&lt;g id=\"edge78\" class=\"edge\"&gt;\n&lt;title&gt;6f24bf23841c49898dd201f30bfe03de&amp;#45;&amp;#45;506b254ab262426e889e805c20b6e0ad&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8162.27,-511C8165,-511 8251.05,-511 8253.74,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 21feb429ba974b8b834062813c811de0 --&gt;\n&lt;g id=\"node80\" class=\"node\"&gt;\n&lt;title&gt;21feb429ba974b8b834062813c811de0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8349.12,-511.72 8347.68,-511.72 8347.68,-510.28 8349.12,-510.28 8349.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 506b254ab262426e889e805c20b6e0ad&amp;#45;&amp;#45;21feb429ba974b8b834062813c811de0 --&gt;\n&lt;g id=\"edge79\" class=\"edge\"&gt;\n&lt;title&gt;506b254ab262426e889e805c20b6e0ad&amp;#45;&amp;#45;21feb429ba974b8b834062813c811de0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8255.87,-511C8258.6,-511 8344.65,-511 8347.34,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 771b8a6beaf740c9817d92742547f096 --&gt;\n&lt;g id=\"node81\" class=\"node\"&gt;\n&lt;title&gt;771b8a6beaf740c9817d92742547f096&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8442.72,-511.72 8441.28,-511.72 8441.28,-510.28 8442.72,-510.28 8442.72,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 21feb429ba974b8b834062813c811de0&amp;#45;&amp;#45;771b8a6beaf740c9817d92742547f096 --&gt;\n&lt;g id=\"edge80\" class=\"edge\"&gt;\n&lt;title&gt;21feb429ba974b8b834062813c811de0&amp;#45;&amp;#45;771b8a6beaf740c9817d92742547f096&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8349.47,-511C8352.2,-511 8438.25,-511 8440.94,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2d6de9b4bdd7490189ec191c10aaa136 --&gt;\n&lt;g id=\"node82\" class=\"node\"&gt;\n&lt;title&gt;2d6de9b4bdd7490189ec191c10aaa136&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8536.32,-511.72 8534.88,-511.72 8534.88,-510.28 8536.32,-510.28 8536.32,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 771b8a6beaf740c9817d92742547f096&amp;#45;&amp;#45;2d6de9b4bdd7490189ec191c10aaa136 --&gt;\n&lt;g id=\"edge81\" class=\"edge\"&gt;\n&lt;title&gt;771b8a6beaf740c9817d92742547f096&amp;#45;&amp;#45;2d6de9b4bdd7490189ec191c10aaa136&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8443.07,-511C8445.8,-511 8531.85,-511 8534.54,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- b71be2e4f9994e9d8aa935ddcfbb1752 --&gt;\n&lt;g id=\"node83\" class=\"node\"&gt;\n&lt;title&gt;b71be2e4f9994e9d8aa935ddcfbb1752&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8629.92,-511.72 8628.48,-511.72 8628.48,-510.28 8629.92,-510.28 8629.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2d6de9b4bdd7490189ec191c10aaa136&amp;#45;&amp;#45;b71be2e4f9994e9d8aa935ddcfbb1752 --&gt;\n&lt;g id=\"edge82\" class=\"edge\"&gt;\n&lt;title&gt;2d6de9b4bdd7490189ec191c10aaa136&amp;#45;&amp;#45;b71be2e4f9994e9d8aa935ddcfbb1752&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8536.67,-511C8539.4,-511 8625.45,-511 8628.14,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3dbf44c1340a4577b3f3f4877b2b560c --&gt;\n&lt;g id=\"node84\" class=\"node\"&gt;\n&lt;title&gt;3dbf44c1340a4577b3f3f4877b2b560c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8782.32,-511.72 8780.88,-511.72 8780.88,-510.28 8782.32,-510.28 8782.32,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b71be2e4f9994e9d8aa935ddcfbb1752&amp;#45;&amp;#45;3dbf44c1340a4577b3f3f4877b2b560c --&gt;\n&lt;g id=\"edge83\" class=\"edge\"&gt;\n&lt;title&gt;b71be2e4f9994e9d8aa935ddcfbb1752&amp;#45;&amp;#45;3dbf44c1340a4577b3f3f4877b2b560c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8630.31,-511C8634.79,-511 8776.08,-511 8780.49,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 15fc7839f97e46c3bf81013a6103605c --&gt;\n&lt;g id=\"node85\" class=\"node\"&gt;\n&lt;title&gt;15fc7839f97e46c3bf81013a6103605c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8934.72,-511.72 8933.28,-511.72 8933.28,-510.28 8934.72,-510.28 8934.72,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3dbf44c1340a4577b3f3f4877b2b560c&amp;#45;&amp;#45;15fc7839f97e46c3bf81013a6103605c --&gt;\n&lt;g id=\"edge84\" class=\"edge\"&gt;\n&lt;title&gt;3dbf44c1340a4577b3f3f4877b2b560c&amp;#45;&amp;#45;15fc7839f97e46c3bf81013a6103605c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8782.71,-511C8787.19,-511 8928.48,-511 8932.89,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3c1474370074e03a94ad44429ad879b --&gt;\n&lt;g id=\"node86\" class=\"node\"&gt;\n&lt;title&gt;c3c1474370074e03a94ad44429ad879b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9028.32,-511.72 9026.88,-511.72 9026.88,-510.28 9028.32,-510.28 9028.32,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 15fc7839f97e46c3bf81013a6103605c&amp;#45;&amp;#45;c3c1474370074e03a94ad44429ad879b --&gt;\n&lt;g id=\"edge85\" class=\"edge\"&gt;\n&lt;title&gt;15fc7839f97e46c3bf81013a6103605c&amp;#45;&amp;#45;c3c1474370074e03a94ad44429ad879b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8935.07,-511C8937.8,-511 9023.85,-511 9026.54,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ed1d3a4fa6f401b9c7ab90aeb27c795 --&gt;\n&lt;g id=\"node87\" class=\"node\"&gt;\n&lt;title&gt;6ed1d3a4fa6f401b9c7ab90aeb27c795&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9121.92,-511.72 9120.48,-511.72 9120.48,-510.28 9121.92,-510.28 9121.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3c1474370074e03a94ad44429ad879b&amp;#45;&amp;#45;6ed1d3a4fa6f401b9c7ab90aeb27c795 --&gt;\n&lt;g id=\"edge86\" class=\"edge\"&gt;\n&lt;title&gt;c3c1474370074e03a94ad44429ad879b&amp;#45;&amp;#45;6ed1d3a4fa6f401b9c7ab90aeb27c795&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9028.67,-511C9031.4,-511 9117.45,-511 9120.14,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 09db89b9ef754e33a2b17c1192e13c86 --&gt;\n&lt;g id=\"node88\" class=\"node\"&gt;\n&lt;title&gt;09db89b9ef754e33a2b17c1192e13c86&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9215.52,-511.72 9214.08,-511.72 9214.08,-510.28 9215.52,-510.28 9215.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ed1d3a4fa6f401b9c7ab90aeb27c795&amp;#45;&amp;#45;09db89b9ef754e33a2b17c1192e13c86 --&gt;\n&lt;g id=\"edge87\" class=\"edge\"&gt;\n&lt;title&gt;6ed1d3a4fa6f401b9c7ab90aeb27c795&amp;#45;&amp;#45;09db89b9ef754e33a2b17c1192e13c86&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9122.27,-511C9125,-511 9211.05,-511 9213.74,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8b6be83869ac41eda267a8008d04fd68 --&gt;\n&lt;g id=\"node89\" class=\"node\"&gt;\n&lt;title&gt;8b6be83869ac41eda267a8008d04fd68&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9309.12,-511.72 9307.68,-511.72 9307.68,-510.28 9309.12,-510.28 9309.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 09db89b9ef754e33a2b17c1192e13c86&amp;#45;&amp;#45;8b6be83869ac41eda267a8008d04fd68 --&gt;\n&lt;g id=\"edge88\" class=\"edge\"&gt;\n&lt;title&gt;09db89b9ef754e33a2b17c1192e13c86&amp;#45;&amp;#45;8b6be83869ac41eda267a8008d04fd68&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9215.87,-511C9218.6,-511 9304.65,-511 9307.34,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 25772c62290f4c69a3842f4cfe435e58 --&gt;\n&lt;g id=\"node90\" class=\"node\"&gt;\n&lt;title&gt;25772c62290f4c69a3842f4cfe435e58&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9461.52,-511.72 9460.08,-511.72 9460.08,-510.28 9461.52,-510.28 9461.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8b6be83869ac41eda267a8008d04fd68&amp;#45;&amp;#45;25772c62290f4c69a3842f4cfe435e58 --&gt;\n&lt;g id=\"edge89\" class=\"edge\"&gt;\n&lt;title&gt;8b6be83869ac41eda267a8008d04fd68&amp;#45;&amp;#45;25772c62290f4c69a3842f4cfe435e58&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9309.51,-511C9313.99,-511 9455.28,-511 9459.69,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9357967200f942b49f8ac7f1fb48570b --&gt;\n&lt;g id=\"node91\" class=\"node\"&gt;\n&lt;title&gt;9357967200f942b49f8ac7f1fb48570b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9613.92,-511.72 9612.48,-511.72 9612.48,-510.28 9613.92,-510.28 9613.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 25772c62290f4c69a3842f4cfe435e58&amp;#45;&amp;#45;9357967200f942b49f8ac7f1fb48570b --&gt;\n&lt;g id=\"edge90\" class=\"edge\"&gt;\n&lt;title&gt;25772c62290f4c69a3842f4cfe435e58&amp;#45;&amp;#45;9357967200f942b49f8ac7f1fb48570b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9461.91,-511C9466.39,-511 9607.68,-511 9612.09,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- cefa6b3acaae42b6a24213597ec3aede --&gt;\n&lt;g id=\"node92\" class=\"node\"&gt;\n&lt;title&gt;cefa6b3acaae42b6a24213597ec3aede&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9707.52,-511.72 9706.08,-511.72 9706.08,-510.28 9707.52,-510.28 9707.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9357967200f942b49f8ac7f1fb48570b&amp;#45;&amp;#45;cefa6b3acaae42b6a24213597ec3aede --&gt;\n&lt;g id=\"edge91\" class=\"edge\"&gt;\n&lt;title&gt;9357967200f942b49f8ac7f1fb48570b&amp;#45;&amp;#45;cefa6b3acaae42b6a24213597ec3aede&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9614.27,-511C9617,-511 9703.05,-511 9705.74,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- da8e07ed73934c4787624f51d23e1b87 --&gt;\n&lt;g id=\"node93\" class=\"node\"&gt;\n&lt;title&gt;da8e07ed73934c4787624f51d23e1b87&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9801.12,-511.72 9799.68,-511.72 9799.68,-510.28 9801.12,-510.28 9801.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cefa6b3acaae42b6a24213597ec3aede&amp;#45;&amp;#45;da8e07ed73934c4787624f51d23e1b87 --&gt;\n&lt;g id=\"edge92\" class=\"edge\"&gt;\n&lt;title&gt;cefa6b3acaae42b6a24213597ec3aede&amp;#45;&amp;#45;da8e07ed73934c4787624f51d23e1b87&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9707.87,-511C9710.6,-511 9796.65,-511 9799.34,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- a57f3e93f45549bb95901532938b5fa1 --&gt;\n&lt;g id=\"node94\" class=\"node\"&gt;\n&lt;title&gt;a57f3e93f45549bb95901532938b5fa1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9894.72,-511.72 9893.28,-511.72 9893.28,-510.28 9894.72,-510.28 9894.72,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da8e07ed73934c4787624f51d23e1b87&amp;#45;&amp;#45;a57f3e93f45549bb95901532938b5fa1 --&gt;\n&lt;g id=\"edge93\" class=\"edge\"&gt;\n&lt;title&gt;da8e07ed73934c4787624f51d23e1b87&amp;#45;&amp;#45;a57f3e93f45549bb95901532938b5fa1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9801.47,-511C9804.2,-511 9890.25,-511 9892.94,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- b940d6c665444926b7fcff8193075fb9 --&gt;\n&lt;g id=\"node95\" class=\"node\"&gt;\n&lt;title&gt;b940d6c665444926b7fcff8193075fb9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9988.32,-511.72 9986.88,-511.72 9986.88,-510.28 9988.32,-510.28 9988.32,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a57f3e93f45549bb95901532938b5fa1&amp;#45;&amp;#45;b940d6c665444926b7fcff8193075fb9 --&gt;\n&lt;g id=\"edge94\" class=\"edge\"&gt;\n&lt;title&gt;a57f3e93f45549bb95901532938b5fa1&amp;#45;&amp;#45;b940d6c665444926b7fcff8193075fb9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9895.07,-511C9897.8,-511 9983.85,-511 9986.54,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 90a57b0bb8474ac8b08edf25cd561a4b --&gt;\n&lt;g id=\"node96\" class=\"node\"&gt;\n&lt;title&gt;90a57b0bb8474ac8b08edf25cd561a4b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10081.92,-511.72 10080.48,-511.72 10080.48,-510.28 10081.92,-510.28 10081.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b940d6c665444926b7fcff8193075fb9&amp;#45;&amp;#45;90a57b0bb8474ac8b08edf25cd561a4b --&gt;\n&lt;g id=\"edge95\" class=\"edge\"&gt;\n&lt;title&gt;b940d6c665444926b7fcff8193075fb9&amp;#45;&amp;#45;90a57b0bb8474ac8b08edf25cd561a4b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9988.67,-511C9991.4,-511 10077.45,-511 10080.14,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 565ec7635014402c92cee6f53d78d920 --&gt;\n&lt;g id=\"node97\" class=\"node\"&gt;\n&lt;title&gt;565ec7635014402c92cee6f53d78d920&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10175.52,-511.72 10174.08,-511.72 10174.08,-510.28 10175.52,-510.28 10175.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 90a57b0bb8474ac8b08edf25cd561a4b&amp;#45;&amp;#45;565ec7635014402c92cee6f53d78d920 --&gt;\n&lt;g id=\"edge96\" class=\"edge\"&gt;\n&lt;title&gt;90a57b0bb8474ac8b08edf25cd561a4b&amp;#45;&amp;#45;565ec7635014402c92cee6f53d78d920&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10082.27,-511C10085,-511 10171.05,-511 10173.74,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f2f017224f6420caa4af5cd5d4dbcc9 --&gt;\n&lt;g id=\"node98\" class=\"node\"&gt;\n&lt;title&gt;6f2f017224f6420caa4af5cd5d4dbcc9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10327.92,-511.72 10326.48,-511.72 10326.48,-510.28 10327.92,-510.28 10327.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 565ec7635014402c92cee6f53d78d920&amp;#45;&amp;#45;6f2f017224f6420caa4af5cd5d4dbcc9 --&gt;\n&lt;g id=\"edge97\" class=\"edge\"&gt;\n&lt;title&gt;565ec7635014402c92cee6f53d78d920&amp;#45;&amp;#45;6f2f017224f6420caa4af5cd5d4dbcc9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10175.91,-511C10180.39,-511 10321.68,-511 10326.09,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 65639f989df74e1a848d0a35a00452cc --&gt;\n&lt;g id=\"node99\" class=\"node\"&gt;\n&lt;title&gt;65639f989df74e1a848d0a35a00452cc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10480.32,-511.72 10478.88,-511.72 10478.88,-510.28 10480.32,-510.28 10480.32,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f2f017224f6420caa4af5cd5d4dbcc9&amp;#45;&amp;#45;65639f989df74e1a848d0a35a00452cc --&gt;\n&lt;g id=\"edge98\" class=\"edge\"&gt;\n&lt;title&gt;6f2f017224f6420caa4af5cd5d4dbcc9&amp;#45;&amp;#45;65639f989df74e1a848d0a35a00452cc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10328.31,-511C10332.79,-511 10474.08,-511 10478.49,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- afeba6fda54a489db0a8b69dbab81ceb --&gt;\n&lt;g id=\"node100\" class=\"node\"&gt;\n&lt;title&gt;afeba6fda54a489db0a8b69dbab81ceb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10573.92,-511.72 10572.48,-511.72 10572.48,-510.28 10573.92,-510.28 10573.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 65639f989df74e1a848d0a35a00452cc&amp;#45;&amp;#45;afeba6fda54a489db0a8b69dbab81ceb --&gt;\n&lt;g id=\"edge99\" class=\"edge\"&gt;\n&lt;title&gt;65639f989df74e1a848d0a35a00452cc&amp;#45;&amp;#45;afeba6fda54a489db0a8b69dbab81ceb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10480.67,-511C10483.4,-511 10569.45,-511 10572.14,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 129726a916924a4c99fb95b3d4dcb965 --&gt;\n&lt;g id=\"node101\" class=\"node\"&gt;\n&lt;title&gt;129726a916924a4c99fb95b3d4dcb965&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10667.52,-511.72 10666.08,-511.72 10666.08,-510.28 10667.52,-510.28 10667.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- afeba6fda54a489db0a8b69dbab81ceb&amp;#45;&amp;#45;129726a916924a4c99fb95b3d4dcb965 --&gt;\n&lt;g id=\"edge100\" class=\"edge\"&gt;\n&lt;title&gt;afeba6fda54a489db0a8b69dbab81ceb&amp;#45;&amp;#45;129726a916924a4c99fb95b3d4dcb965&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10574.27,-511C10577,-511 10663.05,-511 10665.74,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5206b424ffa34edca615f52682eb9871 --&gt;\n&lt;g id=\"node102\" class=\"node\"&gt;\n&lt;title&gt;5206b424ffa34edca615f52682eb9871&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10761.12,-511.72 10759.68,-511.72 10759.68,-510.28 10761.12,-510.28 10761.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 129726a916924a4c99fb95b3d4dcb965&amp;#45;&amp;#45;5206b424ffa34edca615f52682eb9871 --&gt;\n&lt;g id=\"edge101\" class=\"edge\"&gt;\n&lt;title&gt;129726a916924a4c99fb95b3d4dcb965&amp;#45;&amp;#45;5206b424ffa34edca615f52682eb9871&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10667.87,-511C10670.6,-511 10756.65,-511 10759.34,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- c55080c3cda7485d939660a18b885de5 --&gt;\n&lt;g id=\"node103\" class=\"node\"&gt;\n&lt;title&gt;c55080c3cda7485d939660a18b885de5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10854.72,-511.72 10853.28,-511.72 10853.28,-510.28 10854.72,-510.28 10854.72,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5206b424ffa34edca615f52682eb9871&amp;#45;&amp;#45;c55080c3cda7485d939660a18b885de5 --&gt;\n&lt;g id=\"edge102\" class=\"edge\"&gt;\n&lt;title&gt;5206b424ffa34edca615f52682eb9871&amp;#45;&amp;#45;c55080c3cda7485d939660a18b885de5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10761.47,-511C10764.2,-511 10850.25,-511 10852.94,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 02be0d16833b44eda096554f9c02b4d1 --&gt;\n&lt;g id=\"node104\" class=\"node\"&gt;\n&lt;title&gt;02be0d16833b44eda096554f9c02b4d1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11007.12,-511.72 11005.68,-511.72 11005.68,-510.28 11007.12,-510.28 11007.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c55080c3cda7485d939660a18b885de5&amp;#45;&amp;#45;02be0d16833b44eda096554f9c02b4d1 --&gt;\n&lt;g id=\"edge103\" class=\"edge\"&gt;\n&lt;title&gt;c55080c3cda7485d939660a18b885de5&amp;#45;&amp;#45;02be0d16833b44eda096554f9c02b4d1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10855.11,-511C10859.59,-511 11000.88,-511 11005.29,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- afb91484b59e45c4b4f2c3d08b17fad2 --&gt;\n&lt;g id=\"node105\" class=\"node\"&gt;\n&lt;title&gt;afb91484b59e45c4b4f2c3d08b17fad2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11159.52,-511.72 11158.08,-511.72 11158.08,-510.28 11159.52,-510.28 11159.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 02be0d16833b44eda096554f9c02b4d1&amp;#45;&amp;#45;afb91484b59e45c4b4f2c3d08b17fad2 --&gt;\n&lt;g id=\"edge104\" class=\"edge\"&gt;\n&lt;title&gt;02be0d16833b44eda096554f9c02b4d1&amp;#45;&amp;#45;afb91484b59e45c4b4f2c3d08b17fad2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11007.51,-511C11011.99,-511 11153.28,-511 11157.69,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- a6180cd9622341daa69ec0d656a3f90f --&gt;\n&lt;g id=\"node106\" class=\"node\"&gt;\n&lt;title&gt;a6180cd9622341daa69ec0d656a3f90f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11253.12,-511.72 11251.68,-511.72 11251.68,-510.28 11253.12,-510.28 11253.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- afb91484b59e45c4b4f2c3d08b17fad2&amp;#45;&amp;#45;a6180cd9622341daa69ec0d656a3f90f --&gt;\n&lt;g id=\"edge105\" class=\"edge\"&gt;\n&lt;title&gt;afb91484b59e45c4b4f2c3d08b17fad2&amp;#45;&amp;#45;a6180cd9622341daa69ec0d656a3f90f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11159.87,-511C11162.6,-511 11248.65,-511 11251.34,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- fe98d6dcf990442aa4a1f6c73bf06ea3 --&gt;\n&lt;g id=\"node107\" class=\"node\"&gt;\n&lt;title&gt;fe98d6dcf990442aa4a1f6c73bf06ea3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11346.72,-511.72 11345.28,-511.72 11345.28,-510.28 11346.72,-510.28 11346.72,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a6180cd9622341daa69ec0d656a3f90f&amp;#45;&amp;#45;fe98d6dcf990442aa4a1f6c73bf06ea3 --&gt;\n&lt;g id=\"edge106\" class=\"edge\"&gt;\n&lt;title&gt;a6180cd9622341daa69ec0d656a3f90f&amp;#45;&amp;#45;fe98d6dcf990442aa4a1f6c73bf06ea3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11253.47,-511C11256.2,-511 11342.25,-511 11344.94,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 370ba7fc9e5944aab64873b463e0836c --&gt;\n&lt;g id=\"node108\" class=\"node\"&gt;\n&lt;title&gt;370ba7fc9e5944aab64873b463e0836c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11499.12,-511.72 11497.68,-511.72 11497.68,-510.28 11499.12,-510.28 11499.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fe98d6dcf990442aa4a1f6c73bf06ea3&amp;#45;&amp;#45;370ba7fc9e5944aab64873b463e0836c --&gt;\n&lt;g id=\"edge107\" class=\"edge\"&gt;\n&lt;title&gt;fe98d6dcf990442aa4a1f6c73bf06ea3&amp;#45;&amp;#45;370ba7fc9e5944aab64873b463e0836c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11347.11,-511C11351.59,-511 11492.88,-511 11497.29,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7698730d440043b78c4827d417ead0af --&gt;\n&lt;g id=\"node109\" class=\"node\"&gt;\n&lt;title&gt;7698730d440043b78c4827d417ead0af&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11651.52,-511.72 11650.08,-511.72 11650.08,-510.28 11651.52,-510.28 11651.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 370ba7fc9e5944aab64873b463e0836c&amp;#45;&amp;#45;7698730d440043b78c4827d417ead0af --&gt;\n&lt;g id=\"edge108\" class=\"edge\"&gt;\n&lt;title&gt;370ba7fc9e5944aab64873b463e0836c&amp;#45;&amp;#45;7698730d440043b78c4827d417ead0af&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11499.51,-511C11503.99,-511 11645.28,-511 11649.69,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- bdb9f8eb13924efea88c68bda9ebd2d3 --&gt;\n&lt;g id=\"node110\" class=\"node\"&gt;\n&lt;title&gt;bdb9f8eb13924efea88c68bda9ebd2d3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11745.12,-511.72 11743.68,-511.72 11743.68,-510.28 11745.12,-510.28 11745.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7698730d440043b78c4827d417ead0af&amp;#45;&amp;#45;bdb9f8eb13924efea88c68bda9ebd2d3 --&gt;\n&lt;g id=\"edge109\" class=\"edge\"&gt;\n&lt;title&gt;7698730d440043b78c4827d417ead0af&amp;#45;&amp;#45;bdb9f8eb13924efea88c68bda9ebd2d3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11651.87,-511C11654.6,-511 11740.65,-511 11743.34,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- e72dbf2a09724c9ab2128e6a6a384f1b --&gt;\n&lt;g id=\"node111\" class=\"node\"&gt;\n&lt;title&gt;e72dbf2a09724c9ab2128e6a6a384f1b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11838.72,-511.72 11837.28,-511.72 11837.28,-510.28 11838.72,-510.28 11838.72,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bdb9f8eb13924efea88c68bda9ebd2d3&amp;#45;&amp;#45;e72dbf2a09724c9ab2128e6a6a384f1b --&gt;\n&lt;g id=\"edge110\" class=\"edge\"&gt;\n&lt;title&gt;bdb9f8eb13924efea88c68bda9ebd2d3&amp;#45;&amp;#45;e72dbf2a09724c9ab2128e6a6a384f1b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11745.47,-511C11748.2,-511 11834.25,-511 11836.94,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 751f587aa05644b4ac6e484e1ac98332 --&gt;\n&lt;g id=\"node112\" class=\"node\"&gt;\n&lt;title&gt;751f587aa05644b4ac6e484e1ac98332&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11991.12,-511.72 11989.68,-511.72 11989.68,-510.28 11991.12,-510.28 11991.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e72dbf2a09724c9ab2128e6a6a384f1b&amp;#45;&amp;#45;751f587aa05644b4ac6e484e1ac98332 --&gt;\n&lt;g id=\"edge111\" class=\"edge\"&gt;\n&lt;title&gt;e72dbf2a09724c9ab2128e6a6a384f1b&amp;#45;&amp;#45;751f587aa05644b4ac6e484e1ac98332&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11839.11,-511C11843.59,-511 11984.88,-511 11989.29,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- a74ee2bb8237451a98bf49ff1358c65a --&gt;\n&lt;g id=\"node113\" class=\"node\"&gt;\n&lt;title&gt;a74ee2bb8237451a98bf49ff1358c65a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12143.52,-511.72 12142.08,-511.72 12142.08,-510.28 12143.52,-510.28 12143.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 751f587aa05644b4ac6e484e1ac98332&amp;#45;&amp;#45;a74ee2bb8237451a98bf49ff1358c65a --&gt;\n&lt;g id=\"edge112\" class=\"edge\"&gt;\n&lt;title&gt;751f587aa05644b4ac6e484e1ac98332&amp;#45;&amp;#45;a74ee2bb8237451a98bf49ff1358c65a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11991.51,-511C11995.99,-511 12137.28,-511 12141.69,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 608d245a3f3b4a5fa23e1396171686f6 --&gt;\n&lt;g id=\"node114\" class=\"node\"&gt;\n&lt;title&gt;608d245a3f3b4a5fa23e1396171686f6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12237.12,-511.72 12235.68,-511.72 12235.68,-510.28 12237.12,-510.28 12237.12,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a74ee2bb8237451a98bf49ff1358c65a&amp;#45;&amp;#45;608d245a3f3b4a5fa23e1396171686f6 --&gt;\n&lt;g id=\"edge113\" class=\"edge\"&gt;\n&lt;title&gt;a74ee2bb8237451a98bf49ff1358c65a&amp;#45;&amp;#45;608d245a3f3b4a5fa23e1396171686f6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12143.87,-511C12146.6,-511 12232.65,-511 12235.34,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6657191703c94f63b831381eb21511d1 --&gt;\n&lt;g id=\"node115\" class=\"node\"&gt;\n&lt;title&gt;6657191703c94f63b831381eb21511d1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12389.52,-511.72 12388.08,-511.72 12388.08,-510.28 12389.52,-510.28 12389.52,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 608d245a3f3b4a5fa23e1396171686f6&amp;#45;&amp;#45;6657191703c94f63b831381eb21511d1 --&gt;\n&lt;g id=\"edge114\" class=\"edge\"&gt;\n&lt;title&gt;608d245a3f3b4a5fa23e1396171686f6&amp;#45;&amp;#45;6657191703c94f63b831381eb21511d1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12237.51,-511C12241.99,-511 12383.28,-511 12387.69,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5039bfe824254724aededb2853dbf8ef --&gt;\n&lt;g id=\"node116\" class=\"node\"&gt;\n&lt;title&gt;5039bfe824254724aededb2853dbf8ef&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12541.92,-511.72 12540.48,-511.72 12540.48,-510.28 12541.92,-510.28 12541.92,-511.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6657191703c94f63b831381eb21511d1&amp;#45;&amp;#45;5039bfe824254724aededb2853dbf8ef --&gt;\n&lt;g id=\"edge115\" class=\"edge\"&gt;\n&lt;title&gt;6657191703c94f63b831381eb21511d1&amp;#45;&amp;#45;5039bfe824254724aededb2853dbf8ef&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12389.91,-511C12394.39,-511 12535.68,-511 12540.09,-511\"/&gt;\n&lt;/g&gt;\n&lt;!-- e74e27850aa64b65bc99a141bb47c837 --&gt;\n&lt;g id=\"node117\" class=\"node\"&gt;\n&lt;title&gt;e74e27850aa64b65bc99a141bb47c837&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M12721.2,-556.8C12721.2,-556.8 12618,-556.8 12618,-556.8 12612,-556.8 12606,-550.8 12606,-544.8 12606,-544.8 12606,-511.2 12606,-511.2 12606,-505.2 12612,-499.2 12618,-499.2 12618,-499.2 12721.2,-499.2 12721.2,-499.2 12727.2,-499.2 12733.2,-505.2 12733.2,-511.2 12733.2,-511.2 12733.2,-544.8 12733.2,-544.8 12733.2,-550.8 12727.2,-556.8 12721.2,-556.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12669.6\" y=\"-522.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b00)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5039bfe824254724aededb2853dbf8ef&amp;#45;&amp;#45;e74e27850aa64b65bc99a141bb47c837 --&gt;\n&lt;g id=\"edge116\" class=\"edge\"&gt;\n&lt;title&gt;5039bfe824254724aededb2853dbf8ef&amp;#45;&amp;#45;e74e27850aa64b65bc99a141bb47c837&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12542.29,-511.01C12544.17,-511.26 12574.56,-515.35 12605.06,-519.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- a0bd4c1ad5f54e05993f6f0d38f9132b --&gt;\n&lt;g id=\"node118\" class=\"node\"&gt;\n&lt;title&gt;a0bd4c1ad5f54e05993f6f0d38f9132b&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"12798\" cy=\"-528\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- e74e27850aa64b65bc99a141bb47c837&amp;#45;&amp;#45;a0bd4c1ad5f54e05993f6f0d38f9132b --&gt;\n&lt;g id=\"edge117\" class=\"edge\"&gt;\n&lt;title&gt;e74e27850aa64b65bc99a141bb47c837&amp;#45;&amp;#45;a0bd4c1ad5f54e05993f6f0d38f9132b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12734.17,-528C12757.04,-528 12779.84,-528 12790.61,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 502a335cb0024a259e2ab7b6f8e46098 --&gt;\n&lt;g id=\"node119\" class=\"node\"&gt;\n&lt;title&gt;502a335cb0024a259e2ab7b6f8e46098&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12892.32,-528.72 12890.88,-528.72 12890.88,-527.28 12892.32,-527.28 12892.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a0bd4c1ad5f54e05993f6f0d38f9132b&amp;#45;&amp;#45;502a335cb0024a259e2ab7b6f8e46098 --&gt;\n&lt;g id=\"edge118\" class=\"edge\"&gt;\n&lt;title&gt;a0bd4c1ad5f54e05993f6f0d38f9132b&amp;#45;&amp;#45;502a335cb0024a259e2ab7b6f8e46098&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12805.59,-528C12825.93,-528 12886.64,-528 12890.42,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- ea88a90a330645cfb0d32c4a2c595e59 --&gt;\n&lt;g id=\"node120\" class=\"node\"&gt;\n&lt;title&gt;ea88a90a330645cfb0d32c4a2c595e59&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12985.92,-528.72 12984.48,-528.72 12984.48,-527.28 12985.92,-527.28 12985.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 502a335cb0024a259e2ab7b6f8e46098&amp;#45;&amp;#45;ea88a90a330645cfb0d32c4a2c595e59 --&gt;\n&lt;g id=\"edge119\" class=\"edge\"&gt;\n&lt;title&gt;502a335cb0024a259e2ab7b6f8e46098&amp;#45;&amp;#45;ea88a90a330645cfb0d32c4a2c595e59&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12892.67,-528C12895.4,-528 12981.45,-528 12984.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5f03a1de1acc443db9368228c4687fa7 --&gt;\n&lt;g id=\"node121\" class=\"node\"&gt;\n&lt;title&gt;5f03a1de1acc443db9368228c4687fa7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13079.52,-528.72 13078.08,-528.72 13078.08,-527.28 13079.52,-527.28 13079.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ea88a90a330645cfb0d32c4a2c595e59&amp;#45;&amp;#45;5f03a1de1acc443db9368228c4687fa7 --&gt;\n&lt;g id=\"edge120\" class=\"edge\"&gt;\n&lt;title&gt;ea88a90a330645cfb0d32c4a2c595e59&amp;#45;&amp;#45;5f03a1de1acc443db9368228c4687fa7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12986.27,-528C12989,-528 13075.05,-528 13077.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7da93c1b1722451ea49dea51eda84568 --&gt;\n&lt;g id=\"node122\" class=\"node\"&gt;\n&lt;title&gt;7da93c1b1722451ea49dea51eda84568&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13173.12,-528.72 13171.68,-528.72 13171.68,-527.28 13173.12,-527.28 13173.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5f03a1de1acc443db9368228c4687fa7&amp;#45;&amp;#45;7da93c1b1722451ea49dea51eda84568 --&gt;\n&lt;g id=\"edge121\" class=\"edge\"&gt;\n&lt;title&gt;5f03a1de1acc443db9368228c4687fa7&amp;#45;&amp;#45;7da93c1b1722451ea49dea51eda84568&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13079.87,-528C13082.6,-528 13168.65,-528 13171.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0f2953da98fe49db854f020d4e484a65 --&gt;\n&lt;g id=\"node123\" class=\"node\"&gt;\n&lt;title&gt;0f2953da98fe49db854f020d4e484a65&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13266.72,-528.72 13265.28,-528.72 13265.28,-527.28 13266.72,-527.28 13266.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7da93c1b1722451ea49dea51eda84568&amp;#45;&amp;#45;0f2953da98fe49db854f020d4e484a65 --&gt;\n&lt;g id=\"edge122\" class=\"edge\"&gt;\n&lt;title&gt;7da93c1b1722451ea49dea51eda84568&amp;#45;&amp;#45;0f2953da98fe49db854f020d4e484a65&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13173.47,-528C13176.2,-528 13262.25,-528 13264.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b6848a7c03446ef93b8d634d8b2a786 --&gt;\n&lt;g id=\"node124\" class=\"node\"&gt;\n&lt;title&gt;6b6848a7c03446ef93b8d634d8b2a786&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13360.32,-528.72 13358.88,-528.72 13358.88,-527.28 13360.32,-527.28 13360.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0f2953da98fe49db854f020d4e484a65&amp;#45;&amp;#45;6b6848a7c03446ef93b8d634d8b2a786 --&gt;\n&lt;g id=\"edge123\" class=\"edge\"&gt;\n&lt;title&gt;0f2953da98fe49db854f020d4e484a65&amp;#45;&amp;#45;6b6848a7c03446ef93b8d634d8b2a786&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13267.07,-528C13269.8,-528 13355.85,-528 13358.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 40c605af374f4ae8890dfc2c5c9b6b2f --&gt;\n&lt;g id=\"node125\" class=\"node\"&gt;\n&lt;title&gt;40c605af374f4ae8890dfc2c5c9b6b2f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13506.72,-528.72 13505.28,-528.72 13505.28,-527.28 13506.72,-527.28 13506.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b6848a7c03446ef93b8d634d8b2a786&amp;#45;&amp;#45;40c605af374f4ae8890dfc2c5c9b6b2f --&gt;\n&lt;g id=\"edge124\" class=\"edge\"&gt;\n&lt;title&gt;6b6848a7c03446ef93b8d634d8b2a786&amp;#45;&amp;#45;40c605af374f4ae8890dfc2c5c9b6b2f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13360.7,-528C13365.01,-528 13500.66,-528 13504.9,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8882ac4dd5104217ac75aa057b945897 --&gt;\n&lt;g id=\"node126\" class=\"node\"&gt;\n&lt;title&gt;8882ac4dd5104217ac75aa057b945897&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13653.12,-528.72 13651.68,-528.72 13651.68,-527.28 13653.12,-527.28 13653.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 40c605af374f4ae8890dfc2c5c9b6b2f&amp;#45;&amp;#45;8882ac4dd5104217ac75aa057b945897 --&gt;\n&lt;g id=\"edge125\" class=\"edge\"&gt;\n&lt;title&gt;40c605af374f4ae8890dfc2c5c9b6b2f&amp;#45;&amp;#45;8882ac4dd5104217ac75aa057b945897&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13507.1,-528C13511.41,-528 13647.06,-528 13651.3,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7e78d2fd23bc4b40a77f80f0b0e6b072 --&gt;\n&lt;g id=\"node127\" class=\"node\"&gt;\n&lt;title&gt;7e78d2fd23bc4b40a77f80f0b0e6b072&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13746.72,-528.72 13745.28,-528.72 13745.28,-527.28 13746.72,-527.28 13746.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8882ac4dd5104217ac75aa057b945897&amp;#45;&amp;#45;7e78d2fd23bc4b40a77f80f0b0e6b072 --&gt;\n&lt;g id=\"edge126\" class=\"edge\"&gt;\n&lt;title&gt;8882ac4dd5104217ac75aa057b945897&amp;#45;&amp;#45;7e78d2fd23bc4b40a77f80f0b0e6b072&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13653.47,-528C13656.2,-528 13742.25,-528 13744.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- eb30edc42f4740c8ba55f2b62d9ac208 --&gt;\n&lt;g id=\"node128\" class=\"node\"&gt;\n&lt;title&gt;eb30edc42f4740c8ba55f2b62d9ac208&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13840.32,-528.72 13838.88,-528.72 13838.88,-527.28 13840.32,-527.28 13840.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7e78d2fd23bc4b40a77f80f0b0e6b072&amp;#45;&amp;#45;eb30edc42f4740c8ba55f2b62d9ac208 --&gt;\n&lt;g id=\"edge127\" class=\"edge\"&gt;\n&lt;title&gt;7e78d2fd23bc4b40a77f80f0b0e6b072&amp;#45;&amp;#45;eb30edc42f4740c8ba55f2b62d9ac208&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13747.07,-528C13749.8,-528 13835.85,-528 13838.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 70b341de4ba342f4891b8ac955ff6b88 --&gt;\n&lt;g id=\"node129\" class=\"node\"&gt;\n&lt;title&gt;70b341de4ba342f4891b8ac955ff6b88&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13933.92,-528.72 13932.48,-528.72 13932.48,-527.28 13933.92,-527.28 13933.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- eb30edc42f4740c8ba55f2b62d9ac208&amp;#45;&amp;#45;70b341de4ba342f4891b8ac955ff6b88 --&gt;\n&lt;g id=\"edge128\" class=\"edge\"&gt;\n&lt;title&gt;eb30edc42f4740c8ba55f2b62d9ac208&amp;#45;&amp;#45;70b341de4ba342f4891b8ac955ff6b88&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13840.67,-528C13843.4,-528 13929.45,-528 13932.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 445354aa77704405a3bd2c7e07b78497 --&gt;\n&lt;g id=\"node130\" class=\"node\"&gt;\n&lt;title&gt;445354aa77704405a3bd2c7e07b78497&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14027.52,-528.72 14026.08,-528.72 14026.08,-527.28 14027.52,-527.28 14027.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 70b341de4ba342f4891b8ac955ff6b88&amp;#45;&amp;#45;445354aa77704405a3bd2c7e07b78497 --&gt;\n&lt;g id=\"edge129\" class=\"edge\"&gt;\n&lt;title&gt;70b341de4ba342f4891b8ac955ff6b88&amp;#45;&amp;#45;445354aa77704405a3bd2c7e07b78497&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13934.27,-528C13937,-528 14023.05,-528 14025.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7b025a4f0177405bb56f0d9e98b7a74d --&gt;\n&lt;g id=\"node131\" class=\"node\"&gt;\n&lt;title&gt;7b025a4f0177405bb56f0d9e98b7a74d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14121.12,-528.72 14119.68,-528.72 14119.68,-527.28 14121.12,-527.28 14121.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 445354aa77704405a3bd2c7e07b78497&amp;#45;&amp;#45;7b025a4f0177405bb56f0d9e98b7a74d --&gt;\n&lt;g id=\"edge130\" class=\"edge\"&gt;\n&lt;title&gt;445354aa77704405a3bd2c7e07b78497&amp;#45;&amp;#45;7b025a4f0177405bb56f0d9e98b7a74d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14027.87,-528C14030.6,-528 14116.65,-528 14119.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- b55dcb58220b4d4bb25897b3e25f2ab4 --&gt;\n&lt;g id=\"node132\" class=\"node\"&gt;\n&lt;title&gt;b55dcb58220b4d4bb25897b3e25f2ab4&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"14214\" cy=\"-528\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7b025a4f0177405bb56f0d9e98b7a74d&amp;#45;&amp;#45;b55dcb58220b4d4bb25897b3e25f2ab4 --&gt;\n&lt;g id=\"edge131\" class=\"edge\"&gt;\n&lt;title&gt;7b025a4f0177405bb56f0d9e98b7a74d&amp;#45;&amp;#45;b55dcb58220b4d4bb25897b3e25f2ab4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14121.47,-528C14123.77,-528 14185.61,-528 14206.32,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 26d2f9027061451080900faed060877e --&gt;\n&lt;g id=\"node133\" class=\"node\"&gt;\n&lt;title&gt;26d2f9027061451080900faed060877e&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"14307.6\" cy=\"-528\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- b55dcb58220b4d4bb25897b3e25f2ab4&amp;#45;&amp;#45;26d2f9027061451080900faed060877e --&gt;\n&lt;g id=\"edge132\" class=\"edge\"&gt;\n&lt;title&gt;b55dcb58220b4d4bb25897b3e25f2ab4&amp;#45;&amp;#45;26d2f9027061451080900faed060877e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14221.59,-528C14238.49,-528 14283.24,-528 14300.07,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- c6a4ad5184e9463b81a0ebc19a67d971 --&gt;\n&lt;g id=\"node134\" class=\"node\"&gt;\n&lt;title&gt;c6a4ad5184e9463b81a0ebc19a67d971&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14460.72,-528.72 14459.28,-528.72 14459.28,-527.28 14460.72,-527.28 14460.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 26d2f9027061451080900faed060877e&amp;#45;&amp;#45;c6a4ad5184e9463b81a0ebc19a67d971 --&gt;\n&lt;g id=\"edge133\" class=\"edge\"&gt;\n&lt;title&gt;26d2f9027061451080900faed060877e&amp;#45;&amp;#45;c6a4ad5184e9463b81a0ebc19a67d971&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14315.06,-528C14343.4,-528 14455.42,-528 14458.92,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 29da253322c04e459fe18555b79db711 --&gt;\n&lt;g id=\"node135\" class=\"node\"&gt;\n&lt;title&gt;29da253322c04e459fe18555b79db711&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"14612.4\" cy=\"-528\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- c6a4ad5184e9463b81a0ebc19a67d971&amp;#45;&amp;#45;29da253322c04e459fe18555b79db711 --&gt;\n&lt;g id=\"edge134\" class=\"edge\"&gt;\n&lt;title&gt;c6a4ad5184e9463b81a0ebc19a67d971&amp;#45;&amp;#45;29da253322c04e459fe18555b79db711&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14461.11,-528C14465.08,-528 14576.17,-528 14604.75,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- e87d383c57b749e4b85af9d42208dbfa --&gt;\n&lt;g id=\"node136\" class=\"node\"&gt;\n&lt;title&gt;e87d383c57b749e4b85af9d42208dbfa&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"14706\" cy=\"-528\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 29da253322c04e459fe18555b79db711&amp;#45;&amp;#45;e87d383c57b749e4b85af9d42208dbfa --&gt;\n&lt;g id=\"edge135\" class=\"edge\"&gt;\n&lt;title&gt;29da253322c04e459fe18555b79db711&amp;#45;&amp;#45;e87d383c57b749e4b85af9d42208dbfa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14619.99,-528C14636.89,-528 14681.64,-528 14698.47,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9bc536b0795b4a8f8cc4cd7e203cf683 --&gt;\n&lt;g id=\"node137\" class=\"node\"&gt;\n&lt;title&gt;9bc536b0795b4a8f8cc4cd7e203cf683&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14800.32,-528.72 14798.88,-528.72 14798.88,-527.28 14800.32,-527.28 14800.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e87d383c57b749e4b85af9d42208dbfa&amp;#45;&amp;#45;9bc536b0795b4a8f8cc4cd7e203cf683 --&gt;\n&lt;g id=\"edge136\" class=\"edge\"&gt;\n&lt;title&gt;e87d383c57b749e4b85af9d42208dbfa&amp;#45;&amp;#45;9bc536b0795b4a8f8cc4cd7e203cf683&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14713.59,-528C14733.93,-528 14794.64,-528 14798.42,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7bcfef0f8c5448b095b6c6da6651a005 --&gt;\n&lt;g id=\"node138\" class=\"node\"&gt;\n&lt;title&gt;7bcfef0f8c5448b095b6c6da6651a005&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14893.92,-528.72 14892.48,-528.72 14892.48,-527.28 14893.92,-527.28 14893.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9bc536b0795b4a8f8cc4cd7e203cf683&amp;#45;&amp;#45;7bcfef0f8c5448b095b6c6da6651a005 --&gt;\n&lt;g id=\"edge137\" class=\"edge\"&gt;\n&lt;title&gt;9bc536b0795b4a8f8cc4cd7e203cf683&amp;#45;&amp;#45;7bcfef0f8c5448b095b6c6da6651a005&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14800.67,-528C14803.4,-528 14889.45,-528 14892.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- da6491f375754c7f928fdaef0b906025 --&gt;\n&lt;g id=\"node139\" class=\"node\"&gt;\n&lt;title&gt;da6491f375754c7f928fdaef0b906025&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14987.52,-528.72 14986.08,-528.72 14986.08,-527.28 14987.52,-527.28 14987.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7bcfef0f8c5448b095b6c6da6651a005&amp;#45;&amp;#45;da6491f375754c7f928fdaef0b906025 --&gt;\n&lt;g id=\"edge138\" class=\"edge\"&gt;\n&lt;title&gt;7bcfef0f8c5448b095b6c6da6651a005&amp;#45;&amp;#45;da6491f375754c7f928fdaef0b906025&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14894.27,-528C14897,-528 14983.05,-528 14985.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- d6356683b28742ad996b4e1e490995aa --&gt;\n&lt;g id=\"node140\" class=\"node\"&gt;\n&lt;title&gt;d6356683b28742ad996b4e1e490995aa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15081.12,-528.72 15079.68,-528.72 15079.68,-527.28 15081.12,-527.28 15081.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da6491f375754c7f928fdaef0b906025&amp;#45;&amp;#45;d6356683b28742ad996b4e1e490995aa --&gt;\n&lt;g id=\"edge139\" class=\"edge\"&gt;\n&lt;title&gt;da6491f375754c7f928fdaef0b906025&amp;#45;&amp;#45;d6356683b28742ad996b4e1e490995aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14987.87,-528C14990.6,-528 15076.65,-528 15079.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- cd10775f0cdd42a08b50786130bc9d9e --&gt;\n&lt;g id=\"node141\" class=\"node\"&gt;\n&lt;title&gt;cd10775f0cdd42a08b50786130bc9d9e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15233.52,-528.72 15232.08,-528.72 15232.08,-527.28 15233.52,-527.28 15233.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d6356683b28742ad996b4e1e490995aa&amp;#45;&amp;#45;cd10775f0cdd42a08b50786130bc9d9e --&gt;\n&lt;g id=\"edge140\" class=\"edge\"&gt;\n&lt;title&gt;d6356683b28742ad996b4e1e490995aa&amp;#45;&amp;#45;cd10775f0cdd42a08b50786130bc9d9e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15081.51,-528C15085.99,-528 15227.28,-528 15231.69,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 207874f5498a4a98ab598fc388ace7bf --&gt;\n&lt;g id=\"node142\" class=\"node\"&gt;\n&lt;title&gt;207874f5498a4a98ab598fc388ace7bf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15385.92,-528.72 15384.48,-528.72 15384.48,-527.28 15385.92,-527.28 15385.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cd10775f0cdd42a08b50786130bc9d9e&amp;#45;&amp;#45;207874f5498a4a98ab598fc388ace7bf --&gt;\n&lt;g id=\"edge141\" class=\"edge\"&gt;\n&lt;title&gt;cd10775f0cdd42a08b50786130bc9d9e&amp;#45;&amp;#45;207874f5498a4a98ab598fc388ace7bf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15233.91,-528C15238.39,-528 15379.68,-528 15384.09,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- b023557a6e60405aa721b1a87bb50eab --&gt;\n&lt;g id=\"node143\" class=\"node\"&gt;\n&lt;title&gt;b023557a6e60405aa721b1a87bb50eab&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15479.52,-528.72 15478.08,-528.72 15478.08,-527.28 15479.52,-527.28 15479.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 207874f5498a4a98ab598fc388ace7bf&amp;#45;&amp;#45;b023557a6e60405aa721b1a87bb50eab --&gt;\n&lt;g id=\"edge142\" class=\"edge\"&gt;\n&lt;title&gt;207874f5498a4a98ab598fc388ace7bf&amp;#45;&amp;#45;b023557a6e60405aa721b1a87bb50eab&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15386.27,-528C15389,-528 15475.05,-528 15477.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- c5c7e0da031541b69e1a56f6985b59cf --&gt;\n&lt;g id=\"node144\" class=\"node\"&gt;\n&lt;title&gt;c5c7e0da031541b69e1a56f6985b59cf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15573.12,-528.72 15571.68,-528.72 15571.68,-527.28 15573.12,-527.28 15573.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b023557a6e60405aa721b1a87bb50eab&amp;#45;&amp;#45;c5c7e0da031541b69e1a56f6985b59cf --&gt;\n&lt;g id=\"edge143\" class=\"edge\"&gt;\n&lt;title&gt;b023557a6e60405aa721b1a87bb50eab&amp;#45;&amp;#45;c5c7e0da031541b69e1a56f6985b59cf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15479.87,-528C15482.6,-528 15568.65,-528 15571.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 516acd8b3608426a989480666d7cb794 --&gt;\n&lt;g id=\"node145\" class=\"node\"&gt;\n&lt;title&gt;516acd8b3608426a989480666d7cb794&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15666.72,-528.72 15665.28,-528.72 15665.28,-527.28 15666.72,-527.28 15666.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c5c7e0da031541b69e1a56f6985b59cf&amp;#45;&amp;#45;516acd8b3608426a989480666d7cb794 --&gt;\n&lt;g id=\"edge144\" class=\"edge\"&gt;\n&lt;title&gt;c5c7e0da031541b69e1a56f6985b59cf&amp;#45;&amp;#45;516acd8b3608426a989480666d7cb794&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15573.47,-528C15576.2,-528 15662.25,-528 15664.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- ef57b145414240e6847a1c398968d11a --&gt;\n&lt;g id=\"node146\" class=\"node\"&gt;\n&lt;title&gt;ef57b145414240e6847a1c398968d11a&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"15759.6\" cy=\"-528\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 516acd8b3608426a989480666d7cb794&amp;#45;&amp;#45;ef57b145414240e6847a1c398968d11a --&gt;\n&lt;g id=\"edge145\" class=\"edge\"&gt;\n&lt;title&gt;516acd8b3608426a989480666d7cb794&amp;#45;&amp;#45;ef57b145414240e6847a1c398968d11a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15667.07,-528C15669.37,-528 15731.21,-528 15751.92,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- eea08612574344d6b11f05abce472e79 --&gt;\n&lt;g id=\"node147\" class=\"node\"&gt;\n&lt;title&gt;eea08612574344d6b11f05abce472e79&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15853.92,-528.72 15852.48,-528.72 15852.48,-527.28 15853.92,-527.28 15853.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ef57b145414240e6847a1c398968d11a&amp;#45;&amp;#45;eea08612574344d6b11f05abce472e79 --&gt;\n&lt;g id=\"edge146\" class=\"edge\"&gt;\n&lt;title&gt;ef57b145414240e6847a1c398968d11a&amp;#45;&amp;#45;eea08612574344d6b11f05abce472e79&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15767.19,-528C15787.53,-528 15848.24,-528 15852.02,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- b223871f6d6d424f9d18a56e8176730b --&gt;\n&lt;g id=\"node148\" class=\"node\"&gt;\n&lt;title&gt;b223871f6d6d424f9d18a56e8176730b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15947.52,-528.72 15946.08,-528.72 15946.08,-527.28 15947.52,-527.28 15947.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- eea08612574344d6b11f05abce472e79&amp;#45;&amp;#45;b223871f6d6d424f9d18a56e8176730b --&gt;\n&lt;g id=\"edge147\" class=\"edge\"&gt;\n&lt;title&gt;eea08612574344d6b11f05abce472e79&amp;#45;&amp;#45;b223871f6d6d424f9d18a56e8176730b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15854.27,-528C15857,-528 15943.05,-528 15945.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 07007bcb2aa54bdcbdcb64ed23d3c367 --&gt;\n&lt;g id=\"node149\" class=\"node\"&gt;\n&lt;title&gt;07007bcb2aa54bdcbdcb64ed23d3c367&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16041.12,-528.72 16039.68,-528.72 16039.68,-527.28 16041.12,-527.28 16041.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b223871f6d6d424f9d18a56e8176730b&amp;#45;&amp;#45;07007bcb2aa54bdcbdcb64ed23d3c367 --&gt;\n&lt;g id=\"edge148\" class=\"edge\"&gt;\n&lt;title&gt;b223871f6d6d424f9d18a56e8176730b&amp;#45;&amp;#45;07007bcb2aa54bdcbdcb64ed23d3c367&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15947.87,-528C15950.6,-528 16036.65,-528 16039.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 135a5585dccc4959a20563da12d697af --&gt;\n&lt;g id=\"node150\" class=\"node\"&gt;\n&lt;title&gt;135a5585dccc4959a20563da12d697af&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16193.52,-528.72 16192.08,-528.72 16192.08,-527.28 16193.52,-527.28 16193.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 07007bcb2aa54bdcbdcb64ed23d3c367&amp;#45;&amp;#45;135a5585dccc4959a20563da12d697af --&gt;\n&lt;g id=\"edge149\" class=\"edge\"&gt;\n&lt;title&gt;07007bcb2aa54bdcbdcb64ed23d3c367&amp;#45;&amp;#45;135a5585dccc4959a20563da12d697af&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16041.51,-528C16045.99,-528 16187.28,-528 16191.69,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e4acf7263d14c0792bc76a45617299f --&gt;\n&lt;g id=\"node151\" class=\"node\"&gt;\n&lt;title&gt;9e4acf7263d14c0792bc76a45617299f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16345.92,-528.72 16344.48,-528.72 16344.48,-527.28 16345.92,-527.28 16345.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 135a5585dccc4959a20563da12d697af&amp;#45;&amp;#45;9e4acf7263d14c0792bc76a45617299f --&gt;\n&lt;g id=\"edge150\" class=\"edge\"&gt;\n&lt;title&gt;135a5585dccc4959a20563da12d697af&amp;#45;&amp;#45;9e4acf7263d14c0792bc76a45617299f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16193.91,-528C16198.39,-528 16339.68,-528 16344.09,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98fa7962e6004e98952c8881f4a1e1bc --&gt;\n&lt;g id=\"node152\" class=\"node\"&gt;\n&lt;title&gt;98fa7962e6004e98952c8881f4a1e1bc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16439.52,-528.72 16438.08,-528.72 16438.08,-527.28 16439.52,-527.28 16439.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e4acf7263d14c0792bc76a45617299f&amp;#45;&amp;#45;98fa7962e6004e98952c8881f4a1e1bc --&gt;\n&lt;g id=\"edge151\" class=\"edge\"&gt;\n&lt;title&gt;9e4acf7263d14c0792bc76a45617299f&amp;#45;&amp;#45;98fa7962e6004e98952c8881f4a1e1bc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16346.27,-528C16349,-528 16435.05,-528 16437.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- db1bc5368a944831962e902cbd61b35c --&gt;\n&lt;g id=\"node153\" class=\"node\"&gt;\n&lt;title&gt;db1bc5368a944831962e902cbd61b35c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16533.12,-528.72 16531.68,-528.72 16531.68,-527.28 16533.12,-527.28 16533.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98fa7962e6004e98952c8881f4a1e1bc&amp;#45;&amp;#45;db1bc5368a944831962e902cbd61b35c --&gt;\n&lt;g id=\"edge152\" class=\"edge\"&gt;\n&lt;title&gt;98fa7962e6004e98952c8881f4a1e1bc&amp;#45;&amp;#45;db1bc5368a944831962e902cbd61b35c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16439.87,-528C16442.6,-528 16528.65,-528 16531.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- f1bc4ab51c5642008fc24d92c92ef5fe --&gt;\n&lt;g id=\"node154\" class=\"node\"&gt;\n&lt;title&gt;f1bc4ab51c5642008fc24d92c92ef5fe&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16626.72,-528.72 16625.28,-528.72 16625.28,-527.28 16626.72,-527.28 16626.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- db1bc5368a944831962e902cbd61b35c&amp;#45;&amp;#45;f1bc4ab51c5642008fc24d92c92ef5fe --&gt;\n&lt;g id=\"edge153\" class=\"edge\"&gt;\n&lt;title&gt;db1bc5368a944831962e902cbd61b35c&amp;#45;&amp;#45;f1bc4ab51c5642008fc24d92c92ef5fe&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16533.47,-528C16536.2,-528 16622.25,-528 16624.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- e6c2860164e446e29f26cf8cff664f18 --&gt;\n&lt;g id=\"node155\" class=\"node\"&gt;\n&lt;title&gt;e6c2860164e446e29f26cf8cff664f18&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16720.32,-528.72 16718.88,-528.72 16718.88,-527.28 16720.32,-527.28 16720.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f1bc4ab51c5642008fc24d92c92ef5fe&amp;#45;&amp;#45;e6c2860164e446e29f26cf8cff664f18 --&gt;\n&lt;g id=\"edge154\" class=\"edge\"&gt;\n&lt;title&gt;f1bc4ab51c5642008fc24d92c92ef5fe&amp;#45;&amp;#45;e6c2860164e446e29f26cf8cff664f18&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16627.07,-528C16629.8,-528 16715.85,-528 16718.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 74fdb60d6b614fd08c4f608411656c39 --&gt;\n&lt;g id=\"node156\" class=\"node\"&gt;\n&lt;title&gt;74fdb60d6b614fd08c4f608411656c39&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16813.92,-528.72 16812.48,-528.72 16812.48,-527.28 16813.92,-527.28 16813.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e6c2860164e446e29f26cf8cff664f18&amp;#45;&amp;#45;74fdb60d6b614fd08c4f608411656c39 --&gt;\n&lt;g id=\"edge155\" class=\"edge\"&gt;\n&lt;title&gt;e6c2860164e446e29f26cf8cff664f18&amp;#45;&amp;#45;74fdb60d6b614fd08c4f608411656c39&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16720.67,-528C16723.4,-528 16809.45,-528 16812.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1213497d6e644a1889c4b1112f9cadc0 --&gt;\n&lt;g id=\"node157\" class=\"node\"&gt;\n&lt;title&gt;1213497d6e644a1889c4b1112f9cadc0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16907.52,-528.72 16906.08,-528.72 16906.08,-527.28 16907.52,-527.28 16907.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 74fdb60d6b614fd08c4f608411656c39&amp;#45;&amp;#45;1213497d6e644a1889c4b1112f9cadc0 --&gt;\n&lt;g id=\"edge156\" class=\"edge\"&gt;\n&lt;title&gt;74fdb60d6b614fd08c4f608411656c39&amp;#45;&amp;#45;1213497d6e644a1889c4b1112f9cadc0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16814.27,-528C16817,-528 16903.05,-528 16905.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3013c22a788b4c98903205e10fa4b5aa --&gt;\n&lt;g id=\"node158\" class=\"node\"&gt;\n&lt;title&gt;3013c22a788b4c98903205e10fa4b5aa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17059.92,-528.72 17058.48,-528.72 17058.48,-527.28 17059.92,-527.28 17059.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1213497d6e644a1889c4b1112f9cadc0&amp;#45;&amp;#45;3013c22a788b4c98903205e10fa4b5aa --&gt;\n&lt;g id=\"edge157\" class=\"edge\"&gt;\n&lt;title&gt;1213497d6e644a1889c4b1112f9cadc0&amp;#45;&amp;#45;3013c22a788b4c98903205e10fa4b5aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16907.91,-528C16912.39,-528 17053.68,-528 17058.09,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- da27cda6893040a9b37339b1e6130b33 --&gt;\n&lt;g id=\"node159\" class=\"node\"&gt;\n&lt;title&gt;da27cda6893040a9b37339b1e6130b33&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17212.32,-528.72 17210.88,-528.72 17210.88,-527.28 17212.32,-527.28 17212.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3013c22a788b4c98903205e10fa4b5aa&amp;#45;&amp;#45;da27cda6893040a9b37339b1e6130b33 --&gt;\n&lt;g id=\"edge158\" class=\"edge\"&gt;\n&lt;title&gt;3013c22a788b4c98903205e10fa4b5aa&amp;#45;&amp;#45;da27cda6893040a9b37339b1e6130b33&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17060.31,-528C17064.79,-528 17206.08,-528 17210.49,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4e0762bdb8194d2dbbd3a24fd32e0a96 --&gt;\n&lt;g id=\"node160\" class=\"node\"&gt;\n&lt;title&gt;4e0762bdb8194d2dbbd3a24fd32e0a96&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17305.92,-528.72 17304.48,-528.72 17304.48,-527.28 17305.92,-527.28 17305.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da27cda6893040a9b37339b1e6130b33&amp;#45;&amp;#45;4e0762bdb8194d2dbbd3a24fd32e0a96 --&gt;\n&lt;g id=\"edge159\" class=\"edge\"&gt;\n&lt;title&gt;da27cda6893040a9b37339b1e6130b33&amp;#45;&amp;#45;4e0762bdb8194d2dbbd3a24fd32e0a96&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17212.67,-528C17215.4,-528 17301.45,-528 17304.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 940ad4644fec48e68b97b133652bee8a --&gt;\n&lt;g id=\"node161\" class=\"node\"&gt;\n&lt;title&gt;940ad4644fec48e68b97b133652bee8a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17399.52,-528.72 17398.08,-528.72 17398.08,-527.28 17399.52,-527.28 17399.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4e0762bdb8194d2dbbd3a24fd32e0a96&amp;#45;&amp;#45;940ad4644fec48e68b97b133652bee8a --&gt;\n&lt;g id=\"edge160\" class=\"edge\"&gt;\n&lt;title&gt;4e0762bdb8194d2dbbd3a24fd32e0a96&amp;#45;&amp;#45;940ad4644fec48e68b97b133652bee8a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17306.27,-528C17309,-528 17395.05,-528 17397.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3bfd05faf3044aa7b633015c862624cb --&gt;\n&lt;g id=\"node162\" class=\"node\"&gt;\n&lt;title&gt;3bfd05faf3044aa7b633015c862624cb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17493.12,-528.72 17491.68,-528.72 17491.68,-527.28 17493.12,-527.28 17493.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 940ad4644fec48e68b97b133652bee8a&amp;#45;&amp;#45;3bfd05faf3044aa7b633015c862624cb --&gt;\n&lt;g id=\"edge161\" class=\"edge\"&gt;\n&lt;title&gt;940ad4644fec48e68b97b133652bee8a&amp;#45;&amp;#45;3bfd05faf3044aa7b633015c862624cb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17399.87,-528C17402.6,-528 17488.65,-528 17491.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a64fd1fcc2742ce922cf388346308e2 --&gt;\n&lt;g id=\"node163\" class=\"node\"&gt;\n&lt;title&gt;0a64fd1fcc2742ce922cf388346308e2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17586.72,-528.72 17585.28,-528.72 17585.28,-527.28 17586.72,-527.28 17586.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3bfd05faf3044aa7b633015c862624cb&amp;#45;&amp;#45;0a64fd1fcc2742ce922cf388346308e2 --&gt;\n&lt;g id=\"edge162\" class=\"edge\"&gt;\n&lt;title&gt;3bfd05faf3044aa7b633015c862624cb&amp;#45;&amp;#45;0a64fd1fcc2742ce922cf388346308e2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17493.47,-528C17496.2,-528 17582.25,-528 17584.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 81f443fc2c6e46beb8833552e6ab0776 --&gt;\n&lt;g id=\"node164\" class=\"node\"&gt;\n&lt;title&gt;81f443fc2c6e46beb8833552e6ab0776&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17680.32,-528.72 17678.88,-528.72 17678.88,-527.28 17680.32,-527.28 17680.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a64fd1fcc2742ce922cf388346308e2&amp;#45;&amp;#45;81f443fc2c6e46beb8833552e6ab0776 --&gt;\n&lt;g id=\"edge163\" class=\"edge\"&gt;\n&lt;title&gt;0a64fd1fcc2742ce922cf388346308e2&amp;#45;&amp;#45;81f443fc2c6e46beb8833552e6ab0776&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17587.07,-528C17589.8,-528 17675.85,-528 17678.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98e26ee9a29f416da88b246ac123c048 --&gt;\n&lt;g id=\"node165\" class=\"node\"&gt;\n&lt;title&gt;98e26ee9a29f416da88b246ac123c048&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17773.92,-528.72 17772.48,-528.72 17772.48,-527.28 17773.92,-527.28 17773.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 81f443fc2c6e46beb8833552e6ab0776&amp;#45;&amp;#45;98e26ee9a29f416da88b246ac123c048 --&gt;\n&lt;g id=\"edge164\" class=\"edge\"&gt;\n&lt;title&gt;81f443fc2c6e46beb8833552e6ab0776&amp;#45;&amp;#45;98e26ee9a29f416da88b246ac123c048&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17680.67,-528C17683.4,-528 17769.45,-528 17772.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5f63b63949e54dd6b42ca6832fe52e1b --&gt;\n&lt;g id=\"node166\" class=\"node\"&gt;\n&lt;title&gt;5f63b63949e54dd6b42ca6832fe52e1b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17867.52,-528.72 17866.08,-528.72 17866.08,-527.28 17867.52,-527.28 17867.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98e26ee9a29f416da88b246ac123c048&amp;#45;&amp;#45;5f63b63949e54dd6b42ca6832fe52e1b --&gt;\n&lt;g id=\"edge165\" class=\"edge\"&gt;\n&lt;title&gt;98e26ee9a29f416da88b246ac123c048&amp;#45;&amp;#45;5f63b63949e54dd6b42ca6832fe52e1b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17774.27,-528C17777,-528 17863.05,-528 17865.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 51e0d361902f410bbc14a3261c673c7d --&gt;\n&lt;g id=\"node167\" class=\"node\"&gt;\n&lt;title&gt;51e0d361902f410bbc14a3261c673c7d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17961.12,-528.72 17959.68,-528.72 17959.68,-527.28 17961.12,-527.28 17961.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5f63b63949e54dd6b42ca6832fe52e1b&amp;#45;&amp;#45;51e0d361902f410bbc14a3261c673c7d --&gt;\n&lt;g id=\"edge166\" class=\"edge\"&gt;\n&lt;title&gt;5f63b63949e54dd6b42ca6832fe52e1b&amp;#45;&amp;#45;51e0d361902f410bbc14a3261c673c7d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17867.87,-528C17870.6,-528 17956.65,-528 17959.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- cbe70786c86a40bfa626b6529305ef04 --&gt;\n&lt;g id=\"node168\" class=\"node\"&gt;\n&lt;title&gt;cbe70786c86a40bfa626b6529305ef04&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18113.52,-528.72 18112.08,-528.72 18112.08,-527.28 18113.52,-527.28 18113.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 51e0d361902f410bbc14a3261c673c7d&amp;#45;&amp;#45;cbe70786c86a40bfa626b6529305ef04 --&gt;\n&lt;g id=\"edge167\" class=\"edge\"&gt;\n&lt;title&gt;51e0d361902f410bbc14a3261c673c7d&amp;#45;&amp;#45;cbe70786c86a40bfa626b6529305ef04&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17961.51,-528C17965.99,-528 18107.28,-528 18111.69,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2776d6db035c4a64b1c582b45f3ae3a3 --&gt;\n&lt;g id=\"node169\" class=\"node\"&gt;\n&lt;title&gt;2776d6db035c4a64b1c582b45f3ae3a3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18265.92,-528.72 18264.48,-528.72 18264.48,-527.28 18265.92,-527.28 18265.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cbe70786c86a40bfa626b6529305ef04&amp;#45;&amp;#45;2776d6db035c4a64b1c582b45f3ae3a3 --&gt;\n&lt;g id=\"edge168\" class=\"edge\"&gt;\n&lt;title&gt;cbe70786c86a40bfa626b6529305ef04&amp;#45;&amp;#45;2776d6db035c4a64b1c582b45f3ae3a3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18113.91,-528C18118.39,-528 18259.68,-528 18264.09,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 54e142ec3eec47ca8b29fb2ed3c2bbbb --&gt;\n&lt;g id=\"node170\" class=\"node\"&gt;\n&lt;title&gt;54e142ec3eec47ca8b29fb2ed3c2bbbb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18359.52,-528.72 18358.08,-528.72 18358.08,-527.28 18359.52,-527.28 18359.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2776d6db035c4a64b1c582b45f3ae3a3&amp;#45;&amp;#45;54e142ec3eec47ca8b29fb2ed3c2bbbb --&gt;\n&lt;g id=\"edge169\" class=\"edge\"&gt;\n&lt;title&gt;2776d6db035c4a64b1c582b45f3ae3a3&amp;#45;&amp;#45;54e142ec3eec47ca8b29fb2ed3c2bbbb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18266.27,-528C18269,-528 18355.05,-528 18357.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- d3cdc8040697474e8f3ab4f242d69a38 --&gt;\n&lt;g id=\"node171\" class=\"node\"&gt;\n&lt;title&gt;d3cdc8040697474e8f3ab4f242d69a38&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18453.12,-528.72 18451.68,-528.72 18451.68,-527.28 18453.12,-527.28 18453.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 54e142ec3eec47ca8b29fb2ed3c2bbbb&amp;#45;&amp;#45;d3cdc8040697474e8f3ab4f242d69a38 --&gt;\n&lt;g id=\"edge170\" class=\"edge\"&gt;\n&lt;title&gt;54e142ec3eec47ca8b29fb2ed3c2bbbb&amp;#45;&amp;#45;d3cdc8040697474e8f3ab4f242d69a38&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18359.87,-528C18362.6,-528 18448.65,-528 18451.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 355ee24eb49a41bfb12cde8accc10222 --&gt;\n&lt;g id=\"node172\" class=\"node\"&gt;\n&lt;title&gt;355ee24eb49a41bfb12cde8accc10222&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18546.72,-528.72 18545.28,-528.72 18545.28,-527.28 18546.72,-527.28 18546.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d3cdc8040697474e8f3ab4f242d69a38&amp;#45;&amp;#45;355ee24eb49a41bfb12cde8accc10222 --&gt;\n&lt;g id=\"edge171\" class=\"edge\"&gt;\n&lt;title&gt;d3cdc8040697474e8f3ab4f242d69a38&amp;#45;&amp;#45;355ee24eb49a41bfb12cde8accc10222&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18453.47,-528C18456.2,-528 18542.25,-528 18544.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2b6894e1086b42b39df827b6af229879 --&gt;\n&lt;g id=\"node173\" class=\"node\"&gt;\n&lt;title&gt;2b6894e1086b42b39df827b6af229879&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18640.32,-528.72 18638.88,-528.72 18638.88,-527.28 18640.32,-527.28 18640.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 355ee24eb49a41bfb12cde8accc10222&amp;#45;&amp;#45;2b6894e1086b42b39df827b6af229879 --&gt;\n&lt;g id=\"edge172\" class=\"edge\"&gt;\n&lt;title&gt;355ee24eb49a41bfb12cde8accc10222&amp;#45;&amp;#45;2b6894e1086b42b39df827b6af229879&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18547.07,-528C18549.8,-528 18635.85,-528 18638.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5318f74d08d6492a8964d4ae6aa952dc --&gt;\n&lt;g id=\"node174\" class=\"node\"&gt;\n&lt;title&gt;5318f74d08d6492a8964d4ae6aa952dc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18733.92,-528.72 18732.48,-528.72 18732.48,-527.28 18733.92,-527.28 18733.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2b6894e1086b42b39df827b6af229879&amp;#45;&amp;#45;5318f74d08d6492a8964d4ae6aa952dc --&gt;\n&lt;g id=\"edge173\" class=\"edge\"&gt;\n&lt;title&gt;2b6894e1086b42b39df827b6af229879&amp;#45;&amp;#45;5318f74d08d6492a8964d4ae6aa952dc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18640.67,-528C18643.4,-528 18729.45,-528 18732.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7e0a53b2fa7c4a13b4656581a44258ed --&gt;\n&lt;g id=\"node175\" class=\"node\"&gt;\n&lt;title&gt;7e0a53b2fa7c4a13b4656581a44258ed&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18827.52,-528.72 18826.08,-528.72 18826.08,-527.28 18827.52,-527.28 18827.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5318f74d08d6492a8964d4ae6aa952dc&amp;#45;&amp;#45;7e0a53b2fa7c4a13b4656581a44258ed --&gt;\n&lt;g id=\"edge174\" class=\"edge\"&gt;\n&lt;title&gt;5318f74d08d6492a8964d4ae6aa952dc&amp;#45;&amp;#45;7e0a53b2fa7c4a13b4656581a44258ed&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18734.27,-528C18737,-528 18823.05,-528 18825.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9ffc421d6fe940edb13838218560f63c --&gt;\n&lt;g id=\"node176\" class=\"node\"&gt;\n&lt;title&gt;9ffc421d6fe940edb13838218560f63c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18921.12,-528.72 18919.68,-528.72 18919.68,-527.28 18921.12,-527.28 18921.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7e0a53b2fa7c4a13b4656581a44258ed&amp;#45;&amp;#45;9ffc421d6fe940edb13838218560f63c --&gt;\n&lt;g id=\"edge175\" class=\"edge\"&gt;\n&lt;title&gt;7e0a53b2fa7c4a13b4656581a44258ed&amp;#45;&amp;#45;9ffc421d6fe940edb13838218560f63c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18827.87,-528C18830.6,-528 18916.65,-528 18919.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 82c29860a5074a87ab6db0df7663360f --&gt;\n&lt;g id=\"node177\" class=\"node\"&gt;\n&lt;title&gt;82c29860a5074a87ab6db0df7663360f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19014.72,-528.72 19013.28,-528.72 19013.28,-527.28 19014.72,-527.28 19014.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9ffc421d6fe940edb13838218560f63c&amp;#45;&amp;#45;82c29860a5074a87ab6db0df7663360f --&gt;\n&lt;g id=\"edge176\" class=\"edge\"&gt;\n&lt;title&gt;9ffc421d6fe940edb13838218560f63c&amp;#45;&amp;#45;82c29860a5074a87ab6db0df7663360f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18921.47,-528C18924.2,-528 19010.25,-528 19012.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0b054c046ef4447d801c970183568546 --&gt;\n&lt;g id=\"node178\" class=\"node\"&gt;\n&lt;title&gt;0b054c046ef4447d801c970183568546&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19108.32,-528.72 19106.88,-528.72 19106.88,-527.28 19108.32,-527.28 19108.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 82c29860a5074a87ab6db0df7663360f&amp;#45;&amp;#45;0b054c046ef4447d801c970183568546 --&gt;\n&lt;g id=\"edge177\" class=\"edge\"&gt;\n&lt;title&gt;82c29860a5074a87ab6db0df7663360f&amp;#45;&amp;#45;0b054c046ef4447d801c970183568546&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19015.07,-528C19017.8,-528 19103.85,-528 19106.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- a89c7ebdfcb34cfc84e4ba4320822a8e --&gt;\n&lt;g id=\"node179\" class=\"node\"&gt;\n&lt;title&gt;a89c7ebdfcb34cfc84e4ba4320822a8e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19201.92,-528.72 19200.48,-528.72 19200.48,-527.28 19201.92,-527.28 19201.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0b054c046ef4447d801c970183568546&amp;#45;&amp;#45;a89c7ebdfcb34cfc84e4ba4320822a8e --&gt;\n&lt;g id=\"edge178\" class=\"edge\"&gt;\n&lt;title&gt;0b054c046ef4447d801c970183568546&amp;#45;&amp;#45;a89c7ebdfcb34cfc84e4ba4320822a8e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19108.67,-528C19111.4,-528 19197.45,-528 19200.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 55b3c71cc3e5448690ccf6e785de6702 --&gt;\n&lt;g id=\"node180\" class=\"node\"&gt;\n&lt;title&gt;55b3c71cc3e5448690ccf6e785de6702&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19354.32,-528.72 19352.88,-528.72 19352.88,-527.28 19354.32,-527.28 19354.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a89c7ebdfcb34cfc84e4ba4320822a8e&amp;#45;&amp;#45;55b3c71cc3e5448690ccf6e785de6702 --&gt;\n&lt;g id=\"edge179\" class=\"edge\"&gt;\n&lt;title&gt;a89c7ebdfcb34cfc84e4ba4320822a8e&amp;#45;&amp;#45;55b3c71cc3e5448690ccf6e785de6702&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19202.31,-528C19206.79,-528 19348.08,-528 19352.49,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 984ce59ad86a43918d4ecaebebefaa7f --&gt;\n&lt;g id=\"node181\" class=\"node\"&gt;\n&lt;title&gt;984ce59ad86a43918d4ecaebebefaa7f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19506.72,-528.72 19505.28,-528.72 19505.28,-527.28 19506.72,-527.28 19506.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 55b3c71cc3e5448690ccf6e785de6702&amp;#45;&amp;#45;984ce59ad86a43918d4ecaebebefaa7f --&gt;\n&lt;g id=\"edge180\" class=\"edge\"&gt;\n&lt;title&gt;55b3c71cc3e5448690ccf6e785de6702&amp;#45;&amp;#45;984ce59ad86a43918d4ecaebebefaa7f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19354.71,-528C19359.19,-528 19500.48,-528 19504.89,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3cc4f5f1c69c4aa1a409dd0078db2ea7 --&gt;\n&lt;g id=\"node182\" class=\"node\"&gt;\n&lt;title&gt;3cc4f5f1c69c4aa1a409dd0078db2ea7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19600.32,-528.72 19598.88,-528.72 19598.88,-527.28 19600.32,-527.28 19600.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 984ce59ad86a43918d4ecaebebefaa7f&amp;#45;&amp;#45;3cc4f5f1c69c4aa1a409dd0078db2ea7 --&gt;\n&lt;g id=\"edge181\" class=\"edge\"&gt;\n&lt;title&gt;984ce59ad86a43918d4ecaebebefaa7f&amp;#45;&amp;#45;3cc4f5f1c69c4aa1a409dd0078db2ea7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19507.07,-528C19509.8,-528 19595.85,-528 19598.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- e5286c5c3b404350a2fdeb339953b139 --&gt;\n&lt;g id=\"node183\" class=\"node\"&gt;\n&lt;title&gt;e5286c5c3b404350a2fdeb339953b139&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19693.92,-528.72 19692.48,-528.72 19692.48,-527.28 19693.92,-527.28 19693.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3cc4f5f1c69c4aa1a409dd0078db2ea7&amp;#45;&amp;#45;e5286c5c3b404350a2fdeb339953b139 --&gt;\n&lt;g id=\"edge182\" class=\"edge\"&gt;\n&lt;title&gt;3cc4f5f1c69c4aa1a409dd0078db2ea7&amp;#45;&amp;#45;e5286c5c3b404350a2fdeb339953b139&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19600.67,-528C19603.4,-528 19689.45,-528 19692.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- a7272629a820457abedc3e1603e377a2 --&gt;\n&lt;g id=\"node184\" class=\"node\"&gt;\n&lt;title&gt;a7272629a820457abedc3e1603e377a2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19787.52,-528.72 19786.08,-528.72 19786.08,-527.28 19787.52,-527.28 19787.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e5286c5c3b404350a2fdeb339953b139&amp;#45;&amp;#45;a7272629a820457abedc3e1603e377a2 --&gt;\n&lt;g id=\"edge183\" class=\"edge\"&gt;\n&lt;title&gt;e5286c5c3b404350a2fdeb339953b139&amp;#45;&amp;#45;a7272629a820457abedc3e1603e377a2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19694.27,-528C19697,-528 19783.05,-528 19785.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- d67360203241491ba356c4df335170a2 --&gt;\n&lt;g id=\"node185\" class=\"node\"&gt;\n&lt;title&gt;d67360203241491ba356c4df335170a2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19881.12,-528.72 19879.68,-528.72 19879.68,-527.28 19881.12,-527.28 19881.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a7272629a820457abedc3e1603e377a2&amp;#45;&amp;#45;d67360203241491ba356c4df335170a2 --&gt;\n&lt;g id=\"edge184\" class=\"edge\"&gt;\n&lt;title&gt;a7272629a820457abedc3e1603e377a2&amp;#45;&amp;#45;d67360203241491ba356c4df335170a2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19787.87,-528C19790.6,-528 19876.65,-528 19879.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- d8c998449888473683fcf8e9158e3256 --&gt;\n&lt;g id=\"node186\" class=\"node\"&gt;\n&lt;title&gt;d8c998449888473683fcf8e9158e3256&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19974.72,-528.72 19973.28,-528.72 19973.28,-527.28 19974.72,-527.28 19974.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d67360203241491ba356c4df335170a2&amp;#45;&amp;#45;d8c998449888473683fcf8e9158e3256 --&gt;\n&lt;g id=\"edge185\" class=\"edge\"&gt;\n&lt;title&gt;d67360203241491ba356c4df335170a2&amp;#45;&amp;#45;d8c998449888473683fcf8e9158e3256&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19881.47,-528C19884.2,-528 19970.25,-528 19972.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- cc834b414e944144883c512c50f9ade3 --&gt;\n&lt;g id=\"node187\" class=\"node\"&gt;\n&lt;title&gt;cc834b414e944144883c512c50f9ade3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20068.32,-528.72 20066.88,-528.72 20066.88,-527.28 20068.32,-527.28 20068.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d8c998449888473683fcf8e9158e3256&amp;#45;&amp;#45;cc834b414e944144883c512c50f9ade3 --&gt;\n&lt;g id=\"edge186\" class=\"edge\"&gt;\n&lt;title&gt;d8c998449888473683fcf8e9158e3256&amp;#45;&amp;#45;cc834b414e944144883c512c50f9ade3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19975.07,-528C19977.8,-528 20063.85,-528 20066.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1ac8adc424814214b2eedfffd8e7319d --&gt;\n&lt;g id=\"node188\" class=\"node\"&gt;\n&lt;title&gt;1ac8adc424814214b2eedfffd8e7319d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20161.92,-528.72 20160.48,-528.72 20160.48,-527.28 20161.92,-527.28 20161.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cc834b414e944144883c512c50f9ade3&amp;#45;&amp;#45;1ac8adc424814214b2eedfffd8e7319d --&gt;\n&lt;g id=\"edge187\" class=\"edge\"&gt;\n&lt;title&gt;cc834b414e944144883c512c50f9ade3&amp;#45;&amp;#45;1ac8adc424814214b2eedfffd8e7319d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20068.67,-528C20071.4,-528 20157.45,-528 20160.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 681ebba735244f31a06d19ec5d6fef4c --&gt;\n&lt;g id=\"node189\" class=\"node\"&gt;\n&lt;title&gt;681ebba735244f31a06d19ec5d6fef4c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20255.52,-528.72 20254.08,-528.72 20254.08,-527.28 20255.52,-527.28 20255.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1ac8adc424814214b2eedfffd8e7319d&amp;#45;&amp;#45;681ebba735244f31a06d19ec5d6fef4c --&gt;\n&lt;g id=\"edge188\" class=\"edge\"&gt;\n&lt;title&gt;1ac8adc424814214b2eedfffd8e7319d&amp;#45;&amp;#45;681ebba735244f31a06d19ec5d6fef4c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20162.27,-528C20165,-528 20251.05,-528 20253.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3abd02cac80b4c3f914617486293e58b --&gt;\n&lt;g id=\"node190\" class=\"node\"&gt;\n&lt;title&gt;3abd02cac80b4c3f914617486293e58b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20349.12,-528.72 20347.68,-528.72 20347.68,-527.28 20349.12,-527.28 20349.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 681ebba735244f31a06d19ec5d6fef4c&amp;#45;&amp;#45;3abd02cac80b4c3f914617486293e58b --&gt;\n&lt;g id=\"edge189\" class=\"edge\"&gt;\n&lt;title&gt;681ebba735244f31a06d19ec5d6fef4c&amp;#45;&amp;#45;3abd02cac80b4c3f914617486293e58b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20255.87,-528C20258.6,-528 20344.65,-528 20347.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9431c52e66cd41cdad5e694b7799ed2d --&gt;\n&lt;g id=\"node191\" class=\"node\"&gt;\n&lt;title&gt;9431c52e66cd41cdad5e694b7799ed2d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20442.72,-528.72 20441.28,-528.72 20441.28,-527.28 20442.72,-527.28 20442.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3abd02cac80b4c3f914617486293e58b&amp;#45;&amp;#45;9431c52e66cd41cdad5e694b7799ed2d --&gt;\n&lt;g id=\"edge190\" class=\"edge\"&gt;\n&lt;title&gt;3abd02cac80b4c3f914617486293e58b&amp;#45;&amp;#45;9431c52e66cd41cdad5e694b7799ed2d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20349.47,-528C20352.2,-528 20438.25,-528 20440.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- dc493f9ec99a452a98460f4f4aac72a4 --&gt;\n&lt;g id=\"node192\" class=\"node\"&gt;\n&lt;title&gt;dc493f9ec99a452a98460f4f4aac72a4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20595.12,-528.72 20593.68,-528.72 20593.68,-527.28 20595.12,-527.28 20595.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9431c52e66cd41cdad5e694b7799ed2d&amp;#45;&amp;#45;dc493f9ec99a452a98460f4f4aac72a4 --&gt;\n&lt;g id=\"edge191\" class=\"edge\"&gt;\n&lt;title&gt;9431c52e66cd41cdad5e694b7799ed2d&amp;#45;&amp;#45;dc493f9ec99a452a98460f4f4aac72a4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20443.11,-528C20447.59,-528 20588.88,-528 20593.29,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4df6bbfa11c94651b0a6013e85081b69 --&gt;\n&lt;g id=\"node193\" class=\"node\"&gt;\n&lt;title&gt;4df6bbfa11c94651b0a6013e85081b69&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20747.52,-528.72 20746.08,-528.72 20746.08,-527.28 20747.52,-527.28 20747.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dc493f9ec99a452a98460f4f4aac72a4&amp;#45;&amp;#45;4df6bbfa11c94651b0a6013e85081b69 --&gt;\n&lt;g id=\"edge192\" class=\"edge\"&gt;\n&lt;title&gt;dc493f9ec99a452a98460f4f4aac72a4&amp;#45;&amp;#45;4df6bbfa11c94651b0a6013e85081b69&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20595.51,-528C20599.99,-528 20741.28,-528 20745.69,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- c0c68113dc084f149755e0bed91661fe --&gt;\n&lt;g id=\"node194\" class=\"node\"&gt;\n&lt;title&gt;c0c68113dc084f149755e0bed91661fe&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20841.12,-528.72 20839.68,-528.72 20839.68,-527.28 20841.12,-527.28 20841.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4df6bbfa11c94651b0a6013e85081b69&amp;#45;&amp;#45;c0c68113dc084f149755e0bed91661fe --&gt;\n&lt;g id=\"edge193\" class=\"edge\"&gt;\n&lt;title&gt;4df6bbfa11c94651b0a6013e85081b69&amp;#45;&amp;#45;c0c68113dc084f149755e0bed91661fe&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20747.87,-528C20750.6,-528 20836.65,-528 20839.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5ef7e8c292994095a5e82d690bfa5bb9 --&gt;\n&lt;g id=\"node195\" class=\"node\"&gt;\n&lt;title&gt;5ef7e8c292994095a5e82d690bfa5bb9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20934.72,-528.72 20933.28,-528.72 20933.28,-527.28 20934.72,-527.28 20934.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c0c68113dc084f149755e0bed91661fe&amp;#45;&amp;#45;5ef7e8c292994095a5e82d690bfa5bb9 --&gt;\n&lt;g id=\"edge194\" class=\"edge\"&gt;\n&lt;title&gt;c0c68113dc084f149755e0bed91661fe&amp;#45;&amp;#45;5ef7e8c292994095a5e82d690bfa5bb9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20841.47,-528C20844.2,-528 20930.25,-528 20932.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- b7e8b6db921c48c2a626fd7ce36934ed --&gt;\n&lt;g id=\"node196\" class=\"node\"&gt;\n&lt;title&gt;b7e8b6db921c48c2a626fd7ce36934ed&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21028.32,-528.72 21026.88,-528.72 21026.88,-527.28 21028.32,-527.28 21028.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5ef7e8c292994095a5e82d690bfa5bb9&amp;#45;&amp;#45;b7e8b6db921c48c2a626fd7ce36934ed --&gt;\n&lt;g id=\"edge195\" class=\"edge\"&gt;\n&lt;title&gt;5ef7e8c292994095a5e82d690bfa5bb9&amp;#45;&amp;#45;b7e8b6db921c48c2a626fd7ce36934ed&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20935.07,-528C20937.8,-528 21023.85,-528 21026.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8a4a2c3e37e6424fb8f4f023a141887c --&gt;\n&lt;g id=\"node197\" class=\"node\"&gt;\n&lt;title&gt;8a4a2c3e37e6424fb8f4f023a141887c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21121.92,-528.72 21120.48,-528.72 21120.48,-527.28 21121.92,-527.28 21121.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b7e8b6db921c48c2a626fd7ce36934ed&amp;#45;&amp;#45;8a4a2c3e37e6424fb8f4f023a141887c --&gt;\n&lt;g id=\"edge196\" class=\"edge\"&gt;\n&lt;title&gt;b7e8b6db921c48c2a626fd7ce36934ed&amp;#45;&amp;#45;8a4a2c3e37e6424fb8f4f023a141887c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21028.67,-528C21031.4,-528 21117.45,-528 21120.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8542b29a94e54fd1b1007440dec5e9f7 --&gt;\n&lt;g id=\"node198\" class=\"node\"&gt;\n&lt;title&gt;8542b29a94e54fd1b1007440dec5e9f7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21215.52,-528.72 21214.08,-528.72 21214.08,-527.28 21215.52,-527.28 21215.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8a4a2c3e37e6424fb8f4f023a141887c&amp;#45;&amp;#45;8542b29a94e54fd1b1007440dec5e9f7 --&gt;\n&lt;g id=\"edge197\" class=\"edge\"&gt;\n&lt;title&gt;8a4a2c3e37e6424fb8f4f023a141887c&amp;#45;&amp;#45;8542b29a94e54fd1b1007440dec5e9f7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21122.27,-528C21125,-528 21211.05,-528 21213.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- da3c38f02b144b25ba730da94fe1f2ce --&gt;\n&lt;g id=\"node199\" class=\"node\"&gt;\n&lt;title&gt;da3c38f02b144b25ba730da94fe1f2ce&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21309.12,-528.72 21307.68,-528.72 21307.68,-527.28 21309.12,-527.28 21309.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8542b29a94e54fd1b1007440dec5e9f7&amp;#45;&amp;#45;da3c38f02b144b25ba730da94fe1f2ce --&gt;\n&lt;g id=\"edge198\" class=\"edge\"&gt;\n&lt;title&gt;8542b29a94e54fd1b1007440dec5e9f7&amp;#45;&amp;#45;da3c38f02b144b25ba730da94fe1f2ce&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21215.87,-528C21218.6,-528 21304.65,-528 21307.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- e38248b2366a40828b1360249747c90e --&gt;\n&lt;g id=\"node200\" class=\"node\"&gt;\n&lt;title&gt;e38248b2366a40828b1360249747c90e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21461.52,-528.72 21460.08,-528.72 21460.08,-527.28 21461.52,-527.28 21461.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da3c38f02b144b25ba730da94fe1f2ce&amp;#45;&amp;#45;e38248b2366a40828b1360249747c90e --&gt;\n&lt;g id=\"edge199\" class=\"edge\"&gt;\n&lt;title&gt;da3c38f02b144b25ba730da94fe1f2ce&amp;#45;&amp;#45;e38248b2366a40828b1360249747c90e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21309.51,-528C21313.99,-528 21455.28,-528 21459.69,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 226b757581c347fd8e58e61688820660 --&gt;\n&lt;g id=\"node201\" class=\"node\"&gt;\n&lt;title&gt;226b757581c347fd8e58e61688820660&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21613.92,-528.72 21612.48,-528.72 21612.48,-527.28 21613.92,-527.28 21613.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e38248b2366a40828b1360249747c90e&amp;#45;&amp;#45;226b757581c347fd8e58e61688820660 --&gt;\n&lt;g id=\"edge200\" class=\"edge\"&gt;\n&lt;title&gt;e38248b2366a40828b1360249747c90e&amp;#45;&amp;#45;226b757581c347fd8e58e61688820660&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21461.91,-528C21466.39,-528 21607.68,-528 21612.09,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 504edc27f1d74c669e51767aebdc968f --&gt;\n&lt;g id=\"node202\" class=\"node\"&gt;\n&lt;title&gt;504edc27f1d74c669e51767aebdc968f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21707.52,-528.72 21706.08,-528.72 21706.08,-527.28 21707.52,-527.28 21707.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 226b757581c347fd8e58e61688820660&amp;#45;&amp;#45;504edc27f1d74c669e51767aebdc968f --&gt;\n&lt;g id=\"edge201\" class=\"edge\"&gt;\n&lt;title&gt;226b757581c347fd8e58e61688820660&amp;#45;&amp;#45;504edc27f1d74c669e51767aebdc968f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21614.27,-528C21617,-528 21703.05,-528 21705.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 194da8f7193b45b59d456d61d6c98c43 --&gt;\n&lt;g id=\"node203\" class=\"node\"&gt;\n&lt;title&gt;194da8f7193b45b59d456d61d6c98c43&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21801.12,-528.72 21799.68,-528.72 21799.68,-527.28 21801.12,-527.28 21801.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 504edc27f1d74c669e51767aebdc968f&amp;#45;&amp;#45;194da8f7193b45b59d456d61d6c98c43 --&gt;\n&lt;g id=\"edge202\" class=\"edge\"&gt;\n&lt;title&gt;504edc27f1d74c669e51767aebdc968f&amp;#45;&amp;#45;194da8f7193b45b59d456d61d6c98c43&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21707.87,-528C21710.6,-528 21796.65,-528 21799.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- aa1f84cd92d04ee480695b10ff8a3928 --&gt;\n&lt;g id=\"node204\" class=\"node\"&gt;\n&lt;title&gt;aa1f84cd92d04ee480695b10ff8a3928&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21894.72,-528.72 21893.28,-528.72 21893.28,-527.28 21894.72,-527.28 21894.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 194da8f7193b45b59d456d61d6c98c43&amp;#45;&amp;#45;aa1f84cd92d04ee480695b10ff8a3928 --&gt;\n&lt;g id=\"edge203\" class=\"edge\"&gt;\n&lt;title&gt;194da8f7193b45b59d456d61d6c98c43&amp;#45;&amp;#45;aa1f84cd92d04ee480695b10ff8a3928&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21801.47,-528C21804.2,-528 21890.25,-528 21892.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 70ee06e945c84993bedc1ce21258f57b --&gt;\n&lt;g id=\"node205\" class=\"node\"&gt;\n&lt;title&gt;70ee06e945c84993bedc1ce21258f57b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21988.32,-528.72 21986.88,-528.72 21986.88,-527.28 21988.32,-527.28 21988.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- aa1f84cd92d04ee480695b10ff8a3928&amp;#45;&amp;#45;70ee06e945c84993bedc1ce21258f57b --&gt;\n&lt;g id=\"edge204\" class=\"edge\"&gt;\n&lt;title&gt;aa1f84cd92d04ee480695b10ff8a3928&amp;#45;&amp;#45;70ee06e945c84993bedc1ce21258f57b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21895.07,-528C21897.8,-528 21983.85,-528 21986.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52fdcc35f9944a05b43a91e0b791566d --&gt;\n&lt;g id=\"node206\" class=\"node\"&gt;\n&lt;title&gt;52fdcc35f9944a05b43a91e0b791566d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22140.72,-528.72 22139.28,-528.72 22139.28,-527.28 22140.72,-527.28 22140.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 70ee06e945c84993bedc1ce21258f57b&amp;#45;&amp;#45;52fdcc35f9944a05b43a91e0b791566d --&gt;\n&lt;g id=\"edge205\" class=\"edge\"&gt;\n&lt;title&gt;70ee06e945c84993bedc1ce21258f57b&amp;#45;&amp;#45;52fdcc35f9944a05b43a91e0b791566d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21988.71,-528C21993.19,-528 22134.48,-528 22138.89,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- cdde05e9e5164446b711617f03ada48c --&gt;\n&lt;g id=\"node207\" class=\"node\"&gt;\n&lt;title&gt;cdde05e9e5164446b711617f03ada48c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22293.12,-528.72 22291.68,-528.72 22291.68,-527.28 22293.12,-527.28 22293.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52fdcc35f9944a05b43a91e0b791566d&amp;#45;&amp;#45;cdde05e9e5164446b711617f03ada48c --&gt;\n&lt;g id=\"edge206\" class=\"edge\"&gt;\n&lt;title&gt;52fdcc35f9944a05b43a91e0b791566d&amp;#45;&amp;#45;cdde05e9e5164446b711617f03ada48c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22141.11,-528C22145.59,-528 22286.88,-528 22291.29,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0664ce654495459f8180e115259c5011 --&gt;\n&lt;g id=\"node208\" class=\"node\"&gt;\n&lt;title&gt;0664ce654495459f8180e115259c5011&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22386.72,-528.72 22385.28,-528.72 22385.28,-527.28 22386.72,-527.28 22386.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cdde05e9e5164446b711617f03ada48c&amp;#45;&amp;#45;0664ce654495459f8180e115259c5011 --&gt;\n&lt;g id=\"edge207\" class=\"edge\"&gt;\n&lt;title&gt;cdde05e9e5164446b711617f03ada48c&amp;#45;&amp;#45;0664ce654495459f8180e115259c5011&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22293.47,-528C22296.2,-528 22382.25,-528 22384.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- f3a4459d61ec4b4ea8435760decf0ab5 --&gt;\n&lt;g id=\"node209\" class=\"node\"&gt;\n&lt;title&gt;f3a4459d61ec4b4ea8435760decf0ab5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22480.32,-528.72 22478.88,-528.72 22478.88,-527.28 22480.32,-527.28 22480.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0664ce654495459f8180e115259c5011&amp;#45;&amp;#45;f3a4459d61ec4b4ea8435760decf0ab5 --&gt;\n&lt;g id=\"edge208\" class=\"edge\"&gt;\n&lt;title&gt;0664ce654495459f8180e115259c5011&amp;#45;&amp;#45;f3a4459d61ec4b4ea8435760decf0ab5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22387.07,-528C22389.8,-528 22475.85,-528 22478.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 30fe3d78e4cd4a14ba21d8ee8773b641 --&gt;\n&lt;g id=\"node210\" class=\"node\"&gt;\n&lt;title&gt;30fe3d78e4cd4a14ba21d8ee8773b641&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22573.92,-528.72 22572.48,-528.72 22572.48,-527.28 22573.92,-527.28 22573.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f3a4459d61ec4b4ea8435760decf0ab5&amp;#45;&amp;#45;30fe3d78e4cd4a14ba21d8ee8773b641 --&gt;\n&lt;g id=\"edge209\" class=\"edge\"&gt;\n&lt;title&gt;f3a4459d61ec4b4ea8435760decf0ab5&amp;#45;&amp;#45;30fe3d78e4cd4a14ba21d8ee8773b641&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22480.67,-528C22483.4,-528 22569.45,-528 22572.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0bdd175d10114224831dc563634abfcc --&gt;\n&lt;g id=\"node211\" class=\"node\"&gt;\n&lt;title&gt;0bdd175d10114224831dc563634abfcc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22667.52,-528.72 22666.08,-528.72 22666.08,-527.28 22667.52,-527.28 22667.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 30fe3d78e4cd4a14ba21d8ee8773b641&amp;#45;&amp;#45;0bdd175d10114224831dc563634abfcc --&gt;\n&lt;g id=\"edge210\" class=\"edge\"&gt;\n&lt;title&gt;30fe3d78e4cd4a14ba21d8ee8773b641&amp;#45;&amp;#45;0bdd175d10114224831dc563634abfcc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22574.27,-528C22577,-528 22663.05,-528 22665.74,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 05c106d352454470aa05f06059cafcf6 --&gt;\n&lt;g id=\"node212\" class=\"node\"&gt;\n&lt;title&gt;05c106d352454470aa05f06059cafcf6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22761.12,-528.72 22759.68,-528.72 22759.68,-527.28 22761.12,-527.28 22761.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0bdd175d10114224831dc563634abfcc&amp;#45;&amp;#45;05c106d352454470aa05f06059cafcf6 --&gt;\n&lt;g id=\"edge211\" class=\"edge\"&gt;\n&lt;title&gt;0bdd175d10114224831dc563634abfcc&amp;#45;&amp;#45;05c106d352454470aa05f06059cafcf6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22667.87,-528C22670.6,-528 22756.65,-528 22759.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- a23886bb5e7a4772b27cd3a1f50d1eee --&gt;\n&lt;g id=\"node213\" class=\"node\"&gt;\n&lt;title&gt;a23886bb5e7a4772b27cd3a1f50d1eee&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22854.72,-528.72 22853.28,-528.72 22853.28,-527.28 22854.72,-527.28 22854.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 05c106d352454470aa05f06059cafcf6&amp;#45;&amp;#45;a23886bb5e7a4772b27cd3a1f50d1eee --&gt;\n&lt;g id=\"edge212\" class=\"edge\"&gt;\n&lt;title&gt;05c106d352454470aa05f06059cafcf6&amp;#45;&amp;#45;a23886bb5e7a4772b27cd3a1f50d1eee&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22761.47,-528C22764.2,-528 22850.25,-528 22852.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9f0eda2cd8dd4fcea02d31350e19fac4 --&gt;\n&lt;g id=\"node214\" class=\"node\"&gt;\n&lt;title&gt;9f0eda2cd8dd4fcea02d31350e19fac4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23007.12,-528.72 23005.68,-528.72 23005.68,-527.28 23007.12,-527.28 23007.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a23886bb5e7a4772b27cd3a1f50d1eee&amp;#45;&amp;#45;9f0eda2cd8dd4fcea02d31350e19fac4 --&gt;\n&lt;g id=\"edge213\" class=\"edge\"&gt;\n&lt;title&gt;a23886bb5e7a4772b27cd3a1f50d1eee&amp;#45;&amp;#45;9f0eda2cd8dd4fcea02d31350e19fac4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22855.11,-528C22859.59,-528 23000.88,-528 23005.29,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1abaa5d93d2147be8c85eaf63ddfbbd4 --&gt;\n&lt;g id=\"node215\" class=\"node\"&gt;\n&lt;title&gt;1abaa5d93d2147be8c85eaf63ddfbbd4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23159.52,-528.72 23158.08,-528.72 23158.08,-527.28 23159.52,-527.28 23159.52,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9f0eda2cd8dd4fcea02d31350e19fac4&amp;#45;&amp;#45;1abaa5d93d2147be8c85eaf63ddfbbd4 --&gt;\n&lt;g id=\"edge214\" class=\"edge\"&gt;\n&lt;title&gt;9f0eda2cd8dd4fcea02d31350e19fac4&amp;#45;&amp;#45;1abaa5d93d2147be8c85eaf63ddfbbd4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23007.51,-528C23011.99,-528 23153.28,-528 23157.69,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e8a91cd51724d7d9c70525b0bbb2ccc --&gt;\n&lt;g id=\"node216\" class=\"node\"&gt;\n&lt;title&gt;6e8a91cd51724d7d9c70525b0bbb2ccc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23253.12,-528.72 23251.68,-528.72 23251.68,-527.28 23253.12,-527.28 23253.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1abaa5d93d2147be8c85eaf63ddfbbd4&amp;#45;&amp;#45;6e8a91cd51724d7d9c70525b0bbb2ccc --&gt;\n&lt;g id=\"edge215\" class=\"edge\"&gt;\n&lt;title&gt;1abaa5d93d2147be8c85eaf63ddfbbd4&amp;#45;&amp;#45;6e8a91cd51724d7d9c70525b0bbb2ccc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23159.87,-528C23162.6,-528 23248.65,-528 23251.34,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a24e0db455a4adc9198a9681bc846f0 --&gt;\n&lt;g id=\"node217\" class=\"node\"&gt;\n&lt;title&gt;0a24e0db455a4adc9198a9681bc846f0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23346.72,-528.72 23345.28,-528.72 23345.28,-527.28 23346.72,-527.28 23346.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e8a91cd51724d7d9c70525b0bbb2ccc&amp;#45;&amp;#45;0a24e0db455a4adc9198a9681bc846f0 --&gt;\n&lt;g id=\"edge216\" class=\"edge\"&gt;\n&lt;title&gt;6e8a91cd51724d7d9c70525b0bbb2ccc&amp;#45;&amp;#45;0a24e0db455a4adc9198a9681bc846f0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23253.47,-528C23256.2,-528 23342.25,-528 23344.94,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 24640fcbdc6a484db659c0ff770b8a16 --&gt;\n&lt;g id=\"node218\" class=\"node\"&gt;\n&lt;title&gt;24640fcbdc6a484db659c0ff770b8a16&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23440.32,-528.72 23438.88,-528.72 23438.88,-527.28 23440.32,-527.28 23440.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a24e0db455a4adc9198a9681bc846f0&amp;#45;&amp;#45;24640fcbdc6a484db659c0ff770b8a16 --&gt;\n&lt;g id=\"edge217\" class=\"edge\"&gt;\n&lt;title&gt;0a24e0db455a4adc9198a9681bc846f0&amp;#45;&amp;#45;24640fcbdc6a484db659c0ff770b8a16&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23347.07,-528C23349.8,-528 23435.85,-528 23438.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- be1e28820d574d06b5da64f8f431f8a6 --&gt;\n&lt;g id=\"node219\" class=\"node\"&gt;\n&lt;title&gt;be1e28820d574d06b5da64f8f431f8a6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23533.92,-528.72 23532.48,-528.72 23532.48,-527.28 23533.92,-527.28 23533.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 24640fcbdc6a484db659c0ff770b8a16&amp;#45;&amp;#45;be1e28820d574d06b5da64f8f431f8a6 --&gt;\n&lt;g id=\"edge218\" class=\"edge\"&gt;\n&lt;title&gt;24640fcbdc6a484db659c0ff770b8a16&amp;#45;&amp;#45;be1e28820d574d06b5da64f8f431f8a6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23440.67,-528C23443.4,-528 23529.45,-528 23532.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 84d340d44cb54324ab4a0d7511a853c9 --&gt;\n&lt;g id=\"node220\" class=\"node\"&gt;\n&lt;title&gt;84d340d44cb54324ab4a0d7511a853c9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23686.32,-528.72 23684.88,-528.72 23684.88,-527.28 23686.32,-527.28 23686.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- be1e28820d574d06b5da64f8f431f8a6&amp;#45;&amp;#45;84d340d44cb54324ab4a0d7511a853c9 --&gt;\n&lt;g id=\"edge219\" class=\"edge\"&gt;\n&lt;title&gt;be1e28820d574d06b5da64f8f431f8a6&amp;#45;&amp;#45;84d340d44cb54324ab4a0d7511a853c9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23534.31,-528C23538.79,-528 23680.08,-528 23684.49,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- beb4ccdedf744f0eb9d74188623ec132 --&gt;\n&lt;g id=\"node221\" class=\"node\"&gt;\n&lt;title&gt;beb4ccdedf744f0eb9d74188623ec132&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23838.72,-528.72 23837.28,-528.72 23837.28,-527.28 23838.72,-527.28 23838.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 84d340d44cb54324ab4a0d7511a853c9&amp;#45;&amp;#45;beb4ccdedf744f0eb9d74188623ec132 --&gt;\n&lt;g id=\"edge220\" class=\"edge\"&gt;\n&lt;title&gt;84d340d44cb54324ab4a0d7511a853c9&amp;#45;&amp;#45;beb4ccdedf744f0eb9d74188623ec132&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23686.71,-528C23691.19,-528 23832.48,-528 23836.89,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- eaf46b53e27145c89902daf84adfac68 --&gt;\n&lt;g id=\"node222\" class=\"node\"&gt;\n&lt;title&gt;eaf46b53e27145c89902daf84adfac68&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23932.32,-528.72 23930.88,-528.72 23930.88,-527.28 23932.32,-527.28 23932.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- beb4ccdedf744f0eb9d74188623ec132&amp;#45;&amp;#45;eaf46b53e27145c89902daf84adfac68 --&gt;\n&lt;g id=\"edge221\" class=\"edge\"&gt;\n&lt;title&gt;beb4ccdedf744f0eb9d74188623ec132&amp;#45;&amp;#45;eaf46b53e27145c89902daf84adfac68&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23839.07,-528C23841.8,-528 23927.85,-528 23930.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- f1f922837baf423095664892db95bdf6 --&gt;\n&lt;g id=\"node223\" class=\"node\"&gt;\n&lt;title&gt;f1f922837baf423095664892db95bdf6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24025.92,-528.72 24024.48,-528.72 24024.48,-527.28 24025.92,-527.28 24025.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- eaf46b53e27145c89902daf84adfac68&amp;#45;&amp;#45;f1f922837baf423095664892db95bdf6 --&gt;\n&lt;g id=\"edge222\" class=\"edge\"&gt;\n&lt;title&gt;eaf46b53e27145c89902daf84adfac68&amp;#45;&amp;#45;f1f922837baf423095664892db95bdf6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23932.67,-528C23935.4,-528 24021.45,-528 24024.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 77fc2d1892474f82b021522772b244f6 --&gt;\n&lt;g id=\"node224\" class=\"node\"&gt;\n&lt;title&gt;77fc2d1892474f82b021522772b244f6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24178.32,-528.72 24176.88,-528.72 24176.88,-527.28 24178.32,-527.28 24178.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f1f922837baf423095664892db95bdf6&amp;#45;&amp;#45;77fc2d1892474f82b021522772b244f6 --&gt;\n&lt;g id=\"edge223\" class=\"edge\"&gt;\n&lt;title&gt;f1f922837baf423095664892db95bdf6&amp;#45;&amp;#45;77fc2d1892474f82b021522772b244f6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24026.31,-528C24030.79,-528 24172.08,-528 24176.49,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3ec24143a4ca44368d830a8867666aa8 --&gt;\n&lt;g id=\"node225\" class=\"node\"&gt;\n&lt;title&gt;3ec24143a4ca44368d830a8867666aa8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24330.72,-528.72 24329.28,-528.72 24329.28,-527.28 24330.72,-527.28 24330.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 77fc2d1892474f82b021522772b244f6&amp;#45;&amp;#45;3ec24143a4ca44368d830a8867666aa8 --&gt;\n&lt;g id=\"edge224\" class=\"edge\"&gt;\n&lt;title&gt;77fc2d1892474f82b021522772b244f6&amp;#45;&amp;#45;3ec24143a4ca44368d830a8867666aa8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24178.71,-528C24183.19,-528 24324.48,-528 24328.89,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- da27c27e6d9a46dfab1cd762da4d8137 --&gt;\n&lt;g id=\"node226\" class=\"node\"&gt;\n&lt;title&gt;da27c27e6d9a46dfab1cd762da4d8137&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24424.32,-528.72 24422.88,-528.72 24422.88,-527.28 24424.32,-527.28 24424.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3ec24143a4ca44368d830a8867666aa8&amp;#45;&amp;#45;da27c27e6d9a46dfab1cd762da4d8137 --&gt;\n&lt;g id=\"edge225\" class=\"edge\"&gt;\n&lt;title&gt;3ec24143a4ca44368d830a8867666aa8&amp;#45;&amp;#45;da27c27e6d9a46dfab1cd762da4d8137&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24331.07,-528C24333.8,-528 24419.85,-528 24422.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9839c2e61f234228b7e749af53c60e3e --&gt;\n&lt;g id=\"node227\" class=\"node\"&gt;\n&lt;title&gt;9839c2e61f234228b7e749af53c60e3e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24517.92,-528.72 24516.48,-528.72 24516.48,-527.28 24517.92,-527.28 24517.92,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da27c27e6d9a46dfab1cd762da4d8137&amp;#45;&amp;#45;9839c2e61f234228b7e749af53c60e3e --&gt;\n&lt;g id=\"edge226\" class=\"edge\"&gt;\n&lt;title&gt;da27c27e6d9a46dfab1cd762da4d8137&amp;#45;&amp;#45;9839c2e61f234228b7e749af53c60e3e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24424.67,-528C24427.4,-528 24513.45,-528 24516.14,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7157f4c3bc8f4cea87bd897af45f7afc --&gt;\n&lt;g id=\"node228\" class=\"node\"&gt;\n&lt;title&gt;7157f4c3bc8f4cea87bd897af45f7afc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24670.32,-528.72 24668.88,-528.72 24668.88,-527.28 24670.32,-527.28 24670.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9839c2e61f234228b7e749af53c60e3e&amp;#45;&amp;#45;7157f4c3bc8f4cea87bd897af45f7afc --&gt;\n&lt;g id=\"edge227\" class=\"edge\"&gt;\n&lt;title&gt;9839c2e61f234228b7e749af53c60e3e&amp;#45;&amp;#45;7157f4c3bc8f4cea87bd897af45f7afc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24518.31,-528C24522.79,-528 24664.08,-528 24668.49,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3ad80a9ba59149e98ef9b3e0f78feaf3 --&gt;\n&lt;g id=\"node229\" class=\"node\"&gt;\n&lt;title&gt;3ad80a9ba59149e98ef9b3e0f78feaf3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24822.72,-528.72 24821.28,-528.72 24821.28,-527.28 24822.72,-527.28 24822.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7157f4c3bc8f4cea87bd897af45f7afc&amp;#45;&amp;#45;3ad80a9ba59149e98ef9b3e0f78feaf3 --&gt;\n&lt;g id=\"edge228\" class=\"edge\"&gt;\n&lt;title&gt;7157f4c3bc8f4cea87bd897af45f7afc&amp;#45;&amp;#45;3ad80a9ba59149e98ef9b3e0f78feaf3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24670.71,-528C24675.19,-528 24816.48,-528 24820.89,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 634910102a914a78a3e2a8e6319ed759 --&gt;\n&lt;g id=\"node230\" class=\"node\"&gt;\n&lt;title&gt;634910102a914a78a3e2a8e6319ed759&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24916.32,-528.72 24914.88,-528.72 24914.88,-527.28 24916.32,-527.28 24916.32,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3ad80a9ba59149e98ef9b3e0f78feaf3&amp;#45;&amp;#45;634910102a914a78a3e2a8e6319ed759 --&gt;\n&lt;g id=\"edge229\" class=\"edge\"&gt;\n&lt;title&gt;3ad80a9ba59149e98ef9b3e0f78feaf3&amp;#45;&amp;#45;634910102a914a78a3e2a8e6319ed759&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24823.07,-528C24825.8,-528 24911.85,-528 24914.54,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- bae11bcd0a654f91b3bad224ab707adc --&gt;\n&lt;g id=\"node231\" class=\"node\"&gt;\n&lt;title&gt;bae11bcd0a654f91b3bad224ab707adc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25068.72,-528.72 25067.28,-528.72 25067.28,-527.28 25068.72,-527.28 25068.72,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 634910102a914a78a3e2a8e6319ed759&amp;#45;&amp;#45;bae11bcd0a654f91b3bad224ab707adc --&gt;\n&lt;g id=\"edge230\" class=\"edge\"&gt;\n&lt;title&gt;634910102a914a78a3e2a8e6319ed759&amp;#45;&amp;#45;bae11bcd0a654f91b3bad224ab707adc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24916.71,-528C24921.19,-528 25062.48,-528 25066.89,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5759ea5a40bb471b96135cb9544e6786 --&gt;\n&lt;g id=\"node232\" class=\"node\"&gt;\n&lt;title&gt;5759ea5a40bb471b96135cb9544e6786&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25221.12,-528.72 25219.68,-528.72 25219.68,-527.28 25221.12,-527.28 25221.12,-528.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bae11bcd0a654f91b3bad224ab707adc&amp;#45;&amp;#45;5759ea5a40bb471b96135cb9544e6786 --&gt;\n&lt;g id=\"edge231\" class=\"edge\"&gt;\n&lt;title&gt;bae11bcd0a654f91b3bad224ab707adc&amp;#45;&amp;#45;5759ea5a40bb471b96135cb9544e6786&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25069.11,-528C25073.59,-528 25214.88,-528 25219.29,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 50a3ebf46e2b4ac1bd2494490aa04f84 --&gt;\n&lt;g id=\"node233\" class=\"node\"&gt;\n&lt;title&gt;50a3ebf46e2b4ac1bd2494490aa04f84&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M25400.4,-556.8C25400.4,-556.8 25297.2,-556.8 25297.2,-556.8 25291.2,-556.8 25285.2,-550.8 25285.2,-544.8 25285.2,-544.8 25285.2,-511.2 25285.2,-511.2 25285.2,-505.2 25291.2,-499.2 25297.2,-499.2 25297.2,-499.2 25400.4,-499.2 25400.4,-499.2 25406.4,-499.2 25412.4,-505.2 25412.4,-511.2 25412.4,-511.2 25412.4,-544.8 25412.4,-544.8 25412.4,-550.8 25406.4,-556.8 25400.4,-556.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"25348.8\" y=\"-522.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b10)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5759ea5a40bb471b96135cb9544e6786&amp;#45;&amp;#45;50a3ebf46e2b4ac1bd2494490aa04f84 --&gt;\n&lt;g id=\"edge232\" class=\"edge\"&gt;\n&lt;title&gt;5759ea5a40bb471b96135cb9544e6786&amp;#45;&amp;#45;50a3ebf46e2b4ac1bd2494490aa04f84&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25221.49,-528C25223.37,-528 25253.76,-528 25284.26,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- a2b60fe119c44e91acf4b276abaa5611 --&gt;\n&lt;g id=\"node234\" class=\"node\"&gt;\n&lt;title&gt;a2b60fe119c44e91acf4b276abaa5611&lt;/title&gt;\n&lt;/g&gt;\n&lt;!-- 50a3ebf46e2b4ac1bd2494490aa04f84&amp;#45;&amp;#45;a2b60fe119c44e91acf4b276abaa5611 --&gt;\n&lt;g id=\"edge233\" class=\"edge\"&gt;\n&lt;title&gt;50a3ebf46e2b4ac1bd2494490aa04f84&amp;#45;&amp;#45;a2b60fe119c44e91acf4b276abaa5611&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25413.2,-528C25425.7,-528 25438.15,-528 25448.52,-528\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4c2440fc77654b6aaa7e3dc794e0aafb --&gt;\n&lt;g id=\"node468\" class=\"node\"&gt;\n&lt;title&gt;4c2440fc77654b6aaa7e3dc794e0aafb&lt;/title&gt;\n&lt;/g&gt;\n&lt;!-- a2b60fe119c44e91acf4b276abaa5611&amp;#45;&amp;#45;4c2440fc77654b6aaa7e3dc794e0aafb --&gt;\n&lt;!-- 4f0476d16a0046d99925fa5843bbb091 --&gt;\n&lt;g id=\"node236\" class=\"node\"&gt;\n&lt;title&gt;4f0476d16a0046d99925fa5843bbb091&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M135.6,-487.8C135.6,-487.8 102,-487.8 102,-487.8 96,-487.8 90,-481.8 90,-475.8 90,-475.8 90,-442.2 90,-442.2 90,-436.2 96,-430.2 102,-430.2 102,-430.2 135.6,-430.2 135.6,-430.2 141.6,-430.2 147.6,-436.2 147.6,-442.2 147.6,-442.2 147.6,-475.8 147.6,-475.8 147.6,-481.8 141.6,-487.8 135.6,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"118.8\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- b37065ada34a4f23ad37148d6c7b7b52&amp;#45;&amp;#45;4f0476d16a0046d99925fa5843bbb091 --&gt;\n&lt;g id=\"edge234\" class=\"edge\"&gt;\n&lt;title&gt;b37065ada34a4f23ad37148d6c7b7b52&amp;#45;&amp;#45;4f0476d16a0046d99925fa5843bbb091&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M53.97,-459C64.96,-459 77.79,-459 89.05,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8e28f2947247434fb063354ee90140e7 --&gt;\n&lt;g id=\"node469\" class=\"node\"&gt;\n&lt;title&gt;8e28f2947247434fb063354ee90140e7&lt;/title&gt;\n&lt;text text-anchor=\"middle\" x=\"27\" y=\"-385.88\" font-family=\"JetBrains Mono\" font-size=\"15.00\"&gt;2&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- b37065ada34a4f23ad37148d6c7b7b52&amp;#45;&amp;#45;8e28f2947247434fb063354ee90140e7 --&gt;\n&lt;!-- 4f0476d16a0046d99925fa5843bbb091&amp;#45;&amp;#45;7aa8f544c5ac424b89ce3f01a40ee2b1 --&gt;\n&lt;g id=\"edge1865\" class=\"edge\"&gt;\n&lt;title&gt;4f0476d16a0046d99925fa5843bbb091&amp;#45;&amp;#45;7aa8f544c5ac424b89ce3f01a40ee2b1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M118.8,-488.74C118.8,-491.98 118.8,-495.21 118.8,-498.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- e57bff0f570c47178acd6f0c1a87a7d0 --&gt;\n&lt;g id=\"node237\" class=\"node\"&gt;\n&lt;title&gt;e57bff0f570c47178acd6f0c1a87a7d0&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"212.4\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4f0476d16a0046d99925fa5843bbb091&amp;#45;&amp;#45;e57bff0f570c47178acd6f0c1a87a7d0 --&gt;\n&lt;g id=\"edge235\" class=\"edge\"&gt;\n&lt;title&gt;4f0476d16a0046d99925fa5843bbb091&amp;#45;&amp;#45;e57bff0f570c47178acd6f0c1a87a7d0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M148.28,-459C168.24,-459 193.34,-459 204.96,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 369aa28cb3b043d380be460996741b9c --&gt;\n&lt;g id=\"node238\" class=\"node\"&gt;\n&lt;title&gt;369aa28cb3b043d380be460996741b9c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"306.72,-459.72 305.28,-459.72 305.28,-458.28 306.72,-458.28 306.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e57bff0f570c47178acd6f0c1a87a7d0&amp;#45;&amp;#45;369aa28cb3b043d380be460996741b9c --&gt;\n&lt;g id=\"edge236\" class=\"edge\"&gt;\n&lt;title&gt;e57bff0f570c47178acd6f0c1a87a7d0&amp;#45;&amp;#45;369aa28cb3b043d380be460996741b9c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M219.99,-459C240.33,-459 301.04,-459 304.82,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 32a8160d091c4fa99731a9b3446516a6 --&gt;\n&lt;g id=\"node239\" class=\"node\"&gt;\n&lt;title&gt;32a8160d091c4fa99731a9b3446516a6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"400.32,-459.72 398.88,-459.72 398.88,-458.28 400.32,-458.28 400.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 369aa28cb3b043d380be460996741b9c&amp;#45;&amp;#45;32a8160d091c4fa99731a9b3446516a6 --&gt;\n&lt;g id=\"edge237\" class=\"edge\"&gt;\n&lt;title&gt;369aa28cb3b043d380be460996741b9c&amp;#45;&amp;#45;32a8160d091c4fa99731a9b3446516a6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M307.07,-459C309.8,-459 395.85,-459 398.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 531f48d980074123bfff338c99d859da --&gt;\n&lt;g id=\"node240\" class=\"node\"&gt;\n&lt;title&gt;531f48d980074123bfff338c99d859da&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"493.92,-459.72 492.48,-459.72 492.48,-458.28 493.92,-458.28 493.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 32a8160d091c4fa99731a9b3446516a6&amp;#45;&amp;#45;531f48d980074123bfff338c99d859da --&gt;\n&lt;g id=\"edge238\" class=\"edge\"&gt;\n&lt;title&gt;32a8160d091c4fa99731a9b3446516a6&amp;#45;&amp;#45;531f48d980074123bfff338c99d859da&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M400.67,-459C403.4,-459 489.45,-459 492.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 45b225bcb4a9404d93372cc7116125ed --&gt;\n&lt;g id=\"node241\" class=\"node\"&gt;\n&lt;title&gt;45b225bcb4a9404d93372cc7116125ed&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"587.52,-459.72 586.08,-459.72 586.08,-458.28 587.52,-458.28 587.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 531f48d980074123bfff338c99d859da&amp;#45;&amp;#45;45b225bcb4a9404d93372cc7116125ed --&gt;\n&lt;g id=\"edge239\" class=\"edge\"&gt;\n&lt;title&gt;531f48d980074123bfff338c99d859da&amp;#45;&amp;#45;45b225bcb4a9404d93372cc7116125ed&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M494.27,-459C497,-459 583.05,-459 585.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2524150f31054f258ffdff86c450a10f --&gt;\n&lt;g id=\"node242\" class=\"node\"&gt;\n&lt;title&gt;2524150f31054f258ffdff86c450a10f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"681.12,-459.72 679.68,-459.72 679.68,-458.28 681.12,-458.28 681.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 45b225bcb4a9404d93372cc7116125ed&amp;#45;&amp;#45;2524150f31054f258ffdff86c450a10f --&gt;\n&lt;g id=\"edge240\" class=\"edge\"&gt;\n&lt;title&gt;45b225bcb4a9404d93372cc7116125ed&amp;#45;&amp;#45;2524150f31054f258ffdff86c450a10f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M587.87,-459C590.6,-459 676.65,-459 679.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 384f515877aa46bc865eecc189f943cd --&gt;\n&lt;g id=\"node243\" class=\"node\"&gt;\n&lt;title&gt;384f515877aa46bc865eecc189f943cd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"827.52,-459.72 826.08,-459.72 826.08,-458.28 827.52,-458.28 827.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2524150f31054f258ffdff86c450a10f&amp;#45;&amp;#45;384f515877aa46bc865eecc189f943cd --&gt;\n&lt;g id=\"edge241\" class=\"edge\"&gt;\n&lt;title&gt;2524150f31054f258ffdff86c450a10f&amp;#45;&amp;#45;384f515877aa46bc865eecc189f943cd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M681.5,-459C685.81,-459 821.46,-459 825.7,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d9345073ac4945278f9c0924c5ec10f5 --&gt;\n&lt;g id=\"node244\" class=\"node\"&gt;\n&lt;title&gt;d9345073ac4945278f9c0924c5ec10f5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"973.92,-459.72 972.48,-459.72 972.48,-458.28 973.92,-458.28 973.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 384f515877aa46bc865eecc189f943cd&amp;#45;&amp;#45;d9345073ac4945278f9c0924c5ec10f5 --&gt;\n&lt;g id=\"edge242\" class=\"edge\"&gt;\n&lt;title&gt;384f515877aa46bc865eecc189f943cd&amp;#45;&amp;#45;d9345073ac4945278f9c0924c5ec10f5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M827.9,-459C832.21,-459 967.86,-459 972.1,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- df70714f655a4d69a22a740d8cff6f6d --&gt;\n&lt;g id=\"node245\" class=\"node\"&gt;\n&lt;title&gt;df70714f655a4d69a22a740d8cff6f6d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1067.52,-459.72 1066.08,-459.72 1066.08,-458.28 1067.52,-458.28 1067.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d9345073ac4945278f9c0924c5ec10f5&amp;#45;&amp;#45;df70714f655a4d69a22a740d8cff6f6d --&gt;\n&lt;g id=\"edge243\" class=\"edge\"&gt;\n&lt;title&gt;d9345073ac4945278f9c0924c5ec10f5&amp;#45;&amp;#45;df70714f655a4d69a22a740d8cff6f6d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M974.27,-459C977,-459 1063.05,-459 1065.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7b7c7201b5584d1491d9ec1867fd965e --&gt;\n&lt;g id=\"node246\" class=\"node\"&gt;\n&lt;title&gt;7b7c7201b5584d1491d9ec1867fd965e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1161.12,-459.72 1159.68,-459.72 1159.68,-458.28 1161.12,-458.28 1161.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- df70714f655a4d69a22a740d8cff6f6d&amp;#45;&amp;#45;7b7c7201b5584d1491d9ec1867fd965e --&gt;\n&lt;g id=\"edge244\" class=\"edge\"&gt;\n&lt;title&gt;df70714f655a4d69a22a740d8cff6f6d&amp;#45;&amp;#45;7b7c7201b5584d1491d9ec1867fd965e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1067.87,-459C1070.6,-459 1156.65,-459 1159.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9ed328a0832244758964ca5f6ac82b21 --&gt;\n&lt;g id=\"node247\" class=\"node\"&gt;\n&lt;title&gt;9ed328a0832244758964ca5f6ac82b21&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1254.72,-459.72 1253.28,-459.72 1253.28,-458.28 1254.72,-458.28 1254.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7b7c7201b5584d1491d9ec1867fd965e&amp;#45;&amp;#45;9ed328a0832244758964ca5f6ac82b21 --&gt;\n&lt;g id=\"edge245\" class=\"edge\"&gt;\n&lt;title&gt;7b7c7201b5584d1491d9ec1867fd965e&amp;#45;&amp;#45;9ed328a0832244758964ca5f6ac82b21&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1161.47,-459C1164.2,-459 1250.25,-459 1252.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0b47f5cfb7b9452e95800eb5bc0779e4 --&gt;\n&lt;g id=\"node248\" class=\"node\"&gt;\n&lt;title&gt;0b47f5cfb7b9452e95800eb5bc0779e4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1348.32,-459.72 1346.88,-459.72 1346.88,-458.28 1348.32,-458.28 1348.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9ed328a0832244758964ca5f6ac82b21&amp;#45;&amp;#45;0b47f5cfb7b9452e95800eb5bc0779e4 --&gt;\n&lt;g id=\"edge246\" class=\"edge\"&gt;\n&lt;title&gt;9ed328a0832244758964ca5f6ac82b21&amp;#45;&amp;#45;0b47f5cfb7b9452e95800eb5bc0779e4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1255.07,-459C1257.8,-459 1343.85,-459 1346.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 048a2e61d1f2497ba85101cd08450d88 --&gt;\n&lt;g id=\"node249\" class=\"node\"&gt;\n&lt;title&gt;048a2e61d1f2497ba85101cd08450d88&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"1441.2\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0b47f5cfb7b9452e95800eb5bc0779e4&amp;#45;&amp;#45;048a2e61d1f2497ba85101cd08450d88 --&gt;\n&lt;g id=\"edge247\" class=\"edge\"&gt;\n&lt;title&gt;0b47f5cfb7b9452e95800eb5bc0779e4&amp;#45;&amp;#45;048a2e61d1f2497ba85101cd08450d88&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1348.67,-459C1350.97,-459 1412.81,-459 1433.52,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- c00dc01d20d74258888744eb71a7a3f3 --&gt;\n&lt;g id=\"node250\" class=\"node\"&gt;\n&lt;title&gt;c00dc01d20d74258888744eb71a7a3f3&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M1551.6,-487.8C1551.6,-487.8 1518,-487.8 1518,-487.8 1512,-487.8 1506,-481.8 1506,-475.8 1506,-475.8 1506,-442.2 1506,-442.2 1506,-436.2 1512,-430.2 1518,-430.2 1518,-430.2 1551.6,-430.2 1551.6,-430.2 1557.6,-430.2 1563.6,-436.2 1563.6,-442.2 1563.6,-442.2 1563.6,-475.8 1563.6,-475.8 1563.6,-481.8 1557.6,-487.8 1551.6,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"1534.8\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 048a2e61d1f2497ba85101cd08450d88&amp;#45;&amp;#45;c00dc01d20d74258888744eb71a7a3f3 --&gt;\n&lt;g id=\"edge248\" class=\"edge\"&gt;\n&lt;title&gt;048a2e61d1f2497ba85101cd08450d88&amp;#45;&amp;#45;c00dc01d20d74258888744eb71a7a3f3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1448.79,-459C1460.44,-459 1485.32,-459 1505.17,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- c00dc01d20d74258888744eb71a7a3f3&amp;#45;&amp;#45;4d9ef67dd399412395f02ec2312685f0 --&gt;\n&lt;g id=\"edge1866\" class=\"edge\"&gt;\n&lt;title&gt;c00dc01d20d74258888744eb71a7a3f3&amp;#45;&amp;#45;4d9ef67dd399412395f02ec2312685f0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1534.8,-488.74C1534.8,-491.98 1534.8,-495.21 1534.8,-498.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7a3ebec307a14e478c7c6ff4770db305 --&gt;\n&lt;g id=\"node251\" class=\"node\"&gt;\n&lt;title&gt;7a3ebec307a14e478c7c6ff4770db305&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M1645.2,-487.8C1645.2,-487.8 1611.6,-487.8 1611.6,-487.8 1605.6,-487.8 1599.6,-481.8 1599.6,-475.8 1599.6,-475.8 1599.6,-442.2 1599.6,-442.2 1599.6,-436.2 1605.6,-430.2 1611.6,-430.2 1611.6,-430.2 1645.2,-430.2 1645.2,-430.2 1651.2,-430.2 1657.2,-436.2 1657.2,-442.2 1657.2,-442.2 1657.2,-475.8 1657.2,-475.8 1657.2,-481.8 1651.2,-487.8 1645.2,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"1628.4\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- c00dc01d20d74258888744eb71a7a3f3&amp;#45;&amp;#45;7a3ebec307a14e478c7c6ff4770db305 --&gt;\n&lt;g id=\"edge249\" class=\"edge\"&gt;\n&lt;title&gt;c00dc01d20d74258888744eb71a7a3f3&amp;#45;&amp;#45;7a3ebec307a14e478c7c6ff4770db305&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1564.28,-459C1575.2,-459 1587.67,-459 1598.62,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7a3ebec307a14e478c7c6ff4770db305&amp;#45;&amp;#45;3043cddae7b147b187438f01fefa8927 --&gt;\n&lt;g id=\"edge1867\" class=\"edge\"&gt;\n&lt;title&gt;7a3ebec307a14e478c7c6ff4770db305&amp;#45;&amp;#45;3043cddae7b147b187438f01fefa8927&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1628.4,-488.74C1628.4,-491.98 1628.4,-495.21 1628.4,-498.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 82467ed038354effac34f0dbabbe2ad1 --&gt;\n&lt;g id=\"node252\" class=\"node\"&gt;\n&lt;title&gt;82467ed038354effac34f0dbabbe2ad1&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M1856.4,-487.8C1856.4,-487.8 1705.2,-487.8 1705.2,-487.8 1699.2,-487.8 1693.2,-481.8 1693.2,-475.8 1693.2,-475.8 1693.2,-442.2 1693.2,-442.2 1693.2,-436.2 1699.2,-430.2 1705.2,-430.2 1705.2,-430.2 1856.4,-430.2 1856.4,-430.2 1862.4,-430.2 1868.4,-436.2 1868.4,-442.2 1868.4,-442.2 1868.4,-475.8 1868.4,-475.8 1868.4,-481.8 1862.4,-487.8 1856.4,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"1780.8\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 7a3ebec307a14e478c7c6ff4770db305&amp;#45;&amp;#45;82467ed038354effac34f0dbabbe2ad1 --&gt;\n&lt;g id=\"edge250\" class=\"edge\"&gt;\n&lt;title&gt;7a3ebec307a14e478c7c6ff4770db305&amp;#45;&amp;#45;82467ed038354effac34f0dbabbe2ad1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1658.04,-459C1668.1,-459 1679.99,-459 1692.33,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5f8cb69f4d094e19bfeef5f30a117b7b --&gt;\n&lt;g id=\"node253\" class=\"node\"&gt;\n&lt;title&gt;5f8cb69f4d094e19bfeef5f30a117b7b&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M1950,-487.8C1950,-487.8 1916.4,-487.8 1916.4,-487.8 1910.4,-487.8 1904.4,-481.8 1904.4,-475.8 1904.4,-475.8 1904.4,-442.2 1904.4,-442.2 1904.4,-436.2 1910.4,-430.2 1916.4,-430.2 1916.4,-430.2 1950,-430.2 1950,-430.2 1956,-430.2 1962,-436.2 1962,-442.2 1962,-442.2 1962,-475.8 1962,-475.8 1962,-481.8 1956,-487.8 1950,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"1933.2\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 82467ed038354effac34f0dbabbe2ad1&amp;#45;&amp;#45;5f8cb69f4d094e19bfeef5f30a117b7b --&gt;\n&lt;g id=\"edge251\" class=\"edge\"&gt;\n&lt;title&gt;82467ed038354effac34f0dbabbe2ad1&amp;#45;&amp;#45;5f8cb69f4d094e19bfeef5f30a117b7b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1869.29,-459C1881.57,-459 1893.4,-459 1903.42,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5f8cb69f4d094e19bfeef5f30a117b7b&amp;#45;&amp;#45;bbafc908184f4aceb44020e7fc6a278c --&gt;\n&lt;g id=\"edge1868\" class=\"edge\"&gt;\n&lt;title&gt;5f8cb69f4d094e19bfeef5f30a117b7b&amp;#45;&amp;#45;bbafc908184f4aceb44020e7fc6a278c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1933.2,-488.74C1933.2,-491.98 1933.2,-495.21 1933.2,-498.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 40d0482c9ff44f50b5d2e83f65e0553b --&gt;\n&lt;g id=\"node254\" class=\"node\"&gt;\n&lt;title&gt;40d0482c9ff44f50b5d2e83f65e0553b&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M2043.6,-487.8C2043.6,-487.8 2010,-487.8 2010,-487.8 2004,-487.8 1998,-481.8 1998,-475.8 1998,-475.8 1998,-442.2 1998,-442.2 1998,-436.2 2004,-430.2 2010,-430.2 2010,-430.2 2043.6,-430.2 2043.6,-430.2 2049.6,-430.2 2055.6,-436.2 2055.6,-442.2 2055.6,-442.2 2055.6,-475.8 2055.6,-475.8 2055.6,-481.8 2049.6,-487.8 2043.6,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"2026.8\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5f8cb69f4d094e19bfeef5f30a117b7b&amp;#45;&amp;#45;40d0482c9ff44f50b5d2e83f65e0553b --&gt;\n&lt;g id=\"edge252\" class=\"edge\"&gt;\n&lt;title&gt;5f8cb69f4d094e19bfeef5f30a117b7b&amp;#45;&amp;#45;40d0482c9ff44f50b5d2e83f65e0553b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1962.68,-459C1973.6,-459 1986.07,-459 1997.02,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 40d0482c9ff44f50b5d2e83f65e0553b&amp;#45;&amp;#45;86972722b2be4bc1b669addb16e84f07 --&gt;\n&lt;g id=\"edge1869\" class=\"edge\"&gt;\n&lt;title&gt;40d0482c9ff44f50b5d2e83f65e0553b&amp;#45;&amp;#45;86972722b2be4bc1b669addb16e84f07&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2026.8,-488.74C2026.8,-491.98 2026.8,-495.21 2026.8,-498.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44556b63f4474c39955f187a1614d07e --&gt;\n&lt;g id=\"node255\" class=\"node\"&gt;\n&lt;title&gt;44556b63f4474c39955f187a1614d07e&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"2120.4\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 40d0482c9ff44f50b5d2e83f65e0553b&amp;#45;&amp;#45;44556b63f4474c39955f187a1614d07e --&gt;\n&lt;g id=\"edge253\" class=\"edge\"&gt;\n&lt;title&gt;40d0482c9ff44f50b5d2e83f65e0553b&amp;#45;&amp;#45;44556b63f4474c39955f187a1614d07e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2056.28,-459C2076.24,-459 2101.34,-459 2112.96,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17e2ba80b8b5412f8bd6e858066c6da7 --&gt;\n&lt;g id=\"node256\" class=\"node\"&gt;\n&lt;title&gt;17e2ba80b8b5412f8bd6e858066c6da7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2214.72,-459.72 2213.28,-459.72 2213.28,-458.28 2214.72,-458.28 2214.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44556b63f4474c39955f187a1614d07e&amp;#45;&amp;#45;17e2ba80b8b5412f8bd6e858066c6da7 --&gt;\n&lt;g id=\"edge254\" class=\"edge\"&gt;\n&lt;title&gt;44556b63f4474c39955f187a1614d07e&amp;#45;&amp;#45;17e2ba80b8b5412f8bd6e858066c6da7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2127.99,-459C2148.33,-459 2209.04,-459 2212.82,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- df7ef1f279aa4a4c9b069a6fedd82f7b --&gt;\n&lt;g id=\"node257\" class=\"node\"&gt;\n&lt;title&gt;df7ef1f279aa4a4c9b069a6fedd82f7b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2308.32,-459.72 2306.88,-459.72 2306.88,-458.28 2308.32,-458.28 2308.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17e2ba80b8b5412f8bd6e858066c6da7&amp;#45;&amp;#45;df7ef1f279aa4a4c9b069a6fedd82f7b --&gt;\n&lt;g id=\"edge255\" class=\"edge\"&gt;\n&lt;title&gt;17e2ba80b8b5412f8bd6e858066c6da7&amp;#45;&amp;#45;df7ef1f279aa4a4c9b069a6fedd82f7b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2215.07,-459C2217.8,-459 2303.85,-459 2306.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9022ce5644014aedb5423c2d981dc4df --&gt;\n&lt;g id=\"node258\" class=\"node\"&gt;\n&lt;title&gt;9022ce5644014aedb5423c2d981dc4df&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2401.92,-459.72 2400.48,-459.72 2400.48,-458.28 2401.92,-458.28 2401.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- df7ef1f279aa4a4c9b069a6fedd82f7b&amp;#45;&amp;#45;9022ce5644014aedb5423c2d981dc4df --&gt;\n&lt;g id=\"edge256\" class=\"edge\"&gt;\n&lt;title&gt;df7ef1f279aa4a4c9b069a6fedd82f7b&amp;#45;&amp;#45;9022ce5644014aedb5423c2d981dc4df&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2308.67,-459C2311.4,-459 2397.45,-459 2400.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0f4d25ca907646beb38f569b098516b8 --&gt;\n&lt;g id=\"node259\" class=\"node\"&gt;\n&lt;title&gt;0f4d25ca907646beb38f569b098516b8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2554.32,-459.72 2552.88,-459.72 2552.88,-458.28 2554.32,-458.28 2554.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9022ce5644014aedb5423c2d981dc4df&amp;#45;&amp;#45;0f4d25ca907646beb38f569b098516b8 --&gt;\n&lt;g id=\"edge257\" class=\"edge\"&gt;\n&lt;title&gt;9022ce5644014aedb5423c2d981dc4df&amp;#45;&amp;#45;0f4d25ca907646beb38f569b098516b8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2402.31,-459C2406.79,-459 2548.08,-459 2552.49,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- f5b8b324640d460abbbe70b1a75c7f3f --&gt;\n&lt;g id=\"node260\" class=\"node\"&gt;\n&lt;title&gt;f5b8b324640d460abbbe70b1a75c7f3f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2706.72,-459.72 2705.28,-459.72 2705.28,-458.28 2706.72,-458.28 2706.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0f4d25ca907646beb38f569b098516b8&amp;#45;&amp;#45;f5b8b324640d460abbbe70b1a75c7f3f --&gt;\n&lt;g id=\"edge258\" class=\"edge\"&gt;\n&lt;title&gt;0f4d25ca907646beb38f569b098516b8&amp;#45;&amp;#45;f5b8b324640d460abbbe70b1a75c7f3f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2554.71,-459C2559.19,-459 2700.48,-459 2704.89,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0b5980c76960450381606bd6275b1465 --&gt;\n&lt;g id=\"node261\" class=\"node\"&gt;\n&lt;title&gt;0b5980c76960450381606bd6275b1465&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2800.32,-459.72 2798.88,-459.72 2798.88,-458.28 2800.32,-458.28 2800.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f5b8b324640d460abbbe70b1a75c7f3f&amp;#45;&amp;#45;0b5980c76960450381606bd6275b1465 --&gt;\n&lt;g id=\"edge259\" class=\"edge\"&gt;\n&lt;title&gt;f5b8b324640d460abbbe70b1a75c7f3f&amp;#45;&amp;#45;0b5980c76960450381606bd6275b1465&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2707.07,-459C2709.8,-459 2795.85,-459 2798.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 99b93cff2c5c4e1d8d7d4620fa830188 --&gt;\n&lt;g id=\"node262\" class=\"node\"&gt;\n&lt;title&gt;99b93cff2c5c4e1d8d7d4620fa830188&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2893.92,-459.72 2892.48,-459.72 2892.48,-458.28 2893.92,-458.28 2893.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0b5980c76960450381606bd6275b1465&amp;#45;&amp;#45;99b93cff2c5c4e1d8d7d4620fa830188 --&gt;\n&lt;g id=\"edge260\" class=\"edge\"&gt;\n&lt;title&gt;0b5980c76960450381606bd6275b1465&amp;#45;&amp;#45;99b93cff2c5c4e1d8d7d4620fa830188&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2800.67,-459C2803.4,-459 2889.45,-459 2892.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1ba068ed026a43ca8e6fc208e259b3bb --&gt;\n&lt;g id=\"node263\" class=\"node\"&gt;\n&lt;title&gt;1ba068ed026a43ca8e6fc208e259b3bb&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"2986.8\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 99b93cff2c5c4e1d8d7d4620fa830188&amp;#45;&amp;#45;1ba068ed026a43ca8e6fc208e259b3bb --&gt;\n&lt;g id=\"edge261\" class=\"edge\"&gt;\n&lt;title&gt;99b93cff2c5c4e1d8d7d4620fa830188&amp;#45;&amp;#45;1ba068ed026a43ca8e6fc208e259b3bb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2894.27,-459C2896.57,-459 2958.41,-459 2979.12,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9c5d2fd6d450470586b5c9ae0f4fa367 --&gt;\n&lt;g id=\"node264\" class=\"node\"&gt;\n&lt;title&gt;9c5d2fd6d450470586b5c9ae0f4fa367&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M3097.2,-487.8C3097.2,-487.8 3063.6,-487.8 3063.6,-487.8 3057.6,-487.8 3051.6,-481.8 3051.6,-475.8 3051.6,-475.8 3051.6,-442.2 3051.6,-442.2 3051.6,-436.2 3057.6,-430.2 3063.6,-430.2 3063.6,-430.2 3097.2,-430.2 3097.2,-430.2 3103.2,-430.2 3109.2,-436.2 3109.2,-442.2 3109.2,-442.2 3109.2,-475.8 3109.2,-475.8 3109.2,-481.8 3103.2,-487.8 3097.2,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"3080.4\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 1ba068ed026a43ca8e6fc208e259b3bb&amp;#45;&amp;#45;9c5d2fd6d450470586b5c9ae0f4fa367 --&gt;\n&lt;g id=\"edge262\" class=\"edge\"&gt;\n&lt;title&gt;1ba068ed026a43ca8e6fc208e259b3bb&amp;#45;&amp;#45;9c5d2fd6d450470586b5c9ae0f4fa367&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2994.39,-459C3006.04,-459 3030.92,-459 3050.77,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9c5d2fd6d450470586b5c9ae0f4fa367&amp;#45;&amp;#45;450c14d645364b7f8e52df7cf4bb526c --&gt;\n&lt;g id=\"edge1870\" class=\"edge\"&gt;\n&lt;title&gt;9c5d2fd6d450470586b5c9ae0f4fa367&amp;#45;&amp;#45;450c14d645364b7f8e52df7cf4bb526c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3080.4,-488.74C3080.4,-491.98 3080.4,-495.21 3080.4,-498.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- c034929a8dd3407c802019de5b05c71f --&gt;\n&lt;g id=\"node265\" class=\"node\"&gt;\n&lt;title&gt;c034929a8dd3407c802019de5b05c71f&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"3174\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9c5d2fd6d450470586b5c9ae0f4fa367&amp;#45;&amp;#45;c034929a8dd3407c802019de5b05c71f --&gt;\n&lt;g id=\"edge263\" class=\"edge\"&gt;\n&lt;title&gt;9c5d2fd6d450470586b5c9ae0f4fa367&amp;#45;&amp;#45;c034929a8dd3407c802019de5b05c71f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3109.88,-459C3129.84,-459 3154.94,-459 3166.56,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9bbee585ae2f40aa941bf44d9da0aa95 --&gt;\n&lt;g id=\"node266\" class=\"node\"&gt;\n&lt;title&gt;9bbee585ae2f40aa941bf44d9da0aa95&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3268.32,-459.72 3266.88,-459.72 3266.88,-458.28 3268.32,-458.28 3268.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c034929a8dd3407c802019de5b05c71f&amp;#45;&amp;#45;9bbee585ae2f40aa941bf44d9da0aa95 --&gt;\n&lt;g id=\"edge264\" class=\"edge\"&gt;\n&lt;title&gt;c034929a8dd3407c802019de5b05c71f&amp;#45;&amp;#45;9bbee585ae2f40aa941bf44d9da0aa95&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3181.59,-459C3201.93,-459 3262.64,-459 3266.42,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- cf908474cc024352bb4c9152e3bb7d2a --&gt;\n&lt;g id=\"node267\" class=\"node\"&gt;\n&lt;title&gt;cf908474cc024352bb4c9152e3bb7d2a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3361.92,-459.72 3360.48,-459.72 3360.48,-458.28 3361.92,-458.28 3361.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9bbee585ae2f40aa941bf44d9da0aa95&amp;#45;&amp;#45;cf908474cc024352bb4c9152e3bb7d2a --&gt;\n&lt;g id=\"edge265\" class=\"edge\"&gt;\n&lt;title&gt;9bbee585ae2f40aa941bf44d9da0aa95&amp;#45;&amp;#45;cf908474cc024352bb4c9152e3bb7d2a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3268.67,-459C3271.4,-459 3357.45,-459 3360.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- ce44fb291b6f49acb2799173d2c4723b --&gt;\n&lt;g id=\"node268\" class=\"node\"&gt;\n&lt;title&gt;ce44fb291b6f49acb2799173d2c4723b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3514.32,-459.72 3512.88,-459.72 3512.88,-458.28 3514.32,-458.28 3514.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cf908474cc024352bb4c9152e3bb7d2a&amp;#45;&amp;#45;ce44fb291b6f49acb2799173d2c4723b --&gt;\n&lt;g id=\"edge266\" class=\"edge\"&gt;\n&lt;title&gt;cf908474cc024352bb4c9152e3bb7d2a&amp;#45;&amp;#45;ce44fb291b6f49acb2799173d2c4723b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3362.31,-459C3366.79,-459 3508.08,-459 3512.49,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 55b47a11e93549918dcf3a295333c8ec --&gt;\n&lt;g id=\"node269\" class=\"node\"&gt;\n&lt;title&gt;55b47a11e93549918dcf3a295333c8ec&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3666.72,-459.72 3665.28,-459.72 3665.28,-458.28 3666.72,-458.28 3666.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ce44fb291b6f49acb2799173d2c4723b&amp;#45;&amp;#45;55b47a11e93549918dcf3a295333c8ec --&gt;\n&lt;g id=\"edge267\" class=\"edge\"&gt;\n&lt;title&gt;ce44fb291b6f49acb2799173d2c4723b&amp;#45;&amp;#45;55b47a11e93549918dcf3a295333c8ec&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3514.71,-459C3519.19,-459 3660.48,-459 3664.89,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a246706abd446e7b8e4bce4c43f9710 --&gt;\n&lt;g id=\"node270\" class=\"node\"&gt;\n&lt;title&gt;5a246706abd446e7b8e4bce4c43f9710&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3760.32,-459.72 3758.88,-459.72 3758.88,-458.28 3760.32,-458.28 3760.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 55b47a11e93549918dcf3a295333c8ec&amp;#45;&amp;#45;5a246706abd446e7b8e4bce4c43f9710 --&gt;\n&lt;g id=\"edge268\" class=\"edge\"&gt;\n&lt;title&gt;55b47a11e93549918dcf3a295333c8ec&amp;#45;&amp;#45;5a246706abd446e7b8e4bce4c43f9710&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3667.07,-459C3669.8,-459 3755.85,-459 3758.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- fd806fa834f04d6a89fe37533691d4eb --&gt;\n&lt;g id=\"node271\" class=\"node\"&gt;\n&lt;title&gt;fd806fa834f04d6a89fe37533691d4eb&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"3853.2\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a246706abd446e7b8e4bce4c43f9710&amp;#45;&amp;#45;fd806fa834f04d6a89fe37533691d4eb --&gt;\n&lt;g id=\"edge269\" class=\"edge\"&gt;\n&lt;title&gt;5a246706abd446e7b8e4bce4c43f9710&amp;#45;&amp;#45;fd806fa834f04d6a89fe37533691d4eb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3760.67,-459C3762.97,-459 3824.81,-459 3845.52,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 16c57db6f37449379a72131ba6fb8d33 --&gt;\n&lt;g id=\"node272\" class=\"node\"&gt;\n&lt;title&gt;16c57db6f37449379a72131ba6fb8d33&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"3946.8\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- fd806fa834f04d6a89fe37533691d4eb&amp;#45;&amp;#45;16c57db6f37449379a72131ba6fb8d33 --&gt;\n&lt;g id=\"edge270\" class=\"edge\"&gt;\n&lt;title&gt;fd806fa834f04d6a89fe37533691d4eb&amp;#45;&amp;#45;16c57db6f37449379a72131ba6fb8d33&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3860.79,-459C3877.69,-459 3922.44,-459 3939.27,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4b63b966f0e448e0bf5fbb6e9ff3332d --&gt;\n&lt;g id=\"node273\" class=\"node\"&gt;\n&lt;title&gt;4b63b966f0e448e0bf5fbb6e9ff3332d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4041.12,-459.72 4039.68,-459.72 4039.68,-458.28 4041.12,-458.28 4041.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 16c57db6f37449379a72131ba6fb8d33&amp;#45;&amp;#45;4b63b966f0e448e0bf5fbb6e9ff3332d --&gt;\n&lt;g id=\"edge271\" class=\"edge\"&gt;\n&lt;title&gt;16c57db6f37449379a72131ba6fb8d33&amp;#45;&amp;#45;4b63b966f0e448e0bf5fbb6e9ff3332d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3954.39,-459C3974.73,-459 4035.44,-459 4039.22,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 739e757fb58f47b2838738ccea72017e --&gt;\n&lt;g id=\"node274\" class=\"node\"&gt;\n&lt;title&gt;739e757fb58f47b2838738ccea72017e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4134.72,-459.72 4133.28,-459.72 4133.28,-458.28 4134.72,-458.28 4134.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4b63b966f0e448e0bf5fbb6e9ff3332d&amp;#45;&amp;#45;739e757fb58f47b2838738ccea72017e --&gt;\n&lt;g id=\"edge272\" class=\"edge\"&gt;\n&lt;title&gt;4b63b966f0e448e0bf5fbb6e9ff3332d&amp;#45;&amp;#45;739e757fb58f47b2838738ccea72017e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4041.47,-459C4044.2,-459 4130.25,-459 4132.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- f291048e5dfe4b2aa6b184fcc1b2ec9f --&gt;\n&lt;g id=\"node275\" class=\"node\"&gt;\n&lt;title&gt;f291048e5dfe4b2aa6b184fcc1b2ec9f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4228.32,-459.72 4226.88,-459.72 4226.88,-458.28 4228.32,-458.28 4228.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 739e757fb58f47b2838738ccea72017e&amp;#45;&amp;#45;f291048e5dfe4b2aa6b184fcc1b2ec9f --&gt;\n&lt;g id=\"edge273\" class=\"edge\"&gt;\n&lt;title&gt;739e757fb58f47b2838738ccea72017e&amp;#45;&amp;#45;f291048e5dfe4b2aa6b184fcc1b2ec9f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4135.07,-459C4137.8,-459 4223.85,-459 4226.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- e9e64fa091214f09a67ae1cc3baea7a4 --&gt;\n&lt;g id=\"node276\" class=\"node\"&gt;\n&lt;title&gt;e9e64fa091214f09a67ae1cc3baea7a4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4380.72,-459.72 4379.28,-459.72 4379.28,-458.28 4380.72,-458.28 4380.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f291048e5dfe4b2aa6b184fcc1b2ec9f&amp;#45;&amp;#45;e9e64fa091214f09a67ae1cc3baea7a4 --&gt;\n&lt;g id=\"edge274\" class=\"edge\"&gt;\n&lt;title&gt;f291048e5dfe4b2aa6b184fcc1b2ec9f&amp;#45;&amp;#45;e9e64fa091214f09a67ae1cc3baea7a4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4228.71,-459C4233.19,-459 4374.48,-459 4378.89,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 353dbddadb134c4c893a06344102b574 --&gt;\n&lt;g id=\"node277\" class=\"node\"&gt;\n&lt;title&gt;353dbddadb134c4c893a06344102b574&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4533.12,-459.72 4531.68,-459.72 4531.68,-458.28 4533.12,-458.28 4533.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e9e64fa091214f09a67ae1cc3baea7a4&amp;#45;&amp;#45;353dbddadb134c4c893a06344102b574 --&gt;\n&lt;g id=\"edge275\" class=\"edge\"&gt;\n&lt;title&gt;e9e64fa091214f09a67ae1cc3baea7a4&amp;#45;&amp;#45;353dbddadb134c4c893a06344102b574&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4381.11,-459C4385.59,-459 4526.88,-459 4531.29,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1bcd2129d6654eafb672b8528e1e88a3 --&gt;\n&lt;g id=\"node278\" class=\"node\"&gt;\n&lt;title&gt;1bcd2129d6654eafb672b8528e1e88a3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4626.72,-459.72 4625.28,-459.72 4625.28,-458.28 4626.72,-458.28 4626.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 353dbddadb134c4c893a06344102b574&amp;#45;&amp;#45;1bcd2129d6654eafb672b8528e1e88a3 --&gt;\n&lt;g id=\"edge276\" class=\"edge\"&gt;\n&lt;title&gt;353dbddadb134c4c893a06344102b574&amp;#45;&amp;#45;1bcd2129d6654eafb672b8528e1e88a3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4533.47,-459C4536.2,-459 4622.25,-459 4624.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- f759335921134217aa1745d7a10c6cd7 --&gt;\n&lt;g id=\"node279\" class=\"node\"&gt;\n&lt;title&gt;f759335921134217aa1745d7a10c6cd7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4720.32,-459.72 4718.88,-459.72 4718.88,-458.28 4720.32,-458.28 4720.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1bcd2129d6654eafb672b8528e1e88a3&amp;#45;&amp;#45;f759335921134217aa1745d7a10c6cd7 --&gt;\n&lt;g id=\"edge277\" class=\"edge\"&gt;\n&lt;title&gt;1bcd2129d6654eafb672b8528e1e88a3&amp;#45;&amp;#45;f759335921134217aa1745d7a10c6cd7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4627.07,-459C4629.8,-459 4715.85,-459 4718.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- c0a8d424c3f14c0982b2597d1e12730c --&gt;\n&lt;g id=\"node280\" class=\"node\"&gt;\n&lt;title&gt;c0a8d424c3f14c0982b2597d1e12730c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"4813.2\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- f759335921134217aa1745d7a10c6cd7&amp;#45;&amp;#45;c0a8d424c3f14c0982b2597d1e12730c --&gt;\n&lt;g id=\"edge278\" class=\"edge\"&gt;\n&lt;title&gt;f759335921134217aa1745d7a10c6cd7&amp;#45;&amp;#45;c0a8d424c3f14c0982b2597d1e12730c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4720.67,-459C4722.97,-459 4784.81,-459 4805.52,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4ad81f435e7b4a90baef98492c43476a --&gt;\n&lt;g id=\"node281\" class=\"node\"&gt;\n&lt;title&gt;4ad81f435e7b4a90baef98492c43476a&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"4906.8\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- c0a8d424c3f14c0982b2597d1e12730c&amp;#45;&amp;#45;4ad81f435e7b4a90baef98492c43476a --&gt;\n&lt;g id=\"edge279\" class=\"edge\"&gt;\n&lt;title&gt;c0a8d424c3f14c0982b2597d1e12730c&amp;#45;&amp;#45;4ad81f435e7b4a90baef98492c43476a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4820.79,-459C4837.69,-459 4882.44,-459 4899.27,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- bfdfbec98be147b4875549bc7780c6a0 --&gt;\n&lt;g id=\"node282\" class=\"node\"&gt;\n&lt;title&gt;bfdfbec98be147b4875549bc7780c6a0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5001.12,-459.72 4999.68,-459.72 4999.68,-458.28 5001.12,-458.28 5001.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4ad81f435e7b4a90baef98492c43476a&amp;#45;&amp;#45;bfdfbec98be147b4875549bc7780c6a0 --&gt;\n&lt;g id=\"edge280\" class=\"edge\"&gt;\n&lt;title&gt;4ad81f435e7b4a90baef98492c43476a&amp;#45;&amp;#45;bfdfbec98be147b4875549bc7780c6a0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4914.39,-459C4934.73,-459 4995.44,-459 4999.22,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 409fa8f985914b088906d23240b5bcc2 --&gt;\n&lt;g id=\"node283\" class=\"node\"&gt;\n&lt;title&gt;409fa8f985914b088906d23240b5bcc2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5094.72,-459.72 5093.28,-459.72 5093.28,-458.28 5094.72,-458.28 5094.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bfdfbec98be147b4875549bc7780c6a0&amp;#45;&amp;#45;409fa8f985914b088906d23240b5bcc2 --&gt;\n&lt;g id=\"edge281\" class=\"edge\"&gt;\n&lt;title&gt;bfdfbec98be147b4875549bc7780c6a0&amp;#45;&amp;#45;409fa8f985914b088906d23240b5bcc2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5001.47,-459C5004.2,-459 5090.25,-459 5092.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4495f0088aed4843a838a5bf426fac9b --&gt;\n&lt;g id=\"node284\" class=\"node\"&gt;\n&lt;title&gt;4495f0088aed4843a838a5bf426fac9b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5188.32,-459.72 5186.88,-459.72 5186.88,-458.28 5188.32,-458.28 5188.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 409fa8f985914b088906d23240b5bcc2&amp;#45;&amp;#45;4495f0088aed4843a838a5bf426fac9b --&gt;\n&lt;g id=\"edge282\" class=\"edge\"&gt;\n&lt;title&gt;409fa8f985914b088906d23240b5bcc2&amp;#45;&amp;#45;4495f0088aed4843a838a5bf426fac9b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5095.07,-459C5097.8,-459 5183.85,-459 5186.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 915f424f1ee04051ba16fbd9d80ef174 --&gt;\n&lt;g id=\"node285\" class=\"node\"&gt;\n&lt;title&gt;915f424f1ee04051ba16fbd9d80ef174&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5281.92,-459.72 5280.48,-459.72 5280.48,-458.28 5281.92,-458.28 5281.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4495f0088aed4843a838a5bf426fac9b&amp;#45;&amp;#45;915f424f1ee04051ba16fbd9d80ef174 --&gt;\n&lt;g id=\"edge283\" class=\"edge\"&gt;\n&lt;title&gt;4495f0088aed4843a838a5bf426fac9b&amp;#45;&amp;#45;915f424f1ee04051ba16fbd9d80ef174&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5188.67,-459C5191.4,-459 5277.45,-459 5280.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7cb2a5d801de46beae23422f725d7145 --&gt;\n&lt;g id=\"node286\" class=\"node\"&gt;\n&lt;title&gt;7cb2a5d801de46beae23422f725d7145&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5434.32,-459.72 5432.88,-459.72 5432.88,-458.28 5434.32,-458.28 5434.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 915f424f1ee04051ba16fbd9d80ef174&amp;#45;&amp;#45;7cb2a5d801de46beae23422f725d7145 --&gt;\n&lt;g id=\"edge284\" class=\"edge\"&gt;\n&lt;title&gt;915f424f1ee04051ba16fbd9d80ef174&amp;#45;&amp;#45;7cb2a5d801de46beae23422f725d7145&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5282.31,-459C5286.79,-459 5428.08,-459 5432.49,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- bae4f2bb932742fa8bd92eb3d96fb7c5 --&gt;\n&lt;g id=\"node287\" class=\"node\"&gt;\n&lt;title&gt;bae4f2bb932742fa8bd92eb3d96fb7c5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5586.72,-459.72 5585.28,-459.72 5585.28,-458.28 5586.72,-458.28 5586.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7cb2a5d801de46beae23422f725d7145&amp;#45;&amp;#45;bae4f2bb932742fa8bd92eb3d96fb7c5 --&gt;\n&lt;g id=\"edge285\" class=\"edge\"&gt;\n&lt;title&gt;7cb2a5d801de46beae23422f725d7145&amp;#45;&amp;#45;bae4f2bb932742fa8bd92eb3d96fb7c5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5434.71,-459C5439.19,-459 5580.48,-459 5584.89,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6acbe35ddc714fb39d859a951dd29e84 --&gt;\n&lt;g id=\"node288\" class=\"node\"&gt;\n&lt;title&gt;6acbe35ddc714fb39d859a951dd29e84&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5680.32,-459.72 5678.88,-459.72 5678.88,-458.28 5680.32,-458.28 5680.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bae4f2bb932742fa8bd92eb3d96fb7c5&amp;#45;&amp;#45;6acbe35ddc714fb39d859a951dd29e84 --&gt;\n&lt;g id=\"edge286\" class=\"edge\"&gt;\n&lt;title&gt;bae4f2bb932742fa8bd92eb3d96fb7c5&amp;#45;&amp;#45;6acbe35ddc714fb39d859a951dd29e84&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5587.07,-459C5589.8,-459 5675.85,-459 5678.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 59596714199c46a38ab6339219478db8 --&gt;\n&lt;g id=\"node289\" class=\"node\"&gt;\n&lt;title&gt;59596714199c46a38ab6339219478db8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5773.92,-459.72 5772.48,-459.72 5772.48,-458.28 5773.92,-458.28 5773.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6acbe35ddc714fb39d859a951dd29e84&amp;#45;&amp;#45;59596714199c46a38ab6339219478db8 --&gt;\n&lt;g id=\"edge287\" class=\"edge\"&gt;\n&lt;title&gt;6acbe35ddc714fb39d859a951dd29e84&amp;#45;&amp;#45;59596714199c46a38ab6339219478db8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5680.67,-459C5683.4,-459 5769.45,-459 5772.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- febb4a1a9b10464481976e68cbebd4a8 --&gt;\n&lt;g id=\"node290\" class=\"node\"&gt;\n&lt;title&gt;febb4a1a9b10464481976e68cbebd4a8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5867.52,-459.72 5866.08,-459.72 5866.08,-458.28 5867.52,-458.28 5867.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 59596714199c46a38ab6339219478db8&amp;#45;&amp;#45;febb4a1a9b10464481976e68cbebd4a8 --&gt;\n&lt;g id=\"edge288\" class=\"edge\"&gt;\n&lt;title&gt;59596714199c46a38ab6339219478db8&amp;#45;&amp;#45;febb4a1a9b10464481976e68cbebd4a8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5774.27,-459C5777,-459 5863.05,-459 5865.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8c66210906814a6fbd4b873ff8451d7c --&gt;\n&lt;g id=\"node291\" class=\"node\"&gt;\n&lt;title&gt;8c66210906814a6fbd4b873ff8451d7c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"5960.4\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- febb4a1a9b10464481976e68cbebd4a8&amp;#45;&amp;#45;8c66210906814a6fbd4b873ff8451d7c --&gt;\n&lt;g id=\"edge289\" class=\"edge\"&gt;\n&lt;title&gt;febb4a1a9b10464481976e68cbebd4a8&amp;#45;&amp;#45;8c66210906814a6fbd4b873ff8451d7c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5867.87,-459C5870.17,-459 5932.01,-459 5952.72,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a5712c264db4a8fac1875aa21a61d37 --&gt;\n&lt;g id=\"node292\" class=\"node\"&gt;\n&lt;title&gt;5a5712c264db4a8fac1875aa21a61d37&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"6054\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8c66210906814a6fbd4b873ff8451d7c&amp;#45;&amp;#45;5a5712c264db4a8fac1875aa21a61d37 --&gt;\n&lt;g id=\"edge290\" class=\"edge\"&gt;\n&lt;title&gt;8c66210906814a6fbd4b873ff8451d7c&amp;#45;&amp;#45;5a5712c264db4a8fac1875aa21a61d37&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5967.99,-459C5984.89,-459 6029.64,-459 6046.47,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 69565879ded34e9e878b0b21ce6b9596 --&gt;\n&lt;g id=\"node293\" class=\"node\"&gt;\n&lt;title&gt;69565879ded34e9e878b0b21ce6b9596&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6148.32,-459.72 6146.88,-459.72 6146.88,-458.28 6148.32,-458.28 6148.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a5712c264db4a8fac1875aa21a61d37&amp;#45;&amp;#45;69565879ded34e9e878b0b21ce6b9596 --&gt;\n&lt;g id=\"edge291\" class=\"edge\"&gt;\n&lt;title&gt;5a5712c264db4a8fac1875aa21a61d37&amp;#45;&amp;#45;69565879ded34e9e878b0b21ce6b9596&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6061.59,-459C6081.93,-459 6142.64,-459 6146.42,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f93f5651aa4486199747e948fe6be3b --&gt;\n&lt;g id=\"node294\" class=\"node\"&gt;\n&lt;title&gt;6f93f5651aa4486199747e948fe6be3b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6241.92,-459.72 6240.48,-459.72 6240.48,-458.28 6241.92,-458.28 6241.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 69565879ded34e9e878b0b21ce6b9596&amp;#45;&amp;#45;6f93f5651aa4486199747e948fe6be3b --&gt;\n&lt;g id=\"edge292\" class=\"edge\"&gt;\n&lt;title&gt;69565879ded34e9e878b0b21ce6b9596&amp;#45;&amp;#45;6f93f5651aa4486199747e948fe6be3b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6148.67,-459C6151.4,-459 6237.45,-459 6240.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- a8043b4905ae4680914291dde8ed898e --&gt;\n&lt;g id=\"node295\" class=\"node\"&gt;\n&lt;title&gt;a8043b4905ae4680914291dde8ed898e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6335.52,-459.72 6334.08,-459.72 6334.08,-458.28 6335.52,-458.28 6335.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f93f5651aa4486199747e948fe6be3b&amp;#45;&amp;#45;a8043b4905ae4680914291dde8ed898e --&gt;\n&lt;g id=\"edge293\" class=\"edge\"&gt;\n&lt;title&gt;6f93f5651aa4486199747e948fe6be3b&amp;#45;&amp;#45;a8043b4905ae4680914291dde8ed898e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6242.27,-459C6245,-459 6331.05,-459 6333.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9609bad7a0cb415c91aef7d0b86ce47e --&gt;\n&lt;g id=\"node296\" class=\"node\"&gt;\n&lt;title&gt;9609bad7a0cb415c91aef7d0b86ce47e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6429.12,-459.72 6427.68,-459.72 6427.68,-458.28 6429.12,-458.28 6429.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a8043b4905ae4680914291dde8ed898e&amp;#45;&amp;#45;9609bad7a0cb415c91aef7d0b86ce47e --&gt;\n&lt;g id=\"edge294\" class=\"edge\"&gt;\n&lt;title&gt;a8043b4905ae4680914291dde8ed898e&amp;#45;&amp;#45;9609bad7a0cb415c91aef7d0b86ce47e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6335.87,-459C6338.6,-459 6424.65,-459 6427.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- ce7c9d6f892249958cfecc21c5f39f26 --&gt;\n&lt;g id=\"node297\" class=\"node\"&gt;\n&lt;title&gt;ce7c9d6f892249958cfecc21c5f39f26&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6522.72,-459.72 6521.28,-459.72 6521.28,-458.28 6522.72,-458.28 6522.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9609bad7a0cb415c91aef7d0b86ce47e&amp;#45;&amp;#45;ce7c9d6f892249958cfecc21c5f39f26 --&gt;\n&lt;g id=\"edge295\" class=\"edge\"&gt;\n&lt;title&gt;9609bad7a0cb415c91aef7d0b86ce47e&amp;#45;&amp;#45;ce7c9d6f892249958cfecc21c5f39f26&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6429.47,-459C6432.2,-459 6518.25,-459 6520.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 816481a62ff54d67b9a31a6490501c9e --&gt;\n&lt;g id=\"node298\" class=\"node\"&gt;\n&lt;title&gt;816481a62ff54d67b9a31a6490501c9e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6675.12,-459.72 6673.68,-459.72 6673.68,-458.28 6675.12,-458.28 6675.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ce7c9d6f892249958cfecc21c5f39f26&amp;#45;&amp;#45;816481a62ff54d67b9a31a6490501c9e --&gt;\n&lt;g id=\"edge296\" class=\"edge\"&gt;\n&lt;title&gt;ce7c9d6f892249958cfecc21c5f39f26&amp;#45;&amp;#45;816481a62ff54d67b9a31a6490501c9e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6523.11,-459C6527.59,-459 6668.88,-459 6673.29,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 317d461240134b9493590634a5767dca --&gt;\n&lt;g id=\"node299\" class=\"node\"&gt;\n&lt;title&gt;317d461240134b9493590634a5767dca&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6827.52,-459.72 6826.08,-459.72 6826.08,-458.28 6827.52,-458.28 6827.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 816481a62ff54d67b9a31a6490501c9e&amp;#45;&amp;#45;317d461240134b9493590634a5767dca --&gt;\n&lt;g id=\"edge297\" class=\"edge\"&gt;\n&lt;title&gt;816481a62ff54d67b9a31a6490501c9e&amp;#45;&amp;#45;317d461240134b9493590634a5767dca&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6675.51,-459C6679.99,-459 6821.28,-459 6825.69,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 160d72c46ed34e058d7d43cc563db6a1 --&gt;\n&lt;g id=\"node300\" class=\"node\"&gt;\n&lt;title&gt;160d72c46ed34e058d7d43cc563db6a1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6921.12,-459.72 6919.68,-459.72 6919.68,-458.28 6921.12,-458.28 6921.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 317d461240134b9493590634a5767dca&amp;#45;&amp;#45;160d72c46ed34e058d7d43cc563db6a1 --&gt;\n&lt;g id=\"edge298\" class=\"edge\"&gt;\n&lt;title&gt;317d461240134b9493590634a5767dca&amp;#45;&amp;#45;160d72c46ed34e058d7d43cc563db6a1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6827.87,-459C6830.6,-459 6916.65,-459 6919.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1b9570358bb849a3b0d61a4296708649 --&gt;\n&lt;g id=\"node301\" class=\"node\"&gt;\n&lt;title&gt;1b9570358bb849a3b0d61a4296708649&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7014.72,-459.72 7013.28,-459.72 7013.28,-458.28 7014.72,-458.28 7014.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 160d72c46ed34e058d7d43cc563db6a1&amp;#45;&amp;#45;1b9570358bb849a3b0d61a4296708649 --&gt;\n&lt;g id=\"edge299\" class=\"edge\"&gt;\n&lt;title&gt;160d72c46ed34e058d7d43cc563db6a1&amp;#45;&amp;#45;1b9570358bb849a3b0d61a4296708649&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6921.47,-459C6924.2,-459 7010.25,-459 7012.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d8e0a9b3986947f6861b2452ec5fffc5 --&gt;\n&lt;g id=\"node302\" class=\"node\"&gt;\n&lt;title&gt;d8e0a9b3986947f6861b2452ec5fffc5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7108.32,-459.72 7106.88,-459.72 7106.88,-458.28 7108.32,-458.28 7108.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1b9570358bb849a3b0d61a4296708649&amp;#45;&amp;#45;d8e0a9b3986947f6861b2452ec5fffc5 --&gt;\n&lt;g id=\"edge300\" class=\"edge\"&gt;\n&lt;title&gt;1b9570358bb849a3b0d61a4296708649&amp;#45;&amp;#45;d8e0a9b3986947f6861b2452ec5fffc5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7015.07,-459C7017.8,-459 7103.85,-459 7106.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52e567a01db84fc0bf56c0d6dfdc1753 --&gt;\n&lt;g id=\"node303\" class=\"node\"&gt;\n&lt;title&gt;52e567a01db84fc0bf56c0d6dfdc1753&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7201.92,-459.72 7200.48,-459.72 7200.48,-458.28 7201.92,-458.28 7201.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d8e0a9b3986947f6861b2452ec5fffc5&amp;#45;&amp;#45;52e567a01db84fc0bf56c0d6dfdc1753 --&gt;\n&lt;g id=\"edge301\" class=\"edge\"&gt;\n&lt;title&gt;d8e0a9b3986947f6861b2452ec5fffc5&amp;#45;&amp;#45;52e567a01db84fc0bf56c0d6dfdc1753&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7108.67,-459C7111.4,-459 7197.45,-459 7200.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 66e6b0dc02034b67a95bace1e107d721 --&gt;\n&lt;g id=\"node304\" class=\"node\"&gt;\n&lt;title&gt;66e6b0dc02034b67a95bace1e107d721&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"7294.8\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52e567a01db84fc0bf56c0d6dfdc1753&amp;#45;&amp;#45;66e6b0dc02034b67a95bace1e107d721 --&gt;\n&lt;g id=\"edge302\" class=\"edge\"&gt;\n&lt;title&gt;52e567a01db84fc0bf56c0d6dfdc1753&amp;#45;&amp;#45;66e6b0dc02034b67a95bace1e107d721&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7202.27,-459C7204.57,-459 7266.41,-459 7287.12,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2a78c1ea15044bb2a5a7abb859c676bb --&gt;\n&lt;g id=\"node305\" class=\"node\"&gt;\n&lt;title&gt;2a78c1ea15044bb2a5a7abb859c676bb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7389.12,-459.72 7387.68,-459.72 7387.68,-458.28 7389.12,-458.28 7389.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 66e6b0dc02034b67a95bace1e107d721&amp;#45;&amp;#45;2a78c1ea15044bb2a5a7abb859c676bb --&gt;\n&lt;g id=\"edge303\" class=\"edge\"&gt;\n&lt;title&gt;66e6b0dc02034b67a95bace1e107d721&amp;#45;&amp;#45;2a78c1ea15044bb2a5a7abb859c676bb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7302.39,-459C7322.73,-459 7383.44,-459 7387.22,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- ae81cee9b53840049cf7ea95df532e92 --&gt;\n&lt;g id=\"node306\" class=\"node\"&gt;\n&lt;title&gt;ae81cee9b53840049cf7ea95df532e92&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7482.72,-459.72 7481.28,-459.72 7481.28,-458.28 7482.72,-458.28 7482.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2a78c1ea15044bb2a5a7abb859c676bb&amp;#45;&amp;#45;ae81cee9b53840049cf7ea95df532e92 --&gt;\n&lt;g id=\"edge304\" class=\"edge\"&gt;\n&lt;title&gt;2a78c1ea15044bb2a5a7abb859c676bb&amp;#45;&amp;#45;ae81cee9b53840049cf7ea95df532e92&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7389.47,-459C7392.2,-459 7478.25,-459 7480.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- e19edc88bc5d4ce0bb4c8bbc8d66d856 --&gt;\n&lt;g id=\"node307\" class=\"node\"&gt;\n&lt;title&gt;e19edc88bc5d4ce0bb4c8bbc8d66d856&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7576.32,-459.72 7574.88,-459.72 7574.88,-458.28 7576.32,-458.28 7576.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ae81cee9b53840049cf7ea95df532e92&amp;#45;&amp;#45;e19edc88bc5d4ce0bb4c8bbc8d66d856 --&gt;\n&lt;g id=\"edge305\" class=\"edge\"&gt;\n&lt;title&gt;ae81cee9b53840049cf7ea95df532e92&amp;#45;&amp;#45;e19edc88bc5d4ce0bb4c8bbc8d66d856&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7483.07,-459C7485.8,-459 7571.85,-459 7574.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- c2730594499f453f8f51a7eb53ee0001 --&gt;\n&lt;g id=\"node308\" class=\"node\"&gt;\n&lt;title&gt;c2730594499f453f8f51a7eb53ee0001&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7669.92,-459.72 7668.48,-459.72 7668.48,-458.28 7669.92,-458.28 7669.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e19edc88bc5d4ce0bb4c8bbc8d66d856&amp;#45;&amp;#45;c2730594499f453f8f51a7eb53ee0001 --&gt;\n&lt;g id=\"edge306\" class=\"edge\"&gt;\n&lt;title&gt;e19edc88bc5d4ce0bb4c8bbc8d66d856&amp;#45;&amp;#45;c2730594499f453f8f51a7eb53ee0001&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7576.67,-459C7579.4,-459 7665.45,-459 7668.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2d2b8a15ddd045c8bf15e50a97996a0a --&gt;\n&lt;g id=\"node309\" class=\"node\"&gt;\n&lt;title&gt;2d2b8a15ddd045c8bf15e50a97996a0a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7763.52,-459.72 7762.08,-459.72 7762.08,-458.28 7763.52,-458.28 7763.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c2730594499f453f8f51a7eb53ee0001&amp;#45;&amp;#45;2d2b8a15ddd045c8bf15e50a97996a0a --&gt;\n&lt;g id=\"edge307\" class=\"edge\"&gt;\n&lt;title&gt;c2730594499f453f8f51a7eb53ee0001&amp;#45;&amp;#45;2d2b8a15ddd045c8bf15e50a97996a0a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7670.27,-459C7673,-459 7759.05,-459 7761.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6acff6d3fee642e5855c2de9a2df11a3 --&gt;\n&lt;g id=\"node310\" class=\"node\"&gt;\n&lt;title&gt;6acff6d3fee642e5855c2de9a2df11a3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7915.92,-459.72 7914.48,-459.72 7914.48,-458.28 7915.92,-458.28 7915.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2d2b8a15ddd045c8bf15e50a97996a0a&amp;#45;&amp;#45;6acff6d3fee642e5855c2de9a2df11a3 --&gt;\n&lt;g id=\"edge308\" class=\"edge\"&gt;\n&lt;title&gt;2d2b8a15ddd045c8bf15e50a97996a0a&amp;#45;&amp;#45;6acff6d3fee642e5855c2de9a2df11a3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7763.91,-459C7768.39,-459 7909.68,-459 7914.09,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- da0f510a57aa46d0af1366bd0958035e --&gt;\n&lt;g id=\"node311\" class=\"node\"&gt;\n&lt;title&gt;da0f510a57aa46d0af1366bd0958035e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8068.32,-459.72 8066.88,-459.72 8066.88,-458.28 8068.32,-458.28 8068.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6acff6d3fee642e5855c2de9a2df11a3&amp;#45;&amp;#45;da0f510a57aa46d0af1366bd0958035e --&gt;\n&lt;g id=\"edge309\" class=\"edge\"&gt;\n&lt;title&gt;6acff6d3fee642e5855c2de9a2df11a3&amp;#45;&amp;#45;da0f510a57aa46d0af1366bd0958035e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7916.31,-459C7920.79,-459 8062.08,-459 8066.49,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17fdde47b9814cafa1fc6527d2ac99e0 --&gt;\n&lt;g id=\"node312\" class=\"node\"&gt;\n&lt;title&gt;17fdde47b9814cafa1fc6527d2ac99e0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8161.92,-459.72 8160.48,-459.72 8160.48,-458.28 8161.92,-458.28 8161.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da0f510a57aa46d0af1366bd0958035e&amp;#45;&amp;#45;17fdde47b9814cafa1fc6527d2ac99e0 --&gt;\n&lt;g id=\"edge310\" class=\"edge\"&gt;\n&lt;title&gt;da0f510a57aa46d0af1366bd0958035e&amp;#45;&amp;#45;17fdde47b9814cafa1fc6527d2ac99e0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8068.67,-459C8071.4,-459 8157.45,-459 8160.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d9b0c6678be49d9a97ce9f9b07d1cea --&gt;\n&lt;g id=\"node313\" class=\"node\"&gt;\n&lt;title&gt;0d9b0c6678be49d9a97ce9f9b07d1cea&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8255.52,-459.72 8254.08,-459.72 8254.08,-458.28 8255.52,-458.28 8255.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17fdde47b9814cafa1fc6527d2ac99e0&amp;#45;&amp;#45;0d9b0c6678be49d9a97ce9f9b07d1cea --&gt;\n&lt;g id=\"edge311\" class=\"edge\"&gt;\n&lt;title&gt;17fdde47b9814cafa1fc6527d2ac99e0&amp;#45;&amp;#45;0d9b0c6678be49d9a97ce9f9b07d1cea&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8162.27,-459C8165,-459 8251.05,-459 8253.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7b8a6e19422c442f9963b2980a065c95 --&gt;\n&lt;g id=\"node314\" class=\"node\"&gt;\n&lt;title&gt;7b8a6e19422c442f9963b2980a065c95&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8349.12,-459.72 8347.68,-459.72 8347.68,-458.28 8349.12,-458.28 8349.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d9b0c6678be49d9a97ce9f9b07d1cea&amp;#45;&amp;#45;7b8a6e19422c442f9963b2980a065c95 --&gt;\n&lt;g id=\"edge312\" class=\"edge\"&gt;\n&lt;title&gt;0d9b0c6678be49d9a97ce9f9b07d1cea&amp;#45;&amp;#45;7b8a6e19422c442f9963b2980a065c95&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8255.87,-459C8258.6,-459 8344.65,-459 8347.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- f3d74c64ed394906a72174d6496dc937 --&gt;\n&lt;g id=\"node315\" class=\"node\"&gt;\n&lt;title&gt;f3d74c64ed394906a72174d6496dc937&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8442.72,-459.72 8441.28,-459.72 8441.28,-458.28 8442.72,-458.28 8442.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7b8a6e19422c442f9963b2980a065c95&amp;#45;&amp;#45;f3d74c64ed394906a72174d6496dc937 --&gt;\n&lt;g id=\"edge313\" class=\"edge\"&gt;\n&lt;title&gt;7b8a6e19422c442f9963b2980a065c95&amp;#45;&amp;#45;f3d74c64ed394906a72174d6496dc937&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8349.47,-459C8352.2,-459 8438.25,-459 8440.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d86581be0a7d4b9caa4d42156feb2484 --&gt;\n&lt;g id=\"node316\" class=\"node\"&gt;\n&lt;title&gt;d86581be0a7d4b9caa4d42156feb2484&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8536.32,-459.72 8534.88,-459.72 8534.88,-458.28 8536.32,-458.28 8536.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f3d74c64ed394906a72174d6496dc937&amp;#45;&amp;#45;d86581be0a7d4b9caa4d42156feb2484 --&gt;\n&lt;g id=\"edge314\" class=\"edge\"&gt;\n&lt;title&gt;f3d74c64ed394906a72174d6496dc937&amp;#45;&amp;#45;d86581be0a7d4b9caa4d42156feb2484&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8443.07,-459C8445.8,-459 8531.85,-459 8534.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 89bd0fa970aa4aa590ef69af32250e83 --&gt;\n&lt;g id=\"node317\" class=\"node\"&gt;\n&lt;title&gt;89bd0fa970aa4aa590ef69af32250e83&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8629.92,-459.72 8628.48,-459.72 8628.48,-458.28 8629.92,-458.28 8629.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d86581be0a7d4b9caa4d42156feb2484&amp;#45;&amp;#45;89bd0fa970aa4aa590ef69af32250e83 --&gt;\n&lt;g id=\"edge315\" class=\"edge\"&gt;\n&lt;title&gt;d86581be0a7d4b9caa4d42156feb2484&amp;#45;&amp;#45;89bd0fa970aa4aa590ef69af32250e83&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8536.67,-459C8539.4,-459 8625.45,-459 8628.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0575180d01444147acfba49a815c88a4 --&gt;\n&lt;g id=\"node318\" class=\"node\"&gt;\n&lt;title&gt;0575180d01444147acfba49a815c88a4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8782.32,-459.72 8780.88,-459.72 8780.88,-458.28 8782.32,-458.28 8782.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 89bd0fa970aa4aa590ef69af32250e83&amp;#45;&amp;#45;0575180d01444147acfba49a815c88a4 --&gt;\n&lt;g id=\"edge316\" class=\"edge\"&gt;\n&lt;title&gt;89bd0fa970aa4aa590ef69af32250e83&amp;#45;&amp;#45;0575180d01444147acfba49a815c88a4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8630.31,-459C8634.79,-459 8776.08,-459 8780.49,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 20afe653c1b74a45bdbac7b530b0f13a --&gt;\n&lt;g id=\"node319\" class=\"node\"&gt;\n&lt;title&gt;20afe653c1b74a45bdbac7b530b0f13a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8934.72,-459.72 8933.28,-459.72 8933.28,-458.28 8934.72,-458.28 8934.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0575180d01444147acfba49a815c88a4&amp;#45;&amp;#45;20afe653c1b74a45bdbac7b530b0f13a --&gt;\n&lt;g id=\"edge317\" class=\"edge\"&gt;\n&lt;title&gt;0575180d01444147acfba49a815c88a4&amp;#45;&amp;#45;20afe653c1b74a45bdbac7b530b0f13a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8782.71,-459C8787.19,-459 8928.48,-459 8932.89,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 08d3dbb22a024b1d88ea1dce1883b938 --&gt;\n&lt;g id=\"node320\" class=\"node\"&gt;\n&lt;title&gt;08d3dbb22a024b1d88ea1dce1883b938&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9028.32,-459.72 9026.88,-459.72 9026.88,-458.28 9028.32,-458.28 9028.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 20afe653c1b74a45bdbac7b530b0f13a&amp;#45;&amp;#45;08d3dbb22a024b1d88ea1dce1883b938 --&gt;\n&lt;g id=\"edge318\" class=\"edge\"&gt;\n&lt;title&gt;20afe653c1b74a45bdbac7b530b0f13a&amp;#45;&amp;#45;08d3dbb22a024b1d88ea1dce1883b938&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8935.07,-459C8937.8,-459 9023.85,-459 9026.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- b385faeb34fe44bf838f6b7ee7b974f1 --&gt;\n&lt;g id=\"node321\" class=\"node\"&gt;\n&lt;title&gt;b385faeb34fe44bf838f6b7ee7b974f1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9121.92,-459.72 9120.48,-459.72 9120.48,-458.28 9121.92,-458.28 9121.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 08d3dbb22a024b1d88ea1dce1883b938&amp;#45;&amp;#45;b385faeb34fe44bf838f6b7ee7b974f1 --&gt;\n&lt;g id=\"edge319\" class=\"edge\"&gt;\n&lt;title&gt;08d3dbb22a024b1d88ea1dce1883b938&amp;#45;&amp;#45;b385faeb34fe44bf838f6b7ee7b974f1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9028.67,-459C9031.4,-459 9117.45,-459 9120.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd9a1ee4f8f443309eb09426cbd6fa82 --&gt;\n&lt;g id=\"node322\" class=\"node\"&gt;\n&lt;title&gt;dd9a1ee4f8f443309eb09426cbd6fa82&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9215.52,-459.72 9214.08,-459.72 9214.08,-458.28 9215.52,-458.28 9215.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b385faeb34fe44bf838f6b7ee7b974f1&amp;#45;&amp;#45;dd9a1ee4f8f443309eb09426cbd6fa82 --&gt;\n&lt;g id=\"edge320\" class=\"edge\"&gt;\n&lt;title&gt;b385faeb34fe44bf838f6b7ee7b974f1&amp;#45;&amp;#45;dd9a1ee4f8f443309eb09426cbd6fa82&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9122.27,-459C9125,-459 9211.05,-459 9213.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7a7769fd12a74897aeb4ea03e0d49f55 --&gt;\n&lt;g id=\"node323\" class=\"node\"&gt;\n&lt;title&gt;7a7769fd12a74897aeb4ea03e0d49f55&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9309.12,-459.72 9307.68,-459.72 9307.68,-458.28 9309.12,-458.28 9309.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd9a1ee4f8f443309eb09426cbd6fa82&amp;#45;&amp;#45;7a7769fd12a74897aeb4ea03e0d49f55 --&gt;\n&lt;g id=\"edge321\" class=\"edge\"&gt;\n&lt;title&gt;dd9a1ee4f8f443309eb09426cbd6fa82&amp;#45;&amp;#45;7a7769fd12a74897aeb4ea03e0d49f55&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9215.87,-459C9218.6,-459 9304.65,-459 9307.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- c23cdb8c3c79423e84ad98bd46ed543c --&gt;\n&lt;g id=\"node324\" class=\"node\"&gt;\n&lt;title&gt;c23cdb8c3c79423e84ad98bd46ed543c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9461.52,-459.72 9460.08,-459.72 9460.08,-458.28 9461.52,-458.28 9461.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7a7769fd12a74897aeb4ea03e0d49f55&amp;#45;&amp;#45;c23cdb8c3c79423e84ad98bd46ed543c --&gt;\n&lt;g id=\"edge322\" class=\"edge\"&gt;\n&lt;title&gt;7a7769fd12a74897aeb4ea03e0d49f55&amp;#45;&amp;#45;c23cdb8c3c79423e84ad98bd46ed543c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9309.51,-459C9313.99,-459 9455.28,-459 9459.69,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d087c2c809544366b334e65e1e81c5a6 --&gt;\n&lt;g id=\"node325\" class=\"node\"&gt;\n&lt;title&gt;d087c2c809544366b334e65e1e81c5a6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9613.92,-459.72 9612.48,-459.72 9612.48,-458.28 9613.92,-458.28 9613.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c23cdb8c3c79423e84ad98bd46ed543c&amp;#45;&amp;#45;d087c2c809544366b334e65e1e81c5a6 --&gt;\n&lt;g id=\"edge323\" class=\"edge\"&gt;\n&lt;title&gt;c23cdb8c3c79423e84ad98bd46ed543c&amp;#45;&amp;#45;d087c2c809544366b334e65e1e81c5a6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9461.91,-459C9466.39,-459 9607.68,-459 9612.09,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 109293715ed3444484339eb4b53d1b18 --&gt;\n&lt;g id=\"node326\" class=\"node\"&gt;\n&lt;title&gt;109293715ed3444484339eb4b53d1b18&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9707.52,-459.72 9706.08,-459.72 9706.08,-458.28 9707.52,-458.28 9707.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d087c2c809544366b334e65e1e81c5a6&amp;#45;&amp;#45;109293715ed3444484339eb4b53d1b18 --&gt;\n&lt;g id=\"edge324\" class=\"edge\"&gt;\n&lt;title&gt;d087c2c809544366b334e65e1e81c5a6&amp;#45;&amp;#45;109293715ed3444484339eb4b53d1b18&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9614.27,-459C9617,-459 9703.05,-459 9705.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a7485cff55d419da5f8a47f8cbfb811 --&gt;\n&lt;g id=\"node327\" class=\"node\"&gt;\n&lt;title&gt;0a7485cff55d419da5f8a47f8cbfb811&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9801.12,-459.72 9799.68,-459.72 9799.68,-458.28 9801.12,-458.28 9801.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 109293715ed3444484339eb4b53d1b18&amp;#45;&amp;#45;0a7485cff55d419da5f8a47f8cbfb811 --&gt;\n&lt;g id=\"edge325\" class=\"edge\"&gt;\n&lt;title&gt;109293715ed3444484339eb4b53d1b18&amp;#45;&amp;#45;0a7485cff55d419da5f8a47f8cbfb811&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9707.87,-459C9710.6,-459 9796.65,-459 9799.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 05188ba10a5b4491a60e9e3762301b39 --&gt;\n&lt;g id=\"node328\" class=\"node\"&gt;\n&lt;title&gt;05188ba10a5b4491a60e9e3762301b39&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9894.72,-459.72 9893.28,-459.72 9893.28,-458.28 9894.72,-458.28 9894.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a7485cff55d419da5f8a47f8cbfb811&amp;#45;&amp;#45;05188ba10a5b4491a60e9e3762301b39 --&gt;\n&lt;g id=\"edge326\" class=\"edge\"&gt;\n&lt;title&gt;0a7485cff55d419da5f8a47f8cbfb811&amp;#45;&amp;#45;05188ba10a5b4491a60e9e3762301b39&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9801.47,-459C9804.2,-459 9890.25,-459 9892.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- feecff1059f4429e875f26cc67c505f7 --&gt;\n&lt;g id=\"node329\" class=\"node\"&gt;\n&lt;title&gt;feecff1059f4429e875f26cc67c505f7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9988.32,-459.72 9986.88,-459.72 9986.88,-458.28 9988.32,-458.28 9988.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 05188ba10a5b4491a60e9e3762301b39&amp;#45;&amp;#45;feecff1059f4429e875f26cc67c505f7 --&gt;\n&lt;g id=\"edge327\" class=\"edge\"&gt;\n&lt;title&gt;05188ba10a5b4491a60e9e3762301b39&amp;#45;&amp;#45;feecff1059f4429e875f26cc67c505f7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9895.07,-459C9897.8,-459 9983.85,-459 9986.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d2d016b09f743a9a74fc1831ba82d26 --&gt;\n&lt;g id=\"node330\" class=\"node\"&gt;\n&lt;title&gt;4d2d016b09f743a9a74fc1831ba82d26&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10081.92,-459.72 10080.48,-459.72 10080.48,-458.28 10081.92,-458.28 10081.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- feecff1059f4429e875f26cc67c505f7&amp;#45;&amp;#45;4d2d016b09f743a9a74fc1831ba82d26 --&gt;\n&lt;g id=\"edge328\" class=\"edge\"&gt;\n&lt;title&gt;feecff1059f4429e875f26cc67c505f7&amp;#45;&amp;#45;4d2d016b09f743a9a74fc1831ba82d26&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9988.67,-459C9991.4,-459 10077.45,-459 10080.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ddd8f2108ed4264a02c8dad0bfcb0d3 --&gt;\n&lt;g id=\"node331\" class=\"node\"&gt;\n&lt;title&gt;6ddd8f2108ed4264a02c8dad0bfcb0d3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10175.52,-459.72 10174.08,-459.72 10174.08,-458.28 10175.52,-458.28 10175.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d2d016b09f743a9a74fc1831ba82d26&amp;#45;&amp;#45;6ddd8f2108ed4264a02c8dad0bfcb0d3 --&gt;\n&lt;g id=\"edge329\" class=\"edge\"&gt;\n&lt;title&gt;4d2d016b09f743a9a74fc1831ba82d26&amp;#45;&amp;#45;6ddd8f2108ed4264a02c8dad0bfcb0d3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10082.27,-459C10085,-459 10171.05,-459 10173.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- c8768ff67a184bb38321213eba89b50b --&gt;\n&lt;g id=\"node332\" class=\"node\"&gt;\n&lt;title&gt;c8768ff67a184bb38321213eba89b50b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10327.92,-459.72 10326.48,-459.72 10326.48,-458.28 10327.92,-458.28 10327.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ddd8f2108ed4264a02c8dad0bfcb0d3&amp;#45;&amp;#45;c8768ff67a184bb38321213eba89b50b --&gt;\n&lt;g id=\"edge330\" class=\"edge\"&gt;\n&lt;title&gt;6ddd8f2108ed4264a02c8dad0bfcb0d3&amp;#45;&amp;#45;c8768ff67a184bb38321213eba89b50b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10175.91,-459C10180.39,-459 10321.68,-459 10326.09,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1d817adb75fc454794c04bf802b4e0f7 --&gt;\n&lt;g id=\"node333\" class=\"node\"&gt;\n&lt;title&gt;1d817adb75fc454794c04bf802b4e0f7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10480.32,-459.72 10478.88,-459.72 10478.88,-458.28 10480.32,-458.28 10480.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c8768ff67a184bb38321213eba89b50b&amp;#45;&amp;#45;1d817adb75fc454794c04bf802b4e0f7 --&gt;\n&lt;g id=\"edge331\" class=\"edge\"&gt;\n&lt;title&gt;c8768ff67a184bb38321213eba89b50b&amp;#45;&amp;#45;1d817adb75fc454794c04bf802b4e0f7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10328.31,-459C10332.79,-459 10474.08,-459 10478.49,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4819236c484d485e8f82bde5f7dd9afa --&gt;\n&lt;g id=\"node334\" class=\"node\"&gt;\n&lt;title&gt;4819236c484d485e8f82bde5f7dd9afa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10573.92,-459.72 10572.48,-459.72 10572.48,-458.28 10573.92,-458.28 10573.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1d817adb75fc454794c04bf802b4e0f7&amp;#45;&amp;#45;4819236c484d485e8f82bde5f7dd9afa --&gt;\n&lt;g id=\"edge332\" class=\"edge\"&gt;\n&lt;title&gt;1d817adb75fc454794c04bf802b4e0f7&amp;#45;&amp;#45;4819236c484d485e8f82bde5f7dd9afa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10480.67,-459C10483.4,-459 10569.45,-459 10572.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8810afdaf26d4434bb5f66385729b48d --&gt;\n&lt;g id=\"node335\" class=\"node\"&gt;\n&lt;title&gt;8810afdaf26d4434bb5f66385729b48d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10667.52,-459.72 10666.08,-459.72 10666.08,-458.28 10667.52,-458.28 10667.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4819236c484d485e8f82bde5f7dd9afa&amp;#45;&amp;#45;8810afdaf26d4434bb5f66385729b48d --&gt;\n&lt;g id=\"edge333\" class=\"edge\"&gt;\n&lt;title&gt;4819236c484d485e8f82bde5f7dd9afa&amp;#45;&amp;#45;8810afdaf26d4434bb5f66385729b48d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10574.27,-459C10577,-459 10663.05,-459 10665.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 10e86aa4da7647a0834f3473597c8f8d --&gt;\n&lt;g id=\"node336\" class=\"node\"&gt;\n&lt;title&gt;10e86aa4da7647a0834f3473597c8f8d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10761.12,-459.72 10759.68,-459.72 10759.68,-458.28 10761.12,-458.28 10761.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8810afdaf26d4434bb5f66385729b48d&amp;#45;&amp;#45;10e86aa4da7647a0834f3473597c8f8d --&gt;\n&lt;g id=\"edge334\" class=\"edge\"&gt;\n&lt;title&gt;8810afdaf26d4434bb5f66385729b48d&amp;#45;&amp;#45;10e86aa4da7647a0834f3473597c8f8d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10667.87,-459C10670.6,-459 10756.65,-459 10759.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9ea4cde4f64a403a9c16a1cd3c3d1edf --&gt;\n&lt;g id=\"node337\" class=\"node\"&gt;\n&lt;title&gt;9ea4cde4f64a403a9c16a1cd3c3d1edf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10854.72,-459.72 10853.28,-459.72 10853.28,-458.28 10854.72,-458.28 10854.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 10e86aa4da7647a0834f3473597c8f8d&amp;#45;&amp;#45;9ea4cde4f64a403a9c16a1cd3c3d1edf --&gt;\n&lt;g id=\"edge335\" class=\"edge\"&gt;\n&lt;title&gt;10e86aa4da7647a0834f3473597c8f8d&amp;#45;&amp;#45;9ea4cde4f64a403a9c16a1cd3c3d1edf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10761.47,-459C10764.2,-459 10850.25,-459 10852.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- dc33de1880014e8283c91b998a5cf07c --&gt;\n&lt;g id=\"node338\" class=\"node\"&gt;\n&lt;title&gt;dc33de1880014e8283c91b998a5cf07c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11007.12,-459.72 11005.68,-459.72 11005.68,-458.28 11007.12,-458.28 11007.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9ea4cde4f64a403a9c16a1cd3c3d1edf&amp;#45;&amp;#45;dc33de1880014e8283c91b998a5cf07c --&gt;\n&lt;g id=\"edge336\" class=\"edge\"&gt;\n&lt;title&gt;9ea4cde4f64a403a9c16a1cd3c3d1edf&amp;#45;&amp;#45;dc33de1880014e8283c91b998a5cf07c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10855.11,-459C10859.59,-459 11000.88,-459 11005.29,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 14d0965013de43839234d437c54d0332 --&gt;\n&lt;g id=\"node339\" class=\"node\"&gt;\n&lt;title&gt;14d0965013de43839234d437c54d0332&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11159.52,-459.72 11158.08,-459.72 11158.08,-458.28 11159.52,-458.28 11159.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dc33de1880014e8283c91b998a5cf07c&amp;#45;&amp;#45;14d0965013de43839234d437c54d0332 --&gt;\n&lt;g id=\"edge337\" class=\"edge\"&gt;\n&lt;title&gt;dc33de1880014e8283c91b998a5cf07c&amp;#45;&amp;#45;14d0965013de43839234d437c54d0332&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11007.51,-459C11011.99,-459 11153.28,-459 11157.69,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- fb293491c2ad432496bb10051ec09044 --&gt;\n&lt;g id=\"node340\" class=\"node\"&gt;\n&lt;title&gt;fb293491c2ad432496bb10051ec09044&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11253.12,-459.72 11251.68,-459.72 11251.68,-458.28 11253.12,-458.28 11253.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 14d0965013de43839234d437c54d0332&amp;#45;&amp;#45;fb293491c2ad432496bb10051ec09044 --&gt;\n&lt;g id=\"edge338\" class=\"edge\"&gt;\n&lt;title&gt;14d0965013de43839234d437c54d0332&amp;#45;&amp;#45;fb293491c2ad432496bb10051ec09044&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11159.87,-459C11162.6,-459 11248.65,-459 11251.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d1b6260a27754106bae1ad21e52d1ec8 --&gt;\n&lt;g id=\"node341\" class=\"node\"&gt;\n&lt;title&gt;d1b6260a27754106bae1ad21e52d1ec8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11346.72,-459.72 11345.28,-459.72 11345.28,-458.28 11346.72,-458.28 11346.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fb293491c2ad432496bb10051ec09044&amp;#45;&amp;#45;d1b6260a27754106bae1ad21e52d1ec8 --&gt;\n&lt;g id=\"edge339\" class=\"edge\"&gt;\n&lt;title&gt;fb293491c2ad432496bb10051ec09044&amp;#45;&amp;#45;d1b6260a27754106bae1ad21e52d1ec8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11253.47,-459C11256.2,-459 11342.25,-459 11344.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 022c957cb5d04d94ae51fc6a8057f6bf --&gt;\n&lt;g id=\"node342\" class=\"node\"&gt;\n&lt;title&gt;022c957cb5d04d94ae51fc6a8057f6bf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11499.12,-459.72 11497.68,-459.72 11497.68,-458.28 11499.12,-458.28 11499.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d1b6260a27754106bae1ad21e52d1ec8&amp;#45;&amp;#45;022c957cb5d04d94ae51fc6a8057f6bf --&gt;\n&lt;g id=\"edge340\" class=\"edge\"&gt;\n&lt;title&gt;d1b6260a27754106bae1ad21e52d1ec8&amp;#45;&amp;#45;022c957cb5d04d94ae51fc6a8057f6bf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11347.11,-459C11351.59,-459 11492.88,-459 11497.29,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7b0531b5d264c70804a42aeccd1df0b --&gt;\n&lt;g id=\"node343\" class=\"node\"&gt;\n&lt;title&gt;e7b0531b5d264c70804a42aeccd1df0b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11651.52,-459.72 11650.08,-459.72 11650.08,-458.28 11651.52,-458.28 11651.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 022c957cb5d04d94ae51fc6a8057f6bf&amp;#45;&amp;#45;e7b0531b5d264c70804a42aeccd1df0b --&gt;\n&lt;g id=\"edge341\" class=\"edge\"&gt;\n&lt;title&gt;022c957cb5d04d94ae51fc6a8057f6bf&amp;#45;&amp;#45;e7b0531b5d264c70804a42aeccd1df0b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11499.51,-459C11503.99,-459 11645.28,-459 11649.69,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- b82ed99081594271bc4c4054cad85d77 --&gt;\n&lt;g id=\"node344\" class=\"node\"&gt;\n&lt;title&gt;b82ed99081594271bc4c4054cad85d77&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11745.12,-459.72 11743.68,-459.72 11743.68,-458.28 11745.12,-458.28 11745.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7b0531b5d264c70804a42aeccd1df0b&amp;#45;&amp;#45;b82ed99081594271bc4c4054cad85d77 --&gt;\n&lt;g id=\"edge342\" class=\"edge\"&gt;\n&lt;title&gt;e7b0531b5d264c70804a42aeccd1df0b&amp;#45;&amp;#45;b82ed99081594271bc4c4054cad85d77&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11651.87,-459C11654.6,-459 11740.65,-459 11743.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- c948baff4d924a8a8ed0d290abc5c403 --&gt;\n&lt;g id=\"node345\" class=\"node\"&gt;\n&lt;title&gt;c948baff4d924a8a8ed0d290abc5c403&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11838.72,-459.72 11837.28,-459.72 11837.28,-458.28 11838.72,-458.28 11838.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b82ed99081594271bc4c4054cad85d77&amp;#45;&amp;#45;c948baff4d924a8a8ed0d290abc5c403 --&gt;\n&lt;g id=\"edge343\" class=\"edge\"&gt;\n&lt;title&gt;b82ed99081594271bc4c4054cad85d77&amp;#45;&amp;#45;c948baff4d924a8a8ed0d290abc5c403&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11745.47,-459C11748.2,-459 11834.25,-459 11836.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8aeeccf54f8d4557abdcf8c5d962d77c --&gt;\n&lt;g id=\"node346\" class=\"node\"&gt;\n&lt;title&gt;8aeeccf54f8d4557abdcf8c5d962d77c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11991.12,-459.72 11989.68,-459.72 11989.68,-458.28 11991.12,-458.28 11991.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c948baff4d924a8a8ed0d290abc5c403&amp;#45;&amp;#45;8aeeccf54f8d4557abdcf8c5d962d77c --&gt;\n&lt;g id=\"edge344\" class=\"edge\"&gt;\n&lt;title&gt;c948baff4d924a8a8ed0d290abc5c403&amp;#45;&amp;#45;8aeeccf54f8d4557abdcf8c5d962d77c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11839.11,-459C11843.59,-459 11984.88,-459 11989.29,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c79f596f5b1409f953989b44273ecc4 --&gt;\n&lt;g id=\"node347\" class=\"node\"&gt;\n&lt;title&gt;7c79f596f5b1409f953989b44273ecc4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12143.52,-459.72 12142.08,-459.72 12142.08,-458.28 12143.52,-458.28 12143.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8aeeccf54f8d4557abdcf8c5d962d77c&amp;#45;&amp;#45;7c79f596f5b1409f953989b44273ecc4 --&gt;\n&lt;g id=\"edge345\" class=\"edge\"&gt;\n&lt;title&gt;8aeeccf54f8d4557abdcf8c5d962d77c&amp;#45;&amp;#45;7c79f596f5b1409f953989b44273ecc4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11991.51,-459C11995.99,-459 12137.28,-459 12141.69,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- b90013d9b7bb43dcafbef21191254c81 --&gt;\n&lt;g id=\"node348\" class=\"node\"&gt;\n&lt;title&gt;b90013d9b7bb43dcafbef21191254c81&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12237.12,-459.72 12235.68,-459.72 12235.68,-458.28 12237.12,-458.28 12237.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c79f596f5b1409f953989b44273ecc4&amp;#45;&amp;#45;b90013d9b7bb43dcafbef21191254c81 --&gt;\n&lt;g id=\"edge346\" class=\"edge\"&gt;\n&lt;title&gt;7c79f596f5b1409f953989b44273ecc4&amp;#45;&amp;#45;b90013d9b7bb43dcafbef21191254c81&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12143.87,-459C12146.6,-459 12232.65,-459 12235.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 795843c02cc44fcfa80c6e50a1c6ca95 --&gt;\n&lt;g id=\"node349\" class=\"node\"&gt;\n&lt;title&gt;795843c02cc44fcfa80c6e50a1c6ca95&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12389.52,-459.72 12388.08,-459.72 12388.08,-458.28 12389.52,-458.28 12389.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b90013d9b7bb43dcafbef21191254c81&amp;#45;&amp;#45;795843c02cc44fcfa80c6e50a1c6ca95 --&gt;\n&lt;g id=\"edge347\" class=\"edge\"&gt;\n&lt;title&gt;b90013d9b7bb43dcafbef21191254c81&amp;#45;&amp;#45;795843c02cc44fcfa80c6e50a1c6ca95&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12237.51,-459C12241.99,-459 12383.28,-459 12387.69,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2a1290f0d4fe4d9680cfd212ccf323fa --&gt;\n&lt;g id=\"node350\" class=\"node\"&gt;\n&lt;title&gt;2a1290f0d4fe4d9680cfd212ccf323fa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12541.92,-459.72 12540.48,-459.72 12540.48,-458.28 12541.92,-458.28 12541.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 795843c02cc44fcfa80c6e50a1c6ca95&amp;#45;&amp;#45;2a1290f0d4fe4d9680cfd212ccf323fa --&gt;\n&lt;g id=\"edge348\" class=\"edge\"&gt;\n&lt;title&gt;795843c02cc44fcfa80c6e50a1c6ca95&amp;#45;&amp;#45;2a1290f0d4fe4d9680cfd212ccf323fa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12389.91,-459C12394.39,-459 12535.68,-459 12540.09,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 644fcd10c27f425d92cf792d5ee76fdc --&gt;\n&lt;g id=\"node351\" class=\"node\"&gt;\n&lt;title&gt;644fcd10c27f425d92cf792d5ee76fdc&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M12721.2,-487.8C12721.2,-487.8 12618,-487.8 12618,-487.8 12612,-487.8 12606,-481.8 12606,-475.8 12606,-475.8 12606,-442.2 12606,-442.2 12606,-436.2 12612,-430.2 12618,-430.2 12618,-430.2 12721.2,-430.2 12721.2,-430.2 12727.2,-430.2 12733.2,-436.2 12733.2,-442.2 12733.2,-442.2 12733.2,-475.8 12733.2,-475.8 12733.2,-481.8 12727.2,-487.8 12721.2,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12669.6\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b01)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2a1290f0d4fe4d9680cfd212ccf323fa&amp;#45;&amp;#45;644fcd10c27f425d92cf792d5ee76fdc --&gt;\n&lt;g id=\"edge349\" class=\"edge\"&gt;\n&lt;title&gt;2a1290f0d4fe4d9680cfd212ccf323fa&amp;#45;&amp;#45;644fcd10c27f425d92cf792d5ee76fdc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12542.29,-459C12544.17,-459 12574.56,-459 12605.06,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d3a8ebdc0dc4c7b9920d573d01d6452 --&gt;\n&lt;g id=\"node352\" class=\"node\"&gt;\n&lt;title&gt;6d3a8ebdc0dc4c7b9920d573d01d6452&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M12814.8,-487.8C12814.8,-487.8 12781.2,-487.8 12781.2,-487.8 12775.2,-487.8 12769.2,-481.8 12769.2,-475.8 12769.2,-475.8 12769.2,-442.2 12769.2,-442.2 12769.2,-436.2 12775.2,-430.2 12781.2,-430.2 12781.2,-430.2 12814.8,-430.2 12814.8,-430.2 12820.8,-430.2 12826.8,-436.2 12826.8,-442.2 12826.8,-442.2 12826.8,-475.8 12826.8,-475.8 12826.8,-481.8 12820.8,-487.8 12814.8,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12798\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 644fcd10c27f425d92cf792d5ee76fdc&amp;#45;&amp;#45;6d3a8ebdc0dc4c7b9920d573d01d6452 --&gt;\n&lt;g id=\"edge350\" class=\"edge\"&gt;\n&lt;title&gt;644fcd10c27f425d92cf792d5ee76fdc&amp;#45;&amp;#45;6d3a8ebdc0dc4c7b9920d573d01d6452&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12734.17,-459C12746.22,-459 12758.25,-459 12768.51,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d3a8ebdc0dc4c7b9920d573d01d6452&amp;#45;&amp;#45;a0bd4c1ad5f54e05993f6f0d38f9132b --&gt;\n&lt;g id=\"edge1871\" class=\"edge\"&gt;\n&lt;title&gt;6d3a8ebdc0dc4c7b9920d573d01d6452&amp;#45;&amp;#45;a0bd4c1ad5f54e05993f6f0d38f9132b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12798,-488.65C12798,-499.2 12798,-509.76 12798,-520.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- a9135bf57d874e9db28331b38e1df3c2 --&gt;\n&lt;g id=\"node353\" class=\"node\"&gt;\n&lt;title&gt;a9135bf57d874e9db28331b38e1df3c2&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"12891.6\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d3a8ebdc0dc4c7b9920d573d01d6452&amp;#45;&amp;#45;a9135bf57d874e9db28331b38e1df3c2 --&gt;\n&lt;g id=\"edge351\" class=\"edge\"&gt;\n&lt;title&gt;6d3a8ebdc0dc4c7b9920d573d01d6452&amp;#45;&amp;#45;a9135bf57d874e9db28331b38e1df3c2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12827.48,-459C12847.44,-459 12872.54,-459 12884.16,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e908bbac7564d21a948d196ecd32334 --&gt;\n&lt;g id=\"node354\" class=\"node\"&gt;\n&lt;title&gt;3e908bbac7564d21a948d196ecd32334&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12985.92,-459.72 12984.48,-459.72 12984.48,-458.28 12985.92,-458.28 12985.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a9135bf57d874e9db28331b38e1df3c2&amp;#45;&amp;#45;3e908bbac7564d21a948d196ecd32334 --&gt;\n&lt;g id=\"edge352\" class=\"edge\"&gt;\n&lt;title&gt;a9135bf57d874e9db28331b38e1df3c2&amp;#45;&amp;#45;3e908bbac7564d21a948d196ecd32334&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12899.19,-459C12919.53,-459 12980.24,-459 12984.02,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e11423b7cc749ff86ebe6e6e2541a5b --&gt;\n&lt;g id=\"node355\" class=\"node\"&gt;\n&lt;title&gt;9e11423b7cc749ff86ebe6e6e2541a5b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13079.52,-459.72 13078.08,-459.72 13078.08,-458.28 13079.52,-458.28 13079.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e908bbac7564d21a948d196ecd32334&amp;#45;&amp;#45;9e11423b7cc749ff86ebe6e6e2541a5b --&gt;\n&lt;g id=\"edge353\" class=\"edge\"&gt;\n&lt;title&gt;3e908bbac7564d21a948d196ecd32334&amp;#45;&amp;#45;9e11423b7cc749ff86ebe6e6e2541a5b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12986.27,-459C12989,-459 13075.05,-459 13077.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 01564774eb5c428687460e5bba509e5b --&gt;\n&lt;g id=\"node356\" class=\"node\"&gt;\n&lt;title&gt;01564774eb5c428687460e5bba509e5b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13173.12,-459.72 13171.68,-459.72 13171.68,-458.28 13173.12,-458.28 13173.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e11423b7cc749ff86ebe6e6e2541a5b&amp;#45;&amp;#45;01564774eb5c428687460e5bba509e5b --&gt;\n&lt;g id=\"edge354\" class=\"edge\"&gt;\n&lt;title&gt;9e11423b7cc749ff86ebe6e6e2541a5b&amp;#45;&amp;#45;01564774eb5c428687460e5bba509e5b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13079.87,-459C13082.6,-459 13168.65,-459 13171.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- f95ea97e985f4c82ba0ce7367869b270 --&gt;\n&lt;g id=\"node357\" class=\"node\"&gt;\n&lt;title&gt;f95ea97e985f4c82ba0ce7367869b270&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13266.72,-459.72 13265.28,-459.72 13265.28,-458.28 13266.72,-458.28 13266.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 01564774eb5c428687460e5bba509e5b&amp;#45;&amp;#45;f95ea97e985f4c82ba0ce7367869b270 --&gt;\n&lt;g id=\"edge355\" class=\"edge\"&gt;\n&lt;title&gt;01564774eb5c428687460e5bba509e5b&amp;#45;&amp;#45;f95ea97e985f4c82ba0ce7367869b270&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13173.47,-459C13176.2,-459 13262.25,-459 13264.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 53361c386c7543f699a5854f17e50465 --&gt;\n&lt;g id=\"node358\" class=\"node\"&gt;\n&lt;title&gt;53361c386c7543f699a5854f17e50465&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13360.32,-459.72 13358.88,-459.72 13358.88,-458.28 13360.32,-458.28 13360.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f95ea97e985f4c82ba0ce7367869b270&amp;#45;&amp;#45;53361c386c7543f699a5854f17e50465 --&gt;\n&lt;g id=\"edge356\" class=\"edge\"&gt;\n&lt;title&gt;f95ea97e985f4c82ba0ce7367869b270&amp;#45;&amp;#45;53361c386c7543f699a5854f17e50465&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13267.07,-459C13269.8,-459 13355.85,-459 13358.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- a73c9ac927de4de8bdae2d9acef620af --&gt;\n&lt;g id=\"node359\" class=\"node\"&gt;\n&lt;title&gt;a73c9ac927de4de8bdae2d9acef620af&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13506.72,-459.72 13505.28,-459.72 13505.28,-458.28 13506.72,-458.28 13506.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 53361c386c7543f699a5854f17e50465&amp;#45;&amp;#45;a73c9ac927de4de8bdae2d9acef620af --&gt;\n&lt;g id=\"edge357\" class=\"edge\"&gt;\n&lt;title&gt;53361c386c7543f699a5854f17e50465&amp;#45;&amp;#45;a73c9ac927de4de8bdae2d9acef620af&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13360.7,-459C13365.01,-459 13500.66,-459 13504.9,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- e28a6b5afd864cc49356cc5fb39155bb --&gt;\n&lt;g id=\"node360\" class=\"node\"&gt;\n&lt;title&gt;e28a6b5afd864cc49356cc5fb39155bb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13653.12,-459.72 13651.68,-459.72 13651.68,-458.28 13653.12,-458.28 13653.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a73c9ac927de4de8bdae2d9acef620af&amp;#45;&amp;#45;e28a6b5afd864cc49356cc5fb39155bb --&gt;\n&lt;g id=\"edge358\" class=\"edge\"&gt;\n&lt;title&gt;a73c9ac927de4de8bdae2d9acef620af&amp;#45;&amp;#45;e28a6b5afd864cc49356cc5fb39155bb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13507.1,-459C13511.41,-459 13647.06,-459 13651.3,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- b12162f7098c41e3a88df8bf91c4a70d --&gt;\n&lt;g id=\"node361\" class=\"node\"&gt;\n&lt;title&gt;b12162f7098c41e3a88df8bf91c4a70d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13746.72,-459.72 13745.28,-459.72 13745.28,-458.28 13746.72,-458.28 13746.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e28a6b5afd864cc49356cc5fb39155bb&amp;#45;&amp;#45;b12162f7098c41e3a88df8bf91c4a70d --&gt;\n&lt;g id=\"edge359\" class=\"edge\"&gt;\n&lt;title&gt;e28a6b5afd864cc49356cc5fb39155bb&amp;#45;&amp;#45;b12162f7098c41e3a88df8bf91c4a70d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13653.47,-459C13656.2,-459 13742.25,-459 13744.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 92deefa3a96440c48f674e2165f34ab8 --&gt;\n&lt;g id=\"node362\" class=\"node\"&gt;\n&lt;title&gt;92deefa3a96440c48f674e2165f34ab8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13840.32,-459.72 13838.88,-459.72 13838.88,-458.28 13840.32,-458.28 13840.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b12162f7098c41e3a88df8bf91c4a70d&amp;#45;&amp;#45;92deefa3a96440c48f674e2165f34ab8 --&gt;\n&lt;g id=\"edge360\" class=\"edge\"&gt;\n&lt;title&gt;b12162f7098c41e3a88df8bf91c4a70d&amp;#45;&amp;#45;92deefa3a96440c48f674e2165f34ab8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13747.07,-459C13749.8,-459 13835.85,-459 13838.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- dbecd95deb89425eb6c334a31b992f4e --&gt;\n&lt;g id=\"node363\" class=\"node\"&gt;\n&lt;title&gt;dbecd95deb89425eb6c334a31b992f4e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13933.92,-459.72 13932.48,-459.72 13932.48,-458.28 13933.92,-458.28 13933.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 92deefa3a96440c48f674e2165f34ab8&amp;#45;&amp;#45;dbecd95deb89425eb6c334a31b992f4e --&gt;\n&lt;g id=\"edge361\" class=\"edge\"&gt;\n&lt;title&gt;92deefa3a96440c48f674e2165f34ab8&amp;#45;&amp;#45;dbecd95deb89425eb6c334a31b992f4e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13840.67,-459C13843.4,-459 13929.45,-459 13932.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- acad33bd395d49a5b4cbf552211e7f81 --&gt;\n&lt;g id=\"node364\" class=\"node\"&gt;\n&lt;title&gt;acad33bd395d49a5b4cbf552211e7f81&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14027.52,-459.72 14026.08,-459.72 14026.08,-458.28 14027.52,-458.28 14027.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dbecd95deb89425eb6c334a31b992f4e&amp;#45;&amp;#45;acad33bd395d49a5b4cbf552211e7f81 --&gt;\n&lt;g id=\"edge362\" class=\"edge\"&gt;\n&lt;title&gt;dbecd95deb89425eb6c334a31b992f4e&amp;#45;&amp;#45;acad33bd395d49a5b4cbf552211e7f81&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13934.27,-459C13937,-459 14023.05,-459 14025.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 006bb4f0155b4b5cbc80fbbc7f1a8d13 --&gt;\n&lt;g id=\"node365\" class=\"node\"&gt;\n&lt;title&gt;006bb4f0155b4b5cbc80fbbc7f1a8d13&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"14120.4\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- acad33bd395d49a5b4cbf552211e7f81&amp;#45;&amp;#45;006bb4f0155b4b5cbc80fbbc7f1a8d13 --&gt;\n&lt;g id=\"edge363\" class=\"edge\"&gt;\n&lt;title&gt;acad33bd395d49a5b4cbf552211e7f81&amp;#45;&amp;#45;006bb4f0155b4b5cbc80fbbc7f1a8d13&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14027.87,-459C14030.17,-459 14092.01,-459 14112.72,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d21b84e46187498b9b735452be371bc2 --&gt;\n&lt;g id=\"node366\" class=\"node\"&gt;\n&lt;title&gt;d21b84e46187498b9b735452be371bc2&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M14230.8,-487.8C14230.8,-487.8 14197.2,-487.8 14197.2,-487.8 14191.2,-487.8 14185.2,-481.8 14185.2,-475.8 14185.2,-475.8 14185.2,-442.2 14185.2,-442.2 14185.2,-436.2 14191.2,-430.2 14197.2,-430.2 14197.2,-430.2 14230.8,-430.2 14230.8,-430.2 14236.8,-430.2 14242.8,-436.2 14242.8,-442.2 14242.8,-442.2 14242.8,-475.8 14242.8,-475.8 14242.8,-481.8 14236.8,-487.8 14230.8,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"14214\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 006bb4f0155b4b5cbc80fbbc7f1a8d13&amp;#45;&amp;#45;d21b84e46187498b9b735452be371bc2 --&gt;\n&lt;g id=\"edge364\" class=\"edge\"&gt;\n&lt;title&gt;006bb4f0155b4b5cbc80fbbc7f1a8d13&amp;#45;&amp;#45;d21b84e46187498b9b735452be371bc2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14127.99,-459C14139.64,-459 14164.52,-459 14184.37,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d21b84e46187498b9b735452be371bc2&amp;#45;&amp;#45;b55dcb58220b4d4bb25897b3e25f2ab4 --&gt;\n&lt;g id=\"edge1872\" class=\"edge\"&gt;\n&lt;title&gt;d21b84e46187498b9b735452be371bc2&amp;#45;&amp;#45;b55dcb58220b4d4bb25897b3e25f2ab4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14214,-488.65C14214,-499.2 14214,-509.76 14214,-520.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 46a0afd4571b42fab2f6aaa493435e33 --&gt;\n&lt;g id=\"node367\" class=\"node\"&gt;\n&lt;title&gt;46a0afd4571b42fab2f6aaa493435e33&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M14324.4,-487.8C14324.4,-487.8 14290.8,-487.8 14290.8,-487.8 14284.8,-487.8 14278.8,-481.8 14278.8,-475.8 14278.8,-475.8 14278.8,-442.2 14278.8,-442.2 14278.8,-436.2 14284.8,-430.2 14290.8,-430.2 14290.8,-430.2 14324.4,-430.2 14324.4,-430.2 14330.4,-430.2 14336.4,-436.2 14336.4,-442.2 14336.4,-442.2 14336.4,-475.8 14336.4,-475.8 14336.4,-481.8 14330.4,-487.8 14324.4,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"14307.6\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d21b84e46187498b9b735452be371bc2&amp;#45;&amp;#45;46a0afd4571b42fab2f6aaa493435e33 --&gt;\n&lt;g id=\"edge365\" class=\"edge\"&gt;\n&lt;title&gt;d21b84e46187498b9b735452be371bc2&amp;#45;&amp;#45;46a0afd4571b42fab2f6aaa493435e33&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14243.48,-459C14254.4,-459 14266.87,-459 14277.82,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 46a0afd4571b42fab2f6aaa493435e33&amp;#45;&amp;#45;26d2f9027061451080900faed060877e --&gt;\n&lt;g id=\"edge1873\" class=\"edge\"&gt;\n&lt;title&gt;46a0afd4571b42fab2f6aaa493435e33&amp;#45;&amp;#45;26d2f9027061451080900faed060877e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14307.6,-488.65C14307.6,-499.2 14307.6,-509.76 14307.6,-520.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2f079adbff114446b47ced455875e51e --&gt;\n&lt;g id=\"node368\" class=\"node\"&gt;\n&lt;title&gt;2f079adbff114446b47ced455875e51e&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M14535.6,-487.8C14535.6,-487.8 14384.4,-487.8 14384.4,-487.8 14378.4,-487.8 14372.4,-481.8 14372.4,-475.8 14372.4,-475.8 14372.4,-442.2 14372.4,-442.2 14372.4,-436.2 14378.4,-430.2 14384.4,-430.2 14384.4,-430.2 14535.6,-430.2 14535.6,-430.2 14541.6,-430.2 14547.6,-436.2 14547.6,-442.2 14547.6,-442.2 14547.6,-475.8 14547.6,-475.8 14547.6,-481.8 14541.6,-487.8 14535.6,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"14460\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 46a0afd4571b42fab2f6aaa493435e33&amp;#45;&amp;#45;2f079adbff114446b47ced455875e51e --&gt;\n&lt;g id=\"edge366\" class=\"edge\"&gt;\n&lt;title&gt;46a0afd4571b42fab2f6aaa493435e33&amp;#45;&amp;#45;2f079adbff114446b47ced455875e51e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14337.24,-459C14347.3,-459 14359.19,-459 14371.53,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- be34e6355bfc414e9ee49a687b58e88b --&gt;\n&lt;g id=\"node369\" class=\"node\"&gt;\n&lt;title&gt;be34e6355bfc414e9ee49a687b58e88b&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M14629.2,-487.8C14629.2,-487.8 14595.6,-487.8 14595.6,-487.8 14589.6,-487.8 14583.6,-481.8 14583.6,-475.8 14583.6,-475.8 14583.6,-442.2 14583.6,-442.2 14583.6,-436.2 14589.6,-430.2 14595.6,-430.2 14595.6,-430.2 14629.2,-430.2 14629.2,-430.2 14635.2,-430.2 14641.2,-436.2 14641.2,-442.2 14641.2,-442.2 14641.2,-475.8 14641.2,-475.8 14641.2,-481.8 14635.2,-487.8 14629.2,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"14612.4\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2f079adbff114446b47ced455875e51e&amp;#45;&amp;#45;be34e6355bfc414e9ee49a687b58e88b --&gt;\n&lt;g id=\"edge367\" class=\"edge\"&gt;\n&lt;title&gt;2f079adbff114446b47ced455875e51e&amp;#45;&amp;#45;be34e6355bfc414e9ee49a687b58e88b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14548.49,-459C14560.77,-459 14572.6,-459 14582.62,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- be34e6355bfc414e9ee49a687b58e88b&amp;#45;&amp;#45;29da253322c04e459fe18555b79db711 --&gt;\n&lt;g id=\"edge1874\" class=\"edge\"&gt;\n&lt;title&gt;be34e6355bfc414e9ee49a687b58e88b&amp;#45;&amp;#45;29da253322c04e459fe18555b79db711&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14612.4,-488.65C14612.4,-499.2 14612.4,-509.76 14612.4,-520.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 86dc2ad5f9524a8fbd6e4688924e0dd5 --&gt;\n&lt;g id=\"node370\" class=\"node\"&gt;\n&lt;title&gt;86dc2ad5f9524a8fbd6e4688924e0dd5&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M14722.8,-487.8C14722.8,-487.8 14689.2,-487.8 14689.2,-487.8 14683.2,-487.8 14677.2,-481.8 14677.2,-475.8 14677.2,-475.8 14677.2,-442.2 14677.2,-442.2 14677.2,-436.2 14683.2,-430.2 14689.2,-430.2 14689.2,-430.2 14722.8,-430.2 14722.8,-430.2 14728.8,-430.2 14734.8,-436.2 14734.8,-442.2 14734.8,-442.2 14734.8,-475.8 14734.8,-475.8 14734.8,-481.8 14728.8,-487.8 14722.8,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"14706\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- be34e6355bfc414e9ee49a687b58e88b&amp;#45;&amp;#45;86dc2ad5f9524a8fbd6e4688924e0dd5 --&gt;\n&lt;g id=\"edge368\" class=\"edge\"&gt;\n&lt;title&gt;be34e6355bfc414e9ee49a687b58e88b&amp;#45;&amp;#45;86dc2ad5f9524a8fbd6e4688924e0dd5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14641.88,-459C14652.8,-459 14665.27,-459 14676.22,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 86dc2ad5f9524a8fbd6e4688924e0dd5&amp;#45;&amp;#45;e87d383c57b749e4b85af9d42208dbfa --&gt;\n&lt;g id=\"edge1875\" class=\"edge\"&gt;\n&lt;title&gt;86dc2ad5f9524a8fbd6e4688924e0dd5&amp;#45;&amp;#45;e87d383c57b749e4b85af9d42208dbfa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14706,-488.65C14706,-499.2 14706,-509.76 14706,-520.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- eb06a41fe1bc409cbec7095874521c57 --&gt;\n&lt;g id=\"node371\" class=\"node\"&gt;\n&lt;title&gt;eb06a41fe1bc409cbec7095874521c57&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"14799.6\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 86dc2ad5f9524a8fbd6e4688924e0dd5&amp;#45;&amp;#45;eb06a41fe1bc409cbec7095874521c57 --&gt;\n&lt;g id=\"edge369\" class=\"edge\"&gt;\n&lt;title&gt;86dc2ad5f9524a8fbd6e4688924e0dd5&amp;#45;&amp;#45;eb06a41fe1bc409cbec7095874521c57&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14735.48,-459C14755.44,-459 14780.54,-459 14792.16,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a0a3832e2fb4f15a985f92e317aceaa --&gt;\n&lt;g id=\"node372\" class=\"node\"&gt;\n&lt;title&gt;9a0a3832e2fb4f15a985f92e317aceaa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14893.92,-459.72 14892.48,-459.72 14892.48,-458.28 14893.92,-458.28 14893.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- eb06a41fe1bc409cbec7095874521c57&amp;#45;&amp;#45;9a0a3832e2fb4f15a985f92e317aceaa --&gt;\n&lt;g id=\"edge370\" class=\"edge\"&gt;\n&lt;title&gt;eb06a41fe1bc409cbec7095874521c57&amp;#45;&amp;#45;9a0a3832e2fb4f15a985f92e317aceaa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14807.19,-459C14827.53,-459 14888.24,-459 14892.02,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e0f7177d8464d95b82e78dca9b8ef04 --&gt;\n&lt;g id=\"node373\" class=\"node\"&gt;\n&lt;title&gt;6e0f7177d8464d95b82e78dca9b8ef04&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14987.52,-459.72 14986.08,-459.72 14986.08,-458.28 14987.52,-458.28 14987.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a0a3832e2fb4f15a985f92e317aceaa&amp;#45;&amp;#45;6e0f7177d8464d95b82e78dca9b8ef04 --&gt;\n&lt;g id=\"edge371\" class=\"edge\"&gt;\n&lt;title&gt;9a0a3832e2fb4f15a985f92e317aceaa&amp;#45;&amp;#45;6e0f7177d8464d95b82e78dca9b8ef04&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14894.27,-459C14897,-459 14983.05,-459 14985.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9f820e61e25d4717a64f0b154b789b09 --&gt;\n&lt;g id=\"node374\" class=\"node\"&gt;\n&lt;title&gt;9f820e61e25d4717a64f0b154b789b09&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15081.12,-459.72 15079.68,-459.72 15079.68,-458.28 15081.12,-458.28 15081.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e0f7177d8464d95b82e78dca9b8ef04&amp;#45;&amp;#45;9f820e61e25d4717a64f0b154b789b09 --&gt;\n&lt;g id=\"edge372\" class=\"edge\"&gt;\n&lt;title&gt;6e0f7177d8464d95b82e78dca9b8ef04&amp;#45;&amp;#45;9f820e61e25d4717a64f0b154b789b09&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14987.87,-459C14990.6,-459 15076.65,-459 15079.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 743df186309547b19a2cf81a52fefe0a --&gt;\n&lt;g id=\"node375\" class=\"node\"&gt;\n&lt;title&gt;743df186309547b19a2cf81a52fefe0a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15233.52,-459.72 15232.08,-459.72 15232.08,-458.28 15233.52,-458.28 15233.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9f820e61e25d4717a64f0b154b789b09&amp;#45;&amp;#45;743df186309547b19a2cf81a52fefe0a --&gt;\n&lt;g id=\"edge373\" class=\"edge\"&gt;\n&lt;title&gt;9f820e61e25d4717a64f0b154b789b09&amp;#45;&amp;#45;743df186309547b19a2cf81a52fefe0a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15081.51,-459C15085.99,-459 15227.28,-459 15231.69,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 28d4cf675c154f39bba025c1a1ac2b7c --&gt;\n&lt;g id=\"node376\" class=\"node\"&gt;\n&lt;title&gt;28d4cf675c154f39bba025c1a1ac2b7c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15385.92,-459.72 15384.48,-459.72 15384.48,-458.28 15385.92,-458.28 15385.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 743df186309547b19a2cf81a52fefe0a&amp;#45;&amp;#45;28d4cf675c154f39bba025c1a1ac2b7c --&gt;\n&lt;g id=\"edge374\" class=\"edge\"&gt;\n&lt;title&gt;743df186309547b19a2cf81a52fefe0a&amp;#45;&amp;#45;28d4cf675c154f39bba025c1a1ac2b7c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15233.91,-459C15238.39,-459 15379.68,-459 15384.09,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 340aab4054e443b8b14cffe87201067a --&gt;\n&lt;g id=\"node377\" class=\"node\"&gt;\n&lt;title&gt;340aab4054e443b8b14cffe87201067a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15479.52,-459.72 15478.08,-459.72 15478.08,-458.28 15479.52,-458.28 15479.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 28d4cf675c154f39bba025c1a1ac2b7c&amp;#45;&amp;#45;340aab4054e443b8b14cffe87201067a --&gt;\n&lt;g id=\"edge375\" class=\"edge\"&gt;\n&lt;title&gt;28d4cf675c154f39bba025c1a1ac2b7c&amp;#45;&amp;#45;340aab4054e443b8b14cffe87201067a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15386.27,-459C15389,-459 15475.05,-459 15477.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- b6ea3327440a4ab79dc746124d50c071 --&gt;\n&lt;g id=\"node378\" class=\"node\"&gt;\n&lt;title&gt;b6ea3327440a4ab79dc746124d50c071&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15573.12,-459.72 15571.68,-459.72 15571.68,-458.28 15573.12,-458.28 15573.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 340aab4054e443b8b14cffe87201067a&amp;#45;&amp;#45;b6ea3327440a4ab79dc746124d50c071 --&gt;\n&lt;g id=\"edge376\" class=\"edge\"&gt;\n&lt;title&gt;340aab4054e443b8b14cffe87201067a&amp;#45;&amp;#45;b6ea3327440a4ab79dc746124d50c071&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15479.87,-459C15482.6,-459 15568.65,-459 15571.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- a7846279b13b473983e4f0a09eb9e483 --&gt;\n&lt;g id=\"node379\" class=\"node\"&gt;\n&lt;title&gt;a7846279b13b473983e4f0a09eb9e483&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"15666\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- b6ea3327440a4ab79dc746124d50c071&amp;#45;&amp;#45;a7846279b13b473983e4f0a09eb9e483 --&gt;\n&lt;g id=\"edge377\" class=\"edge\"&gt;\n&lt;title&gt;b6ea3327440a4ab79dc746124d50c071&amp;#45;&amp;#45;a7846279b13b473983e4f0a09eb9e483&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15573.47,-459C15575.77,-459 15637.61,-459 15658.32,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9437008861448e284f449be2249da4c --&gt;\n&lt;g id=\"node380\" class=\"node\"&gt;\n&lt;title&gt;c9437008861448e284f449be2249da4c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M15776.4,-487.8C15776.4,-487.8 15742.8,-487.8 15742.8,-487.8 15736.8,-487.8 15730.8,-481.8 15730.8,-475.8 15730.8,-475.8 15730.8,-442.2 15730.8,-442.2 15730.8,-436.2 15736.8,-430.2 15742.8,-430.2 15742.8,-430.2 15776.4,-430.2 15776.4,-430.2 15782.4,-430.2 15788.4,-436.2 15788.4,-442.2 15788.4,-442.2 15788.4,-475.8 15788.4,-475.8 15788.4,-481.8 15782.4,-487.8 15776.4,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"15759.6\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- a7846279b13b473983e4f0a09eb9e483&amp;#45;&amp;#45;c9437008861448e284f449be2249da4c --&gt;\n&lt;g id=\"edge378\" class=\"edge\"&gt;\n&lt;title&gt;a7846279b13b473983e4f0a09eb9e483&amp;#45;&amp;#45;c9437008861448e284f449be2249da4c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15673.59,-459C15685.24,-459 15710.12,-459 15729.97,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9437008861448e284f449be2249da4c&amp;#45;&amp;#45;ef57b145414240e6847a1c398968d11a --&gt;\n&lt;g id=\"edge1876\" class=\"edge\"&gt;\n&lt;title&gt;c9437008861448e284f449be2249da4c&amp;#45;&amp;#45;ef57b145414240e6847a1c398968d11a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15759.6,-488.65C15759.6,-499.2 15759.6,-509.76 15759.6,-520.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- e6551ee913ce4c4891652f50fd3e263c --&gt;\n&lt;g id=\"node381\" class=\"node\"&gt;\n&lt;title&gt;e6551ee913ce4c4891652f50fd3e263c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"15853.2\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9437008861448e284f449be2249da4c&amp;#45;&amp;#45;e6551ee913ce4c4891652f50fd3e263c --&gt;\n&lt;g id=\"edge379\" class=\"edge\"&gt;\n&lt;title&gt;c9437008861448e284f449be2249da4c&amp;#45;&amp;#45;e6551ee913ce4c4891652f50fd3e263c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15789.08,-459C15809.04,-459 15834.14,-459 15845.76,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ac5a6781c2e40268d4b322d952c73d3 --&gt;\n&lt;g id=\"node382\" class=\"node\"&gt;\n&lt;title&gt;0ac5a6781c2e40268d4b322d952c73d3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15947.52,-459.72 15946.08,-459.72 15946.08,-458.28 15947.52,-458.28 15947.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e6551ee913ce4c4891652f50fd3e263c&amp;#45;&amp;#45;0ac5a6781c2e40268d4b322d952c73d3 --&gt;\n&lt;g id=\"edge380\" class=\"edge\"&gt;\n&lt;title&gt;e6551ee913ce4c4891652f50fd3e263c&amp;#45;&amp;#45;0ac5a6781c2e40268d4b322d952c73d3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15860.79,-459C15881.13,-459 15941.84,-459 15945.62,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2668347a3f0845c4ab76ce7c90e25bb5 --&gt;\n&lt;g id=\"node383\" class=\"node\"&gt;\n&lt;title&gt;2668347a3f0845c4ab76ce7c90e25bb5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16041.12,-459.72 16039.68,-459.72 16039.68,-458.28 16041.12,-458.28 16041.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ac5a6781c2e40268d4b322d952c73d3&amp;#45;&amp;#45;2668347a3f0845c4ab76ce7c90e25bb5 --&gt;\n&lt;g id=\"edge381\" class=\"edge\"&gt;\n&lt;title&gt;0ac5a6781c2e40268d4b322d952c73d3&amp;#45;&amp;#45;2668347a3f0845c4ab76ce7c90e25bb5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15947.87,-459C15950.6,-459 16036.65,-459 16039.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4ac457a3eb1446f59743e21b6d8cae37 --&gt;\n&lt;g id=\"node384\" class=\"node\"&gt;\n&lt;title&gt;4ac457a3eb1446f59743e21b6d8cae37&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16193.52,-459.72 16192.08,-459.72 16192.08,-458.28 16193.52,-458.28 16193.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2668347a3f0845c4ab76ce7c90e25bb5&amp;#45;&amp;#45;4ac457a3eb1446f59743e21b6d8cae37 --&gt;\n&lt;g id=\"edge382\" class=\"edge\"&gt;\n&lt;title&gt;2668347a3f0845c4ab76ce7c90e25bb5&amp;#45;&amp;#45;4ac457a3eb1446f59743e21b6d8cae37&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16041.51,-459C16045.99,-459 16187.28,-459 16191.69,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 70cd201287c9423bbc720618bca054ba --&gt;\n&lt;g id=\"node385\" class=\"node\"&gt;\n&lt;title&gt;70cd201287c9423bbc720618bca054ba&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16345.92,-459.72 16344.48,-459.72 16344.48,-458.28 16345.92,-458.28 16345.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4ac457a3eb1446f59743e21b6d8cae37&amp;#45;&amp;#45;70cd201287c9423bbc720618bca054ba --&gt;\n&lt;g id=\"edge383\" class=\"edge\"&gt;\n&lt;title&gt;4ac457a3eb1446f59743e21b6d8cae37&amp;#45;&amp;#45;70cd201287c9423bbc720618bca054ba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16193.91,-459C16198.39,-459 16339.68,-459 16344.09,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- e111230fca6e4b0db5915b90565639d5 --&gt;\n&lt;g id=\"node386\" class=\"node\"&gt;\n&lt;title&gt;e111230fca6e4b0db5915b90565639d5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16439.52,-459.72 16438.08,-459.72 16438.08,-458.28 16439.52,-458.28 16439.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 70cd201287c9423bbc720618bca054ba&amp;#45;&amp;#45;e111230fca6e4b0db5915b90565639d5 --&gt;\n&lt;g id=\"edge384\" class=\"edge\"&gt;\n&lt;title&gt;70cd201287c9423bbc720618bca054ba&amp;#45;&amp;#45;e111230fca6e4b0db5915b90565639d5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16346.27,-459C16349,-459 16435.05,-459 16437.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d3b4a86d217f423986d6c800f1593a30 --&gt;\n&lt;g id=\"node387\" class=\"node\"&gt;\n&lt;title&gt;d3b4a86d217f423986d6c800f1593a30&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"16532.4\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- e111230fca6e4b0db5915b90565639d5&amp;#45;&amp;#45;d3b4a86d217f423986d6c800f1593a30 --&gt;\n&lt;g id=\"edge385\" class=\"edge\"&gt;\n&lt;title&gt;e111230fca6e4b0db5915b90565639d5&amp;#45;&amp;#45;d3b4a86d217f423986d6c800f1593a30&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16439.87,-459C16442.17,-459 16504.01,-459 16524.72,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 53d3acb438144a3fa00d2e3f62039724 --&gt;\n&lt;g id=\"node388\" class=\"node\"&gt;\n&lt;title&gt;53d3acb438144a3fa00d2e3f62039724&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"16626\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- d3b4a86d217f423986d6c800f1593a30&amp;#45;&amp;#45;53d3acb438144a3fa00d2e3f62039724 --&gt;\n&lt;g id=\"edge386\" class=\"edge\"&gt;\n&lt;title&gt;d3b4a86d217f423986d6c800f1593a30&amp;#45;&amp;#45;53d3acb438144a3fa00d2e3f62039724&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16539.99,-459C16556.89,-459 16601.64,-459 16618.47,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 38b8114752af41f8a737aa7dcf59945a --&gt;\n&lt;g id=\"node389\" class=\"node\"&gt;\n&lt;title&gt;38b8114752af41f8a737aa7dcf59945a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16720.32,-459.72 16718.88,-459.72 16718.88,-458.28 16720.32,-458.28 16720.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 53d3acb438144a3fa00d2e3f62039724&amp;#45;&amp;#45;38b8114752af41f8a737aa7dcf59945a --&gt;\n&lt;g id=\"edge387\" class=\"edge\"&gt;\n&lt;title&gt;53d3acb438144a3fa00d2e3f62039724&amp;#45;&amp;#45;38b8114752af41f8a737aa7dcf59945a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16633.59,-459C16653.93,-459 16714.64,-459 16718.42,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d9d11a8a4f3a4de783208c55c14db0d3 --&gt;\n&lt;g id=\"node390\" class=\"node\"&gt;\n&lt;title&gt;d9d11a8a4f3a4de783208c55c14db0d3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16813.92,-459.72 16812.48,-459.72 16812.48,-458.28 16813.92,-458.28 16813.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 38b8114752af41f8a737aa7dcf59945a&amp;#45;&amp;#45;d9d11a8a4f3a4de783208c55c14db0d3 --&gt;\n&lt;g id=\"edge388\" class=\"edge\"&gt;\n&lt;title&gt;38b8114752af41f8a737aa7dcf59945a&amp;#45;&amp;#45;d9d11a8a4f3a4de783208c55c14db0d3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16720.67,-459C16723.4,-459 16809.45,-459 16812.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2fd628cb845a47dfb3b6dea49586783a --&gt;\n&lt;g id=\"node391\" class=\"node\"&gt;\n&lt;title&gt;2fd628cb845a47dfb3b6dea49586783a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16907.52,-459.72 16906.08,-459.72 16906.08,-458.28 16907.52,-458.28 16907.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d9d11a8a4f3a4de783208c55c14db0d3&amp;#45;&amp;#45;2fd628cb845a47dfb3b6dea49586783a --&gt;\n&lt;g id=\"edge389\" class=\"edge\"&gt;\n&lt;title&gt;d9d11a8a4f3a4de783208c55c14db0d3&amp;#45;&amp;#45;2fd628cb845a47dfb3b6dea49586783a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16814.27,-459C16817,-459 16903.05,-459 16905.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- f397fb98b42446f6974382ae46885064 --&gt;\n&lt;g id=\"node392\" class=\"node\"&gt;\n&lt;title&gt;f397fb98b42446f6974382ae46885064&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17059.92,-459.72 17058.48,-459.72 17058.48,-458.28 17059.92,-458.28 17059.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2fd628cb845a47dfb3b6dea49586783a&amp;#45;&amp;#45;f397fb98b42446f6974382ae46885064 --&gt;\n&lt;g id=\"edge390\" class=\"edge\"&gt;\n&lt;title&gt;2fd628cb845a47dfb3b6dea49586783a&amp;#45;&amp;#45;f397fb98b42446f6974382ae46885064&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16907.91,-459C16912.39,-459 17053.68,-459 17058.09,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9622bf341de5405ca1cc4344d0ffe79d --&gt;\n&lt;g id=\"node393\" class=\"node\"&gt;\n&lt;title&gt;9622bf341de5405ca1cc4344d0ffe79d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17212.32,-459.72 17210.88,-459.72 17210.88,-458.28 17212.32,-458.28 17212.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f397fb98b42446f6974382ae46885064&amp;#45;&amp;#45;9622bf341de5405ca1cc4344d0ffe79d --&gt;\n&lt;g id=\"edge391\" class=\"edge\"&gt;\n&lt;title&gt;f397fb98b42446f6974382ae46885064&amp;#45;&amp;#45;9622bf341de5405ca1cc4344d0ffe79d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17060.31,-459C17064.79,-459 17206.08,-459 17210.49,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0dbd90bd6bed4928ac4ff0ec6531aab7 --&gt;\n&lt;g id=\"node394\" class=\"node\"&gt;\n&lt;title&gt;0dbd90bd6bed4928ac4ff0ec6531aab7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17305.92,-459.72 17304.48,-459.72 17304.48,-458.28 17305.92,-458.28 17305.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9622bf341de5405ca1cc4344d0ffe79d&amp;#45;&amp;#45;0dbd90bd6bed4928ac4ff0ec6531aab7 --&gt;\n&lt;g id=\"edge392\" class=\"edge\"&gt;\n&lt;title&gt;9622bf341de5405ca1cc4344d0ffe79d&amp;#45;&amp;#45;0dbd90bd6bed4928ac4ff0ec6531aab7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17212.67,-459C17215.4,-459 17301.45,-459 17304.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- f1a4d9a827d64b69a065de4d99a711b7 --&gt;\n&lt;g id=\"node395\" class=\"node\"&gt;\n&lt;title&gt;f1a4d9a827d64b69a065de4d99a711b7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17399.52,-459.72 17398.08,-459.72 17398.08,-458.28 17399.52,-458.28 17399.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0dbd90bd6bed4928ac4ff0ec6531aab7&amp;#45;&amp;#45;f1a4d9a827d64b69a065de4d99a711b7 --&gt;\n&lt;g id=\"edge393\" class=\"edge\"&gt;\n&lt;title&gt;0dbd90bd6bed4928ac4ff0ec6531aab7&amp;#45;&amp;#45;f1a4d9a827d64b69a065de4d99a711b7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17306.27,-459C17309,-459 17395.05,-459 17397.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 122e1d05fa9a41c7adde5a82825aab8c --&gt;\n&lt;g id=\"node396\" class=\"node\"&gt;\n&lt;title&gt;122e1d05fa9a41c7adde5a82825aab8c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"17492.4\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- f1a4d9a827d64b69a065de4d99a711b7&amp;#45;&amp;#45;122e1d05fa9a41c7adde5a82825aab8c --&gt;\n&lt;g id=\"edge394\" class=\"edge\"&gt;\n&lt;title&gt;f1a4d9a827d64b69a065de4d99a711b7&amp;#45;&amp;#45;122e1d05fa9a41c7adde5a82825aab8c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17399.87,-459C17402.17,-459 17464.01,-459 17484.72,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- dcaff583bdd54267a58ba1940d2c37ac --&gt;\n&lt;g id=\"node397\" class=\"node\"&gt;\n&lt;title&gt;dcaff583bdd54267a58ba1940d2c37ac&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"17586\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 122e1d05fa9a41c7adde5a82825aab8c&amp;#45;&amp;#45;dcaff583bdd54267a58ba1940d2c37ac --&gt;\n&lt;g id=\"edge395\" class=\"edge\"&gt;\n&lt;title&gt;122e1d05fa9a41c7adde5a82825aab8c&amp;#45;&amp;#45;dcaff583bdd54267a58ba1940d2c37ac&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17499.99,-459C17516.89,-459 17561.64,-459 17578.47,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 59ae66a2d8d7480ebb15cd485bb2f086 --&gt;\n&lt;g id=\"node398\" class=\"node\"&gt;\n&lt;title&gt;59ae66a2d8d7480ebb15cd485bb2f086&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17680.32,-459.72 17678.88,-459.72 17678.88,-458.28 17680.32,-458.28 17680.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dcaff583bdd54267a58ba1940d2c37ac&amp;#45;&amp;#45;59ae66a2d8d7480ebb15cd485bb2f086 --&gt;\n&lt;g id=\"edge396\" class=\"edge\"&gt;\n&lt;title&gt;dcaff583bdd54267a58ba1940d2c37ac&amp;#45;&amp;#45;59ae66a2d8d7480ebb15cd485bb2f086&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17593.59,-459C17613.93,-459 17674.64,-459 17678.42,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- b6423f4d1a87492cbf7fd80eb45f452e --&gt;\n&lt;g id=\"node399\" class=\"node\"&gt;\n&lt;title&gt;b6423f4d1a87492cbf7fd80eb45f452e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17773.92,-459.72 17772.48,-459.72 17772.48,-458.28 17773.92,-458.28 17773.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 59ae66a2d8d7480ebb15cd485bb2f086&amp;#45;&amp;#45;b6423f4d1a87492cbf7fd80eb45f452e --&gt;\n&lt;g id=\"edge397\" class=\"edge\"&gt;\n&lt;title&gt;59ae66a2d8d7480ebb15cd485bb2f086&amp;#45;&amp;#45;b6423f4d1a87492cbf7fd80eb45f452e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17680.67,-459C17683.4,-459 17769.45,-459 17772.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- f08173b7d4b34179a644f8536cdb3210 --&gt;\n&lt;g id=\"node400\" class=\"node\"&gt;\n&lt;title&gt;f08173b7d4b34179a644f8536cdb3210&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17867.52,-459.72 17866.08,-459.72 17866.08,-458.28 17867.52,-458.28 17867.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b6423f4d1a87492cbf7fd80eb45f452e&amp;#45;&amp;#45;f08173b7d4b34179a644f8536cdb3210 --&gt;\n&lt;g id=\"edge398\" class=\"edge\"&gt;\n&lt;title&gt;b6423f4d1a87492cbf7fd80eb45f452e&amp;#45;&amp;#45;f08173b7d4b34179a644f8536cdb3210&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17774.27,-459C17777,-459 17863.05,-459 17865.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a0167f94fb04d81b4e4aa52fd612b69 --&gt;\n&lt;g id=\"node401\" class=\"node\"&gt;\n&lt;title&gt;9a0167f94fb04d81b4e4aa52fd612b69&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17961.12,-459.72 17959.68,-459.72 17959.68,-458.28 17961.12,-458.28 17961.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f08173b7d4b34179a644f8536cdb3210&amp;#45;&amp;#45;9a0167f94fb04d81b4e4aa52fd612b69 --&gt;\n&lt;g id=\"edge399\" class=\"edge\"&gt;\n&lt;title&gt;f08173b7d4b34179a644f8536cdb3210&amp;#45;&amp;#45;9a0167f94fb04d81b4e4aa52fd612b69&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17867.87,-459C17870.6,-459 17956.65,-459 17959.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8d6476e9d8f475db4d8b112c0b0e4a2 --&gt;\n&lt;g id=\"node402\" class=\"node\"&gt;\n&lt;title&gt;f8d6476e9d8f475db4d8b112c0b0e4a2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18113.52,-459.72 18112.08,-459.72 18112.08,-458.28 18113.52,-458.28 18113.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a0167f94fb04d81b4e4aa52fd612b69&amp;#45;&amp;#45;f8d6476e9d8f475db4d8b112c0b0e4a2 --&gt;\n&lt;g id=\"edge400\" class=\"edge\"&gt;\n&lt;title&gt;9a0167f94fb04d81b4e4aa52fd612b69&amp;#45;&amp;#45;f8d6476e9d8f475db4d8b112c0b0e4a2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17961.51,-459C17965.99,-459 18107.28,-459 18111.69,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- ac829979de4c42d8ba5c4e603fac4c89 --&gt;\n&lt;g id=\"node403\" class=\"node\"&gt;\n&lt;title&gt;ac829979de4c42d8ba5c4e603fac4c89&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18265.92,-459.72 18264.48,-459.72 18264.48,-458.28 18265.92,-458.28 18265.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8d6476e9d8f475db4d8b112c0b0e4a2&amp;#45;&amp;#45;ac829979de4c42d8ba5c4e603fac4c89 --&gt;\n&lt;g id=\"edge401\" class=\"edge\"&gt;\n&lt;title&gt;f8d6476e9d8f475db4d8b112c0b0e4a2&amp;#45;&amp;#45;ac829979de4c42d8ba5c4e603fac4c89&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18113.91,-459C18118.39,-459 18259.68,-459 18264.09,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8c12424a2b3047d1afa8c09579154b70 --&gt;\n&lt;g id=\"node404\" class=\"node\"&gt;\n&lt;title&gt;8c12424a2b3047d1afa8c09579154b70&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18359.52,-459.72 18358.08,-459.72 18358.08,-458.28 18359.52,-458.28 18359.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ac829979de4c42d8ba5c4e603fac4c89&amp;#45;&amp;#45;8c12424a2b3047d1afa8c09579154b70 --&gt;\n&lt;g id=\"edge402\" class=\"edge\"&gt;\n&lt;title&gt;ac829979de4c42d8ba5c4e603fac4c89&amp;#45;&amp;#45;8c12424a2b3047d1afa8c09579154b70&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18266.27,-459C18269,-459 18355.05,-459 18357.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- b1b53d0b03414b129ab6ad870189d09a --&gt;\n&lt;g id=\"node405\" class=\"node\"&gt;\n&lt;title&gt;b1b53d0b03414b129ab6ad870189d09a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18453.12,-459.72 18451.68,-459.72 18451.68,-458.28 18453.12,-458.28 18453.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8c12424a2b3047d1afa8c09579154b70&amp;#45;&amp;#45;b1b53d0b03414b129ab6ad870189d09a --&gt;\n&lt;g id=\"edge403\" class=\"edge\"&gt;\n&lt;title&gt;8c12424a2b3047d1afa8c09579154b70&amp;#45;&amp;#45;b1b53d0b03414b129ab6ad870189d09a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18359.87,-459C18362.6,-459 18448.65,-459 18451.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8dcb09764fb0462db8cbf61fb95e9341 --&gt;\n&lt;g id=\"node406\" class=\"node\"&gt;\n&lt;title&gt;8dcb09764fb0462db8cbf61fb95e9341&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18546.72,-459.72 18545.28,-459.72 18545.28,-458.28 18546.72,-458.28 18546.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b1b53d0b03414b129ab6ad870189d09a&amp;#45;&amp;#45;8dcb09764fb0462db8cbf61fb95e9341 --&gt;\n&lt;g id=\"edge404\" class=\"edge\"&gt;\n&lt;title&gt;b1b53d0b03414b129ab6ad870189d09a&amp;#45;&amp;#45;8dcb09764fb0462db8cbf61fb95e9341&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18453.47,-459C18456.2,-459 18542.25,-459 18544.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d2dfa15e632e4cbfa542845d0bc93a23 --&gt;\n&lt;g id=\"node407\" class=\"node\"&gt;\n&lt;title&gt;d2dfa15e632e4cbfa542845d0bc93a23&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"18639.6\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8dcb09764fb0462db8cbf61fb95e9341&amp;#45;&amp;#45;d2dfa15e632e4cbfa542845d0bc93a23 --&gt;\n&lt;g id=\"edge405\" class=\"edge\"&gt;\n&lt;title&gt;8dcb09764fb0462db8cbf61fb95e9341&amp;#45;&amp;#45;d2dfa15e632e4cbfa542845d0bc93a23&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18547.07,-459C18549.37,-459 18611.21,-459 18631.92,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 55073c5a80f64818bcceeba5d02f7da6 --&gt;\n&lt;g id=\"node408\" class=\"node\"&gt;\n&lt;title&gt;55073c5a80f64818bcceeba5d02f7da6&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"18733.2\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- d2dfa15e632e4cbfa542845d0bc93a23&amp;#45;&amp;#45;55073c5a80f64818bcceeba5d02f7da6 --&gt;\n&lt;g id=\"edge406\" class=\"edge\"&gt;\n&lt;title&gt;d2dfa15e632e4cbfa542845d0bc93a23&amp;#45;&amp;#45;55073c5a80f64818bcceeba5d02f7da6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18647.19,-459C18664.09,-459 18708.84,-459 18725.67,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 435f1a88c012441b98670a2d1efa48d6 --&gt;\n&lt;g id=\"node409\" class=\"node\"&gt;\n&lt;title&gt;435f1a88c012441b98670a2d1efa48d6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18827.52,-459.72 18826.08,-459.72 18826.08,-458.28 18827.52,-458.28 18827.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 55073c5a80f64818bcceeba5d02f7da6&amp;#45;&amp;#45;435f1a88c012441b98670a2d1efa48d6 --&gt;\n&lt;g id=\"edge407\" class=\"edge\"&gt;\n&lt;title&gt;55073c5a80f64818bcceeba5d02f7da6&amp;#45;&amp;#45;435f1a88c012441b98670a2d1efa48d6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18740.79,-459C18761.13,-459 18821.84,-459 18825.62,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 70b1df4b388b4dde94b385b5d902a99a --&gt;\n&lt;g id=\"node410\" class=\"node\"&gt;\n&lt;title&gt;70b1df4b388b4dde94b385b5d902a99a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18921.12,-459.72 18919.68,-459.72 18919.68,-458.28 18921.12,-458.28 18921.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 435f1a88c012441b98670a2d1efa48d6&amp;#45;&amp;#45;70b1df4b388b4dde94b385b5d902a99a --&gt;\n&lt;g id=\"edge408\" class=\"edge\"&gt;\n&lt;title&gt;435f1a88c012441b98670a2d1efa48d6&amp;#45;&amp;#45;70b1df4b388b4dde94b385b5d902a99a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18827.87,-459C18830.6,-459 18916.65,-459 18919.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- aac605cc098d4354b1a4ef71342a5587 --&gt;\n&lt;g id=\"node411\" class=\"node\"&gt;\n&lt;title&gt;aac605cc098d4354b1a4ef71342a5587&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19014.72,-459.72 19013.28,-459.72 19013.28,-458.28 19014.72,-458.28 19014.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 70b1df4b388b4dde94b385b5d902a99a&amp;#45;&amp;#45;aac605cc098d4354b1a4ef71342a5587 --&gt;\n&lt;g id=\"edge409\" class=\"edge\"&gt;\n&lt;title&gt;70b1df4b388b4dde94b385b5d902a99a&amp;#45;&amp;#45;aac605cc098d4354b1a4ef71342a5587&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18921.47,-459C18924.2,-459 19010.25,-459 19012.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8fb120996160498e885727367dbeb5c2 --&gt;\n&lt;g id=\"node412\" class=\"node\"&gt;\n&lt;title&gt;8fb120996160498e885727367dbeb5c2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19108.32,-459.72 19106.88,-459.72 19106.88,-458.28 19108.32,-458.28 19108.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- aac605cc098d4354b1a4ef71342a5587&amp;#45;&amp;#45;8fb120996160498e885727367dbeb5c2 --&gt;\n&lt;g id=\"edge410\" class=\"edge\"&gt;\n&lt;title&gt;aac605cc098d4354b1a4ef71342a5587&amp;#45;&amp;#45;8fb120996160498e885727367dbeb5c2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19015.07,-459C19017.8,-459 19103.85,-459 19106.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e11a245321d47fa977d8d7be959c669 --&gt;\n&lt;g id=\"node413\" class=\"node\"&gt;\n&lt;title&gt;9e11a245321d47fa977d8d7be959c669&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19201.92,-459.72 19200.48,-459.72 19200.48,-458.28 19201.92,-458.28 19201.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8fb120996160498e885727367dbeb5c2&amp;#45;&amp;#45;9e11a245321d47fa977d8d7be959c669 --&gt;\n&lt;g id=\"edge411\" class=\"edge\"&gt;\n&lt;title&gt;8fb120996160498e885727367dbeb5c2&amp;#45;&amp;#45;9e11a245321d47fa977d8d7be959c669&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19108.67,-459C19111.4,-459 19197.45,-459 19200.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- f18d6967a5df4f8e94e2bb991faa1a61 --&gt;\n&lt;g id=\"node414\" class=\"node\"&gt;\n&lt;title&gt;f18d6967a5df4f8e94e2bb991faa1a61&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19354.32,-459.72 19352.88,-459.72 19352.88,-458.28 19354.32,-458.28 19354.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e11a245321d47fa977d8d7be959c669&amp;#45;&amp;#45;f18d6967a5df4f8e94e2bb991faa1a61 --&gt;\n&lt;g id=\"edge412\" class=\"edge\"&gt;\n&lt;title&gt;9e11a245321d47fa977d8d7be959c669&amp;#45;&amp;#45;f18d6967a5df4f8e94e2bb991faa1a61&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19202.31,-459C19206.79,-459 19348.08,-459 19352.49,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 20683cf4fd5b487d80955c82a6cd3077 --&gt;\n&lt;g id=\"node415\" class=\"node\"&gt;\n&lt;title&gt;20683cf4fd5b487d80955c82a6cd3077&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19506.72,-459.72 19505.28,-459.72 19505.28,-458.28 19506.72,-458.28 19506.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f18d6967a5df4f8e94e2bb991faa1a61&amp;#45;&amp;#45;20683cf4fd5b487d80955c82a6cd3077 --&gt;\n&lt;g id=\"edge413\" class=\"edge\"&gt;\n&lt;title&gt;f18d6967a5df4f8e94e2bb991faa1a61&amp;#45;&amp;#45;20683cf4fd5b487d80955c82a6cd3077&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19354.71,-459C19359.19,-459 19500.48,-459 19504.89,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d41b30c716d4540b253f52c3f8dd6fc --&gt;\n&lt;g id=\"node416\" class=\"node\"&gt;\n&lt;title&gt;0d41b30c716d4540b253f52c3f8dd6fc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19600.32,-459.72 19598.88,-459.72 19598.88,-458.28 19600.32,-458.28 19600.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 20683cf4fd5b487d80955c82a6cd3077&amp;#45;&amp;#45;0d41b30c716d4540b253f52c3f8dd6fc --&gt;\n&lt;g id=\"edge414\" class=\"edge\"&gt;\n&lt;title&gt;20683cf4fd5b487d80955c82a6cd3077&amp;#45;&amp;#45;0d41b30c716d4540b253f52c3f8dd6fc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19507.07,-459C19509.8,-459 19595.85,-459 19598.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 04e1058616924e1996e1eece64954af3 --&gt;\n&lt;g id=\"node417\" class=\"node\"&gt;\n&lt;title&gt;04e1058616924e1996e1eece64954af3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19693.92,-459.72 19692.48,-459.72 19692.48,-458.28 19693.92,-458.28 19693.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d41b30c716d4540b253f52c3f8dd6fc&amp;#45;&amp;#45;04e1058616924e1996e1eece64954af3 --&gt;\n&lt;g id=\"edge415\" class=\"edge\"&gt;\n&lt;title&gt;0d41b30c716d4540b253f52c3f8dd6fc&amp;#45;&amp;#45;04e1058616924e1996e1eece64954af3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19600.67,-459C19603.4,-459 19689.45,-459 19692.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 825d5bad06594db582810edaf011681c --&gt;\n&lt;g id=\"node418\" class=\"node\"&gt;\n&lt;title&gt;825d5bad06594db582810edaf011681c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19787.52,-459.72 19786.08,-459.72 19786.08,-458.28 19787.52,-458.28 19787.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 04e1058616924e1996e1eece64954af3&amp;#45;&amp;#45;825d5bad06594db582810edaf011681c --&gt;\n&lt;g id=\"edge416\" class=\"edge\"&gt;\n&lt;title&gt;04e1058616924e1996e1eece64954af3&amp;#45;&amp;#45;825d5bad06594db582810edaf011681c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19694.27,-459C19697,-459 19783.05,-459 19785.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e5c0f496c364159a14bd596bb6f077d --&gt;\n&lt;g id=\"node419\" class=\"node\"&gt;\n&lt;title&gt;6e5c0f496c364159a14bd596bb6f077d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19881.12,-459.72 19879.68,-459.72 19879.68,-458.28 19881.12,-458.28 19881.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 825d5bad06594db582810edaf011681c&amp;#45;&amp;#45;6e5c0f496c364159a14bd596bb6f077d --&gt;\n&lt;g id=\"edge417\" class=\"edge\"&gt;\n&lt;title&gt;825d5bad06594db582810edaf011681c&amp;#45;&amp;#45;6e5c0f496c364159a14bd596bb6f077d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19787.87,-459C19790.6,-459 19876.65,-459 19879.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 55c77497fe4340afa4eae5606ad807b4 --&gt;\n&lt;g id=\"node420\" class=\"node\"&gt;\n&lt;title&gt;55c77497fe4340afa4eae5606ad807b4&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"19974\" cy=\"-459\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e5c0f496c364159a14bd596bb6f077d&amp;#45;&amp;#45;55c77497fe4340afa4eae5606ad807b4 --&gt;\n&lt;g id=\"edge418\" class=\"edge\"&gt;\n&lt;title&gt;6e5c0f496c364159a14bd596bb6f077d&amp;#45;&amp;#45;55c77497fe4340afa4eae5606ad807b4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19881.47,-459C19883.77,-459 19945.61,-459 19966.32,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- fe79c21682bd48b6bdad058e04f1bd91 --&gt;\n&lt;g id=\"node421\" class=\"node\"&gt;\n&lt;title&gt;fe79c21682bd48b6bdad058e04f1bd91&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20068.32,-459.72 20066.88,-459.72 20066.88,-458.28 20068.32,-458.28 20068.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 55c77497fe4340afa4eae5606ad807b4&amp;#45;&amp;#45;fe79c21682bd48b6bdad058e04f1bd91 --&gt;\n&lt;g id=\"edge419\" class=\"edge\"&gt;\n&lt;title&gt;55c77497fe4340afa4eae5606ad807b4&amp;#45;&amp;#45;fe79c21682bd48b6bdad058e04f1bd91&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19981.59,-459C20001.93,-459 20062.64,-459 20066.42,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- b3a154445de84e3c885d797b2c08a382 --&gt;\n&lt;g id=\"node422\" class=\"node\"&gt;\n&lt;title&gt;b3a154445de84e3c885d797b2c08a382&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20161.92,-459.72 20160.48,-459.72 20160.48,-458.28 20161.92,-458.28 20161.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fe79c21682bd48b6bdad058e04f1bd91&amp;#45;&amp;#45;b3a154445de84e3c885d797b2c08a382 --&gt;\n&lt;g id=\"edge420\" class=\"edge\"&gt;\n&lt;title&gt;fe79c21682bd48b6bdad058e04f1bd91&amp;#45;&amp;#45;b3a154445de84e3c885d797b2c08a382&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20068.67,-459C20071.4,-459 20157.45,-459 20160.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2112d9ebddc941ddbb25a3fffe918988 --&gt;\n&lt;g id=\"node423\" class=\"node\"&gt;\n&lt;title&gt;2112d9ebddc941ddbb25a3fffe918988&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20255.52,-459.72 20254.08,-459.72 20254.08,-458.28 20255.52,-458.28 20255.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b3a154445de84e3c885d797b2c08a382&amp;#45;&amp;#45;2112d9ebddc941ddbb25a3fffe918988 --&gt;\n&lt;g id=\"edge421\" class=\"edge\"&gt;\n&lt;title&gt;b3a154445de84e3c885d797b2c08a382&amp;#45;&amp;#45;2112d9ebddc941ddbb25a3fffe918988&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20162.27,-459C20165,-459 20251.05,-459 20253.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- a7061f85a2544dd9bad3b41ac0e4335a --&gt;\n&lt;g id=\"node424\" class=\"node\"&gt;\n&lt;title&gt;a7061f85a2544dd9bad3b41ac0e4335a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20349.12,-459.72 20347.68,-459.72 20347.68,-458.28 20349.12,-458.28 20349.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2112d9ebddc941ddbb25a3fffe918988&amp;#45;&amp;#45;a7061f85a2544dd9bad3b41ac0e4335a --&gt;\n&lt;g id=\"edge422\" class=\"edge\"&gt;\n&lt;title&gt;2112d9ebddc941ddbb25a3fffe918988&amp;#45;&amp;#45;a7061f85a2544dd9bad3b41ac0e4335a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20255.87,-459C20258.6,-459 20344.65,-459 20347.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4b2b39909e3b4878b6064fca4437ee15 --&gt;\n&lt;g id=\"node425\" class=\"node\"&gt;\n&lt;title&gt;4b2b39909e3b4878b6064fca4437ee15&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20442.72,-459.72 20441.28,-459.72 20441.28,-458.28 20442.72,-458.28 20442.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a7061f85a2544dd9bad3b41ac0e4335a&amp;#45;&amp;#45;4b2b39909e3b4878b6064fca4437ee15 --&gt;\n&lt;g id=\"edge423\" class=\"edge\"&gt;\n&lt;title&gt;a7061f85a2544dd9bad3b41ac0e4335a&amp;#45;&amp;#45;4b2b39909e3b4878b6064fca4437ee15&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20349.47,-459C20352.2,-459 20438.25,-459 20440.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 72567d345cbf4116a2914acac67804e5 --&gt;\n&lt;g id=\"node426\" class=\"node\"&gt;\n&lt;title&gt;72567d345cbf4116a2914acac67804e5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20595.12,-459.72 20593.68,-459.72 20593.68,-458.28 20595.12,-458.28 20595.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4b2b39909e3b4878b6064fca4437ee15&amp;#45;&amp;#45;72567d345cbf4116a2914acac67804e5 --&gt;\n&lt;g id=\"edge424\" class=\"edge\"&gt;\n&lt;title&gt;4b2b39909e3b4878b6064fca4437ee15&amp;#45;&amp;#45;72567d345cbf4116a2914acac67804e5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20443.11,-459C20447.59,-459 20588.88,-459 20593.29,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 350e40d7e9064f9cac582494a62d30d6 --&gt;\n&lt;g id=\"node427\" class=\"node\"&gt;\n&lt;title&gt;350e40d7e9064f9cac582494a62d30d6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20747.52,-459.72 20746.08,-459.72 20746.08,-458.28 20747.52,-458.28 20747.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 72567d345cbf4116a2914acac67804e5&amp;#45;&amp;#45;350e40d7e9064f9cac582494a62d30d6 --&gt;\n&lt;g id=\"edge425\" class=\"edge\"&gt;\n&lt;title&gt;72567d345cbf4116a2914acac67804e5&amp;#45;&amp;#45;350e40d7e9064f9cac582494a62d30d6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20595.51,-459C20599.99,-459 20741.28,-459 20745.69,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 267320ffdf204c06bc3317d9ccd862f2 --&gt;\n&lt;g id=\"node428\" class=\"node\"&gt;\n&lt;title&gt;267320ffdf204c06bc3317d9ccd862f2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20841.12,-459.72 20839.68,-459.72 20839.68,-458.28 20841.12,-458.28 20841.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 350e40d7e9064f9cac582494a62d30d6&amp;#45;&amp;#45;267320ffdf204c06bc3317d9ccd862f2 --&gt;\n&lt;g id=\"edge426\" class=\"edge\"&gt;\n&lt;title&gt;350e40d7e9064f9cac582494a62d30d6&amp;#45;&amp;#45;267320ffdf204c06bc3317d9ccd862f2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20747.87,-459C20750.6,-459 20836.65,-459 20839.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6fcafb74af464189a9837b9842552895 --&gt;\n&lt;g id=\"node429\" class=\"node\"&gt;\n&lt;title&gt;6fcafb74af464189a9837b9842552895&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20934.72,-459.72 20933.28,-459.72 20933.28,-458.28 20934.72,-458.28 20934.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 267320ffdf204c06bc3317d9ccd862f2&amp;#45;&amp;#45;6fcafb74af464189a9837b9842552895 --&gt;\n&lt;g id=\"edge427\" class=\"edge\"&gt;\n&lt;title&gt;267320ffdf204c06bc3317d9ccd862f2&amp;#45;&amp;#45;6fcafb74af464189a9837b9842552895&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20841.47,-459C20844.2,-459 20930.25,-459 20932.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- cfde2c72092d4d3dbfee172e8d6e3e45 --&gt;\n&lt;g id=\"node430\" class=\"node\"&gt;\n&lt;title&gt;cfde2c72092d4d3dbfee172e8d6e3e45&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21028.32,-459.72 21026.88,-459.72 21026.88,-458.28 21028.32,-458.28 21028.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6fcafb74af464189a9837b9842552895&amp;#45;&amp;#45;cfde2c72092d4d3dbfee172e8d6e3e45 --&gt;\n&lt;g id=\"edge428\" class=\"edge\"&gt;\n&lt;title&gt;6fcafb74af464189a9837b9842552895&amp;#45;&amp;#45;cfde2c72092d4d3dbfee172e8d6e3e45&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20935.07,-459C20937.8,-459 21023.85,-459 21026.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- e2d38d7efe7d4ad388e27809a5185be0 --&gt;\n&lt;g id=\"node431\" class=\"node\"&gt;\n&lt;title&gt;e2d38d7efe7d4ad388e27809a5185be0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21121.92,-459.72 21120.48,-459.72 21120.48,-458.28 21121.92,-458.28 21121.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cfde2c72092d4d3dbfee172e8d6e3e45&amp;#45;&amp;#45;e2d38d7efe7d4ad388e27809a5185be0 --&gt;\n&lt;g id=\"edge429\" class=\"edge\"&gt;\n&lt;title&gt;cfde2c72092d4d3dbfee172e8d6e3e45&amp;#45;&amp;#45;e2d38d7efe7d4ad388e27809a5185be0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21028.67,-459C21031.4,-459 21117.45,-459 21120.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- b202f88ad2dd4c2d95d86f4491f6b08f --&gt;\n&lt;g id=\"node432\" class=\"node\"&gt;\n&lt;title&gt;b202f88ad2dd4c2d95d86f4491f6b08f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21215.52,-459.72 21214.08,-459.72 21214.08,-458.28 21215.52,-458.28 21215.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e2d38d7efe7d4ad388e27809a5185be0&amp;#45;&amp;#45;b202f88ad2dd4c2d95d86f4491f6b08f --&gt;\n&lt;g id=\"edge430\" class=\"edge\"&gt;\n&lt;title&gt;e2d38d7efe7d4ad388e27809a5185be0&amp;#45;&amp;#45;b202f88ad2dd4c2d95d86f4491f6b08f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21122.27,-459C21125,-459 21211.05,-459 21213.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- dc4b5103e998497998755ff3990cea17 --&gt;\n&lt;g id=\"node433\" class=\"node\"&gt;\n&lt;title&gt;dc4b5103e998497998755ff3990cea17&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21309.12,-459.72 21307.68,-459.72 21307.68,-458.28 21309.12,-458.28 21309.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b202f88ad2dd4c2d95d86f4491f6b08f&amp;#45;&amp;#45;dc4b5103e998497998755ff3990cea17 --&gt;\n&lt;g id=\"edge431\" class=\"edge\"&gt;\n&lt;title&gt;b202f88ad2dd4c2d95d86f4491f6b08f&amp;#45;&amp;#45;dc4b5103e998497998755ff3990cea17&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21215.87,-459C21218.6,-459 21304.65,-459 21307.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- b616f0d350484b1e84f4ae432570ad63 --&gt;\n&lt;g id=\"node434\" class=\"node\"&gt;\n&lt;title&gt;b616f0d350484b1e84f4ae432570ad63&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21461.52,-459.72 21460.08,-459.72 21460.08,-458.28 21461.52,-458.28 21461.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dc4b5103e998497998755ff3990cea17&amp;#45;&amp;#45;b616f0d350484b1e84f4ae432570ad63 --&gt;\n&lt;g id=\"edge432\" class=\"edge\"&gt;\n&lt;title&gt;dc4b5103e998497998755ff3990cea17&amp;#45;&amp;#45;b616f0d350484b1e84f4ae432570ad63&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21309.51,-459C21313.99,-459 21455.28,-459 21459.69,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5b40754f22d940d1ad687f17a48a8ede --&gt;\n&lt;g id=\"node435\" class=\"node\"&gt;\n&lt;title&gt;5b40754f22d940d1ad687f17a48a8ede&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21613.92,-459.72 21612.48,-459.72 21612.48,-458.28 21613.92,-458.28 21613.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b616f0d350484b1e84f4ae432570ad63&amp;#45;&amp;#45;5b40754f22d940d1ad687f17a48a8ede --&gt;\n&lt;g id=\"edge433\" class=\"edge\"&gt;\n&lt;title&gt;b616f0d350484b1e84f4ae432570ad63&amp;#45;&amp;#45;5b40754f22d940d1ad687f17a48a8ede&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21461.91,-459C21466.39,-459 21607.68,-459 21612.09,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- be9a96567fb442a5aca43f80329351aa --&gt;\n&lt;g id=\"node436\" class=\"node\"&gt;\n&lt;title&gt;be9a96567fb442a5aca43f80329351aa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21707.52,-459.72 21706.08,-459.72 21706.08,-458.28 21707.52,-458.28 21707.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5b40754f22d940d1ad687f17a48a8ede&amp;#45;&amp;#45;be9a96567fb442a5aca43f80329351aa --&gt;\n&lt;g id=\"edge434\" class=\"edge\"&gt;\n&lt;title&gt;5b40754f22d940d1ad687f17a48a8ede&amp;#45;&amp;#45;be9a96567fb442a5aca43f80329351aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21614.27,-459C21617,-459 21703.05,-459 21705.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 775538c3673f4751b933b6f960fb1a07 --&gt;\n&lt;g id=\"node437\" class=\"node\"&gt;\n&lt;title&gt;775538c3673f4751b933b6f960fb1a07&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21801.12,-459.72 21799.68,-459.72 21799.68,-458.28 21801.12,-458.28 21801.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- be9a96567fb442a5aca43f80329351aa&amp;#45;&amp;#45;775538c3673f4751b933b6f960fb1a07 --&gt;\n&lt;g id=\"edge435\" class=\"edge\"&gt;\n&lt;title&gt;be9a96567fb442a5aca43f80329351aa&amp;#45;&amp;#45;775538c3673f4751b933b6f960fb1a07&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21707.87,-459C21710.6,-459 21796.65,-459 21799.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d0b6ea83635947f4bfe547711f2c8922 --&gt;\n&lt;g id=\"node438\" class=\"node\"&gt;\n&lt;title&gt;d0b6ea83635947f4bfe547711f2c8922&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21894.72,-459.72 21893.28,-459.72 21893.28,-458.28 21894.72,-458.28 21894.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 775538c3673f4751b933b6f960fb1a07&amp;#45;&amp;#45;d0b6ea83635947f4bfe547711f2c8922 --&gt;\n&lt;g id=\"edge436\" class=\"edge\"&gt;\n&lt;title&gt;775538c3673f4751b933b6f960fb1a07&amp;#45;&amp;#45;d0b6ea83635947f4bfe547711f2c8922&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21801.47,-459C21804.2,-459 21890.25,-459 21892.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- cfd5e10f506445a8a0da84927269fcb6 --&gt;\n&lt;g id=\"node439\" class=\"node\"&gt;\n&lt;title&gt;cfd5e10f506445a8a0da84927269fcb6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21988.32,-459.72 21986.88,-459.72 21986.88,-458.28 21988.32,-458.28 21988.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d0b6ea83635947f4bfe547711f2c8922&amp;#45;&amp;#45;cfd5e10f506445a8a0da84927269fcb6 --&gt;\n&lt;g id=\"edge437\" class=\"edge\"&gt;\n&lt;title&gt;d0b6ea83635947f4bfe547711f2c8922&amp;#45;&amp;#45;cfd5e10f506445a8a0da84927269fcb6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21895.07,-459C21897.8,-459 21983.85,-459 21986.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- c0d49baca66a4437b2b5d6302ff02542 --&gt;\n&lt;g id=\"node440\" class=\"node\"&gt;\n&lt;title&gt;c0d49baca66a4437b2b5d6302ff02542&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22140.72,-459.72 22139.28,-459.72 22139.28,-458.28 22140.72,-458.28 22140.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cfd5e10f506445a8a0da84927269fcb6&amp;#45;&amp;#45;c0d49baca66a4437b2b5d6302ff02542 --&gt;\n&lt;g id=\"edge438\" class=\"edge\"&gt;\n&lt;title&gt;cfd5e10f506445a8a0da84927269fcb6&amp;#45;&amp;#45;c0d49baca66a4437b2b5d6302ff02542&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21988.71,-459C21993.19,-459 22134.48,-459 22138.89,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d856312c4a6243128cc0e44f38be1d04 --&gt;\n&lt;g id=\"node441\" class=\"node\"&gt;\n&lt;title&gt;d856312c4a6243128cc0e44f38be1d04&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22293.12,-459.72 22291.68,-459.72 22291.68,-458.28 22293.12,-458.28 22293.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c0d49baca66a4437b2b5d6302ff02542&amp;#45;&amp;#45;d856312c4a6243128cc0e44f38be1d04 --&gt;\n&lt;g id=\"edge439\" class=\"edge\"&gt;\n&lt;title&gt;c0d49baca66a4437b2b5d6302ff02542&amp;#45;&amp;#45;d856312c4a6243128cc0e44f38be1d04&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22141.11,-459C22145.59,-459 22286.88,-459 22291.29,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d894e6ba32b348398800c954ae255fc5 --&gt;\n&lt;g id=\"node442\" class=\"node\"&gt;\n&lt;title&gt;d894e6ba32b348398800c954ae255fc5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22386.72,-459.72 22385.28,-459.72 22385.28,-458.28 22386.72,-458.28 22386.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d856312c4a6243128cc0e44f38be1d04&amp;#45;&amp;#45;d894e6ba32b348398800c954ae255fc5 --&gt;\n&lt;g id=\"edge440\" class=\"edge\"&gt;\n&lt;title&gt;d856312c4a6243128cc0e44f38be1d04&amp;#45;&amp;#45;d894e6ba32b348398800c954ae255fc5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22293.47,-459C22296.2,-459 22382.25,-459 22384.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 294d9b0429834b7c816ab2775473fa38 --&gt;\n&lt;g id=\"node443\" class=\"node\"&gt;\n&lt;title&gt;294d9b0429834b7c816ab2775473fa38&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22480.32,-459.72 22478.88,-459.72 22478.88,-458.28 22480.32,-458.28 22480.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d894e6ba32b348398800c954ae255fc5&amp;#45;&amp;#45;294d9b0429834b7c816ab2775473fa38 --&gt;\n&lt;g id=\"edge441\" class=\"edge\"&gt;\n&lt;title&gt;d894e6ba32b348398800c954ae255fc5&amp;#45;&amp;#45;294d9b0429834b7c816ab2775473fa38&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22387.07,-459C22389.8,-459 22475.85,-459 22478.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0128bf5ecea94ba1bdd5d5ce492a6ce7 --&gt;\n&lt;g id=\"node444\" class=\"node\"&gt;\n&lt;title&gt;0128bf5ecea94ba1bdd5d5ce492a6ce7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22573.92,-459.72 22572.48,-459.72 22572.48,-458.28 22573.92,-458.28 22573.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 294d9b0429834b7c816ab2775473fa38&amp;#45;&amp;#45;0128bf5ecea94ba1bdd5d5ce492a6ce7 --&gt;\n&lt;g id=\"edge442\" class=\"edge\"&gt;\n&lt;title&gt;294d9b0429834b7c816ab2775473fa38&amp;#45;&amp;#45;0128bf5ecea94ba1bdd5d5ce492a6ce7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22480.67,-459C22483.4,-459 22569.45,-459 22572.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2e34a429bb784b92944c087f653f32b8 --&gt;\n&lt;g id=\"node445\" class=\"node\"&gt;\n&lt;title&gt;2e34a429bb784b92944c087f653f32b8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22667.52,-459.72 22666.08,-459.72 22666.08,-458.28 22667.52,-458.28 22667.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0128bf5ecea94ba1bdd5d5ce492a6ce7&amp;#45;&amp;#45;2e34a429bb784b92944c087f653f32b8 --&gt;\n&lt;g id=\"edge443\" class=\"edge\"&gt;\n&lt;title&gt;0128bf5ecea94ba1bdd5d5ce492a6ce7&amp;#45;&amp;#45;2e34a429bb784b92944c087f653f32b8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22574.27,-459C22577,-459 22663.05,-459 22665.74,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 10b36a3587e94d4998f79ddda202e837 --&gt;\n&lt;g id=\"node446\" class=\"node\"&gt;\n&lt;title&gt;10b36a3587e94d4998f79ddda202e837&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22761.12,-459.72 22759.68,-459.72 22759.68,-458.28 22761.12,-458.28 22761.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2e34a429bb784b92944c087f653f32b8&amp;#45;&amp;#45;10b36a3587e94d4998f79ddda202e837 --&gt;\n&lt;g id=\"edge444\" class=\"edge\"&gt;\n&lt;title&gt;2e34a429bb784b92944c087f653f32b8&amp;#45;&amp;#45;10b36a3587e94d4998f79ddda202e837&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22667.87,-459C22670.6,-459 22756.65,-459 22759.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3d8b15162c2448339b529f99665996da --&gt;\n&lt;g id=\"node447\" class=\"node\"&gt;\n&lt;title&gt;3d8b15162c2448339b529f99665996da&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22854.72,-459.72 22853.28,-459.72 22853.28,-458.28 22854.72,-458.28 22854.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 10b36a3587e94d4998f79ddda202e837&amp;#45;&amp;#45;3d8b15162c2448339b529f99665996da --&gt;\n&lt;g id=\"edge445\" class=\"edge\"&gt;\n&lt;title&gt;10b36a3587e94d4998f79ddda202e837&amp;#45;&amp;#45;3d8b15162c2448339b529f99665996da&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22761.47,-459C22764.2,-459 22850.25,-459 22852.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- ed28046bda2a4a2e87891f295b0db5c9 --&gt;\n&lt;g id=\"node448\" class=\"node\"&gt;\n&lt;title&gt;ed28046bda2a4a2e87891f295b0db5c9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23007.12,-459.72 23005.68,-459.72 23005.68,-458.28 23007.12,-458.28 23007.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3d8b15162c2448339b529f99665996da&amp;#45;&amp;#45;ed28046bda2a4a2e87891f295b0db5c9 --&gt;\n&lt;g id=\"edge446\" class=\"edge\"&gt;\n&lt;title&gt;3d8b15162c2448339b529f99665996da&amp;#45;&amp;#45;ed28046bda2a4a2e87891f295b0db5c9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22855.11,-459C22859.59,-459 23000.88,-459 23005.29,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2b52cafbcb414290aad8de9864aeada8 --&gt;\n&lt;g id=\"node449\" class=\"node\"&gt;\n&lt;title&gt;2b52cafbcb414290aad8de9864aeada8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23159.52,-459.72 23158.08,-459.72 23158.08,-458.28 23159.52,-458.28 23159.52,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ed28046bda2a4a2e87891f295b0db5c9&amp;#45;&amp;#45;2b52cafbcb414290aad8de9864aeada8 --&gt;\n&lt;g id=\"edge447\" class=\"edge\"&gt;\n&lt;title&gt;ed28046bda2a4a2e87891f295b0db5c9&amp;#45;&amp;#45;2b52cafbcb414290aad8de9864aeada8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23007.51,-459C23011.99,-459 23153.28,-459 23157.69,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 665a072246024c6b9482b148c367f6cb --&gt;\n&lt;g id=\"node450\" class=\"node\"&gt;\n&lt;title&gt;665a072246024c6b9482b148c367f6cb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23253.12,-459.72 23251.68,-459.72 23251.68,-458.28 23253.12,-458.28 23253.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2b52cafbcb414290aad8de9864aeada8&amp;#45;&amp;#45;665a072246024c6b9482b148c367f6cb --&gt;\n&lt;g id=\"edge448\" class=\"edge\"&gt;\n&lt;title&gt;2b52cafbcb414290aad8de9864aeada8&amp;#45;&amp;#45;665a072246024c6b9482b148c367f6cb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23159.87,-459C23162.6,-459 23248.65,-459 23251.34,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- e1504afbb2d04f7fba03dafd5b5092ac --&gt;\n&lt;g id=\"node451\" class=\"node\"&gt;\n&lt;title&gt;e1504afbb2d04f7fba03dafd5b5092ac&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23346.72,-459.72 23345.28,-459.72 23345.28,-458.28 23346.72,-458.28 23346.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 665a072246024c6b9482b148c367f6cb&amp;#45;&amp;#45;e1504afbb2d04f7fba03dafd5b5092ac --&gt;\n&lt;g id=\"edge449\" class=\"edge\"&gt;\n&lt;title&gt;665a072246024c6b9482b148c367f6cb&amp;#45;&amp;#45;e1504afbb2d04f7fba03dafd5b5092ac&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23253.47,-459C23256.2,-459 23342.25,-459 23344.94,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- cc2f5cd83cc74262a2a12d1b7b3eb94f --&gt;\n&lt;g id=\"node452\" class=\"node\"&gt;\n&lt;title&gt;cc2f5cd83cc74262a2a12d1b7b3eb94f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23440.32,-459.72 23438.88,-459.72 23438.88,-458.28 23440.32,-458.28 23440.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e1504afbb2d04f7fba03dafd5b5092ac&amp;#45;&amp;#45;cc2f5cd83cc74262a2a12d1b7b3eb94f --&gt;\n&lt;g id=\"edge450\" class=\"edge\"&gt;\n&lt;title&gt;e1504afbb2d04f7fba03dafd5b5092ac&amp;#45;&amp;#45;cc2f5cd83cc74262a2a12d1b7b3eb94f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23347.07,-459C23349.8,-459 23435.85,-459 23438.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9943d488b4954eb2844a01a2c8c83ec0 --&gt;\n&lt;g id=\"node453\" class=\"node\"&gt;\n&lt;title&gt;9943d488b4954eb2844a01a2c8c83ec0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23533.92,-459.72 23532.48,-459.72 23532.48,-458.28 23533.92,-458.28 23533.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cc2f5cd83cc74262a2a12d1b7b3eb94f&amp;#45;&amp;#45;9943d488b4954eb2844a01a2c8c83ec0 --&gt;\n&lt;g id=\"edge451\" class=\"edge\"&gt;\n&lt;title&gt;cc2f5cd83cc74262a2a12d1b7b3eb94f&amp;#45;&amp;#45;9943d488b4954eb2844a01a2c8c83ec0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23440.67,-459C23443.4,-459 23529.45,-459 23532.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2fef17b070794357bdf2a8584f9d15d9 --&gt;\n&lt;g id=\"node454\" class=\"node\"&gt;\n&lt;title&gt;2fef17b070794357bdf2a8584f9d15d9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23686.32,-459.72 23684.88,-459.72 23684.88,-458.28 23686.32,-458.28 23686.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9943d488b4954eb2844a01a2c8c83ec0&amp;#45;&amp;#45;2fef17b070794357bdf2a8584f9d15d9 --&gt;\n&lt;g id=\"edge452\" class=\"edge\"&gt;\n&lt;title&gt;9943d488b4954eb2844a01a2c8c83ec0&amp;#45;&amp;#45;2fef17b070794357bdf2a8584f9d15d9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23534.31,-459C23538.79,-459 23680.08,-459 23684.49,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2623c4dda9e94422a8f36832a749e646 --&gt;\n&lt;g id=\"node455\" class=\"node\"&gt;\n&lt;title&gt;2623c4dda9e94422a8f36832a749e646&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23838.72,-459.72 23837.28,-459.72 23837.28,-458.28 23838.72,-458.28 23838.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2fef17b070794357bdf2a8584f9d15d9&amp;#45;&amp;#45;2623c4dda9e94422a8f36832a749e646 --&gt;\n&lt;g id=\"edge453\" class=\"edge\"&gt;\n&lt;title&gt;2fef17b070794357bdf2a8584f9d15d9&amp;#45;&amp;#45;2623c4dda9e94422a8f36832a749e646&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23686.71,-459C23691.19,-459 23832.48,-459 23836.89,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- e42fdcd5df494f399cf8cef2ae446b03 --&gt;\n&lt;g id=\"node456\" class=\"node\"&gt;\n&lt;title&gt;e42fdcd5df494f399cf8cef2ae446b03&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23932.32,-459.72 23930.88,-459.72 23930.88,-458.28 23932.32,-458.28 23932.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2623c4dda9e94422a8f36832a749e646&amp;#45;&amp;#45;e42fdcd5df494f399cf8cef2ae446b03 --&gt;\n&lt;g id=\"edge454\" class=\"edge\"&gt;\n&lt;title&gt;2623c4dda9e94422a8f36832a749e646&amp;#45;&amp;#45;e42fdcd5df494f399cf8cef2ae446b03&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23839.07,-459C23841.8,-459 23927.85,-459 23930.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1a6e1ac555024614b603ad21bed2ebf6 --&gt;\n&lt;g id=\"node457\" class=\"node\"&gt;\n&lt;title&gt;1a6e1ac555024614b603ad21bed2ebf6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24025.92,-459.72 24024.48,-459.72 24024.48,-458.28 24025.92,-458.28 24025.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e42fdcd5df494f399cf8cef2ae446b03&amp;#45;&amp;#45;1a6e1ac555024614b603ad21bed2ebf6 --&gt;\n&lt;g id=\"edge455\" class=\"edge\"&gt;\n&lt;title&gt;e42fdcd5df494f399cf8cef2ae446b03&amp;#45;&amp;#45;1a6e1ac555024614b603ad21bed2ebf6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23932.67,-459C23935.4,-459 24021.45,-459 24024.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 727099893c1540ddb24744e4a0323abe --&gt;\n&lt;g id=\"node458\" class=\"node\"&gt;\n&lt;title&gt;727099893c1540ddb24744e4a0323abe&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24178.32,-459.72 24176.88,-459.72 24176.88,-458.28 24178.32,-458.28 24178.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1a6e1ac555024614b603ad21bed2ebf6&amp;#45;&amp;#45;727099893c1540ddb24744e4a0323abe --&gt;\n&lt;g id=\"edge456\" class=\"edge\"&gt;\n&lt;title&gt;1a6e1ac555024614b603ad21bed2ebf6&amp;#45;&amp;#45;727099893c1540ddb24744e4a0323abe&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24026.31,-459C24030.79,-459 24172.08,-459 24176.49,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 64af49c7cdc244afb84a93cececb1bde --&gt;\n&lt;g id=\"node459\" class=\"node\"&gt;\n&lt;title&gt;64af49c7cdc244afb84a93cececb1bde&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24330.72,-459.72 24329.28,-459.72 24329.28,-458.28 24330.72,-458.28 24330.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 727099893c1540ddb24744e4a0323abe&amp;#45;&amp;#45;64af49c7cdc244afb84a93cececb1bde --&gt;\n&lt;g id=\"edge457\" class=\"edge\"&gt;\n&lt;title&gt;727099893c1540ddb24744e4a0323abe&amp;#45;&amp;#45;64af49c7cdc244afb84a93cececb1bde&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24178.71,-459C24183.19,-459 24324.48,-459 24328.89,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- a3272d634208401fb0322f56dcefe38e --&gt;\n&lt;g id=\"node460\" class=\"node\"&gt;\n&lt;title&gt;a3272d634208401fb0322f56dcefe38e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24424.32,-459.72 24422.88,-459.72 24422.88,-458.28 24424.32,-458.28 24424.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 64af49c7cdc244afb84a93cececb1bde&amp;#45;&amp;#45;a3272d634208401fb0322f56dcefe38e --&gt;\n&lt;g id=\"edge458\" class=\"edge\"&gt;\n&lt;title&gt;64af49c7cdc244afb84a93cececb1bde&amp;#45;&amp;#45;a3272d634208401fb0322f56dcefe38e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24331.07,-459C24333.8,-459 24419.85,-459 24422.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1c2a54998e73445fb0c8c97af4e30306 --&gt;\n&lt;g id=\"node461\" class=\"node\"&gt;\n&lt;title&gt;1c2a54998e73445fb0c8c97af4e30306&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24517.92,-459.72 24516.48,-459.72 24516.48,-458.28 24517.92,-458.28 24517.92,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a3272d634208401fb0322f56dcefe38e&amp;#45;&amp;#45;1c2a54998e73445fb0c8c97af4e30306 --&gt;\n&lt;g id=\"edge459\" class=\"edge\"&gt;\n&lt;title&gt;a3272d634208401fb0322f56dcefe38e&amp;#45;&amp;#45;1c2a54998e73445fb0c8c97af4e30306&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24424.67,-459C24427.4,-459 24513.45,-459 24516.14,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 04141c3695234e12bd302a0105b8202a --&gt;\n&lt;g id=\"node462\" class=\"node\"&gt;\n&lt;title&gt;04141c3695234e12bd302a0105b8202a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24670.32,-459.72 24668.88,-459.72 24668.88,-458.28 24670.32,-458.28 24670.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1c2a54998e73445fb0c8c97af4e30306&amp;#45;&amp;#45;04141c3695234e12bd302a0105b8202a --&gt;\n&lt;g id=\"edge460\" class=\"edge\"&gt;\n&lt;title&gt;1c2a54998e73445fb0c8c97af4e30306&amp;#45;&amp;#45;04141c3695234e12bd302a0105b8202a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24518.31,-459C24522.79,-459 24664.08,-459 24668.49,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 31af88121ed34c7190457b30832fcf16 --&gt;\n&lt;g id=\"node463\" class=\"node\"&gt;\n&lt;title&gt;31af88121ed34c7190457b30832fcf16&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24822.72,-459.72 24821.28,-459.72 24821.28,-458.28 24822.72,-458.28 24822.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 04141c3695234e12bd302a0105b8202a&amp;#45;&amp;#45;31af88121ed34c7190457b30832fcf16 --&gt;\n&lt;g id=\"edge461\" class=\"edge\"&gt;\n&lt;title&gt;04141c3695234e12bd302a0105b8202a&amp;#45;&amp;#45;31af88121ed34c7190457b30832fcf16&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24670.71,-459C24675.19,-459 24816.48,-459 24820.89,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- d8c4f900504c4384988e946982cc2bfa --&gt;\n&lt;g id=\"node464\" class=\"node\"&gt;\n&lt;title&gt;d8c4f900504c4384988e946982cc2bfa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24916.32,-459.72 24914.88,-459.72 24914.88,-458.28 24916.32,-458.28 24916.32,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 31af88121ed34c7190457b30832fcf16&amp;#45;&amp;#45;d8c4f900504c4384988e946982cc2bfa --&gt;\n&lt;g id=\"edge462\" class=\"edge\"&gt;\n&lt;title&gt;31af88121ed34c7190457b30832fcf16&amp;#45;&amp;#45;d8c4f900504c4384988e946982cc2bfa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24823.07,-459C24825.8,-459 24911.85,-459 24914.54,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- ceb2027f88334b8e8fc8b71e002b8098 --&gt;\n&lt;g id=\"node465\" class=\"node\"&gt;\n&lt;title&gt;ceb2027f88334b8e8fc8b71e002b8098&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25068.72,-459.72 25067.28,-459.72 25067.28,-458.28 25068.72,-458.28 25068.72,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d8c4f900504c4384988e946982cc2bfa&amp;#45;&amp;#45;ceb2027f88334b8e8fc8b71e002b8098 --&gt;\n&lt;g id=\"edge463\" class=\"edge\"&gt;\n&lt;title&gt;d8c4f900504c4384988e946982cc2bfa&amp;#45;&amp;#45;ceb2027f88334b8e8fc8b71e002b8098&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24916.71,-459C24921.19,-459 25062.48,-459 25066.89,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ca69f935b684ccc9ef626562b9535b1 --&gt;\n&lt;g id=\"node466\" class=\"node\"&gt;\n&lt;title&gt;6ca69f935b684ccc9ef626562b9535b1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25221.12,-459.72 25219.68,-459.72 25219.68,-458.28 25221.12,-458.28 25221.12,-459.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ceb2027f88334b8e8fc8b71e002b8098&amp;#45;&amp;#45;6ca69f935b684ccc9ef626562b9535b1 --&gt;\n&lt;g id=\"edge464\" class=\"edge\"&gt;\n&lt;title&gt;ceb2027f88334b8e8fc8b71e002b8098&amp;#45;&amp;#45;6ca69f935b684ccc9ef626562b9535b1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25069.11,-459C25073.59,-459 25214.88,-459 25219.29,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2dc86f536414407d94318313584cb011 --&gt;\n&lt;g id=\"node467\" class=\"node\"&gt;\n&lt;title&gt;2dc86f536414407d94318313584cb011&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M25400.4,-487.8C25400.4,-487.8 25297.2,-487.8 25297.2,-487.8 25291.2,-487.8 25285.2,-481.8 25285.2,-475.8 25285.2,-475.8 25285.2,-442.2 25285.2,-442.2 25285.2,-436.2 25291.2,-430.2 25297.2,-430.2 25297.2,-430.2 25400.4,-430.2 25400.4,-430.2 25406.4,-430.2 25412.4,-436.2 25412.4,-442.2 25412.4,-442.2 25412.4,-475.8 25412.4,-475.8 25412.4,-481.8 25406.4,-487.8 25400.4,-487.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"25348.8\" y=\"-453.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b11)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 6ca69f935b684ccc9ef626562b9535b1&amp;#45;&amp;#45;2dc86f536414407d94318313584cb011 --&gt;\n&lt;g id=\"edge465\" class=\"edge\"&gt;\n&lt;title&gt;6ca69f935b684ccc9ef626562b9535b1&amp;#45;&amp;#45;2dc86f536414407d94318313584cb011&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25221.49,-459C25223.37,-459 25253.76,-459 25284.26,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2dc86f536414407d94318313584cb011&amp;#45;&amp;#45;4c2440fc77654b6aaa7e3dc794e0aafb --&gt;\n&lt;g id=\"edge466\" class=\"edge\"&gt;\n&lt;title&gt;2dc86f536414407d94318313584cb011&amp;#45;&amp;#45;4c2440fc77654b6aaa7e3dc794e0aafb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25413.2,-459C25425.7,-459 25438.15,-459 25448.52,-459\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8c6d3db2b72342b3bfad2f288b9d8ec9 --&gt;\n&lt;g id=\"node702\" class=\"node\"&gt;\n&lt;title&gt;8c6d3db2b72342b3bfad2f288b9d8ec9&lt;/title&gt;\n&lt;/g&gt;\n&lt;!-- 4c2440fc77654b6aaa7e3dc794e0aafb&amp;#45;&amp;#45;8c6d3db2b72342b3bfad2f288b9d8ec9 --&gt;\n&lt;!-- fdcdc8b675234abbb124c60c1a48bfc5 --&gt;\n&lt;g id=\"node470\" class=\"node\"&gt;\n&lt;title&gt;fdcdc8b675234abbb124c60c1a48bfc5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"119.52,-390.72 118.08,-390.72 118.08,-389.28 119.52,-389.28 119.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8e28f2947247434fb063354ee90140e7&amp;#45;&amp;#45;fdcdc8b675234abbb124c60c1a48bfc5 --&gt;\n&lt;g id=\"edge467\" class=\"edge\"&gt;\n&lt;title&gt;8e28f2947247434fb063354ee90140e7&amp;#45;&amp;#45;fdcdc8b675234abbb124c60c1a48bfc5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M53.97,-390C79.67,-390 115.48,-390 117.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5daa7e9fc8994ecab48576e10117f107 --&gt;\n&lt;g id=\"node703\" class=\"node\"&gt;\n&lt;title&gt;5daa7e9fc8994ecab48576e10117f107&lt;/title&gt;\n&lt;text text-anchor=\"middle\" x=\"27\" y=\"-316.88\" font-family=\"JetBrains Mono\" font-size=\"15.00\"&gt;3&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 8e28f2947247434fb063354ee90140e7&amp;#45;&amp;#45;5daa7e9fc8994ecab48576e10117f107 --&gt;\n&lt;!-- 88e216438f9b4dfda2c01540f412796b --&gt;\n&lt;g id=\"node471\" class=\"node\"&gt;\n&lt;title&gt;88e216438f9b4dfda2c01540f412796b&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M229.2,-418.8C229.2,-418.8 195.6,-418.8 195.6,-418.8 189.6,-418.8 183.6,-412.8 183.6,-406.8 183.6,-406.8 183.6,-373.2 183.6,-373.2 183.6,-367.2 189.6,-361.2 195.6,-361.2 195.6,-361.2 229.2,-361.2 229.2,-361.2 235.2,-361.2 241.2,-367.2 241.2,-373.2 241.2,-373.2 241.2,-406.8 241.2,-406.8 241.2,-412.8 235.2,-418.8 229.2,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"212.4\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- fdcdc8b675234abbb124c60c1a48bfc5&amp;#45;&amp;#45;88e216438f9b4dfda2c01540f412796b --&gt;\n&lt;g id=\"edge468\" class=\"edge\"&gt;\n&lt;title&gt;fdcdc8b675234abbb124c60c1a48bfc5&amp;#45;&amp;#45;88e216438f9b4dfda2c01540f412796b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M119.87,-390C121.59,-390 156.48,-390 182.68,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 88e216438f9b4dfda2c01540f412796b&amp;#45;&amp;#45;e57bff0f570c47178acd6f0c1a87a7d0 --&gt;\n&lt;g id=\"edge1877\" class=\"edge\"&gt;\n&lt;title&gt;88e216438f9b4dfda2c01540f412796b&amp;#45;&amp;#45;e57bff0f570c47178acd6f0c1a87a7d0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M212.4,-419.65C212.4,-430.2 212.4,-440.76 212.4,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 174e34ce2ffb45a4adb99a5ed9097617 --&gt;\n&lt;g id=\"node472\" class=\"node\"&gt;\n&lt;title&gt;174e34ce2ffb45a4adb99a5ed9097617&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"306\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 88e216438f9b4dfda2c01540f412796b&amp;#45;&amp;#45;174e34ce2ffb45a4adb99a5ed9097617 --&gt;\n&lt;g id=\"edge469\" class=\"edge\"&gt;\n&lt;title&gt;88e216438f9b4dfda2c01540f412796b&amp;#45;&amp;#45;174e34ce2ffb45a4adb99a5ed9097617&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M241.88,-390C261.84,-390 286.94,-390 298.56,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e94380d0c45647029e32a5712d078f04 --&gt;\n&lt;g id=\"node473\" class=\"node\"&gt;\n&lt;title&gt;e94380d0c45647029e32a5712d078f04&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"400.32,-390.72 398.88,-390.72 398.88,-389.28 400.32,-389.28 400.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 174e34ce2ffb45a4adb99a5ed9097617&amp;#45;&amp;#45;e94380d0c45647029e32a5712d078f04 --&gt;\n&lt;g id=\"edge470\" class=\"edge\"&gt;\n&lt;title&gt;174e34ce2ffb45a4adb99a5ed9097617&amp;#45;&amp;#45;e94380d0c45647029e32a5712d078f04&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M313.59,-390C333.93,-390 394.64,-390 398.42,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d3743010f90429bab6f3b3180e1d590 --&gt;\n&lt;g id=\"node474\" class=\"node\"&gt;\n&lt;title&gt;0d3743010f90429bab6f3b3180e1d590&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"493.92,-390.72 492.48,-390.72 492.48,-389.28 493.92,-389.28 493.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e94380d0c45647029e32a5712d078f04&amp;#45;&amp;#45;0d3743010f90429bab6f3b3180e1d590 --&gt;\n&lt;g id=\"edge471\" class=\"edge\"&gt;\n&lt;title&gt;e94380d0c45647029e32a5712d078f04&amp;#45;&amp;#45;0d3743010f90429bab6f3b3180e1d590&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M400.67,-390C403.4,-390 489.45,-390 492.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 91eefb023c744f4bb25a0aa4bcb1aaa4 --&gt;\n&lt;g id=\"node475\" class=\"node\"&gt;\n&lt;title&gt;91eefb023c744f4bb25a0aa4bcb1aaa4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"587.52,-390.72 586.08,-390.72 586.08,-389.28 587.52,-389.28 587.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d3743010f90429bab6f3b3180e1d590&amp;#45;&amp;#45;91eefb023c744f4bb25a0aa4bcb1aaa4 --&gt;\n&lt;g id=\"edge472\" class=\"edge\"&gt;\n&lt;title&gt;0d3743010f90429bab6f3b3180e1d590&amp;#45;&amp;#45;91eefb023c744f4bb25a0aa4bcb1aaa4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M494.27,-390C497,-390 583.05,-390 585.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 07bcf8c12b624dec8fbf6b61ea3c3348 --&gt;\n&lt;g id=\"node476\" class=\"node\"&gt;\n&lt;title&gt;07bcf8c12b624dec8fbf6b61ea3c3348&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"681.12,-390.72 679.68,-390.72 679.68,-389.28 681.12,-389.28 681.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 91eefb023c744f4bb25a0aa4bcb1aaa4&amp;#45;&amp;#45;07bcf8c12b624dec8fbf6b61ea3c3348 --&gt;\n&lt;g id=\"edge473\" class=\"edge\"&gt;\n&lt;title&gt;91eefb023c744f4bb25a0aa4bcb1aaa4&amp;#45;&amp;#45;07bcf8c12b624dec8fbf6b61ea3c3348&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M587.87,-390C590.6,-390 676.65,-390 679.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- c8ebd326c95a4b059d1ef1d351e79bc9 --&gt;\n&lt;g id=\"node477\" class=\"node\"&gt;\n&lt;title&gt;c8ebd326c95a4b059d1ef1d351e79bc9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"827.52,-390.72 826.08,-390.72 826.08,-389.28 827.52,-389.28 827.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 07bcf8c12b624dec8fbf6b61ea3c3348&amp;#45;&amp;#45;c8ebd326c95a4b059d1ef1d351e79bc9 --&gt;\n&lt;g id=\"edge474\" class=\"edge\"&gt;\n&lt;title&gt;07bcf8c12b624dec8fbf6b61ea3c3348&amp;#45;&amp;#45;c8ebd326c95a4b059d1ef1d351e79bc9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M681.5,-390C685.81,-390 821.46,-390 825.7,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 88bcd45958724e56967d248ef90b8d47 --&gt;\n&lt;g id=\"node478\" class=\"node\"&gt;\n&lt;title&gt;88bcd45958724e56967d248ef90b8d47&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"973.92,-390.72 972.48,-390.72 972.48,-389.28 973.92,-389.28 973.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c8ebd326c95a4b059d1ef1d351e79bc9&amp;#45;&amp;#45;88bcd45958724e56967d248ef90b8d47 --&gt;\n&lt;g id=\"edge475\" class=\"edge\"&gt;\n&lt;title&gt;c8ebd326c95a4b059d1ef1d351e79bc9&amp;#45;&amp;#45;88bcd45958724e56967d248ef90b8d47&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M827.9,-390C832.21,-390 967.86,-390 972.1,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 885f357630364f6186152e6186e2014c --&gt;\n&lt;g id=\"node479\" class=\"node\"&gt;\n&lt;title&gt;885f357630364f6186152e6186e2014c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1067.52,-390.72 1066.08,-390.72 1066.08,-389.28 1067.52,-389.28 1067.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 88bcd45958724e56967d248ef90b8d47&amp;#45;&amp;#45;885f357630364f6186152e6186e2014c --&gt;\n&lt;g id=\"edge476\" class=\"edge\"&gt;\n&lt;title&gt;88bcd45958724e56967d248ef90b8d47&amp;#45;&amp;#45;885f357630364f6186152e6186e2014c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M974.27,-390C977,-390 1063.05,-390 1065.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- c058ffafb49c4234ad0660f5b978a5a1 --&gt;\n&lt;g id=\"node480\" class=\"node\"&gt;\n&lt;title&gt;c058ffafb49c4234ad0660f5b978a5a1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1161.12,-390.72 1159.68,-390.72 1159.68,-389.28 1161.12,-389.28 1161.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 885f357630364f6186152e6186e2014c&amp;#45;&amp;#45;c058ffafb49c4234ad0660f5b978a5a1 --&gt;\n&lt;g id=\"edge477\" class=\"edge\"&gt;\n&lt;title&gt;885f357630364f6186152e6186e2014c&amp;#45;&amp;#45;c058ffafb49c4234ad0660f5b978a5a1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1067.87,-390C1070.6,-390 1156.65,-390 1159.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- ce8467821d20464da409da69507ef6a9 --&gt;\n&lt;g id=\"node481\" class=\"node\"&gt;\n&lt;title&gt;ce8467821d20464da409da69507ef6a9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1254.72,-390.72 1253.28,-390.72 1253.28,-389.28 1254.72,-389.28 1254.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c058ffafb49c4234ad0660f5b978a5a1&amp;#45;&amp;#45;ce8467821d20464da409da69507ef6a9 --&gt;\n&lt;g id=\"edge478\" class=\"edge\"&gt;\n&lt;title&gt;c058ffafb49c4234ad0660f5b978a5a1&amp;#45;&amp;#45;ce8467821d20464da409da69507ef6a9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1161.47,-390C1164.2,-390 1250.25,-390 1252.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 436b5a5ffd084b79bdb0713210b1e410 --&gt;\n&lt;g id=\"node482\" class=\"node\"&gt;\n&lt;title&gt;436b5a5ffd084b79bdb0713210b1e410&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"1347.6\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- ce8467821d20464da409da69507ef6a9&amp;#45;&amp;#45;436b5a5ffd084b79bdb0713210b1e410 --&gt;\n&lt;g id=\"edge479\" class=\"edge\"&gt;\n&lt;title&gt;ce8467821d20464da409da69507ef6a9&amp;#45;&amp;#45;436b5a5ffd084b79bdb0713210b1e410&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1255.07,-390C1257.37,-390 1319.21,-390 1339.92,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e83a18b1106b491d980d6bb997e0f217 --&gt;\n&lt;g id=\"node483\" class=\"node\"&gt;\n&lt;title&gt;e83a18b1106b491d980d6bb997e0f217&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M1458,-418.8C1458,-418.8 1424.4,-418.8 1424.4,-418.8 1418.4,-418.8 1412.4,-412.8 1412.4,-406.8 1412.4,-406.8 1412.4,-373.2 1412.4,-373.2 1412.4,-367.2 1418.4,-361.2 1424.4,-361.2 1424.4,-361.2 1458,-361.2 1458,-361.2 1464,-361.2 1470,-367.2 1470,-373.2 1470,-373.2 1470,-406.8 1470,-406.8 1470,-412.8 1464,-418.8 1458,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"1441.2\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 436b5a5ffd084b79bdb0713210b1e410&amp;#45;&amp;#45;e83a18b1106b491d980d6bb997e0f217 --&gt;\n&lt;g id=\"edge480\" class=\"edge\"&gt;\n&lt;title&gt;436b5a5ffd084b79bdb0713210b1e410&amp;#45;&amp;#45;e83a18b1106b491d980d6bb997e0f217&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1355.19,-390C1366.84,-390 1391.72,-390 1411.57,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e83a18b1106b491d980d6bb997e0f217&amp;#45;&amp;#45;048a2e61d1f2497ba85101cd08450d88 --&gt;\n&lt;g id=\"edge1878\" class=\"edge\"&gt;\n&lt;title&gt;e83a18b1106b491d980d6bb997e0f217&amp;#45;&amp;#45;048a2e61d1f2497ba85101cd08450d88&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1441.2,-419.65C1441.2,-430.2 1441.2,-440.76 1441.2,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3eff22e3e6ca414083b8c499fce456b8 --&gt;\n&lt;g id=\"node484\" class=\"node\"&gt;\n&lt;title&gt;3eff22e3e6ca414083b8c499fce456b8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1535.52,-390.72 1534.08,-390.72 1534.08,-389.28 1535.52,-389.28 1535.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e83a18b1106b491d980d6bb997e0f217&amp;#45;&amp;#45;3eff22e3e6ca414083b8c499fce456b8 --&gt;\n&lt;g id=\"edge481\" class=\"edge\"&gt;\n&lt;title&gt;e83a18b1106b491d980d6bb997e0f217&amp;#45;&amp;#45;3eff22e3e6ca414083b8c499fce456b8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1470.68,-390C1496.73,-390 1531.54,-390 1533.7,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 502f5929e8454ec1ab6363542367478e --&gt;\n&lt;g id=\"node485\" class=\"node\"&gt;\n&lt;title&gt;502f5929e8454ec1ab6363542367478e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1629.12,-390.72 1627.68,-390.72 1627.68,-389.28 1629.12,-389.28 1629.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3eff22e3e6ca414083b8c499fce456b8&amp;#45;&amp;#45;502f5929e8454ec1ab6363542367478e --&gt;\n&lt;g id=\"edge482\" class=\"edge\"&gt;\n&lt;title&gt;3eff22e3e6ca414083b8c499fce456b8&amp;#45;&amp;#45;502f5929e8454ec1ab6363542367478e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1535.87,-390C1538.6,-390 1624.65,-390 1627.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- a66873907aab4fe8a515108c56ef925c --&gt;\n&lt;g id=\"node486\" class=\"node\"&gt;\n&lt;title&gt;a66873907aab4fe8a515108c56ef925c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1781.52,-390.72 1780.08,-390.72 1780.08,-389.28 1781.52,-389.28 1781.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 502f5929e8454ec1ab6363542367478e&amp;#45;&amp;#45;a66873907aab4fe8a515108c56ef925c --&gt;\n&lt;g id=\"edge483\" class=\"edge\"&gt;\n&lt;title&gt;502f5929e8454ec1ab6363542367478e&amp;#45;&amp;#45;a66873907aab4fe8a515108c56ef925c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1629.51,-390C1633.99,-390 1775.28,-390 1779.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 37254166452e435e8e9d8c7ddb869a10 --&gt;\n&lt;g id=\"node487\" class=\"node\"&gt;\n&lt;title&gt;37254166452e435e8e9d8c7ddb869a10&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1933.92,-390.72 1932.48,-390.72 1932.48,-389.28 1933.92,-389.28 1933.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a66873907aab4fe8a515108c56ef925c&amp;#45;&amp;#45;37254166452e435e8e9d8c7ddb869a10 --&gt;\n&lt;g id=\"edge484\" class=\"edge\"&gt;\n&lt;title&gt;a66873907aab4fe8a515108c56ef925c&amp;#45;&amp;#45;37254166452e435e8e9d8c7ddb869a10&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1781.91,-390C1786.39,-390 1927.68,-390 1932.09,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 50ac10739fbd4f759b89e6c2f81cd3cc --&gt;\n&lt;g id=\"node488\" class=\"node\"&gt;\n&lt;title&gt;50ac10739fbd4f759b89e6c2f81cd3cc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2027.52,-390.72 2026.08,-390.72 2026.08,-389.28 2027.52,-389.28 2027.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 37254166452e435e8e9d8c7ddb869a10&amp;#45;&amp;#45;50ac10739fbd4f759b89e6c2f81cd3cc --&gt;\n&lt;g id=\"edge485\" class=\"edge\"&gt;\n&lt;title&gt;37254166452e435e8e9d8c7ddb869a10&amp;#45;&amp;#45;50ac10739fbd4f759b89e6c2f81cd3cc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1934.27,-390C1937,-390 2023.05,-390 2025.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4ba79167dba04d5baf6aac44e479f6fa --&gt;\n&lt;g id=\"node489\" class=\"node\"&gt;\n&lt;title&gt;4ba79167dba04d5baf6aac44e479f6fa&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M2137.2,-418.8C2137.2,-418.8 2103.6,-418.8 2103.6,-418.8 2097.6,-418.8 2091.6,-412.8 2091.6,-406.8 2091.6,-406.8 2091.6,-373.2 2091.6,-373.2 2091.6,-367.2 2097.6,-361.2 2103.6,-361.2 2103.6,-361.2 2137.2,-361.2 2137.2,-361.2 2143.2,-361.2 2149.2,-367.2 2149.2,-373.2 2149.2,-373.2 2149.2,-406.8 2149.2,-406.8 2149.2,-412.8 2143.2,-418.8 2137.2,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"2120.4\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 50ac10739fbd4f759b89e6c2f81cd3cc&amp;#45;&amp;#45;4ba79167dba04d5baf6aac44e479f6fa --&gt;\n&lt;g id=\"edge486\" class=\"edge\"&gt;\n&lt;title&gt;50ac10739fbd4f759b89e6c2f81cd3cc&amp;#45;&amp;#45;4ba79167dba04d5baf6aac44e479f6fa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2027.87,-390C2029.59,-390 2064.48,-390 2090.68,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4ba79167dba04d5baf6aac44e479f6fa&amp;#45;&amp;#45;44556b63f4474c39955f187a1614d07e --&gt;\n&lt;g id=\"edge1879\" class=\"edge\"&gt;\n&lt;title&gt;4ba79167dba04d5baf6aac44e479f6fa&amp;#45;&amp;#45;44556b63f4474c39955f187a1614d07e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2120.4,-419.65C2120.4,-430.2 2120.4,-440.76 2120.4,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- e052e94d09214217a40cda3c77f49a3a --&gt;\n&lt;g id=\"node490\" class=\"node\"&gt;\n&lt;title&gt;e052e94d09214217a40cda3c77f49a3a&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"2214\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4ba79167dba04d5baf6aac44e479f6fa&amp;#45;&amp;#45;e052e94d09214217a40cda3c77f49a3a --&gt;\n&lt;g id=\"edge487\" class=\"edge\"&gt;\n&lt;title&gt;4ba79167dba04d5baf6aac44e479f6fa&amp;#45;&amp;#45;e052e94d09214217a40cda3c77f49a3a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2149.88,-390C2169.84,-390 2194.94,-390 2206.56,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 16668f44912f4b538f3401ce26ef145d --&gt;\n&lt;g id=\"node491\" class=\"node\"&gt;\n&lt;title&gt;16668f44912f4b538f3401ce26ef145d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2308.32,-390.72 2306.88,-390.72 2306.88,-389.28 2308.32,-389.28 2308.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e052e94d09214217a40cda3c77f49a3a&amp;#45;&amp;#45;16668f44912f4b538f3401ce26ef145d --&gt;\n&lt;g id=\"edge488\" class=\"edge\"&gt;\n&lt;title&gt;e052e94d09214217a40cda3c77f49a3a&amp;#45;&amp;#45;16668f44912f4b538f3401ce26ef145d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2221.59,-390C2241.93,-390 2302.64,-390 2306.42,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a1e69940f8642cbb6f910caf47b1f1c --&gt;\n&lt;g id=\"node492\" class=\"node\"&gt;\n&lt;title&gt;0a1e69940f8642cbb6f910caf47b1f1c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2401.92,-390.72 2400.48,-390.72 2400.48,-389.28 2401.92,-389.28 2401.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 16668f44912f4b538f3401ce26ef145d&amp;#45;&amp;#45;0a1e69940f8642cbb6f910caf47b1f1c --&gt;\n&lt;g id=\"edge489\" class=\"edge\"&gt;\n&lt;title&gt;16668f44912f4b538f3401ce26ef145d&amp;#45;&amp;#45;0a1e69940f8642cbb6f910caf47b1f1c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2308.67,-390C2311.4,-390 2397.45,-390 2400.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- cad02413b6f94810a81063ca734f4e1b --&gt;\n&lt;g id=\"node493\" class=\"node\"&gt;\n&lt;title&gt;cad02413b6f94810a81063ca734f4e1b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2554.32,-390.72 2552.88,-390.72 2552.88,-389.28 2554.32,-389.28 2554.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a1e69940f8642cbb6f910caf47b1f1c&amp;#45;&amp;#45;cad02413b6f94810a81063ca734f4e1b --&gt;\n&lt;g id=\"edge490\" class=\"edge\"&gt;\n&lt;title&gt;0a1e69940f8642cbb6f910caf47b1f1c&amp;#45;&amp;#45;cad02413b6f94810a81063ca734f4e1b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2402.31,-390C2406.79,-390 2548.08,-390 2552.49,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e2b316774a5410c924169cdda905b77 --&gt;\n&lt;g id=\"node494\" class=\"node\"&gt;\n&lt;title&gt;9e2b316774a5410c924169cdda905b77&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2706.72,-390.72 2705.28,-390.72 2705.28,-389.28 2706.72,-389.28 2706.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cad02413b6f94810a81063ca734f4e1b&amp;#45;&amp;#45;9e2b316774a5410c924169cdda905b77 --&gt;\n&lt;g id=\"edge491\" class=\"edge\"&gt;\n&lt;title&gt;cad02413b6f94810a81063ca734f4e1b&amp;#45;&amp;#45;9e2b316774a5410c924169cdda905b77&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2554.71,-390C2559.19,-390 2700.48,-390 2704.89,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7b2dad2037e544beb477945c76c6f3d0 --&gt;\n&lt;g id=\"node495\" class=\"node\"&gt;\n&lt;title&gt;7b2dad2037e544beb477945c76c6f3d0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2800.32,-390.72 2798.88,-390.72 2798.88,-389.28 2800.32,-389.28 2800.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e2b316774a5410c924169cdda905b77&amp;#45;&amp;#45;7b2dad2037e544beb477945c76c6f3d0 --&gt;\n&lt;g id=\"edge492\" class=\"edge\"&gt;\n&lt;title&gt;9e2b316774a5410c924169cdda905b77&amp;#45;&amp;#45;7b2dad2037e544beb477945c76c6f3d0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2707.07,-390C2709.8,-390 2795.85,-390 2798.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 09a924d4bbc94ded8c2a9c679d632fc1 --&gt;\n&lt;g id=\"node496\" class=\"node\"&gt;\n&lt;title&gt;09a924d4bbc94ded8c2a9c679d632fc1&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"2893.2\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7b2dad2037e544beb477945c76c6f3d0&amp;#45;&amp;#45;09a924d4bbc94ded8c2a9c679d632fc1 --&gt;\n&lt;g id=\"edge493\" class=\"edge\"&gt;\n&lt;title&gt;7b2dad2037e544beb477945c76c6f3d0&amp;#45;&amp;#45;09a924d4bbc94ded8c2a9c679d632fc1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2800.67,-390C2802.97,-390 2864.81,-390 2885.52,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ff059eab3e74701b3943bacb2dfc02f --&gt;\n&lt;g id=\"node497\" class=\"node\"&gt;\n&lt;title&gt;6ff059eab3e74701b3943bacb2dfc02f&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M3003.6,-418.8C3003.6,-418.8 2970,-418.8 2970,-418.8 2964,-418.8 2958,-412.8 2958,-406.8 2958,-406.8 2958,-373.2 2958,-373.2 2958,-367.2 2964,-361.2 2970,-361.2 2970,-361.2 3003.6,-361.2 3003.6,-361.2 3009.6,-361.2 3015.6,-367.2 3015.6,-373.2 3015.6,-373.2 3015.6,-406.8 3015.6,-406.8 3015.6,-412.8 3009.6,-418.8 3003.6,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"2986.8\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 09a924d4bbc94ded8c2a9c679d632fc1&amp;#45;&amp;#45;6ff059eab3e74701b3943bacb2dfc02f --&gt;\n&lt;g id=\"edge494\" class=\"edge\"&gt;\n&lt;title&gt;09a924d4bbc94ded8c2a9c679d632fc1&amp;#45;&amp;#45;6ff059eab3e74701b3943bacb2dfc02f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2900.79,-390C2912.44,-390 2937.32,-390 2957.17,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ff059eab3e74701b3943bacb2dfc02f&amp;#45;&amp;#45;1ba068ed026a43ca8e6fc208e259b3bb --&gt;\n&lt;g id=\"edge1880\" class=\"edge\"&gt;\n&lt;title&gt;6ff059eab3e74701b3943bacb2dfc02f&amp;#45;&amp;#45;1ba068ed026a43ca8e6fc208e259b3bb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2986.8,-419.65C2986.8,-430.2 2986.8,-440.76 2986.8,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- e2aa936159bd4dd882cce711ec774e69 --&gt;\n&lt;g id=\"node498\" class=\"node\"&gt;\n&lt;title&gt;e2aa936159bd4dd882cce711ec774e69&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3081.12,-390.72 3079.68,-390.72 3079.68,-389.28 3081.12,-389.28 3081.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ff059eab3e74701b3943bacb2dfc02f&amp;#45;&amp;#45;e2aa936159bd4dd882cce711ec774e69 --&gt;\n&lt;g id=\"edge495\" class=\"edge\"&gt;\n&lt;title&gt;6ff059eab3e74701b3943bacb2dfc02f&amp;#45;&amp;#45;e2aa936159bd4dd882cce711ec774e69&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3016.28,-390C3042.33,-390 3077.14,-390 3079.3,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 601ffeb935894663b623616cb4a7cebd --&gt;\n&lt;g id=\"node499\" class=\"node\"&gt;\n&lt;title&gt;601ffeb935894663b623616cb4a7cebd&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M3190.8,-418.8C3190.8,-418.8 3157.2,-418.8 3157.2,-418.8 3151.2,-418.8 3145.2,-412.8 3145.2,-406.8 3145.2,-406.8 3145.2,-373.2 3145.2,-373.2 3145.2,-367.2 3151.2,-361.2 3157.2,-361.2 3157.2,-361.2 3190.8,-361.2 3190.8,-361.2 3196.8,-361.2 3202.8,-367.2 3202.8,-373.2 3202.8,-373.2 3202.8,-406.8 3202.8,-406.8 3202.8,-412.8 3196.8,-418.8 3190.8,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"3174\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- e2aa936159bd4dd882cce711ec774e69&amp;#45;&amp;#45;601ffeb935894663b623616cb4a7cebd --&gt;\n&lt;g id=\"edge496\" class=\"edge\"&gt;\n&lt;title&gt;e2aa936159bd4dd882cce711ec774e69&amp;#45;&amp;#45;601ffeb935894663b623616cb4a7cebd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3081.47,-390C3083.19,-390 3118.08,-390 3144.28,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 601ffeb935894663b623616cb4a7cebd&amp;#45;&amp;#45;c034929a8dd3407c802019de5b05c71f --&gt;\n&lt;g id=\"edge1881\" class=\"edge\"&gt;\n&lt;title&gt;601ffeb935894663b623616cb4a7cebd&amp;#45;&amp;#45;c034929a8dd3407c802019de5b05c71f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3174,-419.65C3174,-430.2 3174,-440.76 3174,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 651bb70c27144e08b67d03d0d66dc269 --&gt;\n&lt;g id=\"node500\" class=\"node\"&gt;\n&lt;title&gt;651bb70c27144e08b67d03d0d66dc269&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"3267.6\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 601ffeb935894663b623616cb4a7cebd&amp;#45;&amp;#45;651bb70c27144e08b67d03d0d66dc269 --&gt;\n&lt;g id=\"edge497\" class=\"edge\"&gt;\n&lt;title&gt;601ffeb935894663b623616cb4a7cebd&amp;#45;&amp;#45;651bb70c27144e08b67d03d0d66dc269&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3203.48,-390C3223.44,-390 3248.54,-390 3260.16,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- f1d55670e1d749e88e22a84dac4b5bc0 --&gt;\n&lt;g id=\"node501\" class=\"node\"&gt;\n&lt;title&gt;f1d55670e1d749e88e22a84dac4b5bc0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3361.92,-390.72 3360.48,-390.72 3360.48,-389.28 3361.92,-389.28 3361.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 651bb70c27144e08b67d03d0d66dc269&amp;#45;&amp;#45;f1d55670e1d749e88e22a84dac4b5bc0 --&gt;\n&lt;g id=\"edge498\" class=\"edge\"&gt;\n&lt;title&gt;651bb70c27144e08b67d03d0d66dc269&amp;#45;&amp;#45;f1d55670e1d749e88e22a84dac4b5bc0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3275.19,-390C3295.53,-390 3356.24,-390 3360.02,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- d0fdc1d024b74117b5c4345f549385a7 --&gt;\n&lt;g id=\"node502\" class=\"node\"&gt;\n&lt;title&gt;d0fdc1d024b74117b5c4345f549385a7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3514.32,-390.72 3512.88,-390.72 3512.88,-389.28 3514.32,-389.28 3514.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f1d55670e1d749e88e22a84dac4b5bc0&amp;#45;&amp;#45;d0fdc1d024b74117b5c4345f549385a7 --&gt;\n&lt;g id=\"edge499\" class=\"edge\"&gt;\n&lt;title&gt;f1d55670e1d749e88e22a84dac4b5bc0&amp;#45;&amp;#45;d0fdc1d024b74117b5c4345f549385a7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3362.31,-390C3366.79,-390 3508.08,-390 3512.49,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- cabc09ac494c4808bf1de110afa9d531 --&gt;\n&lt;g id=\"node503\" class=\"node\"&gt;\n&lt;title&gt;cabc09ac494c4808bf1de110afa9d531&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3666.72,-390.72 3665.28,-390.72 3665.28,-389.28 3666.72,-389.28 3666.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d0fdc1d024b74117b5c4345f549385a7&amp;#45;&amp;#45;cabc09ac494c4808bf1de110afa9d531 --&gt;\n&lt;g id=\"edge500\" class=\"edge\"&gt;\n&lt;title&gt;d0fdc1d024b74117b5c4345f549385a7&amp;#45;&amp;#45;cabc09ac494c4808bf1de110afa9d531&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3514.71,-390C3519.19,-390 3660.48,-390 3664.89,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 050cbfa4ebb04b308e61ebe48fcc0945 --&gt;\n&lt;g id=\"node504\" class=\"node\"&gt;\n&lt;title&gt;050cbfa4ebb04b308e61ebe48fcc0945&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"3759.6\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- cabc09ac494c4808bf1de110afa9d531&amp;#45;&amp;#45;050cbfa4ebb04b308e61ebe48fcc0945 --&gt;\n&lt;g id=\"edge501\" class=\"edge\"&gt;\n&lt;title&gt;cabc09ac494c4808bf1de110afa9d531&amp;#45;&amp;#45;050cbfa4ebb04b308e61ebe48fcc0945&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3667.07,-390C3669.37,-390 3731.21,-390 3751.92,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 82d6b4d4ee29490d8961d367984602fa --&gt;\n&lt;g id=\"node505\" class=\"node\"&gt;\n&lt;title&gt;82d6b4d4ee29490d8961d367984602fa&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M3870,-418.8C3870,-418.8 3836.4,-418.8 3836.4,-418.8 3830.4,-418.8 3824.4,-412.8 3824.4,-406.8 3824.4,-406.8 3824.4,-373.2 3824.4,-373.2 3824.4,-367.2 3830.4,-361.2 3836.4,-361.2 3836.4,-361.2 3870,-361.2 3870,-361.2 3876,-361.2 3882,-367.2 3882,-373.2 3882,-373.2 3882,-406.8 3882,-406.8 3882,-412.8 3876,-418.8 3870,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"3853.2\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 050cbfa4ebb04b308e61ebe48fcc0945&amp;#45;&amp;#45;82d6b4d4ee29490d8961d367984602fa --&gt;\n&lt;g id=\"edge502\" class=\"edge\"&gt;\n&lt;title&gt;050cbfa4ebb04b308e61ebe48fcc0945&amp;#45;&amp;#45;82d6b4d4ee29490d8961d367984602fa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3767.19,-390C3778.84,-390 3803.72,-390 3823.57,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 82d6b4d4ee29490d8961d367984602fa&amp;#45;&amp;#45;fd806fa834f04d6a89fe37533691d4eb --&gt;\n&lt;g id=\"edge1882\" class=\"edge\"&gt;\n&lt;title&gt;82d6b4d4ee29490d8961d367984602fa&amp;#45;&amp;#45;fd806fa834f04d6a89fe37533691d4eb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3853.2,-419.65C3853.2,-430.2 3853.2,-440.76 3853.2,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 31c87161731347359173b016fa7df196 --&gt;\n&lt;g id=\"node506\" class=\"node\"&gt;\n&lt;title&gt;31c87161731347359173b016fa7df196&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M3963.6,-418.8C3963.6,-418.8 3930,-418.8 3930,-418.8 3924,-418.8 3918,-412.8 3918,-406.8 3918,-406.8 3918,-373.2 3918,-373.2 3918,-367.2 3924,-361.2 3930,-361.2 3930,-361.2 3963.6,-361.2 3963.6,-361.2 3969.6,-361.2 3975.6,-367.2 3975.6,-373.2 3975.6,-373.2 3975.6,-406.8 3975.6,-406.8 3975.6,-412.8 3969.6,-418.8 3963.6,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"3946.8\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 82d6b4d4ee29490d8961d367984602fa&amp;#45;&amp;#45;31c87161731347359173b016fa7df196 --&gt;\n&lt;g id=\"edge503\" class=\"edge\"&gt;\n&lt;title&gt;82d6b4d4ee29490d8961d367984602fa&amp;#45;&amp;#45;31c87161731347359173b016fa7df196&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3882.68,-390C3893.6,-390 3906.07,-390 3917.02,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 31c87161731347359173b016fa7df196&amp;#45;&amp;#45;16c57db6f37449379a72131ba6fb8d33 --&gt;\n&lt;g id=\"edge1883\" class=\"edge\"&gt;\n&lt;title&gt;31c87161731347359173b016fa7df196&amp;#45;&amp;#45;16c57db6f37449379a72131ba6fb8d33&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3946.8,-419.65C3946.8,-430.2 3946.8,-440.76 3946.8,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- c5d91ccea61f4dd3ae861c35f21b52b1 --&gt;\n&lt;g id=\"node507\" class=\"node\"&gt;\n&lt;title&gt;c5d91ccea61f4dd3ae861c35f21b52b1&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"4040.4\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 31c87161731347359173b016fa7df196&amp;#45;&amp;#45;c5d91ccea61f4dd3ae861c35f21b52b1 --&gt;\n&lt;g id=\"edge504\" class=\"edge\"&gt;\n&lt;title&gt;31c87161731347359173b016fa7df196&amp;#45;&amp;#45;c5d91ccea61f4dd3ae861c35f21b52b1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3976.28,-390C3996.24,-390 4021.34,-390 4032.96,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- bc418b4e06c04d10b458b642ee0528b4 --&gt;\n&lt;g id=\"node508\" class=\"node\"&gt;\n&lt;title&gt;bc418b4e06c04d10b458b642ee0528b4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4134.72,-390.72 4133.28,-390.72 4133.28,-389.28 4134.72,-389.28 4134.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c5d91ccea61f4dd3ae861c35f21b52b1&amp;#45;&amp;#45;bc418b4e06c04d10b458b642ee0528b4 --&gt;\n&lt;g id=\"edge505\" class=\"edge\"&gt;\n&lt;title&gt;c5d91ccea61f4dd3ae861c35f21b52b1&amp;#45;&amp;#45;bc418b4e06c04d10b458b642ee0528b4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4047.99,-390C4068.33,-390 4129.04,-390 4132.82,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6da1d4a81787420bb75d6a249de0d69c --&gt;\n&lt;g id=\"node509\" class=\"node\"&gt;\n&lt;title&gt;6da1d4a81787420bb75d6a249de0d69c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4228.32,-390.72 4226.88,-390.72 4226.88,-389.28 4228.32,-389.28 4228.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bc418b4e06c04d10b458b642ee0528b4&amp;#45;&amp;#45;6da1d4a81787420bb75d6a249de0d69c --&gt;\n&lt;g id=\"edge506\" class=\"edge\"&gt;\n&lt;title&gt;bc418b4e06c04d10b458b642ee0528b4&amp;#45;&amp;#45;6da1d4a81787420bb75d6a249de0d69c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4135.07,-390C4137.8,-390 4223.85,-390 4226.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- b85a8130da494401add16d4b24b82273 --&gt;\n&lt;g id=\"node510\" class=\"node\"&gt;\n&lt;title&gt;b85a8130da494401add16d4b24b82273&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4380.72,-390.72 4379.28,-390.72 4379.28,-389.28 4380.72,-389.28 4380.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6da1d4a81787420bb75d6a249de0d69c&amp;#45;&amp;#45;b85a8130da494401add16d4b24b82273 --&gt;\n&lt;g id=\"edge507\" class=\"edge\"&gt;\n&lt;title&gt;6da1d4a81787420bb75d6a249de0d69c&amp;#45;&amp;#45;b85a8130da494401add16d4b24b82273&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4228.71,-390C4233.19,-390 4374.48,-390 4378.89,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1bb13fbedb5042fd9737afd57b891883 --&gt;\n&lt;g id=\"node511\" class=\"node\"&gt;\n&lt;title&gt;1bb13fbedb5042fd9737afd57b891883&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4533.12,-390.72 4531.68,-390.72 4531.68,-389.28 4533.12,-389.28 4533.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b85a8130da494401add16d4b24b82273&amp;#45;&amp;#45;1bb13fbedb5042fd9737afd57b891883 --&gt;\n&lt;g id=\"edge508\" class=\"edge\"&gt;\n&lt;title&gt;b85a8130da494401add16d4b24b82273&amp;#45;&amp;#45;1bb13fbedb5042fd9737afd57b891883&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4381.11,-390C4385.59,-390 4526.88,-390 4531.29,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 718565b600c54f47974122aae8ee52ff --&gt;\n&lt;g id=\"node512\" class=\"node\"&gt;\n&lt;title&gt;718565b600c54f47974122aae8ee52ff&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4626.72,-390.72 4625.28,-390.72 4625.28,-389.28 4626.72,-389.28 4626.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1bb13fbedb5042fd9737afd57b891883&amp;#45;&amp;#45;718565b600c54f47974122aae8ee52ff --&gt;\n&lt;g id=\"edge509\" class=\"edge\"&gt;\n&lt;title&gt;1bb13fbedb5042fd9737afd57b891883&amp;#45;&amp;#45;718565b600c54f47974122aae8ee52ff&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4533.47,-390C4536.2,-390 4622.25,-390 4624.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3a5b3d6237694ca89c07fa527867b11e --&gt;\n&lt;g id=\"node513\" class=\"node\"&gt;\n&lt;title&gt;3a5b3d6237694ca89c07fa527867b11e&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"4719.6\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 718565b600c54f47974122aae8ee52ff&amp;#45;&amp;#45;3a5b3d6237694ca89c07fa527867b11e --&gt;\n&lt;g id=\"edge510\" class=\"edge\"&gt;\n&lt;title&gt;718565b600c54f47974122aae8ee52ff&amp;#45;&amp;#45;3a5b3d6237694ca89c07fa527867b11e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4627.07,-390C4629.37,-390 4691.21,-390 4711.92,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 869e5790d65b458aa9037a033ed9efad --&gt;\n&lt;g id=\"node514\" class=\"node\"&gt;\n&lt;title&gt;869e5790d65b458aa9037a033ed9efad&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M4830,-418.8C4830,-418.8 4796.4,-418.8 4796.4,-418.8 4790.4,-418.8 4784.4,-412.8 4784.4,-406.8 4784.4,-406.8 4784.4,-373.2 4784.4,-373.2 4784.4,-367.2 4790.4,-361.2 4796.4,-361.2 4796.4,-361.2 4830,-361.2 4830,-361.2 4836,-361.2 4842,-367.2 4842,-373.2 4842,-373.2 4842,-406.8 4842,-406.8 4842,-412.8 4836,-418.8 4830,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"4813.2\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 3a5b3d6237694ca89c07fa527867b11e&amp;#45;&amp;#45;869e5790d65b458aa9037a033ed9efad --&gt;\n&lt;g id=\"edge511\" class=\"edge\"&gt;\n&lt;title&gt;3a5b3d6237694ca89c07fa527867b11e&amp;#45;&amp;#45;869e5790d65b458aa9037a033ed9efad&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4727.19,-390C4738.84,-390 4763.72,-390 4783.57,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 869e5790d65b458aa9037a033ed9efad&amp;#45;&amp;#45;c0a8d424c3f14c0982b2597d1e12730c --&gt;\n&lt;g id=\"edge1884\" class=\"edge\"&gt;\n&lt;title&gt;869e5790d65b458aa9037a033ed9efad&amp;#45;&amp;#45;c0a8d424c3f14c0982b2597d1e12730c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4813.2,-419.65C4813.2,-430.2 4813.2,-440.76 4813.2,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- ec121285903f4d759441a88fabe75500 --&gt;\n&lt;g id=\"node515\" class=\"node\"&gt;\n&lt;title&gt;ec121285903f4d759441a88fabe75500&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M4923.6,-418.8C4923.6,-418.8 4890,-418.8 4890,-418.8 4884,-418.8 4878,-412.8 4878,-406.8 4878,-406.8 4878,-373.2 4878,-373.2 4878,-367.2 4884,-361.2 4890,-361.2 4890,-361.2 4923.6,-361.2 4923.6,-361.2 4929.6,-361.2 4935.6,-367.2 4935.6,-373.2 4935.6,-373.2 4935.6,-406.8 4935.6,-406.8 4935.6,-412.8 4929.6,-418.8 4923.6,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"4906.8\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 869e5790d65b458aa9037a033ed9efad&amp;#45;&amp;#45;ec121285903f4d759441a88fabe75500 --&gt;\n&lt;g id=\"edge512\" class=\"edge\"&gt;\n&lt;title&gt;869e5790d65b458aa9037a033ed9efad&amp;#45;&amp;#45;ec121285903f4d759441a88fabe75500&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4842.68,-390C4853.6,-390 4866.07,-390 4877.02,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- ec121285903f4d759441a88fabe75500&amp;#45;&amp;#45;4ad81f435e7b4a90baef98492c43476a --&gt;\n&lt;g id=\"edge1885\" class=\"edge\"&gt;\n&lt;title&gt;ec121285903f4d759441a88fabe75500&amp;#45;&amp;#45;4ad81f435e7b4a90baef98492c43476a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4906.8,-419.65C4906.8,-430.2 4906.8,-440.76 4906.8,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- b5a2ee7f71884a79b374749aae8284c8 --&gt;\n&lt;g id=\"node516\" class=\"node\"&gt;\n&lt;title&gt;b5a2ee7f71884a79b374749aae8284c8&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"5000.4\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- ec121285903f4d759441a88fabe75500&amp;#45;&amp;#45;b5a2ee7f71884a79b374749aae8284c8 --&gt;\n&lt;g id=\"edge513\" class=\"edge\"&gt;\n&lt;title&gt;ec121285903f4d759441a88fabe75500&amp;#45;&amp;#45;b5a2ee7f71884a79b374749aae8284c8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4936.28,-390C4956.24,-390 4981.34,-390 4992.96,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- af39a744a8ec410b815e8ca02a1ee54f --&gt;\n&lt;g id=\"node517\" class=\"node\"&gt;\n&lt;title&gt;af39a744a8ec410b815e8ca02a1ee54f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5094.72,-390.72 5093.28,-390.72 5093.28,-389.28 5094.72,-389.28 5094.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b5a2ee7f71884a79b374749aae8284c8&amp;#45;&amp;#45;af39a744a8ec410b815e8ca02a1ee54f --&gt;\n&lt;g id=\"edge514\" class=\"edge\"&gt;\n&lt;title&gt;b5a2ee7f71884a79b374749aae8284c8&amp;#45;&amp;#45;af39a744a8ec410b815e8ca02a1ee54f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5007.99,-390C5028.33,-390 5089.04,-390 5092.82,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6dc893c9040d4898b7c1715437aa8238 --&gt;\n&lt;g id=\"node518\" class=\"node\"&gt;\n&lt;title&gt;6dc893c9040d4898b7c1715437aa8238&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5188.32,-390.72 5186.88,-390.72 5186.88,-389.28 5188.32,-389.28 5188.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- af39a744a8ec410b815e8ca02a1ee54f&amp;#45;&amp;#45;6dc893c9040d4898b7c1715437aa8238 --&gt;\n&lt;g id=\"edge515\" class=\"edge\"&gt;\n&lt;title&gt;af39a744a8ec410b815e8ca02a1ee54f&amp;#45;&amp;#45;6dc893c9040d4898b7c1715437aa8238&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5095.07,-390C5097.8,-390 5183.85,-390 5186.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e5c1616f862b4c3cb2d2211c44c8de76 --&gt;\n&lt;g id=\"node519\" class=\"node\"&gt;\n&lt;title&gt;e5c1616f862b4c3cb2d2211c44c8de76&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5281.92,-390.72 5280.48,-390.72 5280.48,-389.28 5281.92,-389.28 5281.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6dc893c9040d4898b7c1715437aa8238&amp;#45;&amp;#45;e5c1616f862b4c3cb2d2211c44c8de76 --&gt;\n&lt;g id=\"edge516\" class=\"edge\"&gt;\n&lt;title&gt;6dc893c9040d4898b7c1715437aa8238&amp;#45;&amp;#45;e5c1616f862b4c3cb2d2211c44c8de76&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5188.67,-390C5191.4,-390 5277.45,-390 5280.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 175172634b1f443784f6ff6f3afb7c84 --&gt;\n&lt;g id=\"node520\" class=\"node\"&gt;\n&lt;title&gt;175172634b1f443784f6ff6f3afb7c84&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5434.32,-390.72 5432.88,-390.72 5432.88,-389.28 5434.32,-389.28 5434.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e5c1616f862b4c3cb2d2211c44c8de76&amp;#45;&amp;#45;175172634b1f443784f6ff6f3afb7c84 --&gt;\n&lt;g id=\"edge517\" class=\"edge\"&gt;\n&lt;title&gt;e5c1616f862b4c3cb2d2211c44c8de76&amp;#45;&amp;#45;175172634b1f443784f6ff6f3afb7c84&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5282.31,-390C5286.79,-390 5428.08,-390 5432.49,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 811562365cfe4dd0800c9269fd974232 --&gt;\n&lt;g id=\"node521\" class=\"node\"&gt;\n&lt;title&gt;811562365cfe4dd0800c9269fd974232&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5586.72,-390.72 5585.28,-390.72 5585.28,-389.28 5586.72,-389.28 5586.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 175172634b1f443784f6ff6f3afb7c84&amp;#45;&amp;#45;811562365cfe4dd0800c9269fd974232 --&gt;\n&lt;g id=\"edge518\" class=\"edge\"&gt;\n&lt;title&gt;175172634b1f443784f6ff6f3afb7c84&amp;#45;&amp;#45;811562365cfe4dd0800c9269fd974232&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5434.71,-390C5439.19,-390 5580.48,-390 5584.89,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8973e2035db54a7f87ded9d722bef65e --&gt;\n&lt;g id=\"node522\" class=\"node\"&gt;\n&lt;title&gt;8973e2035db54a7f87ded9d722bef65e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5680.32,-390.72 5678.88,-390.72 5678.88,-389.28 5680.32,-389.28 5680.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 811562365cfe4dd0800c9269fd974232&amp;#45;&amp;#45;8973e2035db54a7f87ded9d722bef65e --&gt;\n&lt;g id=\"edge519\" class=\"edge\"&gt;\n&lt;title&gt;811562365cfe4dd0800c9269fd974232&amp;#45;&amp;#45;8973e2035db54a7f87ded9d722bef65e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5587.07,-390C5589.8,-390 5675.85,-390 5678.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- b1a628b1073646a89057c653ca5866c1 --&gt;\n&lt;g id=\"node523\" class=\"node\"&gt;\n&lt;title&gt;b1a628b1073646a89057c653ca5866c1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5773.92,-390.72 5772.48,-390.72 5772.48,-389.28 5773.92,-389.28 5773.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8973e2035db54a7f87ded9d722bef65e&amp;#45;&amp;#45;b1a628b1073646a89057c653ca5866c1 --&gt;\n&lt;g id=\"edge520\" class=\"edge\"&gt;\n&lt;title&gt;8973e2035db54a7f87ded9d722bef65e&amp;#45;&amp;#45;b1a628b1073646a89057c653ca5866c1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5680.67,-390C5683.4,-390 5769.45,-390 5772.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44161760d06a498a99f63891cfdaf615 --&gt;\n&lt;g id=\"node524\" class=\"node\"&gt;\n&lt;title&gt;44161760d06a498a99f63891cfdaf615&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"5866.8\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- b1a628b1073646a89057c653ca5866c1&amp;#45;&amp;#45;44161760d06a498a99f63891cfdaf615 --&gt;\n&lt;g id=\"edge521\" class=\"edge\"&gt;\n&lt;title&gt;b1a628b1073646a89057c653ca5866c1&amp;#45;&amp;#45;44161760d06a498a99f63891cfdaf615&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5774.27,-390C5776.57,-390 5838.41,-390 5859.12,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- df7bd96ca02545549f18ad27e4744f5b --&gt;\n&lt;g id=\"node525\" class=\"node\"&gt;\n&lt;title&gt;df7bd96ca02545549f18ad27e4744f5b&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M5977.2,-418.8C5977.2,-418.8 5943.6,-418.8 5943.6,-418.8 5937.6,-418.8 5931.6,-412.8 5931.6,-406.8 5931.6,-406.8 5931.6,-373.2 5931.6,-373.2 5931.6,-367.2 5937.6,-361.2 5943.6,-361.2 5943.6,-361.2 5977.2,-361.2 5977.2,-361.2 5983.2,-361.2 5989.2,-367.2 5989.2,-373.2 5989.2,-373.2 5989.2,-406.8 5989.2,-406.8 5989.2,-412.8 5983.2,-418.8 5977.2,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"5960.4\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 44161760d06a498a99f63891cfdaf615&amp;#45;&amp;#45;df7bd96ca02545549f18ad27e4744f5b --&gt;\n&lt;g id=\"edge522\" class=\"edge\"&gt;\n&lt;title&gt;44161760d06a498a99f63891cfdaf615&amp;#45;&amp;#45;df7bd96ca02545549f18ad27e4744f5b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5874.39,-390C5886.04,-390 5910.92,-390 5930.77,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- df7bd96ca02545549f18ad27e4744f5b&amp;#45;&amp;#45;8c66210906814a6fbd4b873ff8451d7c --&gt;\n&lt;g id=\"edge1886\" class=\"edge\"&gt;\n&lt;title&gt;df7bd96ca02545549f18ad27e4744f5b&amp;#45;&amp;#45;8c66210906814a6fbd4b873ff8451d7c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5960.4,-419.65C5960.4,-430.2 5960.4,-440.76 5960.4,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8647fed1c4e84d5c92895fcfe488582a --&gt;\n&lt;g id=\"node526\" class=\"node\"&gt;\n&lt;title&gt;8647fed1c4e84d5c92895fcfe488582a&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M6070.8,-418.8C6070.8,-418.8 6037.2,-418.8 6037.2,-418.8 6031.2,-418.8 6025.2,-412.8 6025.2,-406.8 6025.2,-406.8 6025.2,-373.2 6025.2,-373.2 6025.2,-367.2 6031.2,-361.2 6037.2,-361.2 6037.2,-361.2 6070.8,-361.2 6070.8,-361.2 6076.8,-361.2 6082.8,-367.2 6082.8,-373.2 6082.8,-373.2 6082.8,-406.8 6082.8,-406.8 6082.8,-412.8 6076.8,-418.8 6070.8,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"6054\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- df7bd96ca02545549f18ad27e4744f5b&amp;#45;&amp;#45;8647fed1c4e84d5c92895fcfe488582a --&gt;\n&lt;g id=\"edge523\" class=\"edge\"&gt;\n&lt;title&gt;df7bd96ca02545549f18ad27e4744f5b&amp;#45;&amp;#45;8647fed1c4e84d5c92895fcfe488582a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5989.88,-390C6000.8,-390 6013.27,-390 6024.22,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8647fed1c4e84d5c92895fcfe488582a&amp;#45;&amp;#45;5a5712c264db4a8fac1875aa21a61d37 --&gt;\n&lt;g id=\"edge1887\" class=\"edge\"&gt;\n&lt;title&gt;8647fed1c4e84d5c92895fcfe488582a&amp;#45;&amp;#45;5a5712c264db4a8fac1875aa21a61d37&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6054,-419.65C6054,-430.2 6054,-440.76 6054,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9d69041cd474e0fbde56b8b011dd324 --&gt;\n&lt;g id=\"node527\" class=\"node\"&gt;\n&lt;title&gt;c9d69041cd474e0fbde56b8b011dd324&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"6147.6\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8647fed1c4e84d5c92895fcfe488582a&amp;#45;&amp;#45;c9d69041cd474e0fbde56b8b011dd324 --&gt;\n&lt;g id=\"edge524\" class=\"edge\"&gt;\n&lt;title&gt;8647fed1c4e84d5c92895fcfe488582a&amp;#45;&amp;#45;c9d69041cd474e0fbde56b8b011dd324&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6083.48,-390C6103.44,-390 6128.54,-390 6140.16,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98fdd3b89492405aa5095b4c11e55006 --&gt;\n&lt;g id=\"node528\" class=\"node\"&gt;\n&lt;title&gt;98fdd3b89492405aa5095b4c11e55006&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6241.92,-390.72 6240.48,-390.72 6240.48,-389.28 6241.92,-389.28 6241.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9d69041cd474e0fbde56b8b011dd324&amp;#45;&amp;#45;98fdd3b89492405aa5095b4c11e55006 --&gt;\n&lt;g id=\"edge525\" class=\"edge\"&gt;\n&lt;title&gt;c9d69041cd474e0fbde56b8b011dd324&amp;#45;&amp;#45;98fdd3b89492405aa5095b4c11e55006&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6155.19,-390C6175.53,-390 6236.24,-390 6240.02,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 904bdc5d31f7474c98623ab68ae72a2c --&gt;\n&lt;g id=\"node529\" class=\"node\"&gt;\n&lt;title&gt;904bdc5d31f7474c98623ab68ae72a2c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6335.52,-390.72 6334.08,-390.72 6334.08,-389.28 6335.52,-389.28 6335.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98fdd3b89492405aa5095b4c11e55006&amp;#45;&amp;#45;904bdc5d31f7474c98623ab68ae72a2c --&gt;\n&lt;g id=\"edge526\" class=\"edge\"&gt;\n&lt;title&gt;98fdd3b89492405aa5095b4c11e55006&amp;#45;&amp;#45;904bdc5d31f7474c98623ab68ae72a2c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6242.27,-390C6245,-390 6331.05,-390 6333.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9d7ccbd5f7cf45b9a12e27a19aca9d66 --&gt;\n&lt;g id=\"node530\" class=\"node\"&gt;\n&lt;title&gt;9d7ccbd5f7cf45b9a12e27a19aca9d66&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6429.12,-390.72 6427.68,-390.72 6427.68,-389.28 6429.12,-389.28 6429.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 904bdc5d31f7474c98623ab68ae72a2c&amp;#45;&amp;#45;9d7ccbd5f7cf45b9a12e27a19aca9d66 --&gt;\n&lt;g id=\"edge527\" class=\"edge\"&gt;\n&lt;title&gt;904bdc5d31f7474c98623ab68ae72a2c&amp;#45;&amp;#45;9d7ccbd5f7cf45b9a12e27a19aca9d66&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6335.87,-390C6338.6,-390 6424.65,-390 6427.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- c57a525b00684618b21f51fb1a5163f6 --&gt;\n&lt;g id=\"node531\" class=\"node\"&gt;\n&lt;title&gt;c57a525b00684618b21f51fb1a5163f6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6522.72,-390.72 6521.28,-390.72 6521.28,-389.28 6522.72,-389.28 6522.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9d7ccbd5f7cf45b9a12e27a19aca9d66&amp;#45;&amp;#45;c57a525b00684618b21f51fb1a5163f6 --&gt;\n&lt;g id=\"edge528\" class=\"edge\"&gt;\n&lt;title&gt;9d7ccbd5f7cf45b9a12e27a19aca9d66&amp;#45;&amp;#45;c57a525b00684618b21f51fb1a5163f6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6429.47,-390C6432.2,-390 6518.25,-390 6520.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e3ed2a680a9d419a8221bd19620c5fea --&gt;\n&lt;g id=\"node532\" class=\"node\"&gt;\n&lt;title&gt;e3ed2a680a9d419a8221bd19620c5fea&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6675.12,-390.72 6673.68,-390.72 6673.68,-389.28 6675.12,-389.28 6675.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c57a525b00684618b21f51fb1a5163f6&amp;#45;&amp;#45;e3ed2a680a9d419a8221bd19620c5fea --&gt;\n&lt;g id=\"edge529\" class=\"edge\"&gt;\n&lt;title&gt;c57a525b00684618b21f51fb1a5163f6&amp;#45;&amp;#45;e3ed2a680a9d419a8221bd19620c5fea&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6523.11,-390C6527.59,-390 6668.88,-390 6673.29,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3cad1738a0664c9694366110040a20d1 --&gt;\n&lt;g id=\"node533\" class=\"node\"&gt;\n&lt;title&gt;3cad1738a0664c9694366110040a20d1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6827.52,-390.72 6826.08,-390.72 6826.08,-389.28 6827.52,-389.28 6827.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e3ed2a680a9d419a8221bd19620c5fea&amp;#45;&amp;#45;3cad1738a0664c9694366110040a20d1 --&gt;\n&lt;g id=\"edge530\" class=\"edge\"&gt;\n&lt;title&gt;e3ed2a680a9d419a8221bd19620c5fea&amp;#45;&amp;#45;3cad1738a0664c9694366110040a20d1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6675.51,-390C6679.99,-390 6821.28,-390 6825.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2841707585fd41bfb1b3ad3be16a015a --&gt;\n&lt;g id=\"node534\" class=\"node\"&gt;\n&lt;title&gt;2841707585fd41bfb1b3ad3be16a015a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6921.12,-390.72 6919.68,-390.72 6919.68,-389.28 6921.12,-389.28 6921.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3cad1738a0664c9694366110040a20d1&amp;#45;&amp;#45;2841707585fd41bfb1b3ad3be16a015a --&gt;\n&lt;g id=\"edge531\" class=\"edge\"&gt;\n&lt;title&gt;3cad1738a0664c9694366110040a20d1&amp;#45;&amp;#45;2841707585fd41bfb1b3ad3be16a015a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6827.87,-390C6830.6,-390 6916.65,-390 6919.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8534b69aad8b4d8d8c383686b95b1e18 --&gt;\n&lt;g id=\"node535\" class=\"node\"&gt;\n&lt;title&gt;8534b69aad8b4d8d8c383686b95b1e18&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7014.72,-390.72 7013.28,-390.72 7013.28,-389.28 7014.72,-389.28 7014.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2841707585fd41bfb1b3ad3be16a015a&amp;#45;&amp;#45;8534b69aad8b4d8d8c383686b95b1e18 --&gt;\n&lt;g id=\"edge532\" class=\"edge\"&gt;\n&lt;title&gt;2841707585fd41bfb1b3ad3be16a015a&amp;#45;&amp;#45;8534b69aad8b4d8d8c383686b95b1e18&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6921.47,-390C6924.2,-390 7010.25,-390 7012.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- c91a1562ce7c49289e2546999bd77940 --&gt;\n&lt;g id=\"node536\" class=\"node\"&gt;\n&lt;title&gt;c91a1562ce7c49289e2546999bd77940&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7108.32,-390.72 7106.88,-390.72 7106.88,-389.28 7108.32,-389.28 7108.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8534b69aad8b4d8d8c383686b95b1e18&amp;#45;&amp;#45;c91a1562ce7c49289e2546999bd77940 --&gt;\n&lt;g id=\"edge533\" class=\"edge\"&gt;\n&lt;title&gt;8534b69aad8b4d8d8c383686b95b1e18&amp;#45;&amp;#45;c91a1562ce7c49289e2546999bd77940&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7015.07,-390C7017.8,-390 7103.85,-390 7106.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 32be08f288e249bba158e285f1dc2af5 --&gt;\n&lt;g id=\"node537\" class=\"node\"&gt;\n&lt;title&gt;32be08f288e249bba158e285f1dc2af5&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"7201.2\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- c91a1562ce7c49289e2546999bd77940&amp;#45;&amp;#45;32be08f288e249bba158e285f1dc2af5 --&gt;\n&lt;g id=\"edge534\" class=\"edge\"&gt;\n&lt;title&gt;c91a1562ce7c49289e2546999bd77940&amp;#45;&amp;#45;32be08f288e249bba158e285f1dc2af5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7108.67,-390C7110.97,-390 7172.81,-390 7193.52,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8426f077f75b49818b6f5e6066ab41f2 --&gt;\n&lt;g id=\"node538\" class=\"node\"&gt;\n&lt;title&gt;8426f077f75b49818b6f5e6066ab41f2&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M7311.6,-418.8C7311.6,-418.8 7278,-418.8 7278,-418.8 7272,-418.8 7266,-412.8 7266,-406.8 7266,-406.8 7266,-373.2 7266,-373.2 7266,-367.2 7272,-361.2 7278,-361.2 7278,-361.2 7311.6,-361.2 7311.6,-361.2 7317.6,-361.2 7323.6,-367.2 7323.6,-373.2 7323.6,-373.2 7323.6,-406.8 7323.6,-406.8 7323.6,-412.8 7317.6,-418.8 7311.6,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"7294.8\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 32be08f288e249bba158e285f1dc2af5&amp;#45;&amp;#45;8426f077f75b49818b6f5e6066ab41f2 --&gt;\n&lt;g id=\"edge535\" class=\"edge\"&gt;\n&lt;title&gt;32be08f288e249bba158e285f1dc2af5&amp;#45;&amp;#45;8426f077f75b49818b6f5e6066ab41f2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7208.79,-390C7220.44,-390 7245.32,-390 7265.17,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8426f077f75b49818b6f5e6066ab41f2&amp;#45;&amp;#45;66e6b0dc02034b67a95bace1e107d721 --&gt;\n&lt;g id=\"edge1888\" class=\"edge\"&gt;\n&lt;title&gt;8426f077f75b49818b6f5e6066ab41f2&amp;#45;&amp;#45;66e6b0dc02034b67a95bace1e107d721&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7294.8,-419.65C7294.8,-430.2 7294.8,-440.76 7294.8,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 61a2bd77f175451a9660b1878c92f8c6 --&gt;\n&lt;g id=\"node539\" class=\"node\"&gt;\n&lt;title&gt;61a2bd77f175451a9660b1878c92f8c6&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"7388.4\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8426f077f75b49818b6f5e6066ab41f2&amp;#45;&amp;#45;61a2bd77f175451a9660b1878c92f8c6 --&gt;\n&lt;g id=\"edge536\" class=\"edge\"&gt;\n&lt;title&gt;8426f077f75b49818b6f5e6066ab41f2&amp;#45;&amp;#45;61a2bd77f175451a9660b1878c92f8c6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7324.28,-390C7344.24,-390 7369.34,-390 7380.96,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- d13eebdbb2594785a3f2ebd7cee20db8 --&gt;\n&lt;g id=\"node540\" class=\"node\"&gt;\n&lt;title&gt;d13eebdbb2594785a3f2ebd7cee20db8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7482.72,-390.72 7481.28,-390.72 7481.28,-389.28 7482.72,-389.28 7482.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 61a2bd77f175451a9660b1878c92f8c6&amp;#45;&amp;#45;d13eebdbb2594785a3f2ebd7cee20db8 --&gt;\n&lt;g id=\"edge537\" class=\"edge\"&gt;\n&lt;title&gt;61a2bd77f175451a9660b1878c92f8c6&amp;#45;&amp;#45;d13eebdbb2594785a3f2ebd7cee20db8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7395.99,-390C7416.33,-390 7477.04,-390 7480.82,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a24ae6c02bb4df3ab5735b7dcf018f3 --&gt;\n&lt;g id=\"node541\" class=\"node\"&gt;\n&lt;title&gt;5a24ae6c02bb4df3ab5735b7dcf018f3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7576.32,-390.72 7574.88,-390.72 7574.88,-389.28 7576.32,-389.28 7576.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d13eebdbb2594785a3f2ebd7cee20db8&amp;#45;&amp;#45;5a24ae6c02bb4df3ab5735b7dcf018f3 --&gt;\n&lt;g id=\"edge538\" class=\"edge\"&gt;\n&lt;title&gt;d13eebdbb2594785a3f2ebd7cee20db8&amp;#45;&amp;#45;5a24ae6c02bb4df3ab5735b7dcf018f3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7483.07,-390C7485.8,-390 7571.85,-390 7574.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c267379e75b48539588c36f5a9ef8c7 --&gt;\n&lt;g id=\"node542\" class=\"node\"&gt;\n&lt;title&gt;0c267379e75b48539588c36f5a9ef8c7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7669.92,-390.72 7668.48,-390.72 7668.48,-389.28 7669.92,-389.28 7669.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a24ae6c02bb4df3ab5735b7dcf018f3&amp;#45;&amp;#45;0c267379e75b48539588c36f5a9ef8c7 --&gt;\n&lt;g id=\"edge539\" class=\"edge\"&gt;\n&lt;title&gt;5a24ae6c02bb4df3ab5735b7dcf018f3&amp;#45;&amp;#45;0c267379e75b48539588c36f5a9ef8c7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7576.67,-390C7579.4,-390 7665.45,-390 7668.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- ec5c82750d844783b01bb715e059f6dc --&gt;\n&lt;g id=\"node543\" class=\"node\"&gt;\n&lt;title&gt;ec5c82750d844783b01bb715e059f6dc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7763.52,-390.72 7762.08,-390.72 7762.08,-389.28 7763.52,-389.28 7763.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c267379e75b48539588c36f5a9ef8c7&amp;#45;&amp;#45;ec5c82750d844783b01bb715e059f6dc --&gt;\n&lt;g id=\"edge540\" class=\"edge\"&gt;\n&lt;title&gt;0c267379e75b48539588c36f5a9ef8c7&amp;#45;&amp;#45;ec5c82750d844783b01bb715e059f6dc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7670.27,-390C7673,-390 7759.05,-390 7761.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- afcf48dbf56c45e496ded70bb4b8f883 --&gt;\n&lt;g id=\"node544\" class=\"node\"&gt;\n&lt;title&gt;afcf48dbf56c45e496ded70bb4b8f883&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7915.92,-390.72 7914.48,-390.72 7914.48,-389.28 7915.92,-389.28 7915.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ec5c82750d844783b01bb715e059f6dc&amp;#45;&amp;#45;afcf48dbf56c45e496ded70bb4b8f883 --&gt;\n&lt;g id=\"edge541\" class=\"edge\"&gt;\n&lt;title&gt;ec5c82750d844783b01bb715e059f6dc&amp;#45;&amp;#45;afcf48dbf56c45e496ded70bb4b8f883&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7763.91,-390C7768.39,-390 7909.68,-390 7914.09,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- f25f75b276af437395164e03633b493a --&gt;\n&lt;g id=\"node545\" class=\"node\"&gt;\n&lt;title&gt;f25f75b276af437395164e03633b493a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8068.32,-390.72 8066.88,-390.72 8066.88,-389.28 8068.32,-389.28 8068.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- afcf48dbf56c45e496ded70bb4b8f883&amp;#45;&amp;#45;f25f75b276af437395164e03633b493a --&gt;\n&lt;g id=\"edge542\" class=\"edge\"&gt;\n&lt;title&gt;afcf48dbf56c45e496ded70bb4b8f883&amp;#45;&amp;#45;f25f75b276af437395164e03633b493a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7916.31,-390C7920.79,-390 8062.08,-390 8066.49,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 57b92c3eab484f5a9b310bb78141372a --&gt;\n&lt;g id=\"node546\" class=\"node\"&gt;\n&lt;title&gt;57b92c3eab484f5a9b310bb78141372a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8161.92,-390.72 8160.48,-390.72 8160.48,-389.28 8161.92,-389.28 8161.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f25f75b276af437395164e03633b493a&amp;#45;&amp;#45;57b92c3eab484f5a9b310bb78141372a --&gt;\n&lt;g id=\"edge543\" class=\"edge\"&gt;\n&lt;title&gt;f25f75b276af437395164e03633b493a&amp;#45;&amp;#45;57b92c3eab484f5a9b310bb78141372a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8068.67,-390C8071.4,-390 8157.45,-390 8160.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- fd788e1567b5459c8eb4206743810861 --&gt;\n&lt;g id=\"node547\" class=\"node\"&gt;\n&lt;title&gt;fd788e1567b5459c8eb4206743810861&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8255.52,-390.72 8254.08,-390.72 8254.08,-389.28 8255.52,-389.28 8255.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 57b92c3eab484f5a9b310bb78141372a&amp;#45;&amp;#45;fd788e1567b5459c8eb4206743810861 --&gt;\n&lt;g id=\"edge544\" class=\"edge\"&gt;\n&lt;title&gt;57b92c3eab484f5a9b310bb78141372a&amp;#45;&amp;#45;fd788e1567b5459c8eb4206743810861&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8162.27,-390C8165,-390 8251.05,-390 8253.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3fafbafb60b1465cb7c08cb4dfbe0fdb --&gt;\n&lt;g id=\"node548\" class=\"node\"&gt;\n&lt;title&gt;3fafbafb60b1465cb7c08cb4dfbe0fdb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8349.12,-390.72 8347.68,-390.72 8347.68,-389.28 8349.12,-389.28 8349.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fd788e1567b5459c8eb4206743810861&amp;#45;&amp;#45;3fafbafb60b1465cb7c08cb4dfbe0fdb --&gt;\n&lt;g id=\"edge545\" class=\"edge\"&gt;\n&lt;title&gt;fd788e1567b5459c8eb4206743810861&amp;#45;&amp;#45;3fafbafb60b1465cb7c08cb4dfbe0fdb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8255.87,-390C8258.6,-390 8344.65,-390 8347.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- a7514eddd92e471fa22e4b35bb7a68ac --&gt;\n&lt;g id=\"node549\" class=\"node\"&gt;\n&lt;title&gt;a7514eddd92e471fa22e4b35bb7a68ac&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"8442\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3fafbafb60b1465cb7c08cb4dfbe0fdb&amp;#45;&amp;#45;a7514eddd92e471fa22e4b35bb7a68ac --&gt;\n&lt;g id=\"edge546\" class=\"edge\"&gt;\n&lt;title&gt;3fafbafb60b1465cb7c08cb4dfbe0fdb&amp;#45;&amp;#45;a7514eddd92e471fa22e4b35bb7a68ac&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8349.47,-390C8351.77,-390 8413.61,-390 8434.32,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- a93b216dc0e84a3dbc7432986ece7b1d --&gt;\n&lt;g id=\"node550\" class=\"node\"&gt;\n&lt;title&gt;a93b216dc0e84a3dbc7432986ece7b1d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8536.32,-390.72 8534.88,-390.72 8534.88,-389.28 8536.32,-389.28 8536.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a7514eddd92e471fa22e4b35bb7a68ac&amp;#45;&amp;#45;a93b216dc0e84a3dbc7432986ece7b1d --&gt;\n&lt;g id=\"edge547\" class=\"edge\"&gt;\n&lt;title&gt;a7514eddd92e471fa22e4b35bb7a68ac&amp;#45;&amp;#45;a93b216dc0e84a3dbc7432986ece7b1d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8449.59,-390C8469.93,-390 8530.64,-390 8534.42,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b921c1b80e54778873ecc2aad96f5fd --&gt;\n&lt;g id=\"node551\" class=\"node\"&gt;\n&lt;title&gt;6b921c1b80e54778873ecc2aad96f5fd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8629.92,-390.72 8628.48,-390.72 8628.48,-389.28 8629.92,-389.28 8629.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a93b216dc0e84a3dbc7432986ece7b1d&amp;#45;&amp;#45;6b921c1b80e54778873ecc2aad96f5fd --&gt;\n&lt;g id=\"edge548\" class=\"edge\"&gt;\n&lt;title&gt;a93b216dc0e84a3dbc7432986ece7b1d&amp;#45;&amp;#45;6b921c1b80e54778873ecc2aad96f5fd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8536.67,-390C8539.4,-390 8625.45,-390 8628.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6c350d29109a4f5999923543fd36d094 --&gt;\n&lt;g id=\"node552\" class=\"node\"&gt;\n&lt;title&gt;6c350d29109a4f5999923543fd36d094&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8782.32,-390.72 8780.88,-390.72 8780.88,-389.28 8782.32,-389.28 8782.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b921c1b80e54778873ecc2aad96f5fd&amp;#45;&amp;#45;6c350d29109a4f5999923543fd36d094 --&gt;\n&lt;g id=\"edge549\" class=\"edge\"&gt;\n&lt;title&gt;6b921c1b80e54778873ecc2aad96f5fd&amp;#45;&amp;#45;6c350d29109a4f5999923543fd36d094&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8630.31,-390C8634.79,-390 8776.08,-390 8780.49,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- d276140ad27a4945b4292fdddd32970d --&gt;\n&lt;g id=\"node553\" class=\"node\"&gt;\n&lt;title&gt;d276140ad27a4945b4292fdddd32970d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8934.72,-390.72 8933.28,-390.72 8933.28,-389.28 8934.72,-389.28 8934.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6c350d29109a4f5999923543fd36d094&amp;#45;&amp;#45;d276140ad27a4945b4292fdddd32970d --&gt;\n&lt;g id=\"edge550\" class=\"edge\"&gt;\n&lt;title&gt;6c350d29109a4f5999923543fd36d094&amp;#45;&amp;#45;d276140ad27a4945b4292fdddd32970d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8782.71,-390C8787.19,-390 8928.48,-390 8932.89,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- cce119b1458d44929787edcfdc91f8d4 --&gt;\n&lt;g id=\"node554\" class=\"node\"&gt;\n&lt;title&gt;cce119b1458d44929787edcfdc91f8d4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9028.32,-390.72 9026.88,-390.72 9026.88,-389.28 9028.32,-389.28 9028.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d276140ad27a4945b4292fdddd32970d&amp;#45;&amp;#45;cce119b1458d44929787edcfdc91f8d4 --&gt;\n&lt;g id=\"edge551\" class=\"edge\"&gt;\n&lt;title&gt;d276140ad27a4945b4292fdddd32970d&amp;#45;&amp;#45;cce119b1458d44929787edcfdc91f8d4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8935.07,-390C8937.8,-390 9023.85,-390 9026.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7c95085a60f441eb50b53dc9a3912cf --&gt;\n&lt;g id=\"node555\" class=\"node\"&gt;\n&lt;title&gt;e7c95085a60f441eb50b53dc9a3912cf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9121.92,-390.72 9120.48,-390.72 9120.48,-389.28 9121.92,-389.28 9121.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cce119b1458d44929787edcfdc91f8d4&amp;#45;&amp;#45;e7c95085a60f441eb50b53dc9a3912cf --&gt;\n&lt;g id=\"edge552\" class=\"edge\"&gt;\n&lt;title&gt;cce119b1458d44929787edcfdc91f8d4&amp;#45;&amp;#45;e7c95085a60f441eb50b53dc9a3912cf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9028.67,-390C9031.4,-390 9117.45,-390 9120.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- ddf1b85694684ca7ac5275b4e5df1df5 --&gt;\n&lt;g id=\"node556\" class=\"node\"&gt;\n&lt;title&gt;ddf1b85694684ca7ac5275b4e5df1df5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9215.52,-390.72 9214.08,-390.72 9214.08,-389.28 9215.52,-389.28 9215.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7c95085a60f441eb50b53dc9a3912cf&amp;#45;&amp;#45;ddf1b85694684ca7ac5275b4e5df1df5 --&gt;\n&lt;g id=\"edge553\" class=\"edge\"&gt;\n&lt;title&gt;e7c95085a60f441eb50b53dc9a3912cf&amp;#45;&amp;#45;ddf1b85694684ca7ac5275b4e5df1df5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9122.27,-390C9125,-390 9211.05,-390 9213.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- ca77e175f7744e5ab7cc9c37be612a4c --&gt;\n&lt;g id=\"node557\" class=\"node\"&gt;\n&lt;title&gt;ca77e175f7744e5ab7cc9c37be612a4c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9309.12,-390.72 9307.68,-390.72 9307.68,-389.28 9309.12,-389.28 9309.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ddf1b85694684ca7ac5275b4e5df1df5&amp;#45;&amp;#45;ca77e175f7744e5ab7cc9c37be612a4c --&gt;\n&lt;g id=\"edge554\" class=\"edge\"&gt;\n&lt;title&gt;ddf1b85694684ca7ac5275b4e5df1df5&amp;#45;&amp;#45;ca77e175f7744e5ab7cc9c37be612a4c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9215.87,-390C9218.6,-390 9304.65,-390 9307.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5678e9dfcafc4bd3808fb0abc4cecab8 --&gt;\n&lt;g id=\"node558\" class=\"node\"&gt;\n&lt;title&gt;5678e9dfcafc4bd3808fb0abc4cecab8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9461.52,-390.72 9460.08,-390.72 9460.08,-389.28 9461.52,-389.28 9461.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ca77e175f7744e5ab7cc9c37be612a4c&amp;#45;&amp;#45;5678e9dfcafc4bd3808fb0abc4cecab8 --&gt;\n&lt;g id=\"edge555\" class=\"edge\"&gt;\n&lt;title&gt;ca77e175f7744e5ab7cc9c37be612a4c&amp;#45;&amp;#45;5678e9dfcafc4bd3808fb0abc4cecab8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9309.51,-390C9313.99,-390 9455.28,-390 9459.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1bd0f7bc109d4246b1467e91d9172d28 --&gt;\n&lt;g id=\"node559\" class=\"node\"&gt;\n&lt;title&gt;1bd0f7bc109d4246b1467e91d9172d28&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9613.92,-390.72 9612.48,-390.72 9612.48,-389.28 9613.92,-389.28 9613.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5678e9dfcafc4bd3808fb0abc4cecab8&amp;#45;&amp;#45;1bd0f7bc109d4246b1467e91d9172d28 --&gt;\n&lt;g id=\"edge556\" class=\"edge\"&gt;\n&lt;title&gt;5678e9dfcafc4bd3808fb0abc4cecab8&amp;#45;&amp;#45;1bd0f7bc109d4246b1467e91d9172d28&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9461.91,-390C9466.39,-390 9607.68,-390 9612.09,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- d89abb7e395e45c79daf0835eb4d053d --&gt;\n&lt;g id=\"node560\" class=\"node\"&gt;\n&lt;title&gt;d89abb7e395e45c79daf0835eb4d053d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9707.52,-390.72 9706.08,-390.72 9706.08,-389.28 9707.52,-389.28 9707.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1bd0f7bc109d4246b1467e91d9172d28&amp;#45;&amp;#45;d89abb7e395e45c79daf0835eb4d053d --&gt;\n&lt;g id=\"edge557\" class=\"edge\"&gt;\n&lt;title&gt;1bd0f7bc109d4246b1467e91d9172d28&amp;#45;&amp;#45;d89abb7e395e45c79daf0835eb4d053d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9614.27,-390C9617,-390 9703.05,-390 9705.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- a52d2890370a41ca97769193d986afaa --&gt;\n&lt;g id=\"node561\" class=\"node\"&gt;\n&lt;title&gt;a52d2890370a41ca97769193d986afaa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9801.12,-390.72 9799.68,-390.72 9799.68,-389.28 9801.12,-389.28 9801.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d89abb7e395e45c79daf0835eb4d053d&amp;#45;&amp;#45;a52d2890370a41ca97769193d986afaa --&gt;\n&lt;g id=\"edge558\" class=\"edge\"&gt;\n&lt;title&gt;d89abb7e395e45c79daf0835eb4d053d&amp;#45;&amp;#45;a52d2890370a41ca97769193d986afaa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9707.87,-390C9710.6,-390 9796.65,-390 9799.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3f1ab0b961e74c8da7a7ece55db8755d --&gt;\n&lt;g id=\"node562\" class=\"node\"&gt;\n&lt;title&gt;3f1ab0b961e74c8da7a7ece55db8755d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9894.72,-390.72 9893.28,-390.72 9893.28,-389.28 9894.72,-389.28 9894.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a52d2890370a41ca97769193d986afaa&amp;#45;&amp;#45;3f1ab0b961e74c8da7a7ece55db8755d --&gt;\n&lt;g id=\"edge559\" class=\"edge\"&gt;\n&lt;title&gt;a52d2890370a41ca97769193d986afaa&amp;#45;&amp;#45;3f1ab0b961e74c8da7a7ece55db8755d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9801.47,-390C9804.2,-390 9890.25,-390 9892.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 60fe79e0dd5749edb7ef9475521a298f --&gt;\n&lt;g id=\"node563\" class=\"node\"&gt;\n&lt;title&gt;60fe79e0dd5749edb7ef9475521a298f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9988.32,-390.72 9986.88,-390.72 9986.88,-389.28 9988.32,-389.28 9988.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3f1ab0b961e74c8da7a7ece55db8755d&amp;#45;&amp;#45;60fe79e0dd5749edb7ef9475521a298f --&gt;\n&lt;g id=\"edge560\" class=\"edge\"&gt;\n&lt;title&gt;3f1ab0b961e74c8da7a7ece55db8755d&amp;#45;&amp;#45;60fe79e0dd5749edb7ef9475521a298f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9895.07,-390C9897.8,-390 9983.85,-390 9986.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 30e4296733ea4d62ae36fafc470701f6 --&gt;\n&lt;g id=\"node564\" class=\"node\"&gt;\n&lt;title&gt;30e4296733ea4d62ae36fafc470701f6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10081.92,-390.72 10080.48,-390.72 10080.48,-389.28 10081.92,-389.28 10081.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 60fe79e0dd5749edb7ef9475521a298f&amp;#45;&amp;#45;30e4296733ea4d62ae36fafc470701f6 --&gt;\n&lt;g id=\"edge561\" class=\"edge\"&gt;\n&lt;title&gt;60fe79e0dd5749edb7ef9475521a298f&amp;#45;&amp;#45;30e4296733ea4d62ae36fafc470701f6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9988.67,-390C9991.4,-390 10077.45,-390 10080.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e460649d4d594a2596c1218176219d5a --&gt;\n&lt;g id=\"node565\" class=\"node\"&gt;\n&lt;title&gt;e460649d4d594a2596c1218176219d5a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10175.52,-390.72 10174.08,-390.72 10174.08,-389.28 10175.52,-389.28 10175.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 30e4296733ea4d62ae36fafc470701f6&amp;#45;&amp;#45;e460649d4d594a2596c1218176219d5a --&gt;\n&lt;g id=\"edge562\" class=\"edge\"&gt;\n&lt;title&gt;30e4296733ea4d62ae36fafc470701f6&amp;#45;&amp;#45;e460649d4d594a2596c1218176219d5a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10082.27,-390C10085,-390 10171.05,-390 10173.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- b48e9e01a6474ea190561f04ea4e1c04 --&gt;\n&lt;g id=\"node566\" class=\"node\"&gt;\n&lt;title&gt;b48e9e01a6474ea190561f04ea4e1c04&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10327.92,-390.72 10326.48,-390.72 10326.48,-389.28 10327.92,-389.28 10327.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e460649d4d594a2596c1218176219d5a&amp;#45;&amp;#45;b48e9e01a6474ea190561f04ea4e1c04 --&gt;\n&lt;g id=\"edge563\" class=\"edge\"&gt;\n&lt;title&gt;e460649d4d594a2596c1218176219d5a&amp;#45;&amp;#45;b48e9e01a6474ea190561f04ea4e1c04&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10175.91,-390C10180.39,-390 10321.68,-390 10326.09,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3ce388dbc4634ed281e94be9edcda6b3 --&gt;\n&lt;g id=\"node567\" class=\"node\"&gt;\n&lt;title&gt;3ce388dbc4634ed281e94be9edcda6b3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10480.32,-390.72 10478.88,-390.72 10478.88,-389.28 10480.32,-389.28 10480.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b48e9e01a6474ea190561f04ea4e1c04&amp;#45;&amp;#45;3ce388dbc4634ed281e94be9edcda6b3 --&gt;\n&lt;g id=\"edge564\" class=\"edge\"&gt;\n&lt;title&gt;b48e9e01a6474ea190561f04ea4e1c04&amp;#45;&amp;#45;3ce388dbc4634ed281e94be9edcda6b3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10328.31,-390C10332.79,-390 10474.08,-390 10478.49,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3d9ff038ef994cba83c76b5c1dd92923 --&gt;\n&lt;g id=\"node568\" class=\"node\"&gt;\n&lt;title&gt;3d9ff038ef994cba83c76b5c1dd92923&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10573.92,-390.72 10572.48,-390.72 10572.48,-389.28 10573.92,-389.28 10573.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3ce388dbc4634ed281e94be9edcda6b3&amp;#45;&amp;#45;3d9ff038ef994cba83c76b5c1dd92923 --&gt;\n&lt;g id=\"edge565\" class=\"edge\"&gt;\n&lt;title&gt;3ce388dbc4634ed281e94be9edcda6b3&amp;#45;&amp;#45;3d9ff038ef994cba83c76b5c1dd92923&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10480.67,-390C10483.4,-390 10569.45,-390 10572.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- cb995636b9f1418e893c7659deb9cb03 --&gt;\n&lt;g id=\"node569\" class=\"node\"&gt;\n&lt;title&gt;cb995636b9f1418e893c7659deb9cb03&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10667.52,-390.72 10666.08,-390.72 10666.08,-389.28 10667.52,-389.28 10667.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3d9ff038ef994cba83c76b5c1dd92923&amp;#45;&amp;#45;cb995636b9f1418e893c7659deb9cb03 --&gt;\n&lt;g id=\"edge566\" class=\"edge\"&gt;\n&lt;title&gt;3d9ff038ef994cba83c76b5c1dd92923&amp;#45;&amp;#45;cb995636b9f1418e893c7659deb9cb03&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10574.27,-390C10577,-390 10663.05,-390 10665.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 54f3d80f5a8c476c8389bfe0c7bacd67 --&gt;\n&lt;g id=\"node570\" class=\"node\"&gt;\n&lt;title&gt;54f3d80f5a8c476c8389bfe0c7bacd67&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10761.12,-390.72 10759.68,-390.72 10759.68,-389.28 10761.12,-389.28 10761.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cb995636b9f1418e893c7659deb9cb03&amp;#45;&amp;#45;54f3d80f5a8c476c8389bfe0c7bacd67 --&gt;\n&lt;g id=\"edge567\" class=\"edge\"&gt;\n&lt;title&gt;cb995636b9f1418e893c7659deb9cb03&amp;#45;&amp;#45;54f3d80f5a8c476c8389bfe0c7bacd67&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10667.87,-390C10670.6,-390 10756.65,-390 10759.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- a5d1e90ac3974812859a50104d04b270 --&gt;\n&lt;g id=\"node571\" class=\"node\"&gt;\n&lt;title&gt;a5d1e90ac3974812859a50104d04b270&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10854.72,-390.72 10853.28,-390.72 10853.28,-389.28 10854.72,-389.28 10854.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 54f3d80f5a8c476c8389bfe0c7bacd67&amp;#45;&amp;#45;a5d1e90ac3974812859a50104d04b270 --&gt;\n&lt;g id=\"edge568\" class=\"edge\"&gt;\n&lt;title&gt;54f3d80f5a8c476c8389bfe0c7bacd67&amp;#45;&amp;#45;a5d1e90ac3974812859a50104d04b270&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10761.47,-390C10764.2,-390 10850.25,-390 10852.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 242d1e3c5b1440c5bea977e33a58f194 --&gt;\n&lt;g id=\"node572\" class=\"node\"&gt;\n&lt;title&gt;242d1e3c5b1440c5bea977e33a58f194&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11007.12,-390.72 11005.68,-390.72 11005.68,-389.28 11007.12,-389.28 11007.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a5d1e90ac3974812859a50104d04b270&amp;#45;&amp;#45;242d1e3c5b1440c5bea977e33a58f194 --&gt;\n&lt;g id=\"edge569\" class=\"edge\"&gt;\n&lt;title&gt;a5d1e90ac3974812859a50104d04b270&amp;#45;&amp;#45;242d1e3c5b1440c5bea977e33a58f194&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10855.11,-390C10859.59,-390 11000.88,-390 11005.29,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3b417cb5565943e98e621fd7dc4e5bcf --&gt;\n&lt;g id=\"node573\" class=\"node\"&gt;\n&lt;title&gt;3b417cb5565943e98e621fd7dc4e5bcf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11159.52,-390.72 11158.08,-390.72 11158.08,-389.28 11159.52,-389.28 11159.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 242d1e3c5b1440c5bea977e33a58f194&amp;#45;&amp;#45;3b417cb5565943e98e621fd7dc4e5bcf --&gt;\n&lt;g id=\"edge570\" class=\"edge\"&gt;\n&lt;title&gt;242d1e3c5b1440c5bea977e33a58f194&amp;#45;&amp;#45;3b417cb5565943e98e621fd7dc4e5bcf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11007.51,-390C11011.99,-390 11153.28,-390 11157.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1836c5b378c041349929b117f06e85db --&gt;\n&lt;g id=\"node574\" class=\"node\"&gt;\n&lt;title&gt;1836c5b378c041349929b117f06e85db&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11253.12,-390.72 11251.68,-390.72 11251.68,-389.28 11253.12,-389.28 11253.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3b417cb5565943e98e621fd7dc4e5bcf&amp;#45;&amp;#45;1836c5b378c041349929b117f06e85db --&gt;\n&lt;g id=\"edge571\" class=\"edge\"&gt;\n&lt;title&gt;3b417cb5565943e98e621fd7dc4e5bcf&amp;#45;&amp;#45;1836c5b378c041349929b117f06e85db&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11159.87,-390C11162.6,-390 11248.65,-390 11251.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4715ef9246f431ca1e767601ae357dc --&gt;\n&lt;g id=\"node575\" class=\"node\"&gt;\n&lt;title&gt;e4715ef9246f431ca1e767601ae357dc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11346.72,-390.72 11345.28,-390.72 11345.28,-389.28 11346.72,-389.28 11346.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1836c5b378c041349929b117f06e85db&amp;#45;&amp;#45;e4715ef9246f431ca1e767601ae357dc --&gt;\n&lt;g id=\"edge572\" class=\"edge\"&gt;\n&lt;title&gt;1836c5b378c041349929b117f06e85db&amp;#45;&amp;#45;e4715ef9246f431ca1e767601ae357dc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11253.47,-390C11256.2,-390 11342.25,-390 11344.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- ac68c9a7c52e41cfbc60b9b7f3118a99 --&gt;\n&lt;g id=\"node576\" class=\"node\"&gt;\n&lt;title&gt;ac68c9a7c52e41cfbc60b9b7f3118a99&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11499.12,-390.72 11497.68,-390.72 11497.68,-389.28 11499.12,-389.28 11499.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4715ef9246f431ca1e767601ae357dc&amp;#45;&amp;#45;ac68c9a7c52e41cfbc60b9b7f3118a99 --&gt;\n&lt;g id=\"edge573\" class=\"edge\"&gt;\n&lt;title&gt;e4715ef9246f431ca1e767601ae357dc&amp;#45;&amp;#45;ac68c9a7c52e41cfbc60b9b7f3118a99&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11347.11,-390C11351.59,-390 11492.88,-390 11497.29,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5bca1d8611224386849cd85f39d4608e --&gt;\n&lt;g id=\"node577\" class=\"node\"&gt;\n&lt;title&gt;5bca1d8611224386849cd85f39d4608e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11651.52,-390.72 11650.08,-390.72 11650.08,-389.28 11651.52,-389.28 11651.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ac68c9a7c52e41cfbc60b9b7f3118a99&amp;#45;&amp;#45;5bca1d8611224386849cd85f39d4608e --&gt;\n&lt;g id=\"edge574\" class=\"edge\"&gt;\n&lt;title&gt;ac68c9a7c52e41cfbc60b9b7f3118a99&amp;#45;&amp;#45;5bca1d8611224386849cd85f39d4608e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11499.51,-390C11503.99,-390 11645.28,-390 11649.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- cf5d51c77bcb4ccba8a3516a9593039d --&gt;\n&lt;g id=\"node578\" class=\"node\"&gt;\n&lt;title&gt;cf5d51c77bcb4ccba8a3516a9593039d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11745.12,-390.72 11743.68,-390.72 11743.68,-389.28 11745.12,-389.28 11745.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5bca1d8611224386849cd85f39d4608e&amp;#45;&amp;#45;cf5d51c77bcb4ccba8a3516a9593039d --&gt;\n&lt;g id=\"edge575\" class=\"edge\"&gt;\n&lt;title&gt;5bca1d8611224386849cd85f39d4608e&amp;#45;&amp;#45;cf5d51c77bcb4ccba8a3516a9593039d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11651.87,-390C11654.6,-390 11740.65,-390 11743.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1d4fd118f6b943f9922ae99e907456f0 --&gt;\n&lt;g id=\"node579\" class=\"node\"&gt;\n&lt;title&gt;1d4fd118f6b943f9922ae99e907456f0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11838.72,-390.72 11837.28,-390.72 11837.28,-389.28 11838.72,-389.28 11838.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cf5d51c77bcb4ccba8a3516a9593039d&amp;#45;&amp;#45;1d4fd118f6b943f9922ae99e907456f0 --&gt;\n&lt;g id=\"edge576\" class=\"edge\"&gt;\n&lt;title&gt;cf5d51c77bcb4ccba8a3516a9593039d&amp;#45;&amp;#45;1d4fd118f6b943f9922ae99e907456f0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11745.47,-390C11748.2,-390 11834.25,-390 11836.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- b7e9de22b57c4c0e89e30c0e4e7b1b24 --&gt;\n&lt;g id=\"node580\" class=\"node\"&gt;\n&lt;title&gt;b7e9de22b57c4c0e89e30c0e4e7b1b24&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11991.12,-390.72 11989.68,-390.72 11989.68,-389.28 11991.12,-389.28 11991.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1d4fd118f6b943f9922ae99e907456f0&amp;#45;&amp;#45;b7e9de22b57c4c0e89e30c0e4e7b1b24 --&gt;\n&lt;g id=\"edge577\" class=\"edge\"&gt;\n&lt;title&gt;1d4fd118f6b943f9922ae99e907456f0&amp;#45;&amp;#45;b7e9de22b57c4c0e89e30c0e4e7b1b24&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11839.11,-390C11843.59,-390 11984.88,-390 11989.29,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 632229c71a254ed5a36ca2c1d871705e --&gt;\n&lt;g id=\"node581\" class=\"node\"&gt;\n&lt;title&gt;632229c71a254ed5a36ca2c1d871705e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12143.52,-390.72 12142.08,-390.72 12142.08,-389.28 12143.52,-389.28 12143.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b7e9de22b57c4c0e89e30c0e4e7b1b24&amp;#45;&amp;#45;632229c71a254ed5a36ca2c1d871705e --&gt;\n&lt;g id=\"edge578\" class=\"edge\"&gt;\n&lt;title&gt;b7e9de22b57c4c0e89e30c0e4e7b1b24&amp;#45;&amp;#45;632229c71a254ed5a36ca2c1d871705e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11991.51,-390C11995.99,-390 12137.28,-390 12141.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- a0b4672c656c44a1a176401d9a870561 --&gt;\n&lt;g id=\"node582\" class=\"node\"&gt;\n&lt;title&gt;a0b4672c656c44a1a176401d9a870561&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12237.12,-390.72 12235.68,-390.72 12235.68,-389.28 12237.12,-389.28 12237.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 632229c71a254ed5a36ca2c1d871705e&amp;#45;&amp;#45;a0b4672c656c44a1a176401d9a870561 --&gt;\n&lt;g id=\"edge579\" class=\"edge\"&gt;\n&lt;title&gt;632229c71a254ed5a36ca2c1d871705e&amp;#45;&amp;#45;a0b4672c656c44a1a176401d9a870561&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12143.87,-390C12146.6,-390 12232.65,-390 12235.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 48bba2e4c3a840f28b5806dc6d7fdd5e --&gt;\n&lt;g id=\"node583\" class=\"node\"&gt;\n&lt;title&gt;48bba2e4c3a840f28b5806dc6d7fdd5e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12389.52,-390.72 12388.08,-390.72 12388.08,-389.28 12389.52,-389.28 12389.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a0b4672c656c44a1a176401d9a870561&amp;#45;&amp;#45;48bba2e4c3a840f28b5806dc6d7fdd5e --&gt;\n&lt;g id=\"edge580\" class=\"edge\"&gt;\n&lt;title&gt;a0b4672c656c44a1a176401d9a870561&amp;#45;&amp;#45;48bba2e4c3a840f28b5806dc6d7fdd5e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12237.51,-390C12241.99,-390 12383.28,-390 12387.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5b04fe139b8248958efe32d6498ade54 --&gt;\n&lt;g id=\"node584\" class=\"node\"&gt;\n&lt;title&gt;5b04fe139b8248958efe32d6498ade54&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12541.92,-390.72 12540.48,-390.72 12540.48,-389.28 12541.92,-389.28 12541.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 48bba2e4c3a840f28b5806dc6d7fdd5e&amp;#45;&amp;#45;5b04fe139b8248958efe32d6498ade54 --&gt;\n&lt;g id=\"edge581\" class=\"edge\"&gt;\n&lt;title&gt;48bba2e4c3a840f28b5806dc6d7fdd5e&amp;#45;&amp;#45;5b04fe139b8248958efe32d6498ade54&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12389.91,-390C12394.39,-390 12535.68,-390 12540.09,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- ff690100efd94aceb5e17a25dd135f09 --&gt;\n&lt;g id=\"node585\" class=\"node\"&gt;\n&lt;title&gt;ff690100efd94aceb5e17a25dd135f09&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M12721.2,-418.8C12721.2,-418.8 12618,-418.8 12618,-418.8 12612,-418.8 12606,-412.8 12606,-406.8 12606,-406.8 12606,-373.2 12606,-373.2 12606,-367.2 12612,-361.2 12618,-361.2 12618,-361.2 12721.2,-361.2 12721.2,-361.2 12727.2,-361.2 12733.2,-367.2 12733.2,-373.2 12733.2,-373.2 12733.2,-406.8 12733.2,-406.8 12733.2,-412.8 12727.2,-418.8 12721.2,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12669.6\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b02)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5b04fe139b8248958efe32d6498ade54&amp;#45;&amp;#45;ff690100efd94aceb5e17a25dd135f09 --&gt;\n&lt;g id=\"edge582\" class=\"edge\"&gt;\n&lt;title&gt;5b04fe139b8248958efe32d6498ade54&amp;#45;&amp;#45;ff690100efd94aceb5e17a25dd135f09&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12542.29,-390C12544.17,-390 12574.56,-390 12605.06,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- d502ca053dde48d7bcf62cf1de3c004f --&gt;\n&lt;g id=\"node586\" class=\"node\"&gt;\n&lt;title&gt;d502ca053dde48d7bcf62cf1de3c004f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12798.72,-390.72 12797.28,-390.72 12797.28,-389.28 12798.72,-389.28 12798.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ff690100efd94aceb5e17a25dd135f09&amp;#45;&amp;#45;d502ca053dde48d7bcf62cf1de3c004f --&gt;\n&lt;g id=\"edge583\" class=\"edge\"&gt;\n&lt;title&gt;ff690100efd94aceb5e17a25dd135f09&amp;#45;&amp;#45;d502ca053dde48d7bcf62cf1de3c004f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12734.17,-390C12764.66,-390 12795.04,-390 12796.91,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 47a177951f9c4250ab3b8aaed5dbf4ef --&gt;\n&lt;g id=\"node587\" class=\"node\"&gt;\n&lt;title&gt;47a177951f9c4250ab3b8aaed5dbf4ef&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M12908.4,-418.8C12908.4,-418.8 12874.8,-418.8 12874.8,-418.8 12868.8,-418.8 12862.8,-412.8 12862.8,-406.8 12862.8,-406.8 12862.8,-373.2 12862.8,-373.2 12862.8,-367.2 12868.8,-361.2 12874.8,-361.2 12874.8,-361.2 12908.4,-361.2 12908.4,-361.2 12914.4,-361.2 12920.4,-367.2 12920.4,-373.2 12920.4,-373.2 12920.4,-406.8 12920.4,-406.8 12920.4,-412.8 12914.4,-418.8 12908.4,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12891.6\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d502ca053dde48d7bcf62cf1de3c004f&amp;#45;&amp;#45;47a177951f9c4250ab3b8aaed5dbf4ef --&gt;\n&lt;g id=\"edge584\" class=\"edge\"&gt;\n&lt;title&gt;d502ca053dde48d7bcf62cf1de3c004f&amp;#45;&amp;#45;47a177951f9c4250ab3b8aaed5dbf4ef&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12799.07,-390C12800.79,-390 12835.68,-390 12861.88,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 47a177951f9c4250ab3b8aaed5dbf4ef&amp;#45;&amp;#45;a9135bf57d874e9db28331b38e1df3c2 --&gt;\n&lt;g id=\"edge1889\" class=\"edge\"&gt;\n&lt;title&gt;47a177951f9c4250ab3b8aaed5dbf4ef&amp;#45;&amp;#45;a9135bf57d874e9db28331b38e1df3c2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12891.6,-419.65C12891.6,-430.2 12891.6,-440.76 12891.6,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- b3468572f1004c1b8dab88817863b3eb --&gt;\n&lt;g id=\"node588\" class=\"node\"&gt;\n&lt;title&gt;b3468572f1004c1b8dab88817863b3eb&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"12985.2\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 47a177951f9c4250ab3b8aaed5dbf4ef&amp;#45;&amp;#45;b3468572f1004c1b8dab88817863b3eb --&gt;\n&lt;g id=\"edge585\" class=\"edge\"&gt;\n&lt;title&gt;47a177951f9c4250ab3b8aaed5dbf4ef&amp;#45;&amp;#45;b3468572f1004c1b8dab88817863b3eb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12921.08,-390C12941.04,-390 12966.14,-390 12977.76,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 00aa47173b5340f6ad7274ebe4d7e130 --&gt;\n&lt;g id=\"node589\" class=\"node\"&gt;\n&lt;title&gt;00aa47173b5340f6ad7274ebe4d7e130&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13079.52,-390.72 13078.08,-390.72 13078.08,-389.28 13079.52,-389.28 13079.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b3468572f1004c1b8dab88817863b3eb&amp;#45;&amp;#45;00aa47173b5340f6ad7274ebe4d7e130 --&gt;\n&lt;g id=\"edge586\" class=\"edge\"&gt;\n&lt;title&gt;b3468572f1004c1b8dab88817863b3eb&amp;#45;&amp;#45;00aa47173b5340f6ad7274ebe4d7e130&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12992.79,-390C13013.13,-390 13073.84,-390 13077.62,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- c88889264d2c465894b3fafa0d78c033 --&gt;\n&lt;g id=\"node590\" class=\"node\"&gt;\n&lt;title&gt;c88889264d2c465894b3fafa0d78c033&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13173.12,-390.72 13171.68,-390.72 13171.68,-389.28 13173.12,-389.28 13173.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 00aa47173b5340f6ad7274ebe4d7e130&amp;#45;&amp;#45;c88889264d2c465894b3fafa0d78c033 --&gt;\n&lt;g id=\"edge587\" class=\"edge\"&gt;\n&lt;title&gt;00aa47173b5340f6ad7274ebe4d7e130&amp;#45;&amp;#45;c88889264d2c465894b3fafa0d78c033&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13079.87,-390C13082.6,-390 13168.65,-390 13171.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- b533b1b87c784b3fbdf77d6a9bb5e6ea --&gt;\n&lt;g id=\"node591\" class=\"node\"&gt;\n&lt;title&gt;b533b1b87c784b3fbdf77d6a9bb5e6ea&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13266.72,-390.72 13265.28,-390.72 13265.28,-389.28 13266.72,-389.28 13266.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c88889264d2c465894b3fafa0d78c033&amp;#45;&amp;#45;b533b1b87c784b3fbdf77d6a9bb5e6ea --&gt;\n&lt;g id=\"edge588\" class=\"edge\"&gt;\n&lt;title&gt;c88889264d2c465894b3fafa0d78c033&amp;#45;&amp;#45;b533b1b87c784b3fbdf77d6a9bb5e6ea&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13173.47,-390C13176.2,-390 13262.25,-390 13264.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 538ce7b84607456789d7294e42b72aa4 --&gt;\n&lt;g id=\"node592\" class=\"node\"&gt;\n&lt;title&gt;538ce7b84607456789d7294e42b72aa4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13360.32,-390.72 13358.88,-390.72 13358.88,-389.28 13360.32,-389.28 13360.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b533b1b87c784b3fbdf77d6a9bb5e6ea&amp;#45;&amp;#45;538ce7b84607456789d7294e42b72aa4 --&gt;\n&lt;g id=\"edge589\" class=\"edge\"&gt;\n&lt;title&gt;b533b1b87c784b3fbdf77d6a9bb5e6ea&amp;#45;&amp;#45;538ce7b84607456789d7294e42b72aa4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13267.07,-390C13269.8,-390 13355.85,-390 13358.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- fe98ef4a72ec4f40bed3b99fc4542040 --&gt;\n&lt;g id=\"node593\" class=\"node\"&gt;\n&lt;title&gt;fe98ef4a72ec4f40bed3b99fc4542040&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13506.72,-390.72 13505.28,-390.72 13505.28,-389.28 13506.72,-389.28 13506.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 538ce7b84607456789d7294e42b72aa4&amp;#45;&amp;#45;fe98ef4a72ec4f40bed3b99fc4542040 --&gt;\n&lt;g id=\"edge590\" class=\"edge\"&gt;\n&lt;title&gt;538ce7b84607456789d7294e42b72aa4&amp;#45;&amp;#45;fe98ef4a72ec4f40bed3b99fc4542040&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13360.7,-390C13365.01,-390 13500.66,-390 13504.9,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- b12b1b176db04ee0bf191316dbf9b73a --&gt;\n&lt;g id=\"node594\" class=\"node\"&gt;\n&lt;title&gt;b12b1b176db04ee0bf191316dbf9b73a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13653.12,-390.72 13651.68,-390.72 13651.68,-389.28 13653.12,-389.28 13653.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fe98ef4a72ec4f40bed3b99fc4542040&amp;#45;&amp;#45;b12b1b176db04ee0bf191316dbf9b73a --&gt;\n&lt;g id=\"edge591\" class=\"edge\"&gt;\n&lt;title&gt;fe98ef4a72ec4f40bed3b99fc4542040&amp;#45;&amp;#45;b12b1b176db04ee0bf191316dbf9b73a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13507.1,-390C13511.41,-390 13647.06,-390 13651.3,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 483fa166df8b4d439cf6c936d7b515d0 --&gt;\n&lt;g id=\"node595\" class=\"node\"&gt;\n&lt;title&gt;483fa166df8b4d439cf6c936d7b515d0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13746.72,-390.72 13745.28,-390.72 13745.28,-389.28 13746.72,-389.28 13746.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b12b1b176db04ee0bf191316dbf9b73a&amp;#45;&amp;#45;483fa166df8b4d439cf6c936d7b515d0 --&gt;\n&lt;g id=\"edge592\" class=\"edge\"&gt;\n&lt;title&gt;b12b1b176db04ee0bf191316dbf9b73a&amp;#45;&amp;#45;483fa166df8b4d439cf6c936d7b515d0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13653.47,-390C13656.2,-390 13742.25,-390 13744.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 07267183f63240ba9c7ea39c7407da94 --&gt;\n&lt;g id=\"node596\" class=\"node\"&gt;\n&lt;title&gt;07267183f63240ba9c7ea39c7407da94&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13840.32,-390.72 13838.88,-390.72 13838.88,-389.28 13840.32,-389.28 13840.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 483fa166df8b4d439cf6c936d7b515d0&amp;#45;&amp;#45;07267183f63240ba9c7ea39c7407da94 --&gt;\n&lt;g id=\"edge593\" class=\"edge\"&gt;\n&lt;title&gt;483fa166df8b4d439cf6c936d7b515d0&amp;#45;&amp;#45;07267183f63240ba9c7ea39c7407da94&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13747.07,-390C13749.8,-390 13835.85,-390 13838.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd659752db074076aff574b313454e31 --&gt;\n&lt;g id=\"node597\" class=\"node\"&gt;\n&lt;title&gt;dd659752db074076aff574b313454e31&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13933.92,-390.72 13932.48,-390.72 13932.48,-389.28 13933.92,-389.28 13933.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 07267183f63240ba9c7ea39c7407da94&amp;#45;&amp;#45;dd659752db074076aff574b313454e31 --&gt;\n&lt;g id=\"edge594\" class=\"edge\"&gt;\n&lt;title&gt;07267183f63240ba9c7ea39c7407da94&amp;#45;&amp;#45;dd659752db074076aff574b313454e31&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13840.67,-390C13843.4,-390 13929.45,-390 13932.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 893693d3da314777b9a62396c7581383 --&gt;\n&lt;g id=\"node598\" class=\"node\"&gt;\n&lt;title&gt;893693d3da314777b9a62396c7581383&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"14026.8\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd659752db074076aff574b313454e31&amp;#45;&amp;#45;893693d3da314777b9a62396c7581383 --&gt;\n&lt;g id=\"edge595\" class=\"edge\"&gt;\n&lt;title&gt;dd659752db074076aff574b313454e31&amp;#45;&amp;#45;893693d3da314777b9a62396c7581383&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13934.27,-390C13936.57,-390 13998.41,-390 14019.12,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 26d31d3b4fc04f9fb31196cd08e5d437 --&gt;\n&lt;g id=\"node599\" class=\"node\"&gt;\n&lt;title&gt;26d31d3b4fc04f9fb31196cd08e5d437&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M14137.2,-418.8C14137.2,-418.8 14103.6,-418.8 14103.6,-418.8 14097.6,-418.8 14091.6,-412.8 14091.6,-406.8 14091.6,-406.8 14091.6,-373.2 14091.6,-373.2 14091.6,-367.2 14097.6,-361.2 14103.6,-361.2 14103.6,-361.2 14137.2,-361.2 14137.2,-361.2 14143.2,-361.2 14149.2,-367.2 14149.2,-373.2 14149.2,-373.2 14149.2,-406.8 14149.2,-406.8 14149.2,-412.8 14143.2,-418.8 14137.2,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"14120.4\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 893693d3da314777b9a62396c7581383&amp;#45;&amp;#45;26d31d3b4fc04f9fb31196cd08e5d437 --&gt;\n&lt;g id=\"edge596\" class=\"edge\"&gt;\n&lt;title&gt;893693d3da314777b9a62396c7581383&amp;#45;&amp;#45;26d31d3b4fc04f9fb31196cd08e5d437&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14034.39,-390C14046.04,-390 14070.92,-390 14090.77,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 26d31d3b4fc04f9fb31196cd08e5d437&amp;#45;&amp;#45;006bb4f0155b4b5cbc80fbbc7f1a8d13 --&gt;\n&lt;g id=\"edge1890\" class=\"edge\"&gt;\n&lt;title&gt;26d31d3b4fc04f9fb31196cd08e5d437&amp;#45;&amp;#45;006bb4f0155b4b5cbc80fbbc7f1a8d13&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14120.4,-419.65C14120.4,-430.2 14120.4,-440.76 14120.4,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 92b6256b6a93461f9fb2cd2ac5db7cb7 --&gt;\n&lt;g id=\"node600\" class=\"node\"&gt;\n&lt;title&gt;92b6256b6a93461f9fb2cd2ac5db7cb7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14214.72,-390.72 14213.28,-390.72 14213.28,-389.28 14214.72,-389.28 14214.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 26d31d3b4fc04f9fb31196cd08e5d437&amp;#45;&amp;#45;92b6256b6a93461f9fb2cd2ac5db7cb7 --&gt;\n&lt;g id=\"edge597\" class=\"edge\"&gt;\n&lt;title&gt;26d31d3b4fc04f9fb31196cd08e5d437&amp;#45;&amp;#45;92b6256b6a93461f9fb2cd2ac5db7cb7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14149.88,-390C14175.93,-390 14210.74,-390 14212.9,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 47b5cf37c54c4ddbb09d6c535985759b --&gt;\n&lt;g id=\"node601\" class=\"node\"&gt;\n&lt;title&gt;47b5cf37c54c4ddbb09d6c535985759b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14308.32,-390.72 14306.88,-390.72 14306.88,-389.28 14308.32,-389.28 14308.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 92b6256b6a93461f9fb2cd2ac5db7cb7&amp;#45;&amp;#45;47b5cf37c54c4ddbb09d6c535985759b --&gt;\n&lt;g id=\"edge598\" class=\"edge\"&gt;\n&lt;title&gt;92b6256b6a93461f9fb2cd2ac5db7cb7&amp;#45;&amp;#45;47b5cf37c54c4ddbb09d6c535985759b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14215.07,-390C14217.8,-390 14303.85,-390 14306.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- c7b4ab6e8d6f4353a45fab8beac289ef --&gt;\n&lt;g id=\"node602\" class=\"node\"&gt;\n&lt;title&gt;c7b4ab6e8d6f4353a45fab8beac289ef&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14460.72,-390.72 14459.28,-390.72 14459.28,-389.28 14460.72,-389.28 14460.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 47b5cf37c54c4ddbb09d6c535985759b&amp;#45;&amp;#45;c7b4ab6e8d6f4353a45fab8beac289ef --&gt;\n&lt;g id=\"edge599\" class=\"edge\"&gt;\n&lt;title&gt;47b5cf37c54c4ddbb09d6c535985759b&amp;#45;&amp;#45;c7b4ab6e8d6f4353a45fab8beac289ef&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14308.71,-390C14313.19,-390 14454.48,-390 14458.89,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 182fb49a503146f28ffad8a95eeea141 --&gt;\n&lt;g id=\"node603\" class=\"node\"&gt;\n&lt;title&gt;182fb49a503146f28ffad8a95eeea141&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14613.12,-390.72 14611.68,-390.72 14611.68,-389.28 14613.12,-389.28 14613.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c7b4ab6e8d6f4353a45fab8beac289ef&amp;#45;&amp;#45;182fb49a503146f28ffad8a95eeea141 --&gt;\n&lt;g id=\"edge600\" class=\"edge\"&gt;\n&lt;title&gt;c7b4ab6e8d6f4353a45fab8beac289ef&amp;#45;&amp;#45;182fb49a503146f28ffad8a95eeea141&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14461.11,-390C14465.59,-390 14606.88,-390 14611.29,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 99015b6528ca498c8f0700cb4d58f58b --&gt;\n&lt;g id=\"node604\" class=\"node\"&gt;\n&lt;title&gt;99015b6528ca498c8f0700cb4d58f58b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14706.72,-390.72 14705.28,-390.72 14705.28,-389.28 14706.72,-389.28 14706.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 182fb49a503146f28ffad8a95eeea141&amp;#45;&amp;#45;99015b6528ca498c8f0700cb4d58f58b --&gt;\n&lt;g id=\"edge601\" class=\"edge\"&gt;\n&lt;title&gt;182fb49a503146f28ffad8a95eeea141&amp;#45;&amp;#45;99015b6528ca498c8f0700cb4d58f58b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14613.47,-390C14616.2,-390 14702.25,-390 14704.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3958ebbe2bcf435a806de516fb6d130c --&gt;\n&lt;g id=\"node605\" class=\"node\"&gt;\n&lt;title&gt;3958ebbe2bcf435a806de516fb6d130c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M14816.4,-418.8C14816.4,-418.8 14782.8,-418.8 14782.8,-418.8 14776.8,-418.8 14770.8,-412.8 14770.8,-406.8 14770.8,-406.8 14770.8,-373.2 14770.8,-373.2 14770.8,-367.2 14776.8,-361.2 14782.8,-361.2 14782.8,-361.2 14816.4,-361.2 14816.4,-361.2 14822.4,-361.2 14828.4,-367.2 14828.4,-373.2 14828.4,-373.2 14828.4,-406.8 14828.4,-406.8 14828.4,-412.8 14822.4,-418.8 14816.4,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"14799.6\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 99015b6528ca498c8f0700cb4d58f58b&amp;#45;&amp;#45;3958ebbe2bcf435a806de516fb6d130c --&gt;\n&lt;g id=\"edge602\" class=\"edge\"&gt;\n&lt;title&gt;99015b6528ca498c8f0700cb4d58f58b&amp;#45;&amp;#45;3958ebbe2bcf435a806de516fb6d130c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14707.07,-390C14708.79,-390 14743.68,-390 14769.88,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3958ebbe2bcf435a806de516fb6d130c&amp;#45;&amp;#45;eb06a41fe1bc409cbec7095874521c57 --&gt;\n&lt;g id=\"edge1891\" class=\"edge\"&gt;\n&lt;title&gt;3958ebbe2bcf435a806de516fb6d130c&amp;#45;&amp;#45;eb06a41fe1bc409cbec7095874521c57&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14799.6,-419.65C14799.6,-430.2 14799.6,-440.76 14799.6,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3fdd0034871741e389ab3d6ce15894c8 --&gt;\n&lt;g id=\"node606\" class=\"node\"&gt;\n&lt;title&gt;3fdd0034871741e389ab3d6ce15894c8&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"14893.2\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3958ebbe2bcf435a806de516fb6d130c&amp;#45;&amp;#45;3fdd0034871741e389ab3d6ce15894c8 --&gt;\n&lt;g id=\"edge603\" class=\"edge\"&gt;\n&lt;title&gt;3958ebbe2bcf435a806de516fb6d130c&amp;#45;&amp;#45;3fdd0034871741e389ab3d6ce15894c8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14829.08,-390C14849.04,-390 14874.14,-390 14885.76,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 03083c7bcc634f5ca9368bacca61d1be --&gt;\n&lt;g id=\"node607\" class=\"node\"&gt;\n&lt;title&gt;03083c7bcc634f5ca9368bacca61d1be&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14987.52,-390.72 14986.08,-390.72 14986.08,-389.28 14987.52,-389.28 14987.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3fdd0034871741e389ab3d6ce15894c8&amp;#45;&amp;#45;03083c7bcc634f5ca9368bacca61d1be --&gt;\n&lt;g id=\"edge604\" class=\"edge\"&gt;\n&lt;title&gt;3fdd0034871741e389ab3d6ce15894c8&amp;#45;&amp;#45;03083c7bcc634f5ca9368bacca61d1be&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14900.79,-390C14921.13,-390 14981.84,-390 14985.62,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1a1d9592fae345509deeb5186d88ad19 --&gt;\n&lt;g id=\"node608\" class=\"node\"&gt;\n&lt;title&gt;1a1d9592fae345509deeb5186d88ad19&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15081.12,-390.72 15079.68,-390.72 15079.68,-389.28 15081.12,-389.28 15081.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 03083c7bcc634f5ca9368bacca61d1be&amp;#45;&amp;#45;1a1d9592fae345509deeb5186d88ad19 --&gt;\n&lt;g id=\"edge605\" class=\"edge\"&gt;\n&lt;title&gt;03083c7bcc634f5ca9368bacca61d1be&amp;#45;&amp;#45;1a1d9592fae345509deeb5186d88ad19&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14987.87,-390C14990.6,-390 15076.65,-390 15079.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- ff91e85f1aac42e38f289acae1cd971c --&gt;\n&lt;g id=\"node609\" class=\"node\"&gt;\n&lt;title&gt;ff91e85f1aac42e38f289acae1cd971c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15233.52,-390.72 15232.08,-390.72 15232.08,-389.28 15233.52,-389.28 15233.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1a1d9592fae345509deeb5186d88ad19&amp;#45;&amp;#45;ff91e85f1aac42e38f289acae1cd971c --&gt;\n&lt;g id=\"edge606\" class=\"edge\"&gt;\n&lt;title&gt;1a1d9592fae345509deeb5186d88ad19&amp;#45;&amp;#45;ff91e85f1aac42e38f289acae1cd971c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15081.51,-390C15085.99,-390 15227.28,-390 15231.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- d20fb320383f4d19a817888da7e7eb77 --&gt;\n&lt;g id=\"node610\" class=\"node\"&gt;\n&lt;title&gt;d20fb320383f4d19a817888da7e7eb77&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15385.92,-390.72 15384.48,-390.72 15384.48,-389.28 15385.92,-389.28 15385.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ff91e85f1aac42e38f289acae1cd971c&amp;#45;&amp;#45;d20fb320383f4d19a817888da7e7eb77 --&gt;\n&lt;g id=\"edge607\" class=\"edge\"&gt;\n&lt;title&gt;ff91e85f1aac42e38f289acae1cd971c&amp;#45;&amp;#45;d20fb320383f4d19a817888da7e7eb77&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15233.91,-390C15238.39,-390 15379.68,-390 15384.09,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- d6523d7d981c44a3baf999e885a4e5b9 --&gt;\n&lt;g id=\"node611\" class=\"node\"&gt;\n&lt;title&gt;d6523d7d981c44a3baf999e885a4e5b9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15479.52,-390.72 15478.08,-390.72 15478.08,-389.28 15479.52,-389.28 15479.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d20fb320383f4d19a817888da7e7eb77&amp;#45;&amp;#45;d6523d7d981c44a3baf999e885a4e5b9 --&gt;\n&lt;g id=\"edge608\" class=\"edge\"&gt;\n&lt;title&gt;d20fb320383f4d19a817888da7e7eb77&amp;#45;&amp;#45;d6523d7d981c44a3baf999e885a4e5b9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15386.27,-390C15389,-390 15475.05,-390 15477.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e786df2bc5cc4355b31aed822d9aa6dc --&gt;\n&lt;g id=\"node612\" class=\"node\"&gt;\n&lt;title&gt;e786df2bc5cc4355b31aed822d9aa6dc&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"15572.4\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- d6523d7d981c44a3baf999e885a4e5b9&amp;#45;&amp;#45;e786df2bc5cc4355b31aed822d9aa6dc --&gt;\n&lt;g id=\"edge609\" class=\"edge\"&gt;\n&lt;title&gt;d6523d7d981c44a3baf999e885a4e5b9&amp;#45;&amp;#45;e786df2bc5cc4355b31aed822d9aa6dc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15479.87,-390C15482.17,-390 15544.01,-390 15564.72,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 225421859a5041aba8bfc030d3fb083f --&gt;\n&lt;g id=\"node613\" class=\"node\"&gt;\n&lt;title&gt;225421859a5041aba8bfc030d3fb083f&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M15682.8,-418.8C15682.8,-418.8 15649.2,-418.8 15649.2,-418.8 15643.2,-418.8 15637.2,-412.8 15637.2,-406.8 15637.2,-406.8 15637.2,-373.2 15637.2,-373.2 15637.2,-367.2 15643.2,-361.2 15649.2,-361.2 15649.2,-361.2 15682.8,-361.2 15682.8,-361.2 15688.8,-361.2 15694.8,-367.2 15694.8,-373.2 15694.8,-373.2 15694.8,-406.8 15694.8,-406.8 15694.8,-412.8 15688.8,-418.8 15682.8,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"15666\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- e786df2bc5cc4355b31aed822d9aa6dc&amp;#45;&amp;#45;225421859a5041aba8bfc030d3fb083f --&gt;\n&lt;g id=\"edge610\" class=\"edge\"&gt;\n&lt;title&gt;e786df2bc5cc4355b31aed822d9aa6dc&amp;#45;&amp;#45;225421859a5041aba8bfc030d3fb083f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15579.99,-390C15591.64,-390 15616.52,-390 15636.37,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 225421859a5041aba8bfc030d3fb083f&amp;#45;&amp;#45;a7846279b13b473983e4f0a09eb9e483 --&gt;\n&lt;g id=\"edge1892\" class=\"edge\"&gt;\n&lt;title&gt;225421859a5041aba8bfc030d3fb083f&amp;#45;&amp;#45;a7846279b13b473983e4f0a09eb9e483&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15666,-419.65C15666,-430.2 15666,-440.76 15666,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- be91000d9a9f4f71bd32dead65873c71 --&gt;\n&lt;g id=\"node614\" class=\"node\"&gt;\n&lt;title&gt;be91000d9a9f4f71bd32dead65873c71&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15760.32,-390.72 15758.88,-390.72 15758.88,-389.28 15760.32,-389.28 15760.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 225421859a5041aba8bfc030d3fb083f&amp;#45;&amp;#45;be91000d9a9f4f71bd32dead65873c71 --&gt;\n&lt;g id=\"edge611\" class=\"edge\"&gt;\n&lt;title&gt;225421859a5041aba8bfc030d3fb083f&amp;#45;&amp;#45;be91000d9a9f4f71bd32dead65873c71&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15695.48,-390C15721.53,-390 15756.34,-390 15758.5,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d4df28b10de4c14b1d4f3a79bdafa1c --&gt;\n&lt;g id=\"node615\" class=\"node\"&gt;\n&lt;title&gt;6d4df28b10de4c14b1d4f3a79bdafa1c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M15870,-418.8C15870,-418.8 15836.4,-418.8 15836.4,-418.8 15830.4,-418.8 15824.4,-412.8 15824.4,-406.8 15824.4,-406.8 15824.4,-373.2 15824.4,-373.2 15824.4,-367.2 15830.4,-361.2 15836.4,-361.2 15836.4,-361.2 15870,-361.2 15870,-361.2 15876,-361.2 15882,-367.2 15882,-373.2 15882,-373.2 15882,-406.8 15882,-406.8 15882,-412.8 15876,-418.8 15870,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"15853.2\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- be91000d9a9f4f71bd32dead65873c71&amp;#45;&amp;#45;6d4df28b10de4c14b1d4f3a79bdafa1c --&gt;\n&lt;g id=\"edge612\" class=\"edge\"&gt;\n&lt;title&gt;be91000d9a9f4f71bd32dead65873c71&amp;#45;&amp;#45;6d4df28b10de4c14b1d4f3a79bdafa1c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15760.67,-390C15762.39,-390 15797.28,-390 15823.48,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d4df28b10de4c14b1d4f3a79bdafa1c&amp;#45;&amp;#45;e6551ee913ce4c4891652f50fd3e263c --&gt;\n&lt;g id=\"edge1893\" class=\"edge\"&gt;\n&lt;title&gt;6d4df28b10de4c14b1d4f3a79bdafa1c&amp;#45;&amp;#45;e6551ee913ce4c4891652f50fd3e263c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15853.2,-419.65C15853.2,-430.2 15853.2,-440.76 15853.2,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- faab64c90b3c47f6ad57955966f9f6e8 --&gt;\n&lt;g id=\"node616\" class=\"node\"&gt;\n&lt;title&gt;faab64c90b3c47f6ad57955966f9f6e8&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"15946.8\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d4df28b10de4c14b1d4f3a79bdafa1c&amp;#45;&amp;#45;faab64c90b3c47f6ad57955966f9f6e8 --&gt;\n&lt;g id=\"edge613\" class=\"edge\"&gt;\n&lt;title&gt;6d4df28b10de4c14b1d4f3a79bdafa1c&amp;#45;&amp;#45;faab64c90b3c47f6ad57955966f9f6e8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15882.68,-390C15902.64,-390 15927.74,-390 15939.36,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 053cdd94fd124cc28070506777259d39 --&gt;\n&lt;g id=\"node617\" class=\"node\"&gt;\n&lt;title&gt;053cdd94fd124cc28070506777259d39&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16041.12,-390.72 16039.68,-390.72 16039.68,-389.28 16041.12,-389.28 16041.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- faab64c90b3c47f6ad57955966f9f6e8&amp;#45;&amp;#45;053cdd94fd124cc28070506777259d39 --&gt;\n&lt;g id=\"edge614\" class=\"edge\"&gt;\n&lt;title&gt;faab64c90b3c47f6ad57955966f9f6e8&amp;#45;&amp;#45;053cdd94fd124cc28070506777259d39&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15954.39,-390C15974.73,-390 16035.44,-390 16039.22,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44cefadf41674b12a5daa2964f2fefeb --&gt;\n&lt;g id=\"node618\" class=\"node\"&gt;\n&lt;title&gt;44cefadf41674b12a5daa2964f2fefeb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16193.52,-390.72 16192.08,-390.72 16192.08,-389.28 16193.52,-389.28 16193.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 053cdd94fd124cc28070506777259d39&amp;#45;&amp;#45;44cefadf41674b12a5daa2964f2fefeb --&gt;\n&lt;g id=\"edge615\" class=\"edge\"&gt;\n&lt;title&gt;053cdd94fd124cc28070506777259d39&amp;#45;&amp;#45;44cefadf41674b12a5daa2964f2fefeb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16041.51,-390C16045.99,-390 16187.28,-390 16191.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 19593c700526433ea9eec24839b71826 --&gt;\n&lt;g id=\"node619\" class=\"node\"&gt;\n&lt;title&gt;19593c700526433ea9eec24839b71826&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16345.92,-390.72 16344.48,-390.72 16344.48,-389.28 16345.92,-389.28 16345.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44cefadf41674b12a5daa2964f2fefeb&amp;#45;&amp;#45;19593c700526433ea9eec24839b71826 --&gt;\n&lt;g id=\"edge616\" class=\"edge\"&gt;\n&lt;title&gt;44cefadf41674b12a5daa2964f2fefeb&amp;#45;&amp;#45;19593c700526433ea9eec24839b71826&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16193.91,-390C16198.39,-390 16339.68,-390 16344.09,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 31a65459fb2743e1a7e05b9f24502249 --&gt;\n&lt;g id=\"node620\" class=\"node\"&gt;\n&lt;title&gt;31a65459fb2743e1a7e05b9f24502249&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"16438.8\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 19593c700526433ea9eec24839b71826&amp;#45;&amp;#45;31a65459fb2743e1a7e05b9f24502249 --&gt;\n&lt;g id=\"edge617\" class=\"edge\"&gt;\n&lt;title&gt;19593c700526433ea9eec24839b71826&amp;#45;&amp;#45;31a65459fb2743e1a7e05b9f24502249&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16346.27,-390C16348.57,-390 16410.41,-390 16431.12,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- d3fda3d9dbd7409f9e22c26ecaf93cda --&gt;\n&lt;g id=\"node621\" class=\"node\"&gt;\n&lt;title&gt;d3fda3d9dbd7409f9e22c26ecaf93cda&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M16549.2,-418.8C16549.2,-418.8 16515.6,-418.8 16515.6,-418.8 16509.6,-418.8 16503.6,-412.8 16503.6,-406.8 16503.6,-406.8 16503.6,-373.2 16503.6,-373.2 16503.6,-367.2 16509.6,-361.2 16515.6,-361.2 16515.6,-361.2 16549.2,-361.2 16549.2,-361.2 16555.2,-361.2 16561.2,-367.2 16561.2,-373.2 16561.2,-373.2 16561.2,-406.8 16561.2,-406.8 16561.2,-412.8 16555.2,-418.8 16549.2,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"16532.4\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 31a65459fb2743e1a7e05b9f24502249&amp;#45;&amp;#45;d3fda3d9dbd7409f9e22c26ecaf93cda --&gt;\n&lt;g id=\"edge618\" class=\"edge\"&gt;\n&lt;title&gt;31a65459fb2743e1a7e05b9f24502249&amp;#45;&amp;#45;d3fda3d9dbd7409f9e22c26ecaf93cda&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16446.39,-390C16458.04,-390 16482.92,-390 16502.77,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- d3fda3d9dbd7409f9e22c26ecaf93cda&amp;#45;&amp;#45;d3b4a86d217f423986d6c800f1593a30 --&gt;\n&lt;g id=\"edge1894\" class=\"edge\"&gt;\n&lt;title&gt;d3fda3d9dbd7409f9e22c26ecaf93cda&amp;#45;&amp;#45;d3b4a86d217f423986d6c800f1593a30&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16532.4,-419.65C16532.4,-430.2 16532.4,-440.76 16532.4,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8d859b80df8482ca2d65d3c1a3281dd --&gt;\n&lt;g id=\"node622\" class=\"node\"&gt;\n&lt;title&gt;f8d859b80df8482ca2d65d3c1a3281dd&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M16642.8,-418.8C16642.8,-418.8 16609.2,-418.8 16609.2,-418.8 16603.2,-418.8 16597.2,-412.8 16597.2,-406.8 16597.2,-406.8 16597.2,-373.2 16597.2,-373.2 16597.2,-367.2 16603.2,-361.2 16609.2,-361.2 16609.2,-361.2 16642.8,-361.2 16642.8,-361.2 16648.8,-361.2 16654.8,-367.2 16654.8,-373.2 16654.8,-373.2 16654.8,-406.8 16654.8,-406.8 16654.8,-412.8 16648.8,-418.8 16642.8,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"16626\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d3fda3d9dbd7409f9e22c26ecaf93cda&amp;#45;&amp;#45;f8d859b80df8482ca2d65d3c1a3281dd --&gt;\n&lt;g id=\"edge619\" class=\"edge\"&gt;\n&lt;title&gt;d3fda3d9dbd7409f9e22c26ecaf93cda&amp;#45;&amp;#45;f8d859b80df8482ca2d65d3c1a3281dd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16561.88,-390C16572.8,-390 16585.27,-390 16596.22,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8d859b80df8482ca2d65d3c1a3281dd&amp;#45;&amp;#45;53d3acb438144a3fa00d2e3f62039724 --&gt;\n&lt;g id=\"edge1895\" class=\"edge\"&gt;\n&lt;title&gt;f8d859b80df8482ca2d65d3c1a3281dd&amp;#45;&amp;#45;53d3acb438144a3fa00d2e3f62039724&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16626,-419.65C16626,-430.2 16626,-440.76 16626,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 21822f628938466fa5bee9c555496561 --&gt;\n&lt;g id=\"node623\" class=\"node\"&gt;\n&lt;title&gt;21822f628938466fa5bee9c555496561&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"16719.6\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8d859b80df8482ca2d65d3c1a3281dd&amp;#45;&amp;#45;21822f628938466fa5bee9c555496561 --&gt;\n&lt;g id=\"edge620\" class=\"edge\"&gt;\n&lt;title&gt;f8d859b80df8482ca2d65d3c1a3281dd&amp;#45;&amp;#45;21822f628938466fa5bee9c555496561&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16655.48,-390C16675.44,-390 16700.54,-390 16712.16,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5fa9fe752b0c46b1a20b9dc3b6228fa9 --&gt;\n&lt;g id=\"node624\" class=\"node\"&gt;\n&lt;title&gt;5fa9fe752b0c46b1a20b9dc3b6228fa9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16813.92,-390.72 16812.48,-390.72 16812.48,-389.28 16813.92,-389.28 16813.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 21822f628938466fa5bee9c555496561&amp;#45;&amp;#45;5fa9fe752b0c46b1a20b9dc3b6228fa9 --&gt;\n&lt;g id=\"edge621\" class=\"edge\"&gt;\n&lt;title&gt;21822f628938466fa5bee9c555496561&amp;#45;&amp;#45;5fa9fe752b0c46b1a20b9dc3b6228fa9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16727.19,-390C16747.53,-390 16808.24,-390 16812.02,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- c02aa6f0c6d442a2beaf68aaa4d52651 --&gt;\n&lt;g id=\"node625\" class=\"node\"&gt;\n&lt;title&gt;c02aa6f0c6d442a2beaf68aaa4d52651&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16907.52,-390.72 16906.08,-390.72 16906.08,-389.28 16907.52,-389.28 16907.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5fa9fe752b0c46b1a20b9dc3b6228fa9&amp;#45;&amp;#45;c02aa6f0c6d442a2beaf68aaa4d52651 --&gt;\n&lt;g id=\"edge622\" class=\"edge\"&gt;\n&lt;title&gt;5fa9fe752b0c46b1a20b9dc3b6228fa9&amp;#45;&amp;#45;c02aa6f0c6d442a2beaf68aaa4d52651&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16814.27,-390C16817,-390 16903.05,-390 16905.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 714fd81be4344c7893b594dc68fa617a --&gt;\n&lt;g id=\"node626\" class=\"node\"&gt;\n&lt;title&gt;714fd81be4344c7893b594dc68fa617a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17059.92,-390.72 17058.48,-390.72 17058.48,-389.28 17059.92,-389.28 17059.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c02aa6f0c6d442a2beaf68aaa4d52651&amp;#45;&amp;#45;714fd81be4344c7893b594dc68fa617a --&gt;\n&lt;g id=\"edge623\" class=\"edge\"&gt;\n&lt;title&gt;c02aa6f0c6d442a2beaf68aaa4d52651&amp;#45;&amp;#45;714fd81be4344c7893b594dc68fa617a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16907.91,-390C16912.39,-390 17053.68,-390 17058.09,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- da6d8d004b9d46149ba78b44aa122f8a --&gt;\n&lt;g id=\"node627\" class=\"node\"&gt;\n&lt;title&gt;da6d8d004b9d46149ba78b44aa122f8a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17212.32,-390.72 17210.88,-390.72 17210.88,-389.28 17212.32,-389.28 17212.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 714fd81be4344c7893b594dc68fa617a&amp;#45;&amp;#45;da6d8d004b9d46149ba78b44aa122f8a --&gt;\n&lt;g id=\"edge624\" class=\"edge\"&gt;\n&lt;title&gt;714fd81be4344c7893b594dc68fa617a&amp;#45;&amp;#45;da6d8d004b9d46149ba78b44aa122f8a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17060.31,-390C17064.79,-390 17206.08,-390 17210.49,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5d59ca2f0ed941b99c8ca34527287ae7 --&gt;\n&lt;g id=\"node628\" class=\"node\"&gt;\n&lt;title&gt;5d59ca2f0ed941b99c8ca34527287ae7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17305.92,-390.72 17304.48,-390.72 17304.48,-389.28 17305.92,-389.28 17305.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da6d8d004b9d46149ba78b44aa122f8a&amp;#45;&amp;#45;5d59ca2f0ed941b99c8ca34527287ae7 --&gt;\n&lt;g id=\"edge625\" class=\"edge\"&gt;\n&lt;title&gt;da6d8d004b9d46149ba78b44aa122f8a&amp;#45;&amp;#45;5d59ca2f0ed941b99c8ca34527287ae7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17212.67,-390C17215.4,-390 17301.45,-390 17304.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- fb001755e1724f878eb27a92f2b5466c --&gt;\n&lt;g id=\"node629\" class=\"node\"&gt;\n&lt;title&gt;fb001755e1724f878eb27a92f2b5466c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"17398.8\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5d59ca2f0ed941b99c8ca34527287ae7&amp;#45;&amp;#45;fb001755e1724f878eb27a92f2b5466c --&gt;\n&lt;g id=\"edge626\" class=\"edge\"&gt;\n&lt;title&gt;5d59ca2f0ed941b99c8ca34527287ae7&amp;#45;&amp;#45;fb001755e1724f878eb27a92f2b5466c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17306.27,-390C17308.57,-390 17370.41,-390 17391.12,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5571330599c64ef8a8faf8031467003c --&gt;\n&lt;g id=\"node630\" class=\"node\"&gt;\n&lt;title&gt;5571330599c64ef8a8faf8031467003c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M17509.2,-418.8C17509.2,-418.8 17475.6,-418.8 17475.6,-418.8 17469.6,-418.8 17463.6,-412.8 17463.6,-406.8 17463.6,-406.8 17463.6,-373.2 17463.6,-373.2 17463.6,-367.2 17469.6,-361.2 17475.6,-361.2 17475.6,-361.2 17509.2,-361.2 17509.2,-361.2 17515.2,-361.2 17521.2,-367.2 17521.2,-373.2 17521.2,-373.2 17521.2,-406.8 17521.2,-406.8 17521.2,-412.8 17515.2,-418.8 17509.2,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"17492.4\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- fb001755e1724f878eb27a92f2b5466c&amp;#45;&amp;#45;5571330599c64ef8a8faf8031467003c --&gt;\n&lt;g id=\"edge627\" class=\"edge\"&gt;\n&lt;title&gt;fb001755e1724f878eb27a92f2b5466c&amp;#45;&amp;#45;5571330599c64ef8a8faf8031467003c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17406.39,-390C17418.04,-390 17442.92,-390 17462.77,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5571330599c64ef8a8faf8031467003c&amp;#45;&amp;#45;122e1d05fa9a41c7adde5a82825aab8c --&gt;\n&lt;g id=\"edge1896\" class=\"edge\"&gt;\n&lt;title&gt;5571330599c64ef8a8faf8031467003c&amp;#45;&amp;#45;122e1d05fa9a41c7adde5a82825aab8c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17492.4,-419.65C17492.4,-430.2 17492.4,-440.76 17492.4,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 24f79a462dc944a38c5c31eb3f1a896f --&gt;\n&lt;g id=\"node631\" class=\"node\"&gt;\n&lt;title&gt;24f79a462dc944a38c5c31eb3f1a896f&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M17602.8,-418.8C17602.8,-418.8 17569.2,-418.8 17569.2,-418.8 17563.2,-418.8 17557.2,-412.8 17557.2,-406.8 17557.2,-406.8 17557.2,-373.2 17557.2,-373.2 17557.2,-367.2 17563.2,-361.2 17569.2,-361.2 17569.2,-361.2 17602.8,-361.2 17602.8,-361.2 17608.8,-361.2 17614.8,-367.2 17614.8,-373.2 17614.8,-373.2 17614.8,-406.8 17614.8,-406.8 17614.8,-412.8 17608.8,-418.8 17602.8,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"17586\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5571330599c64ef8a8faf8031467003c&amp;#45;&amp;#45;24f79a462dc944a38c5c31eb3f1a896f --&gt;\n&lt;g id=\"edge628\" class=\"edge\"&gt;\n&lt;title&gt;5571330599c64ef8a8faf8031467003c&amp;#45;&amp;#45;24f79a462dc944a38c5c31eb3f1a896f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17521.88,-390C17532.8,-390 17545.27,-390 17556.22,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 24f79a462dc944a38c5c31eb3f1a896f&amp;#45;&amp;#45;dcaff583bdd54267a58ba1940d2c37ac --&gt;\n&lt;g id=\"edge1897\" class=\"edge\"&gt;\n&lt;title&gt;24f79a462dc944a38c5c31eb3f1a896f&amp;#45;&amp;#45;dcaff583bdd54267a58ba1940d2c37ac&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17586,-419.65C17586,-430.2 17586,-440.76 17586,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- bf343bd56cbb42d796a24df37ab981df --&gt;\n&lt;g id=\"node632\" class=\"node\"&gt;\n&lt;title&gt;bf343bd56cbb42d796a24df37ab981df&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"17679.6\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 24f79a462dc944a38c5c31eb3f1a896f&amp;#45;&amp;#45;bf343bd56cbb42d796a24df37ab981df --&gt;\n&lt;g id=\"edge629\" class=\"edge\"&gt;\n&lt;title&gt;24f79a462dc944a38c5c31eb3f1a896f&amp;#45;&amp;#45;bf343bd56cbb42d796a24df37ab981df&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17615.48,-390C17635.44,-390 17660.54,-390 17672.16,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ef03ad25f4643b19a1458e83371914d --&gt;\n&lt;g id=\"node633\" class=\"node\"&gt;\n&lt;title&gt;6ef03ad25f4643b19a1458e83371914d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17773.92,-390.72 17772.48,-390.72 17772.48,-389.28 17773.92,-389.28 17773.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bf343bd56cbb42d796a24df37ab981df&amp;#45;&amp;#45;6ef03ad25f4643b19a1458e83371914d --&gt;\n&lt;g id=\"edge630\" class=\"edge\"&gt;\n&lt;title&gt;bf343bd56cbb42d796a24df37ab981df&amp;#45;&amp;#45;6ef03ad25f4643b19a1458e83371914d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17687.19,-390C17707.53,-390 17768.24,-390 17772.02,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3841ba2ea6a4a6494878edb674cf6ca --&gt;\n&lt;g id=\"node634\" class=\"node\"&gt;\n&lt;title&gt;c3841ba2ea6a4a6494878edb674cf6ca&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17867.52,-390.72 17866.08,-390.72 17866.08,-389.28 17867.52,-389.28 17867.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ef03ad25f4643b19a1458e83371914d&amp;#45;&amp;#45;c3841ba2ea6a4a6494878edb674cf6ca --&gt;\n&lt;g id=\"edge631\" class=\"edge\"&gt;\n&lt;title&gt;6ef03ad25f4643b19a1458e83371914d&amp;#45;&amp;#45;c3841ba2ea6a4a6494878edb674cf6ca&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17774.27,-390C17777,-390 17863.05,-390 17865.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- b516b540ecce47e9886f68ff6d75fef9 --&gt;\n&lt;g id=\"node635\" class=\"node\"&gt;\n&lt;title&gt;b516b540ecce47e9886f68ff6d75fef9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17961.12,-390.72 17959.68,-390.72 17959.68,-389.28 17961.12,-389.28 17961.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3841ba2ea6a4a6494878edb674cf6ca&amp;#45;&amp;#45;b516b540ecce47e9886f68ff6d75fef9 --&gt;\n&lt;g id=\"edge632\" class=\"edge\"&gt;\n&lt;title&gt;c3841ba2ea6a4a6494878edb674cf6ca&amp;#45;&amp;#45;b516b540ecce47e9886f68ff6d75fef9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17867.87,-390C17870.6,-390 17956.65,-390 17959.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- acfe56deb2974d8fac682952e1473dc4 --&gt;\n&lt;g id=\"node636\" class=\"node\"&gt;\n&lt;title&gt;acfe56deb2974d8fac682952e1473dc4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18113.52,-390.72 18112.08,-390.72 18112.08,-389.28 18113.52,-389.28 18113.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b516b540ecce47e9886f68ff6d75fef9&amp;#45;&amp;#45;acfe56deb2974d8fac682952e1473dc4 --&gt;\n&lt;g id=\"edge633\" class=\"edge\"&gt;\n&lt;title&gt;b516b540ecce47e9886f68ff6d75fef9&amp;#45;&amp;#45;acfe56deb2974d8fac682952e1473dc4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17961.51,-390C17965.99,-390 18107.28,-390 18111.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 508f498c2bc64bf1ae047795da6fc39e --&gt;\n&lt;g id=\"node637\" class=\"node\"&gt;\n&lt;title&gt;508f498c2bc64bf1ae047795da6fc39e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18265.92,-390.72 18264.48,-390.72 18264.48,-389.28 18265.92,-389.28 18265.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- acfe56deb2974d8fac682952e1473dc4&amp;#45;&amp;#45;508f498c2bc64bf1ae047795da6fc39e --&gt;\n&lt;g id=\"edge634\" class=\"edge\"&gt;\n&lt;title&gt;acfe56deb2974d8fac682952e1473dc4&amp;#45;&amp;#45;508f498c2bc64bf1ae047795da6fc39e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18113.91,-390C18118.39,-390 18259.68,-390 18264.09,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1ae17b18f76b43f5adfe55efdcc5fc21 --&gt;\n&lt;g id=\"node638\" class=\"node\"&gt;\n&lt;title&gt;1ae17b18f76b43f5adfe55efdcc5fc21&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18359.52,-390.72 18358.08,-390.72 18358.08,-389.28 18359.52,-389.28 18359.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 508f498c2bc64bf1ae047795da6fc39e&amp;#45;&amp;#45;1ae17b18f76b43f5adfe55efdcc5fc21 --&gt;\n&lt;g id=\"edge635\" class=\"edge\"&gt;\n&lt;title&gt;508f498c2bc64bf1ae047795da6fc39e&amp;#45;&amp;#45;1ae17b18f76b43f5adfe55efdcc5fc21&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18266.27,-390C18269,-390 18355.05,-390 18357.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e0ae4f660b344d61a5f74270bcc65aa8 --&gt;\n&lt;g id=\"node639\" class=\"node\"&gt;\n&lt;title&gt;e0ae4f660b344d61a5f74270bcc65aa8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18453.12,-390.72 18451.68,-390.72 18451.68,-389.28 18453.12,-389.28 18453.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1ae17b18f76b43f5adfe55efdcc5fc21&amp;#45;&amp;#45;e0ae4f660b344d61a5f74270bcc65aa8 --&gt;\n&lt;g id=\"edge636\" class=\"edge\"&gt;\n&lt;title&gt;1ae17b18f76b43f5adfe55efdcc5fc21&amp;#45;&amp;#45;e0ae4f660b344d61a5f74270bcc65aa8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18359.87,-390C18362.6,-390 18448.65,-390 18451.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 35dd89c91b7f41379680ed7375e2fe2c --&gt;\n&lt;g id=\"node640\" class=\"node\"&gt;\n&lt;title&gt;35dd89c91b7f41379680ed7375e2fe2c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"18546\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- e0ae4f660b344d61a5f74270bcc65aa8&amp;#45;&amp;#45;35dd89c91b7f41379680ed7375e2fe2c --&gt;\n&lt;g id=\"edge637\" class=\"edge\"&gt;\n&lt;title&gt;e0ae4f660b344d61a5f74270bcc65aa8&amp;#45;&amp;#45;35dd89c91b7f41379680ed7375e2fe2c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18453.47,-390C18455.77,-390 18517.61,-390 18538.32,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f1ae1bd4a4f44c2bd7f3dbaa455924f --&gt;\n&lt;g id=\"node641\" class=\"node\"&gt;\n&lt;title&gt;6f1ae1bd4a4f44c2bd7f3dbaa455924f&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M18656.4,-418.8C18656.4,-418.8 18622.8,-418.8 18622.8,-418.8 18616.8,-418.8 18610.8,-412.8 18610.8,-406.8 18610.8,-406.8 18610.8,-373.2 18610.8,-373.2 18610.8,-367.2 18616.8,-361.2 18622.8,-361.2 18622.8,-361.2 18656.4,-361.2 18656.4,-361.2 18662.4,-361.2 18668.4,-367.2 18668.4,-373.2 18668.4,-373.2 18668.4,-406.8 18668.4,-406.8 18668.4,-412.8 18662.4,-418.8 18656.4,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"18639.6\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 35dd89c91b7f41379680ed7375e2fe2c&amp;#45;&amp;#45;6f1ae1bd4a4f44c2bd7f3dbaa455924f --&gt;\n&lt;g id=\"edge638\" class=\"edge\"&gt;\n&lt;title&gt;35dd89c91b7f41379680ed7375e2fe2c&amp;#45;&amp;#45;6f1ae1bd4a4f44c2bd7f3dbaa455924f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18553.59,-390C18565.24,-390 18590.12,-390 18609.97,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f1ae1bd4a4f44c2bd7f3dbaa455924f&amp;#45;&amp;#45;d2dfa15e632e4cbfa542845d0bc93a23 --&gt;\n&lt;g id=\"edge1898\" class=\"edge\"&gt;\n&lt;title&gt;6f1ae1bd4a4f44c2bd7f3dbaa455924f&amp;#45;&amp;#45;d2dfa15e632e4cbfa542845d0bc93a23&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18639.6,-419.65C18639.6,-430.2 18639.6,-440.76 18639.6,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- c1710bbcc87b4fc2b14e5d921422c879 --&gt;\n&lt;g id=\"node642\" class=\"node\"&gt;\n&lt;title&gt;c1710bbcc87b4fc2b14e5d921422c879&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M18750,-418.8C18750,-418.8 18716.4,-418.8 18716.4,-418.8 18710.4,-418.8 18704.4,-412.8 18704.4,-406.8 18704.4,-406.8 18704.4,-373.2 18704.4,-373.2 18704.4,-367.2 18710.4,-361.2 18716.4,-361.2 18716.4,-361.2 18750,-361.2 18750,-361.2 18756,-361.2 18762,-367.2 18762,-373.2 18762,-373.2 18762,-406.8 18762,-406.8 18762,-412.8 18756,-418.8 18750,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"18733.2\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 6f1ae1bd4a4f44c2bd7f3dbaa455924f&amp;#45;&amp;#45;c1710bbcc87b4fc2b14e5d921422c879 --&gt;\n&lt;g id=\"edge639\" class=\"edge\"&gt;\n&lt;title&gt;6f1ae1bd4a4f44c2bd7f3dbaa455924f&amp;#45;&amp;#45;c1710bbcc87b4fc2b14e5d921422c879&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18669.08,-390C18680,-390 18692.47,-390 18703.42,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- c1710bbcc87b4fc2b14e5d921422c879&amp;#45;&amp;#45;55073c5a80f64818bcceeba5d02f7da6 --&gt;\n&lt;g id=\"edge1899\" class=\"edge\"&gt;\n&lt;title&gt;c1710bbcc87b4fc2b14e5d921422c879&amp;#45;&amp;#45;55073c5a80f64818bcceeba5d02f7da6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18733.2,-419.65C18733.2,-430.2 18733.2,-440.76 18733.2,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- aa5f0039543949c7b443c7442a92cbeb --&gt;\n&lt;g id=\"node643\" class=\"node\"&gt;\n&lt;title&gt;aa5f0039543949c7b443c7442a92cbeb&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"18826.8\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- c1710bbcc87b4fc2b14e5d921422c879&amp;#45;&amp;#45;aa5f0039543949c7b443c7442a92cbeb --&gt;\n&lt;g id=\"edge640\" class=\"edge\"&gt;\n&lt;title&gt;c1710bbcc87b4fc2b14e5d921422c879&amp;#45;&amp;#45;aa5f0039543949c7b443c7442a92cbeb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18762.68,-390C18782.64,-390 18807.74,-390 18819.36,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 780c5eefcfb847a899c14d79794c1152 --&gt;\n&lt;g id=\"node644\" class=\"node\"&gt;\n&lt;title&gt;780c5eefcfb847a899c14d79794c1152&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18921.12,-390.72 18919.68,-390.72 18919.68,-389.28 18921.12,-389.28 18921.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- aa5f0039543949c7b443c7442a92cbeb&amp;#45;&amp;#45;780c5eefcfb847a899c14d79794c1152 --&gt;\n&lt;g id=\"edge641\" class=\"edge\"&gt;\n&lt;title&gt;aa5f0039543949c7b443c7442a92cbeb&amp;#45;&amp;#45;780c5eefcfb847a899c14d79794c1152&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18834.39,-390C18854.73,-390 18915.44,-390 18919.22,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- eddd23f53ef7425da470a6f6a41bdaa1 --&gt;\n&lt;g id=\"node645\" class=\"node\"&gt;\n&lt;title&gt;eddd23f53ef7425da470a6f6a41bdaa1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19014.72,-390.72 19013.28,-390.72 19013.28,-389.28 19014.72,-389.28 19014.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 780c5eefcfb847a899c14d79794c1152&amp;#45;&amp;#45;eddd23f53ef7425da470a6f6a41bdaa1 --&gt;\n&lt;g id=\"edge642\" class=\"edge\"&gt;\n&lt;title&gt;780c5eefcfb847a899c14d79794c1152&amp;#45;&amp;#45;eddd23f53ef7425da470a6f6a41bdaa1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18921.47,-390C18924.2,-390 19010.25,-390 19012.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2db9c42876d24c089f4ab0be10e5bdfb --&gt;\n&lt;g id=\"node646\" class=\"node\"&gt;\n&lt;title&gt;2db9c42876d24c089f4ab0be10e5bdfb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19108.32,-390.72 19106.88,-390.72 19106.88,-389.28 19108.32,-389.28 19108.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- eddd23f53ef7425da470a6f6a41bdaa1&amp;#45;&amp;#45;2db9c42876d24c089f4ab0be10e5bdfb --&gt;\n&lt;g id=\"edge643\" class=\"edge\"&gt;\n&lt;title&gt;eddd23f53ef7425da470a6f6a41bdaa1&amp;#45;&amp;#45;2db9c42876d24c089f4ab0be10e5bdfb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19015.07,-390C19017.8,-390 19103.85,-390 19106.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 54cd99d80b834fd5a37f5600840fef7e --&gt;\n&lt;g id=\"node647\" class=\"node\"&gt;\n&lt;title&gt;54cd99d80b834fd5a37f5600840fef7e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19201.92,-390.72 19200.48,-390.72 19200.48,-389.28 19201.92,-389.28 19201.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2db9c42876d24c089f4ab0be10e5bdfb&amp;#45;&amp;#45;54cd99d80b834fd5a37f5600840fef7e --&gt;\n&lt;g id=\"edge644\" class=\"edge\"&gt;\n&lt;title&gt;2db9c42876d24c089f4ab0be10e5bdfb&amp;#45;&amp;#45;54cd99d80b834fd5a37f5600840fef7e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19108.67,-390C19111.4,-390 19197.45,-390 19200.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2319c7f4b3064fa0b011f903436a5680 --&gt;\n&lt;g id=\"node648\" class=\"node\"&gt;\n&lt;title&gt;2319c7f4b3064fa0b011f903436a5680&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19354.32,-390.72 19352.88,-390.72 19352.88,-389.28 19354.32,-389.28 19354.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 54cd99d80b834fd5a37f5600840fef7e&amp;#45;&amp;#45;2319c7f4b3064fa0b011f903436a5680 --&gt;\n&lt;g id=\"edge645\" class=\"edge\"&gt;\n&lt;title&gt;54cd99d80b834fd5a37f5600840fef7e&amp;#45;&amp;#45;2319c7f4b3064fa0b011f903436a5680&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19202.31,-390C19206.79,-390 19348.08,-390 19352.49,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93acf4837913416f929c4c5b910c2ab6 --&gt;\n&lt;g id=\"node649\" class=\"node\"&gt;\n&lt;title&gt;93acf4837913416f929c4c5b910c2ab6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19506.72,-390.72 19505.28,-390.72 19505.28,-389.28 19506.72,-389.28 19506.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2319c7f4b3064fa0b011f903436a5680&amp;#45;&amp;#45;93acf4837913416f929c4c5b910c2ab6 --&gt;\n&lt;g id=\"edge646\" class=\"edge\"&gt;\n&lt;title&gt;2319c7f4b3064fa0b011f903436a5680&amp;#45;&amp;#45;93acf4837913416f929c4c5b910c2ab6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19354.71,-390C19359.19,-390 19500.48,-390 19504.89,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e0e899279c6448f59a85daf479b1d396 --&gt;\n&lt;g id=\"node650\" class=\"node\"&gt;\n&lt;title&gt;e0e899279c6448f59a85daf479b1d396&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19600.32,-390.72 19598.88,-390.72 19598.88,-389.28 19600.32,-389.28 19600.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93acf4837913416f929c4c5b910c2ab6&amp;#45;&amp;#45;e0e899279c6448f59a85daf479b1d396 --&gt;\n&lt;g id=\"edge647\" class=\"edge\"&gt;\n&lt;title&gt;93acf4837913416f929c4c5b910c2ab6&amp;#45;&amp;#45;e0e899279c6448f59a85daf479b1d396&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19507.07,-390C19509.8,-390 19595.85,-390 19598.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- d738b632ebac410b85b10bdf7c9c331a --&gt;\n&lt;g id=\"node651\" class=\"node\"&gt;\n&lt;title&gt;d738b632ebac410b85b10bdf7c9c331a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19693.92,-390.72 19692.48,-390.72 19692.48,-389.28 19693.92,-389.28 19693.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e0e899279c6448f59a85daf479b1d396&amp;#45;&amp;#45;d738b632ebac410b85b10bdf7c9c331a --&gt;\n&lt;g id=\"edge648\" class=\"edge\"&gt;\n&lt;title&gt;e0e899279c6448f59a85daf479b1d396&amp;#45;&amp;#45;d738b632ebac410b85b10bdf7c9c331a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19600.67,-390C19603.4,-390 19689.45,-390 19692.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e02a0619fc1c45a3b85fb4d0a24b9478 --&gt;\n&lt;g id=\"node652\" class=\"node\"&gt;\n&lt;title&gt;e02a0619fc1c45a3b85fb4d0a24b9478&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19787.52,-390.72 19786.08,-390.72 19786.08,-389.28 19787.52,-389.28 19787.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d738b632ebac410b85b10bdf7c9c331a&amp;#45;&amp;#45;e02a0619fc1c45a3b85fb4d0a24b9478 --&gt;\n&lt;g id=\"edge649\" class=\"edge\"&gt;\n&lt;title&gt;d738b632ebac410b85b10bdf7c9c331a&amp;#45;&amp;#45;e02a0619fc1c45a3b85fb4d0a24b9478&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19694.27,-390C19697,-390 19783.05,-390 19785.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 750411a2d44247d5b1ebb4b833a7da23 --&gt;\n&lt;g id=\"node653\" class=\"node\"&gt;\n&lt;title&gt;750411a2d44247d5b1ebb4b833a7da23&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"19880.4\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- e02a0619fc1c45a3b85fb4d0a24b9478&amp;#45;&amp;#45;750411a2d44247d5b1ebb4b833a7da23 --&gt;\n&lt;g id=\"edge650\" class=\"edge\"&gt;\n&lt;title&gt;e02a0619fc1c45a3b85fb4d0a24b9478&amp;#45;&amp;#45;750411a2d44247d5b1ebb4b833a7da23&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19787.87,-390C19790.17,-390 19852.01,-390 19872.72,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 50aa542088dd41498265ffea08586b64 --&gt;\n&lt;g id=\"node654\" class=\"node\"&gt;\n&lt;title&gt;50aa542088dd41498265ffea08586b64&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M19990.8,-418.8C19990.8,-418.8 19957.2,-418.8 19957.2,-418.8 19951.2,-418.8 19945.2,-412.8 19945.2,-406.8 19945.2,-406.8 19945.2,-373.2 19945.2,-373.2 19945.2,-367.2 19951.2,-361.2 19957.2,-361.2 19957.2,-361.2 19990.8,-361.2 19990.8,-361.2 19996.8,-361.2 20002.8,-367.2 20002.8,-373.2 20002.8,-373.2 20002.8,-406.8 20002.8,-406.8 20002.8,-412.8 19996.8,-418.8 19990.8,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"19974\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 750411a2d44247d5b1ebb4b833a7da23&amp;#45;&amp;#45;50aa542088dd41498265ffea08586b64 --&gt;\n&lt;g id=\"edge651\" class=\"edge\"&gt;\n&lt;title&gt;750411a2d44247d5b1ebb4b833a7da23&amp;#45;&amp;#45;50aa542088dd41498265ffea08586b64&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19887.99,-390C19899.64,-390 19924.52,-390 19944.37,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 50aa542088dd41498265ffea08586b64&amp;#45;&amp;#45;55c77497fe4340afa4eae5606ad807b4 --&gt;\n&lt;g id=\"edge1900\" class=\"edge\"&gt;\n&lt;title&gt;50aa542088dd41498265ffea08586b64&amp;#45;&amp;#45;55c77497fe4340afa4eae5606ad807b4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19974,-419.65C19974,-430.2 19974,-440.76 19974,-451.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2750efc851734f56825ecbd7341d3147 --&gt;\n&lt;g id=\"node655\" class=\"node\"&gt;\n&lt;title&gt;2750efc851734f56825ecbd7341d3147&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"20067.6\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 50aa542088dd41498265ffea08586b64&amp;#45;&amp;#45;2750efc851734f56825ecbd7341d3147 --&gt;\n&lt;g id=\"edge652\" class=\"edge\"&gt;\n&lt;title&gt;50aa542088dd41498265ffea08586b64&amp;#45;&amp;#45;2750efc851734f56825ecbd7341d3147&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20003.48,-390C20023.44,-390 20048.54,-390 20060.16,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 448311e8436643b7905c9eb6b3411ac7 --&gt;\n&lt;g id=\"node656\" class=\"node\"&gt;\n&lt;title&gt;448311e8436643b7905c9eb6b3411ac7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20161.92,-390.72 20160.48,-390.72 20160.48,-389.28 20161.92,-389.28 20161.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2750efc851734f56825ecbd7341d3147&amp;#45;&amp;#45;448311e8436643b7905c9eb6b3411ac7 --&gt;\n&lt;g id=\"edge653\" class=\"edge\"&gt;\n&lt;title&gt;2750efc851734f56825ecbd7341d3147&amp;#45;&amp;#45;448311e8436643b7905c9eb6b3411ac7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20075.19,-390C20095.53,-390 20156.24,-390 20160.02,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e069ae3f7bf941c1acc5a7a41775d9ae --&gt;\n&lt;g id=\"node657\" class=\"node\"&gt;\n&lt;title&gt;e069ae3f7bf941c1acc5a7a41775d9ae&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20255.52,-390.72 20254.08,-390.72 20254.08,-389.28 20255.52,-389.28 20255.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 448311e8436643b7905c9eb6b3411ac7&amp;#45;&amp;#45;e069ae3f7bf941c1acc5a7a41775d9ae --&gt;\n&lt;g id=\"edge654\" class=\"edge\"&gt;\n&lt;title&gt;448311e8436643b7905c9eb6b3411ac7&amp;#45;&amp;#45;e069ae3f7bf941c1acc5a7a41775d9ae&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20162.27,-390C20165,-390 20251.05,-390 20253.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 02ba1744d404426fa907db5490f475c7 --&gt;\n&lt;g id=\"node658\" class=\"node\"&gt;\n&lt;title&gt;02ba1744d404426fa907db5490f475c7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20349.12,-390.72 20347.68,-390.72 20347.68,-389.28 20349.12,-389.28 20349.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e069ae3f7bf941c1acc5a7a41775d9ae&amp;#45;&amp;#45;02ba1744d404426fa907db5490f475c7 --&gt;\n&lt;g id=\"edge655\" class=\"edge\"&gt;\n&lt;title&gt;e069ae3f7bf941c1acc5a7a41775d9ae&amp;#45;&amp;#45;02ba1744d404426fa907db5490f475c7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20255.87,-390C20258.6,-390 20344.65,-390 20347.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 06ad1a492d0a49b2900d00cd5ab6cc96 --&gt;\n&lt;g id=\"node659\" class=\"node\"&gt;\n&lt;title&gt;06ad1a492d0a49b2900d00cd5ab6cc96&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20442.72,-390.72 20441.28,-390.72 20441.28,-389.28 20442.72,-389.28 20442.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 02ba1744d404426fa907db5490f475c7&amp;#45;&amp;#45;06ad1a492d0a49b2900d00cd5ab6cc96 --&gt;\n&lt;g id=\"edge656\" class=\"edge\"&gt;\n&lt;title&gt;02ba1744d404426fa907db5490f475c7&amp;#45;&amp;#45;06ad1a492d0a49b2900d00cd5ab6cc96&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20349.47,-390C20352.2,-390 20438.25,-390 20440.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- b538afeb8d084965ae4de79d45b61252 --&gt;\n&lt;g id=\"node660\" class=\"node\"&gt;\n&lt;title&gt;b538afeb8d084965ae4de79d45b61252&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20595.12,-390.72 20593.68,-390.72 20593.68,-389.28 20595.12,-389.28 20595.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 06ad1a492d0a49b2900d00cd5ab6cc96&amp;#45;&amp;#45;b538afeb8d084965ae4de79d45b61252 --&gt;\n&lt;g id=\"edge657\" class=\"edge\"&gt;\n&lt;title&gt;06ad1a492d0a49b2900d00cd5ab6cc96&amp;#45;&amp;#45;b538afeb8d084965ae4de79d45b61252&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20443.11,-390C20447.59,-390 20588.88,-390 20593.29,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b1a6c5829834da2b1859594f9538b7d --&gt;\n&lt;g id=\"node661\" class=\"node\"&gt;\n&lt;title&gt;6b1a6c5829834da2b1859594f9538b7d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20747.52,-390.72 20746.08,-390.72 20746.08,-389.28 20747.52,-389.28 20747.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b538afeb8d084965ae4de79d45b61252&amp;#45;&amp;#45;6b1a6c5829834da2b1859594f9538b7d --&gt;\n&lt;g id=\"edge658\" class=\"edge\"&gt;\n&lt;title&gt;b538afeb8d084965ae4de79d45b61252&amp;#45;&amp;#45;6b1a6c5829834da2b1859594f9538b7d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20595.51,-390C20599.99,-390 20741.28,-390 20745.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2867455a34804c48802802c86b41d9fe --&gt;\n&lt;g id=\"node662\" class=\"node\"&gt;\n&lt;title&gt;2867455a34804c48802802c86b41d9fe&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20841.12,-390.72 20839.68,-390.72 20839.68,-389.28 20841.12,-389.28 20841.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b1a6c5829834da2b1859594f9538b7d&amp;#45;&amp;#45;2867455a34804c48802802c86b41d9fe --&gt;\n&lt;g id=\"edge659\" class=\"edge\"&gt;\n&lt;title&gt;6b1a6c5829834da2b1859594f9538b7d&amp;#45;&amp;#45;2867455a34804c48802802c86b41d9fe&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20747.87,-390C20750.6,-390 20836.65,-390 20839.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 497ceae22b52466e83d4aaef3765b5dd --&gt;\n&lt;g id=\"node663\" class=\"node\"&gt;\n&lt;title&gt;497ceae22b52466e83d4aaef3765b5dd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20934.72,-390.72 20933.28,-390.72 20933.28,-389.28 20934.72,-389.28 20934.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2867455a34804c48802802c86b41d9fe&amp;#45;&amp;#45;497ceae22b52466e83d4aaef3765b5dd --&gt;\n&lt;g id=\"edge660\" class=\"edge\"&gt;\n&lt;title&gt;2867455a34804c48802802c86b41d9fe&amp;#45;&amp;#45;497ceae22b52466e83d4aaef3765b5dd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20841.47,-390C20844.2,-390 20930.25,-390 20932.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 09c06e3ab1014c92bd5db71f659592c2 --&gt;\n&lt;g id=\"node664\" class=\"node\"&gt;\n&lt;title&gt;09c06e3ab1014c92bd5db71f659592c2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21028.32,-390.72 21026.88,-390.72 21026.88,-389.28 21028.32,-389.28 21028.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 497ceae22b52466e83d4aaef3765b5dd&amp;#45;&amp;#45;09c06e3ab1014c92bd5db71f659592c2 --&gt;\n&lt;g id=\"edge661\" class=\"edge\"&gt;\n&lt;title&gt;497ceae22b52466e83d4aaef3765b5dd&amp;#45;&amp;#45;09c06e3ab1014c92bd5db71f659592c2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20935.07,-390C20937.8,-390 21023.85,-390 21026.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 20f000cd379044a491f44a0ff5a1c2e6 --&gt;\n&lt;g id=\"node665\" class=\"node\"&gt;\n&lt;title&gt;20f000cd379044a491f44a0ff5a1c2e6&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"21121.2\" cy=\"-390\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 09c06e3ab1014c92bd5db71f659592c2&amp;#45;&amp;#45;20f000cd379044a491f44a0ff5a1c2e6 --&gt;\n&lt;g id=\"edge662\" class=\"edge\"&gt;\n&lt;title&gt;09c06e3ab1014c92bd5db71f659592c2&amp;#45;&amp;#45;20f000cd379044a491f44a0ff5a1c2e6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21028.67,-390C21030.97,-390 21092.81,-390 21113.52,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 57933790454d474e9ffb5a6caa72b275 --&gt;\n&lt;g id=\"node666\" class=\"node\"&gt;\n&lt;title&gt;57933790454d474e9ffb5a6caa72b275&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21215.52,-390.72 21214.08,-390.72 21214.08,-389.28 21215.52,-389.28 21215.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 20f000cd379044a491f44a0ff5a1c2e6&amp;#45;&amp;#45;57933790454d474e9ffb5a6caa72b275 --&gt;\n&lt;g id=\"edge663\" class=\"edge\"&gt;\n&lt;title&gt;20f000cd379044a491f44a0ff5a1c2e6&amp;#45;&amp;#45;57933790454d474e9ffb5a6caa72b275&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21128.79,-390C21149.13,-390 21209.84,-390 21213.62,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 15f67352fbe14793b407246e92e60823 --&gt;\n&lt;g id=\"node667\" class=\"node\"&gt;\n&lt;title&gt;15f67352fbe14793b407246e92e60823&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21309.12,-390.72 21307.68,-390.72 21307.68,-389.28 21309.12,-389.28 21309.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 57933790454d474e9ffb5a6caa72b275&amp;#45;&amp;#45;15f67352fbe14793b407246e92e60823 --&gt;\n&lt;g id=\"edge664\" class=\"edge\"&gt;\n&lt;title&gt;57933790454d474e9ffb5a6caa72b275&amp;#45;&amp;#45;15f67352fbe14793b407246e92e60823&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21215.87,-390C21218.6,-390 21304.65,-390 21307.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9d029eba840a4e64884f1b36ae5b0164 --&gt;\n&lt;g id=\"node668\" class=\"node\"&gt;\n&lt;title&gt;9d029eba840a4e64884f1b36ae5b0164&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21461.52,-390.72 21460.08,-390.72 21460.08,-389.28 21461.52,-389.28 21461.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 15f67352fbe14793b407246e92e60823&amp;#45;&amp;#45;9d029eba840a4e64884f1b36ae5b0164 --&gt;\n&lt;g id=\"edge665\" class=\"edge\"&gt;\n&lt;title&gt;15f67352fbe14793b407246e92e60823&amp;#45;&amp;#45;9d029eba840a4e64884f1b36ae5b0164&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21309.51,-390C21313.99,-390 21455.28,-390 21459.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a6bd9a527df406d876392e369d2d2f9 --&gt;\n&lt;g id=\"node669\" class=\"node\"&gt;\n&lt;title&gt;9a6bd9a527df406d876392e369d2d2f9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21613.92,-390.72 21612.48,-390.72 21612.48,-389.28 21613.92,-389.28 21613.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9d029eba840a4e64884f1b36ae5b0164&amp;#45;&amp;#45;9a6bd9a527df406d876392e369d2d2f9 --&gt;\n&lt;g id=\"edge666\" class=\"edge\"&gt;\n&lt;title&gt;9d029eba840a4e64884f1b36ae5b0164&amp;#45;&amp;#45;9a6bd9a527df406d876392e369d2d2f9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21461.91,-390C21466.39,-390 21607.68,-390 21612.09,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- e85539997ab043b786a04d211c23020b --&gt;\n&lt;g id=\"node670\" class=\"node\"&gt;\n&lt;title&gt;e85539997ab043b786a04d211c23020b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21707.52,-390.72 21706.08,-390.72 21706.08,-389.28 21707.52,-389.28 21707.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a6bd9a527df406d876392e369d2d2f9&amp;#45;&amp;#45;e85539997ab043b786a04d211c23020b --&gt;\n&lt;g id=\"edge667\" class=\"edge\"&gt;\n&lt;title&gt;9a6bd9a527df406d876392e369d2d2f9&amp;#45;&amp;#45;e85539997ab043b786a04d211c23020b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21614.27,-390C21617,-390 21703.05,-390 21705.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- fae8c28210824f7baee549e7c0fedfb7 --&gt;\n&lt;g id=\"node671\" class=\"node\"&gt;\n&lt;title&gt;fae8c28210824f7baee549e7c0fedfb7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21801.12,-390.72 21799.68,-390.72 21799.68,-389.28 21801.12,-389.28 21801.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e85539997ab043b786a04d211c23020b&amp;#45;&amp;#45;fae8c28210824f7baee549e7c0fedfb7 --&gt;\n&lt;g id=\"edge668\" class=\"edge\"&gt;\n&lt;title&gt;e85539997ab043b786a04d211c23020b&amp;#45;&amp;#45;fae8c28210824f7baee549e7c0fedfb7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21707.87,-390C21710.6,-390 21796.65,-390 21799.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- b850831157374fe3af3aa135a77a7ef7 --&gt;\n&lt;g id=\"node672\" class=\"node\"&gt;\n&lt;title&gt;b850831157374fe3af3aa135a77a7ef7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21894.72,-390.72 21893.28,-390.72 21893.28,-389.28 21894.72,-389.28 21894.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fae8c28210824f7baee549e7c0fedfb7&amp;#45;&amp;#45;b850831157374fe3af3aa135a77a7ef7 --&gt;\n&lt;g id=\"edge669\" class=\"edge\"&gt;\n&lt;title&gt;fae8c28210824f7baee549e7c0fedfb7&amp;#45;&amp;#45;b850831157374fe3af3aa135a77a7ef7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21801.47,-390C21804.2,-390 21890.25,-390 21892.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- b355e763214d48c28501cf6214420c15 --&gt;\n&lt;g id=\"node673\" class=\"node\"&gt;\n&lt;title&gt;b355e763214d48c28501cf6214420c15&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21988.32,-390.72 21986.88,-390.72 21986.88,-389.28 21988.32,-389.28 21988.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b850831157374fe3af3aa135a77a7ef7&amp;#45;&amp;#45;b355e763214d48c28501cf6214420c15 --&gt;\n&lt;g id=\"edge670\" class=\"edge\"&gt;\n&lt;title&gt;b850831157374fe3af3aa135a77a7ef7&amp;#45;&amp;#45;b355e763214d48c28501cf6214420c15&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21895.07,-390C21897.8,-390 21983.85,-390 21986.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 95708563975d4374b6cfc4ae6c04f6ca --&gt;\n&lt;g id=\"node674\" class=\"node\"&gt;\n&lt;title&gt;95708563975d4374b6cfc4ae6c04f6ca&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22140.72,-390.72 22139.28,-390.72 22139.28,-389.28 22140.72,-389.28 22140.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b355e763214d48c28501cf6214420c15&amp;#45;&amp;#45;95708563975d4374b6cfc4ae6c04f6ca --&gt;\n&lt;g id=\"edge671\" class=\"edge\"&gt;\n&lt;title&gt;b355e763214d48c28501cf6214420c15&amp;#45;&amp;#45;95708563975d4374b6cfc4ae6c04f6ca&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21988.71,-390C21993.19,-390 22134.48,-390 22138.89,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- ed59afe30e1d4d6eaae393ecf9001db5 --&gt;\n&lt;g id=\"node675\" class=\"node\"&gt;\n&lt;title&gt;ed59afe30e1d4d6eaae393ecf9001db5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22293.12,-390.72 22291.68,-390.72 22291.68,-389.28 22293.12,-389.28 22293.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 95708563975d4374b6cfc4ae6c04f6ca&amp;#45;&amp;#45;ed59afe30e1d4d6eaae393ecf9001db5 --&gt;\n&lt;g id=\"edge672\" class=\"edge\"&gt;\n&lt;title&gt;95708563975d4374b6cfc4ae6c04f6ca&amp;#45;&amp;#45;ed59afe30e1d4d6eaae393ecf9001db5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22141.11,-390C22145.59,-390 22286.88,-390 22291.29,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- f554424680334e34aea5d596c93610df --&gt;\n&lt;g id=\"node676\" class=\"node\"&gt;\n&lt;title&gt;f554424680334e34aea5d596c93610df&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22386.72,-390.72 22385.28,-390.72 22385.28,-389.28 22386.72,-389.28 22386.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ed59afe30e1d4d6eaae393ecf9001db5&amp;#45;&amp;#45;f554424680334e34aea5d596c93610df --&gt;\n&lt;g id=\"edge673\" class=\"edge\"&gt;\n&lt;title&gt;ed59afe30e1d4d6eaae393ecf9001db5&amp;#45;&amp;#45;f554424680334e34aea5d596c93610df&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22293.47,-390C22296.2,-390 22382.25,-390 22384.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- ed3f62e528d54b27a66606e11a2d7cf2 --&gt;\n&lt;g id=\"node677\" class=\"node\"&gt;\n&lt;title&gt;ed3f62e528d54b27a66606e11a2d7cf2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22480.32,-390.72 22478.88,-390.72 22478.88,-389.28 22480.32,-389.28 22480.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f554424680334e34aea5d596c93610df&amp;#45;&amp;#45;ed3f62e528d54b27a66606e11a2d7cf2 --&gt;\n&lt;g id=\"edge674\" class=\"edge\"&gt;\n&lt;title&gt;f554424680334e34aea5d596c93610df&amp;#45;&amp;#45;ed3f62e528d54b27a66606e11a2d7cf2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22387.07,-390C22389.8,-390 22475.85,-390 22478.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- eb7bd8282fa7428cb9fd8c4d2313ba4f --&gt;\n&lt;g id=\"node678\" class=\"node\"&gt;\n&lt;title&gt;eb7bd8282fa7428cb9fd8c4d2313ba4f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22573.92,-390.72 22572.48,-390.72 22572.48,-389.28 22573.92,-389.28 22573.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ed3f62e528d54b27a66606e11a2d7cf2&amp;#45;&amp;#45;eb7bd8282fa7428cb9fd8c4d2313ba4f --&gt;\n&lt;g id=\"edge675\" class=\"edge\"&gt;\n&lt;title&gt;ed3f62e528d54b27a66606e11a2d7cf2&amp;#45;&amp;#45;eb7bd8282fa7428cb9fd8c4d2313ba4f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22480.67,-390C22483.4,-390 22569.45,-390 22572.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 112ab269d592445abd7c290e23fbbf6d --&gt;\n&lt;g id=\"node679\" class=\"node\"&gt;\n&lt;title&gt;112ab269d592445abd7c290e23fbbf6d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22667.52,-390.72 22666.08,-390.72 22666.08,-389.28 22667.52,-389.28 22667.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- eb7bd8282fa7428cb9fd8c4d2313ba4f&amp;#45;&amp;#45;112ab269d592445abd7c290e23fbbf6d --&gt;\n&lt;g id=\"edge676\" class=\"edge\"&gt;\n&lt;title&gt;eb7bd8282fa7428cb9fd8c4d2313ba4f&amp;#45;&amp;#45;112ab269d592445abd7c290e23fbbf6d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22574.27,-390C22577,-390 22663.05,-390 22665.74,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9f6bea15150c4918b4a8254c607ea9ea --&gt;\n&lt;g id=\"node680\" class=\"node\"&gt;\n&lt;title&gt;9f6bea15150c4918b4a8254c607ea9ea&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22761.12,-390.72 22759.68,-390.72 22759.68,-389.28 22761.12,-389.28 22761.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 112ab269d592445abd7c290e23fbbf6d&amp;#45;&amp;#45;9f6bea15150c4918b4a8254c607ea9ea --&gt;\n&lt;g id=\"edge677\" class=\"edge\"&gt;\n&lt;title&gt;112ab269d592445abd7c290e23fbbf6d&amp;#45;&amp;#45;9f6bea15150c4918b4a8254c607ea9ea&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22667.87,-390C22670.6,-390 22756.65,-390 22759.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d118cde87d54b1c86151ed03910ffb5 --&gt;\n&lt;g id=\"node681\" class=\"node\"&gt;\n&lt;title&gt;0d118cde87d54b1c86151ed03910ffb5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22854.72,-390.72 22853.28,-390.72 22853.28,-389.28 22854.72,-389.28 22854.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9f6bea15150c4918b4a8254c607ea9ea&amp;#45;&amp;#45;0d118cde87d54b1c86151ed03910ffb5 --&gt;\n&lt;g id=\"edge678\" class=\"edge\"&gt;\n&lt;title&gt;9f6bea15150c4918b4a8254c607ea9ea&amp;#45;&amp;#45;0d118cde87d54b1c86151ed03910ffb5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22761.47,-390C22764.2,-390 22850.25,-390 22852.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 861cf63ebe974b108a89b6e45ad47787 --&gt;\n&lt;g id=\"node682\" class=\"node\"&gt;\n&lt;title&gt;861cf63ebe974b108a89b6e45ad47787&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23007.12,-390.72 23005.68,-390.72 23005.68,-389.28 23007.12,-389.28 23007.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d118cde87d54b1c86151ed03910ffb5&amp;#45;&amp;#45;861cf63ebe974b108a89b6e45ad47787 --&gt;\n&lt;g id=\"edge679\" class=\"edge\"&gt;\n&lt;title&gt;0d118cde87d54b1c86151ed03910ffb5&amp;#45;&amp;#45;861cf63ebe974b108a89b6e45ad47787&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22855.11,-390C22859.59,-390 23000.88,-390 23005.29,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- d341847f92f5463bb96c3052152a84f0 --&gt;\n&lt;g id=\"node683\" class=\"node\"&gt;\n&lt;title&gt;d341847f92f5463bb96c3052152a84f0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23159.52,-390.72 23158.08,-390.72 23158.08,-389.28 23159.52,-389.28 23159.52,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 861cf63ebe974b108a89b6e45ad47787&amp;#45;&amp;#45;d341847f92f5463bb96c3052152a84f0 --&gt;\n&lt;g id=\"edge680\" class=\"edge\"&gt;\n&lt;title&gt;861cf63ebe974b108a89b6e45ad47787&amp;#45;&amp;#45;d341847f92f5463bb96c3052152a84f0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23007.51,-390C23011.99,-390 23153.28,-390 23157.69,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3d5a6a109d854a57945119c657e56cc9 --&gt;\n&lt;g id=\"node684\" class=\"node\"&gt;\n&lt;title&gt;3d5a6a109d854a57945119c657e56cc9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23253.12,-390.72 23251.68,-390.72 23251.68,-389.28 23253.12,-389.28 23253.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d341847f92f5463bb96c3052152a84f0&amp;#45;&amp;#45;3d5a6a109d854a57945119c657e56cc9 --&gt;\n&lt;g id=\"edge681\" class=\"edge\"&gt;\n&lt;title&gt;d341847f92f5463bb96c3052152a84f0&amp;#45;&amp;#45;3d5a6a109d854a57945119c657e56cc9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23159.87,-390C23162.6,-390 23248.65,-390 23251.34,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6fc73bd06d0d464987d91bafa166aa91 --&gt;\n&lt;g id=\"node685\" class=\"node\"&gt;\n&lt;title&gt;6fc73bd06d0d464987d91bafa166aa91&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23346.72,-390.72 23345.28,-390.72 23345.28,-389.28 23346.72,-389.28 23346.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3d5a6a109d854a57945119c657e56cc9&amp;#45;&amp;#45;6fc73bd06d0d464987d91bafa166aa91 --&gt;\n&lt;g id=\"edge682\" class=\"edge\"&gt;\n&lt;title&gt;3d5a6a109d854a57945119c657e56cc9&amp;#45;&amp;#45;6fc73bd06d0d464987d91bafa166aa91&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23253.47,-390C23256.2,-390 23342.25,-390 23344.94,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 636798adc781402780d79956c618294a --&gt;\n&lt;g id=\"node686\" class=\"node\"&gt;\n&lt;title&gt;636798adc781402780d79956c618294a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23440.32,-390.72 23438.88,-390.72 23438.88,-389.28 23440.32,-389.28 23440.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6fc73bd06d0d464987d91bafa166aa91&amp;#45;&amp;#45;636798adc781402780d79956c618294a --&gt;\n&lt;g id=\"edge683\" class=\"edge\"&gt;\n&lt;title&gt;6fc73bd06d0d464987d91bafa166aa91&amp;#45;&amp;#45;636798adc781402780d79956c618294a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23347.07,-390C23349.8,-390 23435.85,-390 23438.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7f2d33f050a64c48b20a503381820ad6 --&gt;\n&lt;g id=\"node687\" class=\"node\"&gt;\n&lt;title&gt;7f2d33f050a64c48b20a503381820ad6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23533.92,-390.72 23532.48,-390.72 23532.48,-389.28 23533.92,-389.28 23533.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 636798adc781402780d79956c618294a&amp;#45;&amp;#45;7f2d33f050a64c48b20a503381820ad6 --&gt;\n&lt;g id=\"edge684\" class=\"edge\"&gt;\n&lt;title&gt;636798adc781402780d79956c618294a&amp;#45;&amp;#45;7f2d33f050a64c48b20a503381820ad6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23440.67,-390C23443.4,-390 23529.45,-390 23532.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 30612cd4ea13462fa2f1433a2e9e9841 --&gt;\n&lt;g id=\"node688\" class=\"node\"&gt;\n&lt;title&gt;30612cd4ea13462fa2f1433a2e9e9841&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23686.32,-390.72 23684.88,-390.72 23684.88,-389.28 23686.32,-389.28 23686.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7f2d33f050a64c48b20a503381820ad6&amp;#45;&amp;#45;30612cd4ea13462fa2f1433a2e9e9841 --&gt;\n&lt;g id=\"edge685\" class=\"edge\"&gt;\n&lt;title&gt;7f2d33f050a64c48b20a503381820ad6&amp;#45;&amp;#45;30612cd4ea13462fa2f1433a2e9e9841&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23534.31,-390C23538.79,-390 23680.08,-390 23684.49,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 08d692aeeb404772ac97d2a11d567332 --&gt;\n&lt;g id=\"node689\" class=\"node\"&gt;\n&lt;title&gt;08d692aeeb404772ac97d2a11d567332&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23838.72,-390.72 23837.28,-390.72 23837.28,-389.28 23838.72,-389.28 23838.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 30612cd4ea13462fa2f1433a2e9e9841&amp;#45;&amp;#45;08d692aeeb404772ac97d2a11d567332 --&gt;\n&lt;g id=\"edge686\" class=\"edge\"&gt;\n&lt;title&gt;30612cd4ea13462fa2f1433a2e9e9841&amp;#45;&amp;#45;08d692aeeb404772ac97d2a11d567332&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23686.71,-390C23691.19,-390 23832.48,-390 23836.89,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 984ee8bbb6034749ab442f57d21c8eb1 --&gt;\n&lt;g id=\"node690\" class=\"node\"&gt;\n&lt;title&gt;984ee8bbb6034749ab442f57d21c8eb1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23932.32,-390.72 23930.88,-390.72 23930.88,-389.28 23932.32,-389.28 23932.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 08d692aeeb404772ac97d2a11d567332&amp;#45;&amp;#45;984ee8bbb6034749ab442f57d21c8eb1 --&gt;\n&lt;g id=\"edge687\" class=\"edge\"&gt;\n&lt;title&gt;08d692aeeb404772ac97d2a11d567332&amp;#45;&amp;#45;984ee8bbb6034749ab442f57d21c8eb1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23839.07,-390C23841.8,-390 23927.85,-390 23930.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 43c9f4d1b63e4859a150ba9a77fc808f --&gt;\n&lt;g id=\"node691\" class=\"node\"&gt;\n&lt;title&gt;43c9f4d1b63e4859a150ba9a77fc808f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24025.92,-390.72 24024.48,-390.72 24024.48,-389.28 24025.92,-389.28 24025.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 984ee8bbb6034749ab442f57d21c8eb1&amp;#45;&amp;#45;43c9f4d1b63e4859a150ba9a77fc808f --&gt;\n&lt;g id=\"edge688\" class=\"edge\"&gt;\n&lt;title&gt;984ee8bbb6034749ab442f57d21c8eb1&amp;#45;&amp;#45;43c9f4d1b63e4859a150ba9a77fc808f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23932.67,-390C23935.4,-390 24021.45,-390 24024.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 800012a2b15b491ebcf82af5f6dfd68f --&gt;\n&lt;g id=\"node692\" class=\"node\"&gt;\n&lt;title&gt;800012a2b15b491ebcf82af5f6dfd68f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24178.32,-390.72 24176.88,-390.72 24176.88,-389.28 24178.32,-389.28 24178.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 43c9f4d1b63e4859a150ba9a77fc808f&amp;#45;&amp;#45;800012a2b15b491ebcf82af5f6dfd68f --&gt;\n&lt;g id=\"edge689\" class=\"edge\"&gt;\n&lt;title&gt;43c9f4d1b63e4859a150ba9a77fc808f&amp;#45;&amp;#45;800012a2b15b491ebcf82af5f6dfd68f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24026.31,-390C24030.79,-390 24172.08,-390 24176.49,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 83f96e7941d94ba2aa7a164b30216f58 --&gt;\n&lt;g id=\"node693\" class=\"node\"&gt;\n&lt;title&gt;83f96e7941d94ba2aa7a164b30216f58&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24330.72,-390.72 24329.28,-390.72 24329.28,-389.28 24330.72,-389.28 24330.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 800012a2b15b491ebcf82af5f6dfd68f&amp;#45;&amp;#45;83f96e7941d94ba2aa7a164b30216f58 --&gt;\n&lt;g id=\"edge690\" class=\"edge\"&gt;\n&lt;title&gt;800012a2b15b491ebcf82af5f6dfd68f&amp;#45;&amp;#45;83f96e7941d94ba2aa7a164b30216f58&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24178.71,-390C24183.19,-390 24324.48,-390 24328.89,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- b29bb2e651a5429da7681496aecbf4a3 --&gt;\n&lt;g id=\"node694\" class=\"node\"&gt;\n&lt;title&gt;b29bb2e651a5429da7681496aecbf4a3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24424.32,-390.72 24422.88,-390.72 24422.88,-389.28 24424.32,-389.28 24424.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 83f96e7941d94ba2aa7a164b30216f58&amp;#45;&amp;#45;b29bb2e651a5429da7681496aecbf4a3 --&gt;\n&lt;g id=\"edge691\" class=\"edge\"&gt;\n&lt;title&gt;83f96e7941d94ba2aa7a164b30216f58&amp;#45;&amp;#45;b29bb2e651a5429da7681496aecbf4a3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24331.07,-390C24333.8,-390 24419.85,-390 24422.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- a270f0fe71804b7da2ffee50eeeab7b1 --&gt;\n&lt;g id=\"node695\" class=\"node\"&gt;\n&lt;title&gt;a270f0fe71804b7da2ffee50eeeab7b1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24517.92,-390.72 24516.48,-390.72 24516.48,-389.28 24517.92,-389.28 24517.92,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b29bb2e651a5429da7681496aecbf4a3&amp;#45;&amp;#45;a270f0fe71804b7da2ffee50eeeab7b1 --&gt;\n&lt;g id=\"edge692\" class=\"edge\"&gt;\n&lt;title&gt;b29bb2e651a5429da7681496aecbf4a3&amp;#45;&amp;#45;a270f0fe71804b7da2ffee50eeeab7b1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24424.67,-390C24427.4,-390 24513.45,-390 24516.14,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4ec0420439aa4f04b26ade92cedfc609 --&gt;\n&lt;g id=\"node696\" class=\"node\"&gt;\n&lt;title&gt;4ec0420439aa4f04b26ade92cedfc609&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24670.32,-390.72 24668.88,-390.72 24668.88,-389.28 24670.32,-389.28 24670.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a270f0fe71804b7da2ffee50eeeab7b1&amp;#45;&amp;#45;4ec0420439aa4f04b26ade92cedfc609 --&gt;\n&lt;g id=\"edge693\" class=\"edge\"&gt;\n&lt;title&gt;a270f0fe71804b7da2ffee50eeeab7b1&amp;#45;&amp;#45;4ec0420439aa4f04b26ade92cedfc609&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24518.31,-390C24522.79,-390 24664.08,-390 24668.49,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 971dd5c814be4522b34aaec8fa49b391 --&gt;\n&lt;g id=\"node697\" class=\"node\"&gt;\n&lt;title&gt;971dd5c814be4522b34aaec8fa49b391&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24822.72,-390.72 24821.28,-390.72 24821.28,-389.28 24822.72,-389.28 24822.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4ec0420439aa4f04b26ade92cedfc609&amp;#45;&amp;#45;971dd5c814be4522b34aaec8fa49b391 --&gt;\n&lt;g id=\"edge694\" class=\"edge\"&gt;\n&lt;title&gt;4ec0420439aa4f04b26ade92cedfc609&amp;#45;&amp;#45;971dd5c814be4522b34aaec8fa49b391&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24670.71,-390C24675.19,-390 24816.48,-390 24820.89,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3851351d61bd4eb2bcc44bc2b58c6458 --&gt;\n&lt;g id=\"node698\" class=\"node\"&gt;\n&lt;title&gt;3851351d61bd4eb2bcc44bc2b58c6458&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24916.32,-390.72 24914.88,-390.72 24914.88,-389.28 24916.32,-389.28 24916.32,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 971dd5c814be4522b34aaec8fa49b391&amp;#45;&amp;#45;3851351d61bd4eb2bcc44bc2b58c6458 --&gt;\n&lt;g id=\"edge695\" class=\"edge\"&gt;\n&lt;title&gt;971dd5c814be4522b34aaec8fa49b391&amp;#45;&amp;#45;3851351d61bd4eb2bcc44bc2b58c6458&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24823.07,-390C24825.8,-390 24911.85,-390 24914.54,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 508c6d6f410d4114933cb490bc2b5777 --&gt;\n&lt;g id=\"node699\" class=\"node\"&gt;\n&lt;title&gt;508c6d6f410d4114933cb490bc2b5777&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25068.72,-390.72 25067.28,-390.72 25067.28,-389.28 25068.72,-389.28 25068.72,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3851351d61bd4eb2bcc44bc2b58c6458&amp;#45;&amp;#45;508c6d6f410d4114933cb490bc2b5777 --&gt;\n&lt;g id=\"edge696\" class=\"edge\"&gt;\n&lt;title&gt;3851351d61bd4eb2bcc44bc2b58c6458&amp;#45;&amp;#45;508c6d6f410d4114933cb490bc2b5777&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24916.71,-390C24921.19,-390 25062.48,-390 25066.89,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- b2fae6dff70b46758e6ec6296f521139 --&gt;\n&lt;g id=\"node700\" class=\"node\"&gt;\n&lt;title&gt;b2fae6dff70b46758e6ec6296f521139&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25221.12,-390.72 25219.68,-390.72 25219.68,-389.28 25221.12,-389.28 25221.12,-390.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 508c6d6f410d4114933cb490bc2b5777&amp;#45;&amp;#45;b2fae6dff70b46758e6ec6296f521139 --&gt;\n&lt;g id=\"edge697\" class=\"edge\"&gt;\n&lt;title&gt;508c6d6f410d4114933cb490bc2b5777&amp;#45;&amp;#45;b2fae6dff70b46758e6ec6296f521139&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25069.11,-390C25073.59,-390 25214.88,-390 25219.29,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- ba044a25241748c1b1219a8a08b4b8d7 --&gt;\n&lt;g id=\"node701\" class=\"node\"&gt;\n&lt;title&gt;ba044a25241748c1b1219a8a08b4b8d7&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M25400.4,-418.8C25400.4,-418.8 25297.2,-418.8 25297.2,-418.8 25291.2,-418.8 25285.2,-412.8 25285.2,-406.8 25285.2,-406.8 25285.2,-373.2 25285.2,-373.2 25285.2,-367.2 25291.2,-361.2 25297.2,-361.2 25297.2,-361.2 25400.4,-361.2 25400.4,-361.2 25406.4,-361.2 25412.4,-367.2 25412.4,-373.2 25412.4,-373.2 25412.4,-406.8 25412.4,-406.8 25412.4,-412.8 25406.4,-418.8 25400.4,-418.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"25348.8\" y=\"-384.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b12)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- b2fae6dff70b46758e6ec6296f521139&amp;#45;&amp;#45;ba044a25241748c1b1219a8a08b4b8d7 --&gt;\n&lt;g id=\"edge698\" class=\"edge\"&gt;\n&lt;title&gt;b2fae6dff70b46758e6ec6296f521139&amp;#45;&amp;#45;ba044a25241748c1b1219a8a08b4b8d7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25221.49,-390C25223.37,-390 25253.76,-390 25284.26,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- ba044a25241748c1b1219a8a08b4b8d7&amp;#45;&amp;#45;8c6d3db2b72342b3bfad2f288b9d8ec9 --&gt;\n&lt;g id=\"edge699\" class=\"edge\"&gt;\n&lt;title&gt;ba044a25241748c1b1219a8a08b4b8d7&amp;#45;&amp;#45;8c6d3db2b72342b3bfad2f288b9d8ec9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25413.2,-390C25425.7,-390 25438.15,-390 25448.52,-390\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8e09b4792690426f9baeeb9b749cd6c6 --&gt;\n&lt;g id=\"node936\" class=\"node\"&gt;\n&lt;title&gt;8e09b4792690426f9baeeb9b749cd6c6&lt;/title&gt;\n&lt;/g&gt;\n&lt;!-- 8c6d3db2b72342b3bfad2f288b9d8ec9&amp;#45;&amp;#45;8e09b4792690426f9baeeb9b749cd6c6 --&gt;\n&lt;!-- 8750f98800b6445198f2a798703b3854 --&gt;\n&lt;g id=\"node704\" class=\"node\"&gt;\n&lt;title&gt;8750f98800b6445198f2a798703b3854&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"119.52,-321.72 118.08,-321.72 118.08,-320.28 119.52,-320.28 119.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5daa7e9fc8994ecab48576e10117f107&amp;#45;&amp;#45;8750f98800b6445198f2a798703b3854 --&gt;\n&lt;g id=\"edge700\" class=\"edge\"&gt;\n&lt;title&gt;5daa7e9fc8994ecab48576e10117f107&amp;#45;&amp;#45;8750f98800b6445198f2a798703b3854&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M53.97,-321C79.67,-321 115.48,-321 117.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8ce2caad17e74cb6834f557f0477582a --&gt;\n&lt;g id=\"node937\" class=\"node\"&gt;\n&lt;title&gt;8ce2caad17e74cb6834f557f0477582a&lt;/title&gt;\n&lt;text text-anchor=\"middle\" x=\"27\" y=\"-247.88\" font-family=\"JetBrains Mono\" font-size=\"15.00\"&gt;4&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5daa7e9fc8994ecab48576e10117f107&amp;#45;&amp;#45;8ce2caad17e74cb6834f557f0477582a --&gt;\n&lt;!-- 9fbb87a0d3974f7f95dfe80c57c3d49b --&gt;\n&lt;g id=\"node705\" class=\"node\"&gt;\n&lt;title&gt;9fbb87a0d3974f7f95dfe80c57c3d49b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"213.12,-321.72 211.68,-321.72 211.68,-320.28 213.12,-320.28 213.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8750f98800b6445198f2a798703b3854&amp;#45;&amp;#45;9fbb87a0d3974f7f95dfe80c57c3d49b --&gt;\n&lt;g id=\"edge701\" class=\"edge\"&gt;\n&lt;title&gt;8750f98800b6445198f2a798703b3854&amp;#45;&amp;#45;9fbb87a0d3974f7f95dfe80c57c3d49b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M119.87,-321C122.6,-321 208.65,-321 211.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 60de300122b24b79bfdfc46f4faa8732 --&gt;\n&lt;g id=\"node706\" class=\"node\"&gt;\n&lt;title&gt;60de300122b24b79bfdfc46f4faa8732&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M322.8,-349.8C322.8,-349.8 289.2,-349.8 289.2,-349.8 283.2,-349.8 277.2,-343.8 277.2,-337.8 277.2,-337.8 277.2,-304.2 277.2,-304.2 277.2,-298.2 283.2,-292.2 289.2,-292.2 289.2,-292.2 322.8,-292.2 322.8,-292.2 328.8,-292.2 334.8,-298.2 334.8,-304.2 334.8,-304.2 334.8,-337.8 334.8,-337.8 334.8,-343.8 328.8,-349.8 322.8,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"306\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 9fbb87a0d3974f7f95dfe80c57c3d49b&amp;#45;&amp;#45;60de300122b24b79bfdfc46f4faa8732 --&gt;\n&lt;g id=\"edge702\" class=\"edge\"&gt;\n&lt;title&gt;9fbb87a0d3974f7f95dfe80c57c3d49b&amp;#45;&amp;#45;60de300122b24b79bfdfc46f4faa8732&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M213.47,-321C215.19,-321 250.08,-321 276.28,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 60de300122b24b79bfdfc46f4faa8732&amp;#45;&amp;#45;174e34ce2ffb45a4adb99a5ed9097617 --&gt;\n&lt;g id=\"edge1901\" class=\"edge\"&gt;\n&lt;title&gt;60de300122b24b79bfdfc46f4faa8732&amp;#45;&amp;#45;174e34ce2ffb45a4adb99a5ed9097617&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M306,-350.65C306,-361.2 306,-371.76 306,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 20df36d88005401b831a045e527d77ac --&gt;\n&lt;g id=\"node707\" class=\"node\"&gt;\n&lt;title&gt;20df36d88005401b831a045e527d77ac&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"399.6\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 60de300122b24b79bfdfc46f4faa8732&amp;#45;&amp;#45;20df36d88005401b831a045e527d77ac --&gt;\n&lt;g id=\"edge703\" class=\"edge\"&gt;\n&lt;title&gt;60de300122b24b79bfdfc46f4faa8732&amp;#45;&amp;#45;20df36d88005401b831a045e527d77ac&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M335.48,-321C355.44,-321 380.54,-321 392.16,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a5634b5d5eb441c188b628dd7ddbcab3 --&gt;\n&lt;g id=\"node708\" class=\"node\"&gt;\n&lt;title&gt;a5634b5d5eb441c188b628dd7ddbcab3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"493.92,-321.72 492.48,-321.72 492.48,-320.28 493.92,-320.28 493.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 20df36d88005401b831a045e527d77ac&amp;#45;&amp;#45;a5634b5d5eb441c188b628dd7ddbcab3 --&gt;\n&lt;g id=\"edge704\" class=\"edge\"&gt;\n&lt;title&gt;20df36d88005401b831a045e527d77ac&amp;#45;&amp;#45;a5634b5d5eb441c188b628dd7ddbcab3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M407.19,-321C427.53,-321 488.24,-321 492.02,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3638919a63034df39868362f575e5e4a --&gt;\n&lt;g id=\"node709\" class=\"node\"&gt;\n&lt;title&gt;3638919a63034df39868362f575e5e4a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"587.52,-321.72 586.08,-321.72 586.08,-320.28 587.52,-320.28 587.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a5634b5d5eb441c188b628dd7ddbcab3&amp;#45;&amp;#45;3638919a63034df39868362f575e5e4a --&gt;\n&lt;g id=\"edge705\" class=\"edge\"&gt;\n&lt;title&gt;a5634b5d5eb441c188b628dd7ddbcab3&amp;#45;&amp;#45;3638919a63034df39868362f575e5e4a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M494.27,-321C497,-321 583.05,-321 585.74,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- d8d6036f0ae746cd86a7d656ac208ca2 --&gt;\n&lt;g id=\"node710\" class=\"node\"&gt;\n&lt;title&gt;d8d6036f0ae746cd86a7d656ac208ca2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"681.12,-321.72 679.68,-321.72 679.68,-320.28 681.12,-320.28 681.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3638919a63034df39868362f575e5e4a&amp;#45;&amp;#45;d8d6036f0ae746cd86a7d656ac208ca2 --&gt;\n&lt;g id=\"edge706\" class=\"edge\"&gt;\n&lt;title&gt;3638919a63034df39868362f575e5e4a&amp;#45;&amp;#45;d8d6036f0ae746cd86a7d656ac208ca2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M587.87,-321C590.6,-321 676.65,-321 679.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e3e651ca4d348d2871ba527cf195465 --&gt;\n&lt;g id=\"node711\" class=\"node\"&gt;\n&lt;title&gt;3e3e651ca4d348d2871ba527cf195465&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"827.52,-321.72 826.08,-321.72 826.08,-320.28 827.52,-320.28 827.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d8d6036f0ae746cd86a7d656ac208ca2&amp;#45;&amp;#45;3e3e651ca4d348d2871ba527cf195465 --&gt;\n&lt;g id=\"edge707\" class=\"edge\"&gt;\n&lt;title&gt;d8d6036f0ae746cd86a7d656ac208ca2&amp;#45;&amp;#45;3e3e651ca4d348d2871ba527cf195465&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M681.5,-321C685.81,-321 821.46,-321 825.7,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- bbadbad632bb4d209613d7081823c870 --&gt;\n&lt;g id=\"node712\" class=\"node\"&gt;\n&lt;title&gt;bbadbad632bb4d209613d7081823c870&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"973.92,-321.72 972.48,-321.72 972.48,-320.28 973.92,-320.28 973.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e3e651ca4d348d2871ba527cf195465&amp;#45;&amp;#45;bbadbad632bb4d209613d7081823c870 --&gt;\n&lt;g id=\"edge708\" class=\"edge\"&gt;\n&lt;title&gt;3e3e651ca4d348d2871ba527cf195465&amp;#45;&amp;#45;bbadbad632bb4d209613d7081823c870&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M827.9,-321C832.21,-321 967.86,-321 972.1,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4fa366861bc45d3bf89c4ef7d23ebff --&gt;\n&lt;g id=\"node713\" class=\"node\"&gt;\n&lt;title&gt;e4fa366861bc45d3bf89c4ef7d23ebff&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1067.52,-321.72 1066.08,-321.72 1066.08,-320.28 1067.52,-320.28 1067.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bbadbad632bb4d209613d7081823c870&amp;#45;&amp;#45;e4fa366861bc45d3bf89c4ef7d23ebff --&gt;\n&lt;g id=\"edge709\" class=\"edge\"&gt;\n&lt;title&gt;bbadbad632bb4d209613d7081823c870&amp;#45;&amp;#45;e4fa366861bc45d3bf89c4ef7d23ebff&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M974.27,-321C977,-321 1063.05,-321 1065.74,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 62953f3a344a44618d8d18e7bcd717dc --&gt;\n&lt;g id=\"node714\" class=\"node\"&gt;\n&lt;title&gt;62953f3a344a44618d8d18e7bcd717dc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1161.12,-321.72 1159.68,-321.72 1159.68,-320.28 1161.12,-320.28 1161.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4fa366861bc45d3bf89c4ef7d23ebff&amp;#45;&amp;#45;62953f3a344a44618d8d18e7bcd717dc --&gt;\n&lt;g id=\"edge710\" class=\"edge\"&gt;\n&lt;title&gt;e4fa366861bc45d3bf89c4ef7d23ebff&amp;#45;&amp;#45;62953f3a344a44618d8d18e7bcd717dc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1067.87,-321C1070.6,-321 1156.65,-321 1159.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 59c42f663c8e4a18947c6ecfc18078af --&gt;\n&lt;g id=\"node715\" class=\"node\"&gt;\n&lt;title&gt;59c42f663c8e4a18947c6ecfc18078af&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"1254\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 62953f3a344a44618d8d18e7bcd717dc&amp;#45;&amp;#45;59c42f663c8e4a18947c6ecfc18078af --&gt;\n&lt;g id=\"edge711\" class=\"edge\"&gt;\n&lt;title&gt;62953f3a344a44618d8d18e7bcd717dc&amp;#45;&amp;#45;59c42f663c8e4a18947c6ecfc18078af&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1161.47,-321C1163.77,-321 1225.61,-321 1246.32,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a979b151962141bab175e46e46a7f65c --&gt;\n&lt;g id=\"node716\" class=\"node\"&gt;\n&lt;title&gt;a979b151962141bab175e46e46a7f65c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M1364.4,-349.8C1364.4,-349.8 1330.8,-349.8 1330.8,-349.8 1324.8,-349.8 1318.8,-343.8 1318.8,-337.8 1318.8,-337.8 1318.8,-304.2 1318.8,-304.2 1318.8,-298.2 1324.8,-292.2 1330.8,-292.2 1330.8,-292.2 1364.4,-292.2 1364.4,-292.2 1370.4,-292.2 1376.4,-298.2 1376.4,-304.2 1376.4,-304.2 1376.4,-337.8 1376.4,-337.8 1376.4,-343.8 1370.4,-349.8 1364.4,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"1347.6\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 59c42f663c8e4a18947c6ecfc18078af&amp;#45;&amp;#45;a979b151962141bab175e46e46a7f65c --&gt;\n&lt;g id=\"edge712\" class=\"edge\"&gt;\n&lt;title&gt;59c42f663c8e4a18947c6ecfc18078af&amp;#45;&amp;#45;a979b151962141bab175e46e46a7f65c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1261.59,-321C1273.24,-321 1298.12,-321 1317.97,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a979b151962141bab175e46e46a7f65c&amp;#45;&amp;#45;436b5a5ffd084b79bdb0713210b1e410 --&gt;\n&lt;g id=\"edge1902\" class=\"edge\"&gt;\n&lt;title&gt;a979b151962141bab175e46e46a7f65c&amp;#45;&amp;#45;436b5a5ffd084b79bdb0713210b1e410&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1347.6,-350.65C1347.6,-361.2 1347.6,-371.76 1347.6,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5d5a2cbcae1d488ca982e6c365f0f0e3 --&gt;\n&lt;g id=\"node717\" class=\"node\"&gt;\n&lt;title&gt;5d5a2cbcae1d488ca982e6c365f0f0e3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1441.92,-321.72 1440.48,-321.72 1440.48,-320.28 1441.92,-320.28 1441.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a979b151962141bab175e46e46a7f65c&amp;#45;&amp;#45;5d5a2cbcae1d488ca982e6c365f0f0e3 --&gt;\n&lt;g id=\"edge713\" class=\"edge\"&gt;\n&lt;title&gt;a979b151962141bab175e46e46a7f65c&amp;#45;&amp;#45;5d5a2cbcae1d488ca982e6c365f0f0e3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1377.08,-321C1403.13,-321 1437.94,-321 1440.1,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3ebfbb6a69549998c2a9c2e1d442daa --&gt;\n&lt;g id=\"node718\" class=\"node\"&gt;\n&lt;title&gt;c3ebfbb6a69549998c2a9c2e1d442daa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1535.52,-321.72 1534.08,-321.72 1534.08,-320.28 1535.52,-320.28 1535.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5d5a2cbcae1d488ca982e6c365f0f0e3&amp;#45;&amp;#45;c3ebfbb6a69549998c2a9c2e1d442daa --&gt;\n&lt;g id=\"edge714\" class=\"edge\"&gt;\n&lt;title&gt;5d5a2cbcae1d488ca982e6c365f0f0e3&amp;#45;&amp;#45;c3ebfbb6a69549998c2a9c2e1d442daa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1442.27,-321C1445,-321 1531.05,-321 1533.74,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 529f5cbe086d4ec581c1f1568f2108ac --&gt;\n&lt;g id=\"node719\" class=\"node\"&gt;\n&lt;title&gt;529f5cbe086d4ec581c1f1568f2108ac&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1629.12,-321.72 1627.68,-321.72 1627.68,-320.28 1629.12,-320.28 1629.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3ebfbb6a69549998c2a9c2e1d442daa&amp;#45;&amp;#45;529f5cbe086d4ec581c1f1568f2108ac --&gt;\n&lt;g id=\"edge715\" class=\"edge\"&gt;\n&lt;title&gt;c3ebfbb6a69549998c2a9c2e1d442daa&amp;#45;&amp;#45;529f5cbe086d4ec581c1f1568f2108ac&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1535.87,-321C1538.6,-321 1624.65,-321 1627.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- f3a74183e7d54d278143def7f92465fd --&gt;\n&lt;g id=\"node720\" class=\"node\"&gt;\n&lt;title&gt;f3a74183e7d54d278143def7f92465fd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1781.52,-321.72 1780.08,-321.72 1780.08,-320.28 1781.52,-320.28 1781.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 529f5cbe086d4ec581c1f1568f2108ac&amp;#45;&amp;#45;f3a74183e7d54d278143def7f92465fd --&gt;\n&lt;g id=\"edge716\" class=\"edge\"&gt;\n&lt;title&gt;529f5cbe086d4ec581c1f1568f2108ac&amp;#45;&amp;#45;f3a74183e7d54d278143def7f92465fd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1629.51,-321C1633.99,-321 1775.28,-321 1779.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 50d706d0f42044e6a4cd1660d51deb76 --&gt;\n&lt;g id=\"node721\" class=\"node\"&gt;\n&lt;title&gt;50d706d0f42044e6a4cd1660d51deb76&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1933.92,-321.72 1932.48,-321.72 1932.48,-320.28 1933.92,-320.28 1933.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f3a74183e7d54d278143def7f92465fd&amp;#45;&amp;#45;50d706d0f42044e6a4cd1660d51deb76 --&gt;\n&lt;g id=\"edge717\" class=\"edge\"&gt;\n&lt;title&gt;f3a74183e7d54d278143def7f92465fd&amp;#45;&amp;#45;50d706d0f42044e6a4cd1660d51deb76&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1781.91,-321C1786.39,-321 1927.68,-321 1932.09,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- ad9ef52e7e3c4dfcb4996339ed2a3ffd --&gt;\n&lt;g id=\"node722\" class=\"node\"&gt;\n&lt;title&gt;ad9ef52e7e3c4dfcb4996339ed2a3ffd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2027.52,-321.72 2026.08,-321.72 2026.08,-320.28 2027.52,-320.28 2027.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 50d706d0f42044e6a4cd1660d51deb76&amp;#45;&amp;#45;ad9ef52e7e3c4dfcb4996339ed2a3ffd --&gt;\n&lt;g id=\"edge718\" class=\"edge\"&gt;\n&lt;title&gt;50d706d0f42044e6a4cd1660d51deb76&amp;#45;&amp;#45;ad9ef52e7e3c4dfcb4996339ed2a3ffd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1934.27,-321C1937,-321 2023.05,-321 2025.74,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- cd032bbb3eb348c4a2ad8f7c25b154be --&gt;\n&lt;g id=\"node723\" class=\"node\"&gt;\n&lt;title&gt;cd032bbb3eb348c4a2ad8f7c25b154be&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2121.12,-321.72 2119.68,-321.72 2119.68,-320.28 2121.12,-320.28 2121.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ad9ef52e7e3c4dfcb4996339ed2a3ffd&amp;#45;&amp;#45;cd032bbb3eb348c4a2ad8f7c25b154be --&gt;\n&lt;g id=\"edge719\" class=\"edge\"&gt;\n&lt;title&gt;ad9ef52e7e3c4dfcb4996339ed2a3ffd&amp;#45;&amp;#45;cd032bbb3eb348c4a2ad8f7c25b154be&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2027.87,-321C2030.6,-321 2116.65,-321 2119.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- f6fc689dfb7746b6a491b198727fbaa2 --&gt;\n&lt;g id=\"node724\" class=\"node\"&gt;\n&lt;title&gt;f6fc689dfb7746b6a491b198727fbaa2&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M2230.8,-349.8C2230.8,-349.8 2197.2,-349.8 2197.2,-349.8 2191.2,-349.8 2185.2,-343.8 2185.2,-337.8 2185.2,-337.8 2185.2,-304.2 2185.2,-304.2 2185.2,-298.2 2191.2,-292.2 2197.2,-292.2 2197.2,-292.2 2230.8,-292.2 2230.8,-292.2 2236.8,-292.2 2242.8,-298.2 2242.8,-304.2 2242.8,-304.2 2242.8,-337.8 2242.8,-337.8 2242.8,-343.8 2236.8,-349.8 2230.8,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"2214\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- cd032bbb3eb348c4a2ad8f7c25b154be&amp;#45;&amp;#45;f6fc689dfb7746b6a491b198727fbaa2 --&gt;\n&lt;g id=\"edge720\" class=\"edge\"&gt;\n&lt;title&gt;cd032bbb3eb348c4a2ad8f7c25b154be&amp;#45;&amp;#45;f6fc689dfb7746b6a491b198727fbaa2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2121.47,-321C2123.19,-321 2158.08,-321 2184.28,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- f6fc689dfb7746b6a491b198727fbaa2&amp;#45;&amp;#45;e052e94d09214217a40cda3c77f49a3a --&gt;\n&lt;g id=\"edge1903\" class=\"edge\"&gt;\n&lt;title&gt;f6fc689dfb7746b6a491b198727fbaa2&amp;#45;&amp;#45;e052e94d09214217a40cda3c77f49a3a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2214,-350.65C2214,-361.2 2214,-371.76 2214,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 362f24d5fbb9418e8ba2a2b51f62440e --&gt;\n&lt;g id=\"node725\" class=\"node\"&gt;\n&lt;title&gt;362f24d5fbb9418e8ba2a2b51f62440e&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"2307.6\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- f6fc689dfb7746b6a491b198727fbaa2&amp;#45;&amp;#45;362f24d5fbb9418e8ba2a2b51f62440e --&gt;\n&lt;g id=\"edge721\" class=\"edge\"&gt;\n&lt;title&gt;f6fc689dfb7746b6a491b198727fbaa2&amp;#45;&amp;#45;362f24d5fbb9418e8ba2a2b51f62440e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2243.48,-321C2263.44,-321 2288.54,-321 2300.16,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c344eb5509745c69132128b55b41605 --&gt;\n&lt;g id=\"node726\" class=\"node\"&gt;\n&lt;title&gt;0c344eb5509745c69132128b55b41605&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2401.92,-321.72 2400.48,-321.72 2400.48,-320.28 2401.92,-320.28 2401.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 362f24d5fbb9418e8ba2a2b51f62440e&amp;#45;&amp;#45;0c344eb5509745c69132128b55b41605 --&gt;\n&lt;g id=\"edge722\" class=\"edge\"&gt;\n&lt;title&gt;362f24d5fbb9418e8ba2a2b51f62440e&amp;#45;&amp;#45;0c344eb5509745c69132128b55b41605&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2315.19,-321C2335.53,-321 2396.24,-321 2400.02,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- abc0599c7115470caf8b11a80479e966 --&gt;\n&lt;g id=\"node727\" class=\"node\"&gt;\n&lt;title&gt;abc0599c7115470caf8b11a80479e966&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2554.32,-321.72 2552.88,-321.72 2552.88,-320.28 2554.32,-320.28 2554.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c344eb5509745c69132128b55b41605&amp;#45;&amp;#45;abc0599c7115470caf8b11a80479e966 --&gt;\n&lt;g id=\"edge723\" class=\"edge\"&gt;\n&lt;title&gt;0c344eb5509745c69132128b55b41605&amp;#45;&amp;#45;abc0599c7115470caf8b11a80479e966&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2402.31,-321C2406.79,-321 2548.08,-321 2552.49,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 932e7ec96e3b4e90baf111293fc2bb87 --&gt;\n&lt;g id=\"node728\" class=\"node\"&gt;\n&lt;title&gt;932e7ec96e3b4e90baf111293fc2bb87&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2706.72,-321.72 2705.28,-321.72 2705.28,-320.28 2706.72,-320.28 2706.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- abc0599c7115470caf8b11a80479e966&amp;#45;&amp;#45;932e7ec96e3b4e90baf111293fc2bb87 --&gt;\n&lt;g id=\"edge724\" class=\"edge\"&gt;\n&lt;title&gt;abc0599c7115470caf8b11a80479e966&amp;#45;&amp;#45;932e7ec96e3b4e90baf111293fc2bb87&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2554.71,-321C2559.19,-321 2700.48,-321 2704.89,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 252fb9acebc440c7a96841045e664718 --&gt;\n&lt;g id=\"node729\" class=\"node\"&gt;\n&lt;title&gt;252fb9acebc440c7a96841045e664718&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"2799.6\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 932e7ec96e3b4e90baf111293fc2bb87&amp;#45;&amp;#45;252fb9acebc440c7a96841045e664718 --&gt;\n&lt;g id=\"edge725\" class=\"edge\"&gt;\n&lt;title&gt;932e7ec96e3b4e90baf111293fc2bb87&amp;#45;&amp;#45;252fb9acebc440c7a96841045e664718&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2707.07,-321C2709.37,-321 2771.21,-321 2791.92,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- dadf212c1126430ea68ad39d4c72a53a --&gt;\n&lt;g id=\"node730\" class=\"node\"&gt;\n&lt;title&gt;dadf212c1126430ea68ad39d4c72a53a&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M2910,-349.8C2910,-349.8 2876.4,-349.8 2876.4,-349.8 2870.4,-349.8 2864.4,-343.8 2864.4,-337.8 2864.4,-337.8 2864.4,-304.2 2864.4,-304.2 2864.4,-298.2 2870.4,-292.2 2876.4,-292.2 2876.4,-292.2 2910,-292.2 2910,-292.2 2916,-292.2 2922,-298.2 2922,-304.2 2922,-304.2 2922,-337.8 2922,-337.8 2922,-343.8 2916,-349.8 2910,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"2893.2\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 252fb9acebc440c7a96841045e664718&amp;#45;&amp;#45;dadf212c1126430ea68ad39d4c72a53a --&gt;\n&lt;g id=\"edge726\" class=\"edge\"&gt;\n&lt;title&gt;252fb9acebc440c7a96841045e664718&amp;#45;&amp;#45;dadf212c1126430ea68ad39d4c72a53a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2807.19,-321C2818.84,-321 2843.72,-321 2863.57,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- dadf212c1126430ea68ad39d4c72a53a&amp;#45;&amp;#45;09a924d4bbc94ded8c2a9c679d632fc1 --&gt;\n&lt;g id=\"edge1904\" class=\"edge\"&gt;\n&lt;title&gt;dadf212c1126430ea68ad39d4c72a53a&amp;#45;&amp;#45;09a924d4bbc94ded8c2a9c679d632fc1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2893.2,-350.65C2893.2,-361.2 2893.2,-371.76 2893.2,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- e6e4d75b4d534d9c94d66217e699e75a --&gt;\n&lt;g id=\"node731\" class=\"node\"&gt;\n&lt;title&gt;e6e4d75b4d534d9c94d66217e699e75a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2987.52,-321.72 2986.08,-321.72 2986.08,-320.28 2987.52,-320.28 2987.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dadf212c1126430ea68ad39d4c72a53a&amp;#45;&amp;#45;e6e4d75b4d534d9c94d66217e699e75a --&gt;\n&lt;g id=\"edge727\" class=\"edge\"&gt;\n&lt;title&gt;dadf212c1126430ea68ad39d4c72a53a&amp;#45;&amp;#45;e6e4d75b4d534d9c94d66217e699e75a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2922.68,-321C2948.73,-321 2983.54,-321 2985.7,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4849372b2c084c2fbef8d8c7134ec8bf --&gt;\n&lt;g id=\"node732\" class=\"node\"&gt;\n&lt;title&gt;4849372b2c084c2fbef8d8c7134ec8bf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3081.12,-321.72 3079.68,-321.72 3079.68,-320.28 3081.12,-320.28 3081.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e6e4d75b4d534d9c94d66217e699e75a&amp;#45;&amp;#45;4849372b2c084c2fbef8d8c7134ec8bf --&gt;\n&lt;g id=\"edge728\" class=\"edge\"&gt;\n&lt;title&gt;e6e4d75b4d534d9c94d66217e699e75a&amp;#45;&amp;#45;4849372b2c084c2fbef8d8c7134ec8bf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2987.87,-321C2990.6,-321 3076.65,-321 3079.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b5842eb2a924eef84552d400c0a36a7 --&gt;\n&lt;g id=\"node733\" class=\"node\"&gt;\n&lt;title&gt;6b5842eb2a924eef84552d400c0a36a7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3174.72,-321.72 3173.28,-321.72 3173.28,-320.28 3174.72,-320.28 3174.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4849372b2c084c2fbef8d8c7134ec8bf&amp;#45;&amp;#45;6b5842eb2a924eef84552d400c0a36a7 --&gt;\n&lt;g id=\"edge729\" class=\"edge\"&gt;\n&lt;title&gt;4849372b2c084c2fbef8d8c7134ec8bf&amp;#45;&amp;#45;6b5842eb2a924eef84552d400c0a36a7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3081.47,-321C3084.2,-321 3170.25,-321 3172.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a026566287bb41f793d0e531d6af0dff --&gt;\n&lt;g id=\"node734\" class=\"node\"&gt;\n&lt;title&gt;a026566287bb41f793d0e531d6af0dff&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M3284.4,-349.8C3284.4,-349.8 3250.8,-349.8 3250.8,-349.8 3244.8,-349.8 3238.8,-343.8 3238.8,-337.8 3238.8,-337.8 3238.8,-304.2 3238.8,-304.2 3238.8,-298.2 3244.8,-292.2 3250.8,-292.2 3250.8,-292.2 3284.4,-292.2 3284.4,-292.2 3290.4,-292.2 3296.4,-298.2 3296.4,-304.2 3296.4,-304.2 3296.4,-337.8 3296.4,-337.8 3296.4,-343.8 3290.4,-349.8 3284.4,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"3267.6\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 6b5842eb2a924eef84552d400c0a36a7&amp;#45;&amp;#45;a026566287bb41f793d0e531d6af0dff --&gt;\n&lt;g id=\"edge730\" class=\"edge\"&gt;\n&lt;title&gt;6b5842eb2a924eef84552d400c0a36a7&amp;#45;&amp;#45;a026566287bb41f793d0e531d6af0dff&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3175.07,-321C3176.79,-321 3211.68,-321 3237.88,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a026566287bb41f793d0e531d6af0dff&amp;#45;&amp;#45;651bb70c27144e08b67d03d0d66dc269 --&gt;\n&lt;g id=\"edge1905\" class=\"edge\"&gt;\n&lt;title&gt;a026566287bb41f793d0e531d6af0dff&amp;#45;&amp;#45;651bb70c27144e08b67d03d0d66dc269&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3267.6,-350.65C3267.6,-361.2 3267.6,-371.76 3267.6,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17537e71816f4bbdb3593a557bcd0881 --&gt;\n&lt;g id=\"node735\" class=\"node\"&gt;\n&lt;title&gt;17537e71816f4bbdb3593a557bcd0881&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"3361.2\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- a026566287bb41f793d0e531d6af0dff&amp;#45;&amp;#45;17537e71816f4bbdb3593a557bcd0881 --&gt;\n&lt;g id=\"edge731\" class=\"edge\"&gt;\n&lt;title&gt;a026566287bb41f793d0e531d6af0dff&amp;#45;&amp;#45;17537e71816f4bbdb3593a557bcd0881&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3297.08,-321C3317.04,-321 3342.14,-321 3353.76,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 165de8fcb5964c179d0705347e2b20e8 --&gt;\n&lt;g id=\"node736\" class=\"node\"&gt;\n&lt;title&gt;165de8fcb5964c179d0705347e2b20e8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3514.32,-321.72 3512.88,-321.72 3512.88,-320.28 3514.32,-320.28 3514.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17537e71816f4bbdb3593a557bcd0881&amp;#45;&amp;#45;165de8fcb5964c179d0705347e2b20e8 --&gt;\n&lt;g id=\"edge732\" class=\"edge\"&gt;\n&lt;title&gt;17537e71816f4bbdb3593a557bcd0881&amp;#45;&amp;#45;165de8fcb5964c179d0705347e2b20e8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3368.66,-321C3397,-321 3509.02,-321 3512.52,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- c7cee19c2e824b8da9c9f2e15ff5d119 --&gt;\n&lt;g id=\"node737\" class=\"node\"&gt;\n&lt;title&gt;c7cee19c2e824b8da9c9f2e15ff5d119&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"3666\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 165de8fcb5964c179d0705347e2b20e8&amp;#45;&amp;#45;c7cee19c2e824b8da9c9f2e15ff5d119 --&gt;\n&lt;g id=\"edge733\" class=\"edge\"&gt;\n&lt;title&gt;165de8fcb5964c179d0705347e2b20e8&amp;#45;&amp;#45;c7cee19c2e824b8da9c9f2e15ff5d119&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3514.71,-321C3518.68,-321 3629.77,-321 3658.35,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 684b11c9a0594dc799647a0659a940e6 --&gt;\n&lt;g id=\"node738\" class=\"node\"&gt;\n&lt;title&gt;684b11c9a0594dc799647a0659a940e6&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M3776.4,-349.8C3776.4,-349.8 3742.8,-349.8 3742.8,-349.8 3736.8,-349.8 3730.8,-343.8 3730.8,-337.8 3730.8,-337.8 3730.8,-304.2 3730.8,-304.2 3730.8,-298.2 3736.8,-292.2 3742.8,-292.2 3742.8,-292.2 3776.4,-292.2 3776.4,-292.2 3782.4,-292.2 3788.4,-298.2 3788.4,-304.2 3788.4,-304.2 3788.4,-337.8 3788.4,-337.8 3788.4,-343.8 3782.4,-349.8 3776.4,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"3759.6\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- c7cee19c2e824b8da9c9f2e15ff5d119&amp;#45;&amp;#45;684b11c9a0594dc799647a0659a940e6 --&gt;\n&lt;g id=\"edge734\" class=\"edge\"&gt;\n&lt;title&gt;c7cee19c2e824b8da9c9f2e15ff5d119&amp;#45;&amp;#45;684b11c9a0594dc799647a0659a940e6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3673.59,-321C3685.24,-321 3710.12,-321 3729.97,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 684b11c9a0594dc799647a0659a940e6&amp;#45;&amp;#45;050cbfa4ebb04b308e61ebe48fcc0945 --&gt;\n&lt;g id=\"edge1906\" class=\"edge\"&gt;\n&lt;title&gt;684b11c9a0594dc799647a0659a940e6&amp;#45;&amp;#45;050cbfa4ebb04b308e61ebe48fcc0945&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3759.6,-350.65C3759.6,-361.2 3759.6,-371.76 3759.6,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- cce061e8f5964ae7808447f84cbf9b4c --&gt;\n&lt;g id=\"node739\" class=\"node\"&gt;\n&lt;title&gt;cce061e8f5964ae7808447f84cbf9b4c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3853.92,-321.72 3852.48,-321.72 3852.48,-320.28 3853.92,-320.28 3853.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 684b11c9a0594dc799647a0659a940e6&amp;#45;&amp;#45;cce061e8f5964ae7808447f84cbf9b4c --&gt;\n&lt;g id=\"edge735\" class=\"edge\"&gt;\n&lt;title&gt;684b11c9a0594dc799647a0659a940e6&amp;#45;&amp;#45;cce061e8f5964ae7808447f84cbf9b4c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3789.08,-321C3815.13,-321 3849.94,-321 3852.1,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- e8ffef6924e9469ea0218842d75b4d0b --&gt;\n&lt;g id=\"node740\" class=\"node\"&gt;\n&lt;title&gt;e8ffef6924e9469ea0218842d75b4d0b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3947.52,-321.72 3946.08,-321.72 3946.08,-320.28 3947.52,-320.28 3947.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cce061e8f5964ae7808447f84cbf9b4c&amp;#45;&amp;#45;e8ffef6924e9469ea0218842d75b4d0b --&gt;\n&lt;g id=\"edge736\" class=\"edge\"&gt;\n&lt;title&gt;cce061e8f5964ae7808447f84cbf9b4c&amp;#45;&amp;#45;e8ffef6924e9469ea0218842d75b4d0b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3854.27,-321C3857,-321 3943.05,-321 3945.74,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 53ad07a80ac644fe874fe6d8e35349d1 --&gt;\n&lt;g id=\"node741\" class=\"node\"&gt;\n&lt;title&gt;53ad07a80ac644fe874fe6d8e35349d1&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M4057.2,-349.8C4057.2,-349.8 4023.6,-349.8 4023.6,-349.8 4017.6,-349.8 4011.6,-343.8 4011.6,-337.8 4011.6,-337.8 4011.6,-304.2 4011.6,-304.2 4011.6,-298.2 4017.6,-292.2 4023.6,-292.2 4023.6,-292.2 4057.2,-292.2 4057.2,-292.2 4063.2,-292.2 4069.2,-298.2 4069.2,-304.2 4069.2,-304.2 4069.2,-337.8 4069.2,-337.8 4069.2,-343.8 4063.2,-349.8 4057.2,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"4040.4\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- e8ffef6924e9469ea0218842d75b4d0b&amp;#45;&amp;#45;53ad07a80ac644fe874fe6d8e35349d1 --&gt;\n&lt;g id=\"edge737\" class=\"edge\"&gt;\n&lt;title&gt;e8ffef6924e9469ea0218842d75b4d0b&amp;#45;&amp;#45;53ad07a80ac644fe874fe6d8e35349d1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3947.87,-321C3949.59,-321 3984.48,-321 4010.68,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 53ad07a80ac644fe874fe6d8e35349d1&amp;#45;&amp;#45;c5d91ccea61f4dd3ae861c35f21b52b1 --&gt;\n&lt;g id=\"edge1907\" class=\"edge\"&gt;\n&lt;title&gt;53ad07a80ac644fe874fe6d8e35349d1&amp;#45;&amp;#45;c5d91ccea61f4dd3ae861c35f21b52b1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4040.4,-350.65C4040.4,-361.2 4040.4,-371.76 4040.4,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7664e3d05cc7415b86e79c4f2cdb2faa --&gt;\n&lt;g id=\"node742\" class=\"node\"&gt;\n&lt;title&gt;7664e3d05cc7415b86e79c4f2cdb2faa&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"4134\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 53ad07a80ac644fe874fe6d8e35349d1&amp;#45;&amp;#45;7664e3d05cc7415b86e79c4f2cdb2faa --&gt;\n&lt;g id=\"edge738\" class=\"edge\"&gt;\n&lt;title&gt;53ad07a80ac644fe874fe6d8e35349d1&amp;#45;&amp;#45;7664e3d05cc7415b86e79c4f2cdb2faa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4069.88,-321C4089.84,-321 4114.94,-321 4126.56,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- f3c97906e37f48cba7f6bd5098009bde --&gt;\n&lt;g id=\"node743\" class=\"node\"&gt;\n&lt;title&gt;f3c97906e37f48cba7f6bd5098009bde&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4228.32,-321.72 4226.88,-321.72 4226.88,-320.28 4228.32,-320.28 4228.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7664e3d05cc7415b86e79c4f2cdb2faa&amp;#45;&amp;#45;f3c97906e37f48cba7f6bd5098009bde --&gt;\n&lt;g id=\"edge739\" class=\"edge\"&gt;\n&lt;title&gt;7664e3d05cc7415b86e79c4f2cdb2faa&amp;#45;&amp;#45;f3c97906e37f48cba7f6bd5098009bde&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4141.59,-321C4161.93,-321 4222.64,-321 4226.42,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8b755223aee848cbaee67ea90481ebe5 --&gt;\n&lt;g id=\"node744\" class=\"node\"&gt;\n&lt;title&gt;8b755223aee848cbaee67ea90481ebe5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4380.72,-321.72 4379.28,-321.72 4379.28,-320.28 4380.72,-320.28 4380.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f3c97906e37f48cba7f6bd5098009bde&amp;#45;&amp;#45;8b755223aee848cbaee67ea90481ebe5 --&gt;\n&lt;g id=\"edge740\" class=\"edge\"&gt;\n&lt;title&gt;f3c97906e37f48cba7f6bd5098009bde&amp;#45;&amp;#45;8b755223aee848cbaee67ea90481ebe5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4228.71,-321C4233.19,-321 4374.48,-321 4378.89,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- d9abd5d2da2f4c80aaf403f7080b34b9 --&gt;\n&lt;g id=\"node745\" class=\"node\"&gt;\n&lt;title&gt;d9abd5d2da2f4c80aaf403f7080b34b9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4533.12,-321.72 4531.68,-321.72 4531.68,-320.28 4533.12,-320.28 4533.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8b755223aee848cbaee67ea90481ebe5&amp;#45;&amp;#45;d9abd5d2da2f4c80aaf403f7080b34b9 --&gt;\n&lt;g id=\"edge741\" class=\"edge\"&gt;\n&lt;title&gt;8b755223aee848cbaee67ea90481ebe5&amp;#45;&amp;#45;d9abd5d2da2f4c80aaf403f7080b34b9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4381.11,-321C4385.59,-321 4526.88,-321 4531.29,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1761a32289cd47088b4b99d9146ef281 --&gt;\n&lt;g id=\"node746\" class=\"node\"&gt;\n&lt;title&gt;1761a32289cd47088b4b99d9146ef281&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"4626\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- d9abd5d2da2f4c80aaf403f7080b34b9&amp;#45;&amp;#45;1761a32289cd47088b4b99d9146ef281 --&gt;\n&lt;g id=\"edge742\" class=\"edge\"&gt;\n&lt;title&gt;d9abd5d2da2f4c80aaf403f7080b34b9&amp;#45;&amp;#45;1761a32289cd47088b4b99d9146ef281&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4533.47,-321C4535.77,-321 4597.61,-321 4618.32,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- add9ad33bf834c269b07d74fa69fdff9 --&gt;\n&lt;g id=\"node747\" class=\"node\"&gt;\n&lt;title&gt;add9ad33bf834c269b07d74fa69fdff9&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M4736.4,-349.8C4736.4,-349.8 4702.8,-349.8 4702.8,-349.8 4696.8,-349.8 4690.8,-343.8 4690.8,-337.8 4690.8,-337.8 4690.8,-304.2 4690.8,-304.2 4690.8,-298.2 4696.8,-292.2 4702.8,-292.2 4702.8,-292.2 4736.4,-292.2 4736.4,-292.2 4742.4,-292.2 4748.4,-298.2 4748.4,-304.2 4748.4,-304.2 4748.4,-337.8 4748.4,-337.8 4748.4,-343.8 4742.4,-349.8 4736.4,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"4719.6\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 1761a32289cd47088b4b99d9146ef281&amp;#45;&amp;#45;add9ad33bf834c269b07d74fa69fdff9 --&gt;\n&lt;g id=\"edge743\" class=\"edge\"&gt;\n&lt;title&gt;1761a32289cd47088b4b99d9146ef281&amp;#45;&amp;#45;add9ad33bf834c269b07d74fa69fdff9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4633.59,-321C4645.24,-321 4670.12,-321 4689.97,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- add9ad33bf834c269b07d74fa69fdff9&amp;#45;&amp;#45;3a5b3d6237694ca89c07fa527867b11e --&gt;\n&lt;g id=\"edge1908\" class=\"edge\"&gt;\n&lt;title&gt;add9ad33bf834c269b07d74fa69fdff9&amp;#45;&amp;#45;3a5b3d6237694ca89c07fa527867b11e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4719.6,-350.65C4719.6,-361.2 4719.6,-371.76 4719.6,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 682d978300c14f53b821a2cdf28a4064 --&gt;\n&lt;g id=\"node748\" class=\"node\"&gt;\n&lt;title&gt;682d978300c14f53b821a2cdf28a4064&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4813.92,-321.72 4812.48,-321.72 4812.48,-320.28 4813.92,-320.28 4813.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- add9ad33bf834c269b07d74fa69fdff9&amp;#45;&amp;#45;682d978300c14f53b821a2cdf28a4064 --&gt;\n&lt;g id=\"edge744\" class=\"edge\"&gt;\n&lt;title&gt;add9ad33bf834c269b07d74fa69fdff9&amp;#45;&amp;#45;682d978300c14f53b821a2cdf28a4064&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4749.08,-321C4775.13,-321 4809.94,-321 4812.1,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- bf862f352dab49eeae90c66769195b5a --&gt;\n&lt;g id=\"node749\" class=\"node\"&gt;\n&lt;title&gt;bf862f352dab49eeae90c66769195b5a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4907.52,-321.72 4906.08,-321.72 4906.08,-320.28 4907.52,-320.28 4907.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 682d978300c14f53b821a2cdf28a4064&amp;#45;&amp;#45;bf862f352dab49eeae90c66769195b5a --&gt;\n&lt;g id=\"edge745\" class=\"edge\"&gt;\n&lt;title&gt;682d978300c14f53b821a2cdf28a4064&amp;#45;&amp;#45;bf862f352dab49eeae90c66769195b5a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4814.27,-321C4817,-321 4903.05,-321 4905.74,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 110d67c5f1a94fe3beed595c3807d593 --&gt;\n&lt;g id=\"node750\" class=\"node\"&gt;\n&lt;title&gt;110d67c5f1a94fe3beed595c3807d593&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M5017.2,-349.8C5017.2,-349.8 4983.6,-349.8 4983.6,-349.8 4977.6,-349.8 4971.6,-343.8 4971.6,-337.8 4971.6,-337.8 4971.6,-304.2 4971.6,-304.2 4971.6,-298.2 4977.6,-292.2 4983.6,-292.2 4983.6,-292.2 5017.2,-292.2 5017.2,-292.2 5023.2,-292.2 5029.2,-298.2 5029.2,-304.2 5029.2,-304.2 5029.2,-337.8 5029.2,-337.8 5029.2,-343.8 5023.2,-349.8 5017.2,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"5000.4\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- bf862f352dab49eeae90c66769195b5a&amp;#45;&amp;#45;110d67c5f1a94fe3beed595c3807d593 --&gt;\n&lt;g id=\"edge746\" class=\"edge\"&gt;\n&lt;title&gt;bf862f352dab49eeae90c66769195b5a&amp;#45;&amp;#45;110d67c5f1a94fe3beed595c3807d593&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4907.87,-321C4909.59,-321 4944.48,-321 4970.68,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 110d67c5f1a94fe3beed595c3807d593&amp;#45;&amp;#45;b5a2ee7f71884a79b374749aae8284c8 --&gt;\n&lt;g id=\"edge1909\" class=\"edge\"&gt;\n&lt;title&gt;110d67c5f1a94fe3beed595c3807d593&amp;#45;&amp;#45;b5a2ee7f71884a79b374749aae8284c8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5000.4,-350.65C5000.4,-361.2 5000.4,-371.76 5000.4,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8efbb8af17ab4d3fa87641236af424ca --&gt;\n&lt;g id=\"node751\" class=\"node\"&gt;\n&lt;title&gt;8efbb8af17ab4d3fa87641236af424ca&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"5094\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 110d67c5f1a94fe3beed595c3807d593&amp;#45;&amp;#45;8efbb8af17ab4d3fa87641236af424ca --&gt;\n&lt;g id=\"edge747\" class=\"edge\"&gt;\n&lt;title&gt;110d67c5f1a94fe3beed595c3807d593&amp;#45;&amp;#45;8efbb8af17ab4d3fa87641236af424ca&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5029.88,-321C5049.84,-321 5074.94,-321 5086.56,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1b018002087f42178c6c1504eda8614d --&gt;\n&lt;g id=\"node752\" class=\"node\"&gt;\n&lt;title&gt;1b018002087f42178c6c1504eda8614d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5188.32,-321.72 5186.88,-321.72 5186.88,-320.28 5188.32,-320.28 5188.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8efbb8af17ab4d3fa87641236af424ca&amp;#45;&amp;#45;1b018002087f42178c6c1504eda8614d --&gt;\n&lt;g id=\"edge748\" class=\"edge\"&gt;\n&lt;title&gt;8efbb8af17ab4d3fa87641236af424ca&amp;#45;&amp;#45;1b018002087f42178c6c1504eda8614d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5101.59,-321C5121.93,-321 5182.64,-321 5186.42,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1589fad4b36c4f8d9349f571ac317af5 --&gt;\n&lt;g id=\"node753\" class=\"node\"&gt;\n&lt;title&gt;1589fad4b36c4f8d9349f571ac317af5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5281.92,-321.72 5280.48,-321.72 5280.48,-320.28 5281.92,-320.28 5281.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1b018002087f42178c6c1504eda8614d&amp;#45;&amp;#45;1589fad4b36c4f8d9349f571ac317af5 --&gt;\n&lt;g id=\"edge749\" class=\"edge\"&gt;\n&lt;title&gt;1b018002087f42178c6c1504eda8614d&amp;#45;&amp;#45;1589fad4b36c4f8d9349f571ac317af5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5188.67,-321C5191.4,-321 5277.45,-321 5280.14,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5c8550e7ad7f49d1903604d5edebeac4 --&gt;\n&lt;g id=\"node754\" class=\"node\"&gt;\n&lt;title&gt;5c8550e7ad7f49d1903604d5edebeac4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5434.32,-321.72 5432.88,-321.72 5432.88,-320.28 5434.32,-320.28 5434.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1589fad4b36c4f8d9349f571ac317af5&amp;#45;&amp;#45;5c8550e7ad7f49d1903604d5edebeac4 --&gt;\n&lt;g id=\"edge750\" class=\"edge\"&gt;\n&lt;title&gt;1589fad4b36c4f8d9349f571ac317af5&amp;#45;&amp;#45;5c8550e7ad7f49d1903604d5edebeac4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5282.31,-321C5286.79,-321 5428.08,-321 5432.49,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- fbbb018cd065405fa3edd22ddafde350 --&gt;\n&lt;g id=\"node755\" class=\"node\"&gt;\n&lt;title&gt;fbbb018cd065405fa3edd22ddafde350&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5586.72,-321.72 5585.28,-321.72 5585.28,-320.28 5586.72,-320.28 5586.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5c8550e7ad7f49d1903604d5edebeac4&amp;#45;&amp;#45;fbbb018cd065405fa3edd22ddafde350 --&gt;\n&lt;g id=\"edge751\" class=\"edge\"&gt;\n&lt;title&gt;5c8550e7ad7f49d1903604d5edebeac4&amp;#45;&amp;#45;fbbb018cd065405fa3edd22ddafde350&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5434.71,-321C5439.19,-321 5580.48,-321 5584.89,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- abc1fbf14fd440fb86bf7c440120e6af --&gt;\n&lt;g id=\"node756\" class=\"node\"&gt;\n&lt;title&gt;abc1fbf14fd440fb86bf7c440120e6af&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5680.32,-321.72 5678.88,-321.72 5678.88,-320.28 5680.32,-320.28 5680.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fbbb018cd065405fa3edd22ddafde350&amp;#45;&amp;#45;abc1fbf14fd440fb86bf7c440120e6af --&gt;\n&lt;g id=\"edge752\" class=\"edge\"&gt;\n&lt;title&gt;fbbb018cd065405fa3edd22ddafde350&amp;#45;&amp;#45;abc1fbf14fd440fb86bf7c440120e6af&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5587.07,-321C5589.8,-321 5675.85,-321 5678.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4e46f1d606e4155959492b7c3436cfc --&gt;\n&lt;g id=\"node757\" class=\"node\"&gt;\n&lt;title&gt;e4e46f1d606e4155959492b7c3436cfc&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"5773.2\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- abc1fbf14fd440fb86bf7c440120e6af&amp;#45;&amp;#45;e4e46f1d606e4155959492b7c3436cfc --&gt;\n&lt;g id=\"edge753\" class=\"edge\"&gt;\n&lt;title&gt;abc1fbf14fd440fb86bf7c440120e6af&amp;#45;&amp;#45;e4e46f1d606e4155959492b7c3436cfc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5680.67,-321C5682.97,-321 5744.81,-321 5765.52,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 74d0890b613649ab9c509d4669b6e33e --&gt;\n&lt;g id=\"node758\" class=\"node\"&gt;\n&lt;title&gt;74d0890b613649ab9c509d4669b6e33e&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M5883.6,-349.8C5883.6,-349.8 5850,-349.8 5850,-349.8 5844,-349.8 5838,-343.8 5838,-337.8 5838,-337.8 5838,-304.2 5838,-304.2 5838,-298.2 5844,-292.2 5850,-292.2 5850,-292.2 5883.6,-292.2 5883.6,-292.2 5889.6,-292.2 5895.6,-298.2 5895.6,-304.2 5895.6,-304.2 5895.6,-337.8 5895.6,-337.8 5895.6,-343.8 5889.6,-349.8 5883.6,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"5866.8\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- e4e46f1d606e4155959492b7c3436cfc&amp;#45;&amp;#45;74d0890b613649ab9c509d4669b6e33e --&gt;\n&lt;g id=\"edge754\" class=\"edge\"&gt;\n&lt;title&gt;e4e46f1d606e4155959492b7c3436cfc&amp;#45;&amp;#45;74d0890b613649ab9c509d4669b6e33e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5780.79,-321C5792.44,-321 5817.32,-321 5837.17,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 74d0890b613649ab9c509d4669b6e33e&amp;#45;&amp;#45;44161760d06a498a99f63891cfdaf615 --&gt;\n&lt;g id=\"edge1910\" class=\"edge\"&gt;\n&lt;title&gt;74d0890b613649ab9c509d4669b6e33e&amp;#45;&amp;#45;44161760d06a498a99f63891cfdaf615&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5866.8,-350.65C5866.8,-361.2 5866.8,-371.76 5866.8,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- b2ef40975e10446f907d3ba400eb889f --&gt;\n&lt;g id=\"node759\" class=\"node\"&gt;\n&lt;title&gt;b2ef40975e10446f907d3ba400eb889f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5961.12,-321.72 5959.68,-321.72 5959.68,-320.28 5961.12,-320.28 5961.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 74d0890b613649ab9c509d4669b6e33e&amp;#45;&amp;#45;b2ef40975e10446f907d3ba400eb889f --&gt;\n&lt;g id=\"edge755\" class=\"edge\"&gt;\n&lt;title&gt;74d0890b613649ab9c509d4669b6e33e&amp;#45;&amp;#45;b2ef40975e10446f907d3ba400eb889f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5896.28,-321C5922.33,-321 5957.14,-321 5959.3,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- b172c17a4a3c448cb21b8f233aebf959 --&gt;\n&lt;g id=\"node760\" class=\"node\"&gt;\n&lt;title&gt;b172c17a4a3c448cb21b8f233aebf959&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6054.72,-321.72 6053.28,-321.72 6053.28,-320.28 6054.72,-320.28 6054.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b2ef40975e10446f907d3ba400eb889f&amp;#45;&amp;#45;b172c17a4a3c448cb21b8f233aebf959 --&gt;\n&lt;g id=\"edge756\" class=\"edge\"&gt;\n&lt;title&gt;b2ef40975e10446f907d3ba400eb889f&amp;#45;&amp;#45;b172c17a4a3c448cb21b8f233aebf959&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5961.47,-321C5964.2,-321 6050.25,-321 6052.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- dc8ccc03e8114eefaa1616a97d8cdf48 --&gt;\n&lt;g id=\"node761\" class=\"node\"&gt;\n&lt;title&gt;dc8ccc03e8114eefaa1616a97d8cdf48&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M6164.4,-349.8C6164.4,-349.8 6130.8,-349.8 6130.8,-349.8 6124.8,-349.8 6118.8,-343.8 6118.8,-337.8 6118.8,-337.8 6118.8,-304.2 6118.8,-304.2 6118.8,-298.2 6124.8,-292.2 6130.8,-292.2 6130.8,-292.2 6164.4,-292.2 6164.4,-292.2 6170.4,-292.2 6176.4,-298.2 6176.4,-304.2 6176.4,-304.2 6176.4,-337.8 6176.4,-337.8 6176.4,-343.8 6170.4,-349.8 6164.4,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"6147.6\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- b172c17a4a3c448cb21b8f233aebf959&amp;#45;&amp;#45;dc8ccc03e8114eefaa1616a97d8cdf48 --&gt;\n&lt;g id=\"edge757\" class=\"edge\"&gt;\n&lt;title&gt;b172c17a4a3c448cb21b8f233aebf959&amp;#45;&amp;#45;dc8ccc03e8114eefaa1616a97d8cdf48&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6055.07,-321C6056.79,-321 6091.68,-321 6117.88,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- dc8ccc03e8114eefaa1616a97d8cdf48&amp;#45;&amp;#45;c9d69041cd474e0fbde56b8b011dd324 --&gt;\n&lt;g id=\"edge1911\" class=\"edge\"&gt;\n&lt;title&gt;dc8ccc03e8114eefaa1616a97d8cdf48&amp;#45;&amp;#45;c9d69041cd474e0fbde56b8b011dd324&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6147.6,-350.65C6147.6,-361.2 6147.6,-371.76 6147.6,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 748ebeec5bc742d5a13cd6168f974d61 --&gt;\n&lt;g id=\"node762\" class=\"node\"&gt;\n&lt;title&gt;748ebeec5bc742d5a13cd6168f974d61&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"6241.2\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- dc8ccc03e8114eefaa1616a97d8cdf48&amp;#45;&amp;#45;748ebeec5bc742d5a13cd6168f974d61 --&gt;\n&lt;g id=\"edge758\" class=\"edge\"&gt;\n&lt;title&gt;dc8ccc03e8114eefaa1616a97d8cdf48&amp;#45;&amp;#45;748ebeec5bc742d5a13cd6168f974d61&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6177.08,-321C6197.04,-321 6222.14,-321 6233.76,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a4280abe8917498ba7232843d1ccadb1 --&gt;\n&lt;g id=\"node763\" class=\"node\"&gt;\n&lt;title&gt;a4280abe8917498ba7232843d1ccadb1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6335.52,-321.72 6334.08,-321.72 6334.08,-320.28 6335.52,-320.28 6335.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 748ebeec5bc742d5a13cd6168f974d61&amp;#45;&amp;#45;a4280abe8917498ba7232843d1ccadb1 --&gt;\n&lt;g id=\"edge759\" class=\"edge\"&gt;\n&lt;title&gt;748ebeec5bc742d5a13cd6168f974d61&amp;#45;&amp;#45;a4280abe8917498ba7232843d1ccadb1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6248.79,-321C6269.13,-321 6329.84,-321 6333.62,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a86369bdb8cc47a3b4278e8617647d0a --&gt;\n&lt;g id=\"node764\" class=\"node\"&gt;\n&lt;title&gt;a86369bdb8cc47a3b4278e8617647d0a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6429.12,-321.72 6427.68,-321.72 6427.68,-320.28 6429.12,-320.28 6429.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a4280abe8917498ba7232843d1ccadb1&amp;#45;&amp;#45;a86369bdb8cc47a3b4278e8617647d0a --&gt;\n&lt;g id=\"edge760\" class=\"edge\"&gt;\n&lt;title&gt;a4280abe8917498ba7232843d1ccadb1&amp;#45;&amp;#45;a86369bdb8cc47a3b4278e8617647d0a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6335.87,-321C6338.6,-321 6424.65,-321 6427.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 65c86550fbed4b77b17056ba7d0c0eb0 --&gt;\n&lt;g id=\"node765\" class=\"node\"&gt;\n&lt;title&gt;65c86550fbed4b77b17056ba7d0c0eb0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6522.72,-321.72 6521.28,-321.72 6521.28,-320.28 6522.72,-320.28 6522.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a86369bdb8cc47a3b4278e8617647d0a&amp;#45;&amp;#45;65c86550fbed4b77b17056ba7d0c0eb0 --&gt;\n&lt;g id=\"edge761\" class=\"edge\"&gt;\n&lt;title&gt;a86369bdb8cc47a3b4278e8617647d0a&amp;#45;&amp;#45;65c86550fbed4b77b17056ba7d0c0eb0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6429.47,-321C6432.2,-321 6518.25,-321 6520.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd5e6010d6304607aa0374953461a7af --&gt;\n&lt;g id=\"node766\" class=\"node\"&gt;\n&lt;title&gt;dd5e6010d6304607aa0374953461a7af&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6675.12,-321.72 6673.68,-321.72 6673.68,-320.28 6675.12,-320.28 6675.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 65c86550fbed4b77b17056ba7d0c0eb0&amp;#45;&amp;#45;dd5e6010d6304607aa0374953461a7af --&gt;\n&lt;g id=\"edge762\" class=\"edge\"&gt;\n&lt;title&gt;65c86550fbed4b77b17056ba7d0c0eb0&amp;#45;&amp;#45;dd5e6010d6304607aa0374953461a7af&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6523.11,-321C6527.59,-321 6668.88,-321 6673.29,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0b3dbf488ab745c7a8c7a31fe6441eb2 --&gt;\n&lt;g id=\"node767\" class=\"node\"&gt;\n&lt;title&gt;0b3dbf488ab745c7a8c7a31fe6441eb2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6827.52,-321.72 6826.08,-321.72 6826.08,-320.28 6827.52,-320.28 6827.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd5e6010d6304607aa0374953461a7af&amp;#45;&amp;#45;0b3dbf488ab745c7a8c7a31fe6441eb2 --&gt;\n&lt;g id=\"edge763\" class=\"edge\"&gt;\n&lt;title&gt;dd5e6010d6304607aa0374953461a7af&amp;#45;&amp;#45;0b3dbf488ab745c7a8c7a31fe6441eb2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6675.51,-321C6679.99,-321 6821.28,-321 6825.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2ff0c13867bf4aa5b3c7f0c0058ccac3 --&gt;\n&lt;g id=\"node768\" class=\"node\"&gt;\n&lt;title&gt;2ff0c13867bf4aa5b3c7f0c0058ccac3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6921.12,-321.72 6919.68,-321.72 6919.68,-320.28 6921.12,-320.28 6921.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0b3dbf488ab745c7a8c7a31fe6441eb2&amp;#45;&amp;#45;2ff0c13867bf4aa5b3c7f0c0058ccac3 --&gt;\n&lt;g id=\"edge764\" class=\"edge\"&gt;\n&lt;title&gt;0b3dbf488ab745c7a8c7a31fe6441eb2&amp;#45;&amp;#45;2ff0c13867bf4aa5b3c7f0c0058ccac3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6827.87,-321C6830.6,-321 6916.65,-321 6919.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 48581d5868e943a1a8e278b428e5beb0 --&gt;\n&lt;g id=\"node769\" class=\"node\"&gt;\n&lt;title&gt;48581d5868e943a1a8e278b428e5beb0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7014.72,-321.72 7013.28,-321.72 7013.28,-320.28 7014.72,-320.28 7014.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2ff0c13867bf4aa5b3c7f0c0058ccac3&amp;#45;&amp;#45;48581d5868e943a1a8e278b428e5beb0 --&gt;\n&lt;g id=\"edge765\" class=\"edge\"&gt;\n&lt;title&gt;2ff0c13867bf4aa5b3c7f0c0058ccac3&amp;#45;&amp;#45;48581d5868e943a1a8e278b428e5beb0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6921.47,-321C6924.2,-321 7010.25,-321 7012.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- f20e987c03d74538958436cda0b6775f --&gt;\n&lt;g id=\"node770\" class=\"node\"&gt;\n&lt;title&gt;f20e987c03d74538958436cda0b6775f&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"7107.6\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 48581d5868e943a1a8e278b428e5beb0&amp;#45;&amp;#45;f20e987c03d74538958436cda0b6775f --&gt;\n&lt;g id=\"edge766\" class=\"edge\"&gt;\n&lt;title&gt;48581d5868e943a1a8e278b428e5beb0&amp;#45;&amp;#45;f20e987c03d74538958436cda0b6775f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7015.07,-321C7017.37,-321 7079.21,-321 7099.92,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 410a0f29d5ed4147a1fefcdd4d1955be --&gt;\n&lt;g id=\"node771\" class=\"node\"&gt;\n&lt;title&gt;410a0f29d5ed4147a1fefcdd4d1955be&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M7218,-349.8C7218,-349.8 7184.4,-349.8 7184.4,-349.8 7178.4,-349.8 7172.4,-343.8 7172.4,-337.8 7172.4,-337.8 7172.4,-304.2 7172.4,-304.2 7172.4,-298.2 7178.4,-292.2 7184.4,-292.2 7184.4,-292.2 7218,-292.2 7218,-292.2 7224,-292.2 7230,-298.2 7230,-304.2 7230,-304.2 7230,-337.8 7230,-337.8 7230,-343.8 7224,-349.8 7218,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"7201.2\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- f20e987c03d74538958436cda0b6775f&amp;#45;&amp;#45;410a0f29d5ed4147a1fefcdd4d1955be --&gt;\n&lt;g id=\"edge767\" class=\"edge\"&gt;\n&lt;title&gt;f20e987c03d74538958436cda0b6775f&amp;#45;&amp;#45;410a0f29d5ed4147a1fefcdd4d1955be&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7115.19,-321C7126.84,-321 7151.72,-321 7171.57,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 410a0f29d5ed4147a1fefcdd4d1955be&amp;#45;&amp;#45;32be08f288e249bba158e285f1dc2af5 --&gt;\n&lt;g id=\"edge1912\" class=\"edge\"&gt;\n&lt;title&gt;410a0f29d5ed4147a1fefcdd4d1955be&amp;#45;&amp;#45;32be08f288e249bba158e285f1dc2af5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7201.2,-350.65C7201.2,-361.2 7201.2,-371.76 7201.2,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- d37e365559d74c08af1a08ff57b79c9a --&gt;\n&lt;g id=\"node772\" class=\"node\"&gt;\n&lt;title&gt;d37e365559d74c08af1a08ff57b79c9a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7295.52,-321.72 7294.08,-321.72 7294.08,-320.28 7295.52,-320.28 7295.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 410a0f29d5ed4147a1fefcdd4d1955be&amp;#45;&amp;#45;d37e365559d74c08af1a08ff57b79c9a --&gt;\n&lt;g id=\"edge768\" class=\"edge\"&gt;\n&lt;title&gt;410a0f29d5ed4147a1fefcdd4d1955be&amp;#45;&amp;#45;d37e365559d74c08af1a08ff57b79c9a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7230.68,-321C7256.73,-321 7291.54,-321 7293.7,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c0cf42e8a5f4bebb3a608c573813037 --&gt;\n&lt;g id=\"node773\" class=\"node\"&gt;\n&lt;title&gt;7c0cf42e8a5f4bebb3a608c573813037&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M7405.2,-349.8C7405.2,-349.8 7371.6,-349.8 7371.6,-349.8 7365.6,-349.8 7359.6,-343.8 7359.6,-337.8 7359.6,-337.8 7359.6,-304.2 7359.6,-304.2 7359.6,-298.2 7365.6,-292.2 7371.6,-292.2 7371.6,-292.2 7405.2,-292.2 7405.2,-292.2 7411.2,-292.2 7417.2,-298.2 7417.2,-304.2 7417.2,-304.2 7417.2,-337.8 7417.2,-337.8 7417.2,-343.8 7411.2,-349.8 7405.2,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"7388.4\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d37e365559d74c08af1a08ff57b79c9a&amp;#45;&amp;#45;7c0cf42e8a5f4bebb3a608c573813037 --&gt;\n&lt;g id=\"edge769\" class=\"edge\"&gt;\n&lt;title&gt;d37e365559d74c08af1a08ff57b79c9a&amp;#45;&amp;#45;7c0cf42e8a5f4bebb3a608c573813037&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7295.87,-321C7297.59,-321 7332.48,-321 7358.68,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c0cf42e8a5f4bebb3a608c573813037&amp;#45;&amp;#45;61a2bd77f175451a9660b1878c92f8c6 --&gt;\n&lt;g id=\"edge1913\" class=\"edge\"&gt;\n&lt;title&gt;7c0cf42e8a5f4bebb3a608c573813037&amp;#45;&amp;#45;61a2bd77f175451a9660b1878c92f8c6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7388.4,-350.65C7388.4,-361.2 7388.4,-371.76 7388.4,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2c1c64b44539463bb6e479466e1634da --&gt;\n&lt;g id=\"node774\" class=\"node\"&gt;\n&lt;title&gt;2c1c64b44539463bb6e479466e1634da&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"7482\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c0cf42e8a5f4bebb3a608c573813037&amp;#45;&amp;#45;2c1c64b44539463bb6e479466e1634da --&gt;\n&lt;g id=\"edge770\" class=\"edge\"&gt;\n&lt;title&gt;7c0cf42e8a5f4bebb3a608c573813037&amp;#45;&amp;#45;2c1c64b44539463bb6e479466e1634da&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7417.88,-321C7437.84,-321 7462.94,-321 7474.56,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- e100bb8a765043ceac7ea7a46b8f61c5 --&gt;\n&lt;g id=\"node775\" class=\"node\"&gt;\n&lt;title&gt;e100bb8a765043ceac7ea7a46b8f61c5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7576.32,-321.72 7574.88,-321.72 7574.88,-320.28 7576.32,-320.28 7576.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2c1c64b44539463bb6e479466e1634da&amp;#45;&amp;#45;e100bb8a765043ceac7ea7a46b8f61c5 --&gt;\n&lt;g id=\"edge771\" class=\"edge\"&gt;\n&lt;title&gt;2c1c64b44539463bb6e479466e1634da&amp;#45;&amp;#45;e100bb8a765043ceac7ea7a46b8f61c5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7489.59,-321C7509.93,-321 7570.64,-321 7574.42,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 68a5229e91fc4605835b68def3947894 --&gt;\n&lt;g id=\"node776\" class=\"node\"&gt;\n&lt;title&gt;68a5229e91fc4605835b68def3947894&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7669.92,-321.72 7668.48,-321.72 7668.48,-320.28 7669.92,-320.28 7669.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e100bb8a765043ceac7ea7a46b8f61c5&amp;#45;&amp;#45;68a5229e91fc4605835b68def3947894 --&gt;\n&lt;g id=\"edge772\" class=\"edge\"&gt;\n&lt;title&gt;e100bb8a765043ceac7ea7a46b8f61c5&amp;#45;&amp;#45;68a5229e91fc4605835b68def3947894&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7576.67,-321C7579.4,-321 7665.45,-321 7668.14,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- ff8e98d8132248bca43f1df9b73c423c --&gt;\n&lt;g id=\"node777\" class=\"node\"&gt;\n&lt;title&gt;ff8e98d8132248bca43f1df9b73c423c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7763.52,-321.72 7762.08,-321.72 7762.08,-320.28 7763.52,-320.28 7763.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 68a5229e91fc4605835b68def3947894&amp;#45;&amp;#45;ff8e98d8132248bca43f1df9b73c423c --&gt;\n&lt;g id=\"edge773\" class=\"edge\"&gt;\n&lt;title&gt;68a5229e91fc4605835b68def3947894&amp;#45;&amp;#45;ff8e98d8132248bca43f1df9b73c423c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7670.27,-321C7673,-321 7759.05,-321 7761.74,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d821d3db3e8482eaf858bfb2224c5af --&gt;\n&lt;g id=\"node778\" class=\"node\"&gt;\n&lt;title&gt;7d821d3db3e8482eaf858bfb2224c5af&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7915.92,-321.72 7914.48,-321.72 7914.48,-320.28 7915.92,-320.28 7915.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ff8e98d8132248bca43f1df9b73c423c&amp;#45;&amp;#45;7d821d3db3e8482eaf858bfb2224c5af --&gt;\n&lt;g id=\"edge774\" class=\"edge\"&gt;\n&lt;title&gt;ff8e98d8132248bca43f1df9b73c423c&amp;#45;&amp;#45;7d821d3db3e8482eaf858bfb2224c5af&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7763.91,-321C7768.39,-321 7909.68,-321 7914.09,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 40a97913d5104afcb879438e2af0f9e1 --&gt;\n&lt;g id=\"node779\" class=\"node\"&gt;\n&lt;title&gt;40a97913d5104afcb879438e2af0f9e1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8068.32,-321.72 8066.88,-321.72 8066.88,-320.28 8068.32,-320.28 8068.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d821d3db3e8482eaf858bfb2224c5af&amp;#45;&amp;#45;40a97913d5104afcb879438e2af0f9e1 --&gt;\n&lt;g id=\"edge775\" class=\"edge\"&gt;\n&lt;title&gt;7d821d3db3e8482eaf858bfb2224c5af&amp;#45;&amp;#45;40a97913d5104afcb879438e2af0f9e1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7916.31,-321C7920.79,-321 8062.08,-321 8066.49,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- eb21e586c6094013a3e5d8c6ef6afa23 --&gt;\n&lt;g id=\"node780\" class=\"node\"&gt;\n&lt;title&gt;eb21e586c6094013a3e5d8c6ef6afa23&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8161.92,-321.72 8160.48,-321.72 8160.48,-320.28 8161.92,-320.28 8161.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 40a97913d5104afcb879438e2af0f9e1&amp;#45;&amp;#45;eb21e586c6094013a3e5d8c6ef6afa23 --&gt;\n&lt;g id=\"edge776\" class=\"edge\"&gt;\n&lt;title&gt;40a97913d5104afcb879438e2af0f9e1&amp;#45;&amp;#45;eb21e586c6094013a3e5d8c6ef6afa23&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8068.67,-321C8071.4,-321 8157.45,-321 8160.14,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3b9aedb8710846b3a89dbc369022ccc7 --&gt;\n&lt;g id=\"node781\" class=\"node\"&gt;\n&lt;title&gt;3b9aedb8710846b3a89dbc369022ccc7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8255.52,-321.72 8254.08,-321.72 8254.08,-320.28 8255.52,-320.28 8255.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- eb21e586c6094013a3e5d8c6ef6afa23&amp;#45;&amp;#45;3b9aedb8710846b3a89dbc369022ccc7 --&gt;\n&lt;g id=\"edge777\" class=\"edge\"&gt;\n&lt;title&gt;eb21e586c6094013a3e5d8c6ef6afa23&amp;#45;&amp;#45;3b9aedb8710846b3a89dbc369022ccc7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8162.27,-321C8165,-321 8251.05,-321 8253.74,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1d912f17f9964142904b1531bb9571de --&gt;\n&lt;g id=\"node782\" class=\"node\"&gt;\n&lt;title&gt;1d912f17f9964142904b1531bb9571de&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"8348.4\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3b9aedb8710846b3a89dbc369022ccc7&amp;#45;&amp;#45;1d912f17f9964142904b1531bb9571de --&gt;\n&lt;g id=\"edge778\" class=\"edge\"&gt;\n&lt;title&gt;3b9aedb8710846b3a89dbc369022ccc7&amp;#45;&amp;#45;1d912f17f9964142904b1531bb9571de&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8255.87,-321C8258.17,-321 8320.01,-321 8340.72,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- b512f941947a4930b32a545339965f6a --&gt;\n&lt;g id=\"node783\" class=\"node\"&gt;\n&lt;title&gt;b512f941947a4930b32a545339965f6a&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M8458.8,-349.8C8458.8,-349.8 8425.2,-349.8 8425.2,-349.8 8419.2,-349.8 8413.2,-343.8 8413.2,-337.8 8413.2,-337.8 8413.2,-304.2 8413.2,-304.2 8413.2,-298.2 8419.2,-292.2 8425.2,-292.2 8425.2,-292.2 8458.8,-292.2 8458.8,-292.2 8464.8,-292.2 8470.8,-298.2 8470.8,-304.2 8470.8,-304.2 8470.8,-337.8 8470.8,-337.8 8470.8,-343.8 8464.8,-349.8 8458.8,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"8442\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 1d912f17f9964142904b1531bb9571de&amp;#45;&amp;#45;b512f941947a4930b32a545339965f6a --&gt;\n&lt;g id=\"edge779\" class=\"edge\"&gt;\n&lt;title&gt;1d912f17f9964142904b1531bb9571de&amp;#45;&amp;#45;b512f941947a4930b32a545339965f6a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8355.99,-321C8367.64,-321 8392.52,-321 8412.37,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- b512f941947a4930b32a545339965f6a&amp;#45;&amp;#45;a7514eddd92e471fa22e4b35bb7a68ac --&gt;\n&lt;g id=\"edge1914\" class=\"edge\"&gt;\n&lt;title&gt;b512f941947a4930b32a545339965f6a&amp;#45;&amp;#45;a7514eddd92e471fa22e4b35bb7a68ac&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8442,-350.65C8442,-361.2 8442,-371.76 8442,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c1286ce0fe544ee893a1c4ea3801e6f --&gt;\n&lt;g id=\"node784\" class=\"node\"&gt;\n&lt;title&gt;0c1286ce0fe544ee893a1c4ea3801e6f&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"8535.6\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- b512f941947a4930b32a545339965f6a&amp;#45;&amp;#45;0c1286ce0fe544ee893a1c4ea3801e6f --&gt;\n&lt;g id=\"edge780\" class=\"edge\"&gt;\n&lt;title&gt;b512f941947a4930b32a545339965f6a&amp;#45;&amp;#45;0c1286ce0fe544ee893a1c4ea3801e6f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8471.48,-321C8491.44,-321 8516.54,-321 8528.16,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6cd0fe20a87c4af196092113f5a46064 --&gt;\n&lt;g id=\"node785\" class=\"node\"&gt;\n&lt;title&gt;6cd0fe20a87c4af196092113f5a46064&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8629.92,-321.72 8628.48,-321.72 8628.48,-320.28 8629.92,-320.28 8629.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c1286ce0fe544ee893a1c4ea3801e6f&amp;#45;&amp;#45;6cd0fe20a87c4af196092113f5a46064 --&gt;\n&lt;g id=\"edge781\" class=\"edge\"&gt;\n&lt;title&gt;0c1286ce0fe544ee893a1c4ea3801e6f&amp;#45;&amp;#45;6cd0fe20a87c4af196092113f5a46064&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8543.19,-321C8563.53,-321 8624.24,-321 8628.02,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- e9c158b67eb84ea38a3f8850a08f19ba --&gt;\n&lt;g id=\"node786\" class=\"node\"&gt;\n&lt;title&gt;e9c158b67eb84ea38a3f8850a08f19ba&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8782.32,-321.72 8780.88,-321.72 8780.88,-320.28 8782.32,-320.28 8782.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6cd0fe20a87c4af196092113f5a46064&amp;#45;&amp;#45;e9c158b67eb84ea38a3f8850a08f19ba --&gt;\n&lt;g id=\"edge782\" class=\"edge\"&gt;\n&lt;title&gt;6cd0fe20a87c4af196092113f5a46064&amp;#45;&amp;#45;e9c158b67eb84ea38a3f8850a08f19ba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8630.31,-321C8634.79,-321 8776.08,-321 8780.49,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- af16356331f149619077161c7476da95 --&gt;\n&lt;g id=\"node787\" class=\"node\"&gt;\n&lt;title&gt;af16356331f149619077161c7476da95&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8934.72,-321.72 8933.28,-321.72 8933.28,-320.28 8934.72,-320.28 8934.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e9c158b67eb84ea38a3f8850a08f19ba&amp;#45;&amp;#45;af16356331f149619077161c7476da95 --&gt;\n&lt;g id=\"edge783\" class=\"edge\"&gt;\n&lt;title&gt;e9c158b67eb84ea38a3f8850a08f19ba&amp;#45;&amp;#45;af16356331f149619077161c7476da95&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8782.71,-321C8787.19,-321 8928.48,-321 8932.89,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 166f2ac2ff1443c681b2921b29a52f3e --&gt;\n&lt;g id=\"node788\" class=\"node\"&gt;\n&lt;title&gt;166f2ac2ff1443c681b2921b29a52f3e&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"9027.6\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- af16356331f149619077161c7476da95&amp;#45;&amp;#45;166f2ac2ff1443c681b2921b29a52f3e --&gt;\n&lt;g id=\"edge784\" class=\"edge\"&gt;\n&lt;title&gt;af16356331f149619077161c7476da95&amp;#45;&amp;#45;166f2ac2ff1443c681b2921b29a52f3e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8935.07,-321C8937.37,-321 8999.21,-321 9019.92,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 807d5cae170949e18cc3e60baf17253c --&gt;\n&lt;g id=\"node789\" class=\"node\"&gt;\n&lt;title&gt;807d5cae170949e18cc3e60baf17253c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"9121.2\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 166f2ac2ff1443c681b2921b29a52f3e&amp;#45;&amp;#45;807d5cae170949e18cc3e60baf17253c --&gt;\n&lt;g id=\"edge785\" class=\"edge\"&gt;\n&lt;title&gt;166f2ac2ff1443c681b2921b29a52f3e&amp;#45;&amp;#45;807d5cae170949e18cc3e60baf17253c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9035.19,-321C9052.09,-321 9096.84,-321 9113.67,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3011e3ed9f9640eb85fe47e580fa49c7 --&gt;\n&lt;g id=\"node790\" class=\"node\"&gt;\n&lt;title&gt;3011e3ed9f9640eb85fe47e580fa49c7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9215.52,-321.72 9214.08,-321.72 9214.08,-320.28 9215.52,-320.28 9215.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 807d5cae170949e18cc3e60baf17253c&amp;#45;&amp;#45;3011e3ed9f9640eb85fe47e580fa49c7 --&gt;\n&lt;g id=\"edge786\" class=\"edge\"&gt;\n&lt;title&gt;807d5cae170949e18cc3e60baf17253c&amp;#45;&amp;#45;3011e3ed9f9640eb85fe47e580fa49c7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9128.79,-321C9149.13,-321 9209.84,-321 9213.62,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 15cd125083e34c90beee5dea8a357cba --&gt;\n&lt;g id=\"node791\" class=\"node\"&gt;\n&lt;title&gt;15cd125083e34c90beee5dea8a357cba&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9309.12,-321.72 9307.68,-321.72 9307.68,-320.28 9309.12,-320.28 9309.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3011e3ed9f9640eb85fe47e580fa49c7&amp;#45;&amp;#45;15cd125083e34c90beee5dea8a357cba --&gt;\n&lt;g id=\"edge787\" class=\"edge\"&gt;\n&lt;title&gt;3011e3ed9f9640eb85fe47e580fa49c7&amp;#45;&amp;#45;15cd125083e34c90beee5dea8a357cba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9215.87,-321C9218.6,-321 9304.65,-321 9307.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 882b2e52f9384a5ab3f6f86eb42463e0 --&gt;\n&lt;g id=\"node792\" class=\"node\"&gt;\n&lt;title&gt;882b2e52f9384a5ab3f6f86eb42463e0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9461.52,-321.72 9460.08,-321.72 9460.08,-320.28 9461.52,-320.28 9461.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 15cd125083e34c90beee5dea8a357cba&amp;#45;&amp;#45;882b2e52f9384a5ab3f6f86eb42463e0 --&gt;\n&lt;g id=\"edge788\" class=\"edge\"&gt;\n&lt;title&gt;15cd125083e34c90beee5dea8a357cba&amp;#45;&amp;#45;882b2e52f9384a5ab3f6f86eb42463e0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9309.51,-321C9313.99,-321 9455.28,-321 9459.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4dd2eaf227d24e6e869046703686f3f4 --&gt;\n&lt;g id=\"node793\" class=\"node\"&gt;\n&lt;title&gt;4dd2eaf227d24e6e869046703686f3f4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9613.92,-321.72 9612.48,-321.72 9612.48,-320.28 9613.92,-320.28 9613.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 882b2e52f9384a5ab3f6f86eb42463e0&amp;#45;&amp;#45;4dd2eaf227d24e6e869046703686f3f4 --&gt;\n&lt;g id=\"edge789\" class=\"edge\"&gt;\n&lt;title&gt;882b2e52f9384a5ab3f6f86eb42463e0&amp;#45;&amp;#45;4dd2eaf227d24e6e869046703686f3f4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9461.91,-321C9466.39,-321 9607.68,-321 9612.09,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 33d4e826bed54dd6964ba4d28ee5bc81 --&gt;\n&lt;g id=\"node794\" class=\"node\"&gt;\n&lt;title&gt;33d4e826bed54dd6964ba4d28ee5bc81&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9707.52,-321.72 9706.08,-321.72 9706.08,-320.28 9707.52,-320.28 9707.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4dd2eaf227d24e6e869046703686f3f4&amp;#45;&amp;#45;33d4e826bed54dd6964ba4d28ee5bc81 --&gt;\n&lt;g id=\"edge790\" class=\"edge\"&gt;\n&lt;title&gt;4dd2eaf227d24e6e869046703686f3f4&amp;#45;&amp;#45;33d4e826bed54dd6964ba4d28ee5bc81&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9614.27,-321C9617,-321 9703.05,-321 9705.74,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a1e98c24cf0349bfacee97e3a317bd25 --&gt;\n&lt;g id=\"node795\" class=\"node\"&gt;\n&lt;title&gt;a1e98c24cf0349bfacee97e3a317bd25&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"9800.4\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 33d4e826bed54dd6964ba4d28ee5bc81&amp;#45;&amp;#45;a1e98c24cf0349bfacee97e3a317bd25 --&gt;\n&lt;g id=\"edge791\" class=\"edge\"&gt;\n&lt;title&gt;33d4e826bed54dd6964ba4d28ee5bc81&amp;#45;&amp;#45;a1e98c24cf0349bfacee97e3a317bd25&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9707.87,-321C9710.17,-321 9772.01,-321 9792.72,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ad6513589334e11975fef311ee6529c --&gt;\n&lt;g id=\"node796\" class=\"node\"&gt;\n&lt;title&gt;0ad6513589334e11975fef311ee6529c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"9894\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- a1e98c24cf0349bfacee97e3a317bd25&amp;#45;&amp;#45;0ad6513589334e11975fef311ee6529c --&gt;\n&lt;g id=\"edge792\" class=\"edge\"&gt;\n&lt;title&gt;a1e98c24cf0349bfacee97e3a317bd25&amp;#45;&amp;#45;0ad6513589334e11975fef311ee6529c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9807.99,-321C9824.89,-321 9869.64,-321 9886.47,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6eb3b534efa8416ea5bfa6c38a41a589 --&gt;\n&lt;g id=\"node797\" class=\"node\"&gt;\n&lt;title&gt;6eb3b534efa8416ea5bfa6c38a41a589&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9988.32,-321.72 9986.88,-321.72 9986.88,-320.28 9988.32,-320.28 9988.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ad6513589334e11975fef311ee6529c&amp;#45;&amp;#45;6eb3b534efa8416ea5bfa6c38a41a589 --&gt;\n&lt;g id=\"edge793\" class=\"edge\"&gt;\n&lt;title&gt;0ad6513589334e11975fef311ee6529c&amp;#45;&amp;#45;6eb3b534efa8416ea5bfa6c38a41a589&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9901.59,-321C9921.93,-321 9982.64,-321 9986.42,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- aa1a5f2ffcec49919e167756b816e2ad --&gt;\n&lt;g id=\"node798\" class=\"node\"&gt;\n&lt;title&gt;aa1a5f2ffcec49919e167756b816e2ad&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10081.92,-321.72 10080.48,-321.72 10080.48,-320.28 10081.92,-320.28 10081.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6eb3b534efa8416ea5bfa6c38a41a589&amp;#45;&amp;#45;aa1a5f2ffcec49919e167756b816e2ad --&gt;\n&lt;g id=\"edge794\" class=\"edge\"&gt;\n&lt;title&gt;6eb3b534efa8416ea5bfa6c38a41a589&amp;#45;&amp;#45;aa1a5f2ffcec49919e167756b816e2ad&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9988.67,-321C9991.4,-321 10077.45,-321 10080.14,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- ee197b2c89de4adb97257eaff4842432 --&gt;\n&lt;g id=\"node799\" class=\"node\"&gt;\n&lt;title&gt;ee197b2c89de4adb97257eaff4842432&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10175.52,-321.72 10174.08,-321.72 10174.08,-320.28 10175.52,-320.28 10175.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- aa1a5f2ffcec49919e167756b816e2ad&amp;#45;&amp;#45;ee197b2c89de4adb97257eaff4842432 --&gt;\n&lt;g id=\"edge795\" class=\"edge\"&gt;\n&lt;title&gt;aa1a5f2ffcec49919e167756b816e2ad&amp;#45;&amp;#45;ee197b2c89de4adb97257eaff4842432&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10082.27,-321C10085,-321 10171.05,-321 10173.74,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a405a802057444f5b9f55cb9d3480b3a --&gt;\n&lt;g id=\"node800\" class=\"node\"&gt;\n&lt;title&gt;a405a802057444f5b9f55cb9d3480b3a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10327.92,-321.72 10326.48,-321.72 10326.48,-320.28 10327.92,-320.28 10327.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ee197b2c89de4adb97257eaff4842432&amp;#45;&amp;#45;a405a802057444f5b9f55cb9d3480b3a --&gt;\n&lt;g id=\"edge796\" class=\"edge\"&gt;\n&lt;title&gt;ee197b2c89de4adb97257eaff4842432&amp;#45;&amp;#45;a405a802057444f5b9f55cb9d3480b3a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10175.91,-321C10180.39,-321 10321.68,-321 10326.09,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- d7da391b72934f8b865fd8c58a45add0 --&gt;\n&lt;g id=\"node801\" class=\"node\"&gt;\n&lt;title&gt;d7da391b72934f8b865fd8c58a45add0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10480.32,-321.72 10478.88,-321.72 10478.88,-320.28 10480.32,-320.28 10480.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a405a802057444f5b9f55cb9d3480b3a&amp;#45;&amp;#45;d7da391b72934f8b865fd8c58a45add0 --&gt;\n&lt;g id=\"edge797\" class=\"edge\"&gt;\n&lt;title&gt;a405a802057444f5b9f55cb9d3480b3a&amp;#45;&amp;#45;d7da391b72934f8b865fd8c58a45add0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10328.31,-321C10332.79,-321 10474.08,-321 10478.49,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3d3d0a2189e46b6bbdc65ed6932ce10 --&gt;\n&lt;g id=\"node802\" class=\"node\"&gt;\n&lt;title&gt;c3d3d0a2189e46b6bbdc65ed6932ce10&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10573.92,-321.72 10572.48,-321.72 10572.48,-320.28 10573.92,-320.28 10573.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d7da391b72934f8b865fd8c58a45add0&amp;#45;&amp;#45;c3d3d0a2189e46b6bbdc65ed6932ce10 --&gt;\n&lt;g id=\"edge798\" class=\"edge\"&gt;\n&lt;title&gt;d7da391b72934f8b865fd8c58a45add0&amp;#45;&amp;#45;c3d3d0a2189e46b6bbdc65ed6932ce10&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10480.67,-321C10483.4,-321 10569.45,-321 10572.14,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- f9cfcc4ecc6a4035a0a5dbfb087fea38 --&gt;\n&lt;g id=\"node803\" class=\"node\"&gt;\n&lt;title&gt;f9cfcc4ecc6a4035a0a5dbfb087fea38&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10667.52,-321.72 10666.08,-321.72 10666.08,-320.28 10667.52,-320.28 10667.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3d3d0a2189e46b6bbdc65ed6932ce10&amp;#45;&amp;#45;f9cfcc4ecc6a4035a0a5dbfb087fea38 --&gt;\n&lt;g id=\"edge799\" class=\"edge\"&gt;\n&lt;title&gt;c3d3d0a2189e46b6bbdc65ed6932ce10&amp;#45;&amp;#45;f9cfcc4ecc6a4035a0a5dbfb087fea38&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10574.27,-321C10577,-321 10663.05,-321 10665.74,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8582989f25d148249467a0e5cd4c80ab --&gt;\n&lt;g id=\"node804\" class=\"node\"&gt;\n&lt;title&gt;8582989f25d148249467a0e5cd4c80ab&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"10760.4\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- f9cfcc4ecc6a4035a0a5dbfb087fea38&amp;#45;&amp;#45;8582989f25d148249467a0e5cd4c80ab --&gt;\n&lt;g id=\"edge800\" class=\"edge\"&gt;\n&lt;title&gt;f9cfcc4ecc6a4035a0a5dbfb087fea38&amp;#45;&amp;#45;8582989f25d148249467a0e5cd4c80ab&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10667.87,-321C10670.17,-321 10732.01,-321 10752.72,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7cc7041063694b3f9d0ee8cee434e7b8 --&gt;\n&lt;g id=\"node805\" class=\"node\"&gt;\n&lt;title&gt;7cc7041063694b3f9d0ee8cee434e7b8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10854.72,-321.72 10853.28,-321.72 10853.28,-320.28 10854.72,-320.28 10854.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8582989f25d148249467a0e5cd4c80ab&amp;#45;&amp;#45;7cc7041063694b3f9d0ee8cee434e7b8 --&gt;\n&lt;g id=\"edge801\" class=\"edge\"&gt;\n&lt;title&gt;8582989f25d148249467a0e5cd4c80ab&amp;#45;&amp;#45;7cc7041063694b3f9d0ee8cee434e7b8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10767.99,-321C10788.33,-321 10849.04,-321 10852.82,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- e98c6ec160a54db889c1764a16c68a5f --&gt;\n&lt;g id=\"node806\" class=\"node\"&gt;\n&lt;title&gt;e98c6ec160a54db889c1764a16c68a5f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11007.12,-321.72 11005.68,-321.72 11005.68,-320.28 11007.12,-320.28 11007.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7cc7041063694b3f9d0ee8cee434e7b8&amp;#45;&amp;#45;e98c6ec160a54db889c1764a16c68a5f --&gt;\n&lt;g id=\"edge802\" class=\"edge\"&gt;\n&lt;title&gt;7cc7041063694b3f9d0ee8cee434e7b8&amp;#45;&amp;#45;e98c6ec160a54db889c1764a16c68a5f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10855.11,-321C10859.59,-321 11000.88,-321 11005.29,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 63a4ea18c6084b59a4b1a5163fe54df8 --&gt;\n&lt;g id=\"node807\" class=\"node\"&gt;\n&lt;title&gt;63a4ea18c6084b59a4b1a5163fe54df8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11159.52,-321.72 11158.08,-321.72 11158.08,-320.28 11159.52,-320.28 11159.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e98c6ec160a54db889c1764a16c68a5f&amp;#45;&amp;#45;63a4ea18c6084b59a4b1a5163fe54df8 --&gt;\n&lt;g id=\"edge803\" class=\"edge\"&gt;\n&lt;title&gt;e98c6ec160a54db889c1764a16c68a5f&amp;#45;&amp;#45;63a4ea18c6084b59a4b1a5163fe54df8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11007.51,-321C11011.99,-321 11153.28,-321 11157.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 940d4f41128745628f9f29ed59c019a6 --&gt;\n&lt;g id=\"node808\" class=\"node\"&gt;\n&lt;title&gt;940d4f41128745628f9f29ed59c019a6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11253.12,-321.72 11251.68,-321.72 11251.68,-320.28 11253.12,-320.28 11253.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 63a4ea18c6084b59a4b1a5163fe54df8&amp;#45;&amp;#45;940d4f41128745628f9f29ed59c019a6 --&gt;\n&lt;g id=\"edge804\" class=\"edge\"&gt;\n&lt;title&gt;63a4ea18c6084b59a4b1a5163fe54df8&amp;#45;&amp;#45;940d4f41128745628f9f29ed59c019a6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11159.87,-321C11162.6,-321 11248.65,-321 11251.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2fa3bb6aea9a413fb000423392967de3 --&gt;\n&lt;g id=\"node809\" class=\"node\"&gt;\n&lt;title&gt;2fa3bb6aea9a413fb000423392967de3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11346.72,-321.72 11345.28,-321.72 11345.28,-320.28 11346.72,-320.28 11346.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 940d4f41128745628f9f29ed59c019a6&amp;#45;&amp;#45;2fa3bb6aea9a413fb000423392967de3 --&gt;\n&lt;g id=\"edge805\" class=\"edge\"&gt;\n&lt;title&gt;940d4f41128745628f9f29ed59c019a6&amp;#45;&amp;#45;2fa3bb6aea9a413fb000423392967de3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11253.47,-321C11256.2,-321 11342.25,-321 11344.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 73884d07422c4eb9a2d79c186706cb0b --&gt;\n&lt;g id=\"node810\" class=\"node\"&gt;\n&lt;title&gt;73884d07422c4eb9a2d79c186706cb0b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11499.12,-321.72 11497.68,-321.72 11497.68,-320.28 11499.12,-320.28 11499.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2fa3bb6aea9a413fb000423392967de3&amp;#45;&amp;#45;73884d07422c4eb9a2d79c186706cb0b --&gt;\n&lt;g id=\"edge806\" class=\"edge\"&gt;\n&lt;title&gt;2fa3bb6aea9a413fb000423392967de3&amp;#45;&amp;#45;73884d07422c4eb9a2d79c186706cb0b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11347.11,-321C11351.59,-321 11492.88,-321 11497.29,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 29b8511a2dbc4bc2aedbaf19a9607fcd --&gt;\n&lt;g id=\"node811\" class=\"node\"&gt;\n&lt;title&gt;29b8511a2dbc4bc2aedbaf19a9607fcd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11651.52,-321.72 11650.08,-321.72 11650.08,-320.28 11651.52,-320.28 11651.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 73884d07422c4eb9a2d79c186706cb0b&amp;#45;&amp;#45;29b8511a2dbc4bc2aedbaf19a9607fcd --&gt;\n&lt;g id=\"edge807\" class=\"edge\"&gt;\n&lt;title&gt;73884d07422c4eb9a2d79c186706cb0b&amp;#45;&amp;#45;29b8511a2dbc4bc2aedbaf19a9607fcd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11499.51,-321C11503.99,-321 11645.28,-321 11649.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- abb6ca9aaed94c96b1a8b08ac239bd25 --&gt;\n&lt;g id=\"node812\" class=\"node\"&gt;\n&lt;title&gt;abb6ca9aaed94c96b1a8b08ac239bd25&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11745.12,-321.72 11743.68,-321.72 11743.68,-320.28 11745.12,-320.28 11745.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 29b8511a2dbc4bc2aedbaf19a9607fcd&amp;#45;&amp;#45;abb6ca9aaed94c96b1a8b08ac239bd25 --&gt;\n&lt;g id=\"edge808\" class=\"edge\"&gt;\n&lt;title&gt;29b8511a2dbc4bc2aedbaf19a9607fcd&amp;#45;&amp;#45;abb6ca9aaed94c96b1a8b08ac239bd25&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11651.87,-321C11654.6,-321 11740.65,-321 11743.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4bb559f0e3444f01bc452b48675288b6 --&gt;\n&lt;g id=\"node813\" class=\"node\"&gt;\n&lt;title&gt;4bb559f0e3444f01bc452b48675288b6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11838.72,-321.72 11837.28,-321.72 11837.28,-320.28 11838.72,-320.28 11838.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- abb6ca9aaed94c96b1a8b08ac239bd25&amp;#45;&amp;#45;4bb559f0e3444f01bc452b48675288b6 --&gt;\n&lt;g id=\"edge809\" class=\"edge\"&gt;\n&lt;title&gt;abb6ca9aaed94c96b1a8b08ac239bd25&amp;#45;&amp;#45;4bb559f0e3444f01bc452b48675288b6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11745.47,-321C11748.2,-321 11834.25,-321 11836.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9fe0cbca710f4095bd2c69daabcb5739 --&gt;\n&lt;g id=\"node814\" class=\"node\"&gt;\n&lt;title&gt;9fe0cbca710f4095bd2c69daabcb5739&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11991.12,-321.72 11989.68,-321.72 11989.68,-320.28 11991.12,-320.28 11991.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4bb559f0e3444f01bc452b48675288b6&amp;#45;&amp;#45;9fe0cbca710f4095bd2c69daabcb5739 --&gt;\n&lt;g id=\"edge810\" class=\"edge\"&gt;\n&lt;title&gt;4bb559f0e3444f01bc452b48675288b6&amp;#45;&amp;#45;9fe0cbca710f4095bd2c69daabcb5739&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11839.11,-321C11843.59,-321 11984.88,-321 11989.29,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- eae71ff6469b4543a20e8c2a02b10a81 --&gt;\n&lt;g id=\"node815\" class=\"node\"&gt;\n&lt;title&gt;eae71ff6469b4543a20e8c2a02b10a81&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12143.52,-321.72 12142.08,-321.72 12142.08,-320.28 12143.52,-320.28 12143.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9fe0cbca710f4095bd2c69daabcb5739&amp;#45;&amp;#45;eae71ff6469b4543a20e8c2a02b10a81 --&gt;\n&lt;g id=\"edge811\" class=\"edge\"&gt;\n&lt;title&gt;9fe0cbca710f4095bd2c69daabcb5739&amp;#45;&amp;#45;eae71ff6469b4543a20e8c2a02b10a81&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11991.51,-321C11995.99,-321 12137.28,-321 12141.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- e815578fbc6043c88b67fcfd599ccfa2 --&gt;\n&lt;g id=\"node816\" class=\"node\"&gt;\n&lt;title&gt;e815578fbc6043c88b67fcfd599ccfa2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12237.12,-321.72 12235.68,-321.72 12235.68,-320.28 12237.12,-320.28 12237.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- eae71ff6469b4543a20e8c2a02b10a81&amp;#45;&amp;#45;e815578fbc6043c88b67fcfd599ccfa2 --&gt;\n&lt;g id=\"edge812\" class=\"edge\"&gt;\n&lt;title&gt;eae71ff6469b4543a20e8c2a02b10a81&amp;#45;&amp;#45;e815578fbc6043c88b67fcfd599ccfa2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12143.87,-321C12146.6,-321 12232.65,-321 12235.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- ece391ae2a014872b3243391fdc563d4 --&gt;\n&lt;g id=\"node817\" class=\"node\"&gt;\n&lt;title&gt;ece391ae2a014872b3243391fdc563d4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12389.52,-321.72 12388.08,-321.72 12388.08,-320.28 12389.52,-320.28 12389.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e815578fbc6043c88b67fcfd599ccfa2&amp;#45;&amp;#45;ece391ae2a014872b3243391fdc563d4 --&gt;\n&lt;g id=\"edge813\" class=\"edge\"&gt;\n&lt;title&gt;e815578fbc6043c88b67fcfd599ccfa2&amp;#45;&amp;#45;ece391ae2a014872b3243391fdc563d4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12237.51,-321C12241.99,-321 12383.28,-321 12387.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- ce2d1a0f0563493eb0abfe7797b1001f --&gt;\n&lt;g id=\"node818\" class=\"node\"&gt;\n&lt;title&gt;ce2d1a0f0563493eb0abfe7797b1001f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12541.92,-321.72 12540.48,-321.72 12540.48,-320.28 12541.92,-320.28 12541.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ece391ae2a014872b3243391fdc563d4&amp;#45;&amp;#45;ce2d1a0f0563493eb0abfe7797b1001f --&gt;\n&lt;g id=\"edge814\" class=\"edge\"&gt;\n&lt;title&gt;ece391ae2a014872b3243391fdc563d4&amp;#45;&amp;#45;ce2d1a0f0563493eb0abfe7797b1001f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12389.91,-321C12394.39,-321 12535.68,-321 12540.09,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3b4a06cd692c4e1a8bc26d275c752899 --&gt;\n&lt;g id=\"node819\" class=\"node\"&gt;\n&lt;title&gt;3b4a06cd692c4e1a8bc26d275c752899&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M12721.2,-349.8C12721.2,-349.8 12618,-349.8 12618,-349.8 12612,-349.8 12606,-343.8 12606,-337.8 12606,-337.8 12606,-304.2 12606,-304.2 12606,-298.2 12612,-292.2 12618,-292.2 12618,-292.2 12721.2,-292.2 12721.2,-292.2 12727.2,-292.2 12733.2,-298.2 12733.2,-304.2 12733.2,-304.2 12733.2,-337.8 12733.2,-337.8 12733.2,-343.8 12727.2,-349.8 12721.2,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12669.6\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b03)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- ce2d1a0f0563493eb0abfe7797b1001f&amp;#45;&amp;#45;3b4a06cd692c4e1a8bc26d275c752899 --&gt;\n&lt;g id=\"edge815\" class=\"edge\"&gt;\n&lt;title&gt;ce2d1a0f0563493eb0abfe7797b1001f&amp;#45;&amp;#45;3b4a06cd692c4e1a8bc26d275c752899&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12542.29,-321C12544.17,-321 12574.56,-321 12605.06,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5941aa9689844ca9a5db7646bc5569b0 --&gt;\n&lt;g id=\"node820\" class=\"node\"&gt;\n&lt;title&gt;5941aa9689844ca9a5db7646bc5569b0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12798.72,-321.72 12797.28,-321.72 12797.28,-320.28 12798.72,-320.28 12798.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3b4a06cd692c4e1a8bc26d275c752899&amp;#45;&amp;#45;5941aa9689844ca9a5db7646bc5569b0 --&gt;\n&lt;g id=\"edge816\" class=\"edge\"&gt;\n&lt;title&gt;3b4a06cd692c4e1a8bc26d275c752899&amp;#45;&amp;#45;5941aa9689844ca9a5db7646bc5569b0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12734.17,-321C12764.66,-321 12795.04,-321 12796.91,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- ba58bcbb12a44fbe9737ba6e46e741e4 --&gt;\n&lt;g id=\"node821\" class=\"node\"&gt;\n&lt;title&gt;ba58bcbb12a44fbe9737ba6e46e741e4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12892.32,-321.72 12890.88,-321.72 12890.88,-320.28 12892.32,-320.28 12892.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5941aa9689844ca9a5db7646bc5569b0&amp;#45;&amp;#45;ba58bcbb12a44fbe9737ba6e46e741e4 --&gt;\n&lt;g id=\"edge817\" class=\"edge\"&gt;\n&lt;title&gt;5941aa9689844ca9a5db7646bc5569b0&amp;#45;&amp;#45;ba58bcbb12a44fbe9737ba6e46e741e4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12799.07,-321C12801.8,-321 12887.85,-321 12890.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 56812cb6fb53467c93bd87295683777d --&gt;\n&lt;g id=\"node822\" class=\"node\"&gt;\n&lt;title&gt;56812cb6fb53467c93bd87295683777d&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M13002,-349.8C13002,-349.8 12968.4,-349.8 12968.4,-349.8 12962.4,-349.8 12956.4,-343.8 12956.4,-337.8 12956.4,-337.8 12956.4,-304.2 12956.4,-304.2 12956.4,-298.2 12962.4,-292.2 12968.4,-292.2 12968.4,-292.2 13002,-292.2 13002,-292.2 13008,-292.2 13014,-298.2 13014,-304.2 13014,-304.2 13014,-337.8 13014,-337.8 13014,-343.8 13008,-349.8 13002,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12985.2\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- ba58bcbb12a44fbe9737ba6e46e741e4&amp;#45;&amp;#45;56812cb6fb53467c93bd87295683777d --&gt;\n&lt;g id=\"edge818\" class=\"edge\"&gt;\n&lt;title&gt;ba58bcbb12a44fbe9737ba6e46e741e4&amp;#45;&amp;#45;56812cb6fb53467c93bd87295683777d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12892.67,-321C12894.39,-321 12929.28,-321 12955.48,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 56812cb6fb53467c93bd87295683777d&amp;#45;&amp;#45;b3468572f1004c1b8dab88817863b3eb --&gt;\n&lt;g id=\"edge1915\" class=\"edge\"&gt;\n&lt;title&gt;56812cb6fb53467c93bd87295683777d&amp;#45;&amp;#45;b3468572f1004c1b8dab88817863b3eb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12985.2,-350.65C12985.2,-361.2 12985.2,-371.76 12985.2,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- dede2941a9bb45449b04e8d3e7078ba2 --&gt;\n&lt;g id=\"node823\" class=\"node\"&gt;\n&lt;title&gt;dede2941a9bb45449b04e8d3e7078ba2&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"13078.8\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 56812cb6fb53467c93bd87295683777d&amp;#45;&amp;#45;dede2941a9bb45449b04e8d3e7078ba2 --&gt;\n&lt;g id=\"edge819\" class=\"edge\"&gt;\n&lt;title&gt;56812cb6fb53467c93bd87295683777d&amp;#45;&amp;#45;dede2941a9bb45449b04e8d3e7078ba2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13014.68,-321C13034.64,-321 13059.74,-321 13071.36,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- d12eac586f0b46bc808c1337b040edad --&gt;\n&lt;g id=\"node824\" class=\"node\"&gt;\n&lt;title&gt;d12eac586f0b46bc808c1337b040edad&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13173.12,-321.72 13171.68,-321.72 13171.68,-320.28 13173.12,-320.28 13173.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dede2941a9bb45449b04e8d3e7078ba2&amp;#45;&amp;#45;d12eac586f0b46bc808c1337b040edad --&gt;\n&lt;g id=\"edge820\" class=\"edge\"&gt;\n&lt;title&gt;dede2941a9bb45449b04e8d3e7078ba2&amp;#45;&amp;#45;d12eac586f0b46bc808c1337b040edad&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13086.39,-321C13106.73,-321 13167.44,-321 13171.22,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e2b0d9b748c4bdc996a1a19df84c138 --&gt;\n&lt;g id=\"node825\" class=\"node\"&gt;\n&lt;title&gt;3e2b0d9b748c4bdc996a1a19df84c138&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13266.72,-321.72 13265.28,-321.72 13265.28,-320.28 13266.72,-320.28 13266.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d12eac586f0b46bc808c1337b040edad&amp;#45;&amp;#45;3e2b0d9b748c4bdc996a1a19df84c138 --&gt;\n&lt;g id=\"edge821\" class=\"edge\"&gt;\n&lt;title&gt;d12eac586f0b46bc808c1337b040edad&amp;#45;&amp;#45;3e2b0d9b748c4bdc996a1a19df84c138&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13173.47,-321C13176.2,-321 13262.25,-321 13264.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4a52ed0f2945439da2aac02c940e2d02 --&gt;\n&lt;g id=\"node826\" class=\"node\"&gt;\n&lt;title&gt;4a52ed0f2945439da2aac02c940e2d02&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13360.32,-321.72 13358.88,-321.72 13358.88,-320.28 13360.32,-320.28 13360.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e2b0d9b748c4bdc996a1a19df84c138&amp;#45;&amp;#45;4a52ed0f2945439da2aac02c940e2d02 --&gt;\n&lt;g id=\"edge822\" class=\"edge\"&gt;\n&lt;title&gt;3e2b0d9b748c4bdc996a1a19df84c138&amp;#45;&amp;#45;4a52ed0f2945439da2aac02c940e2d02&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13267.07,-321C13269.8,-321 13355.85,-321 13358.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- aad7a81903394cfd80bc70a84553eb46 --&gt;\n&lt;g id=\"node827\" class=\"node\"&gt;\n&lt;title&gt;aad7a81903394cfd80bc70a84553eb46&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13506.72,-321.72 13505.28,-321.72 13505.28,-320.28 13506.72,-320.28 13506.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4a52ed0f2945439da2aac02c940e2d02&amp;#45;&amp;#45;aad7a81903394cfd80bc70a84553eb46 --&gt;\n&lt;g id=\"edge823\" class=\"edge\"&gt;\n&lt;title&gt;4a52ed0f2945439da2aac02c940e2d02&amp;#45;&amp;#45;aad7a81903394cfd80bc70a84553eb46&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13360.7,-321C13365.01,-321 13500.66,-321 13504.9,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a948e3eb87544c15a6ebc51b2b6200a0 --&gt;\n&lt;g id=\"node828\" class=\"node\"&gt;\n&lt;title&gt;a948e3eb87544c15a6ebc51b2b6200a0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13653.12,-321.72 13651.68,-321.72 13651.68,-320.28 13653.12,-320.28 13653.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- aad7a81903394cfd80bc70a84553eb46&amp;#45;&amp;#45;a948e3eb87544c15a6ebc51b2b6200a0 --&gt;\n&lt;g id=\"edge824\" class=\"edge\"&gt;\n&lt;title&gt;aad7a81903394cfd80bc70a84553eb46&amp;#45;&amp;#45;a948e3eb87544c15a6ebc51b2b6200a0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13507.1,-321C13511.41,-321 13647.06,-321 13651.3,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 36c5f57b6b4e401f88a17712fa9847ab --&gt;\n&lt;g id=\"node829\" class=\"node\"&gt;\n&lt;title&gt;36c5f57b6b4e401f88a17712fa9847ab&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13746.72,-321.72 13745.28,-321.72 13745.28,-320.28 13746.72,-320.28 13746.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a948e3eb87544c15a6ebc51b2b6200a0&amp;#45;&amp;#45;36c5f57b6b4e401f88a17712fa9847ab --&gt;\n&lt;g id=\"edge825\" class=\"edge\"&gt;\n&lt;title&gt;a948e3eb87544c15a6ebc51b2b6200a0&amp;#45;&amp;#45;36c5f57b6b4e401f88a17712fa9847ab&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13653.47,-321C13656.2,-321 13742.25,-321 13744.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e4f2ec986a643bfba4acb043e1a43f8 --&gt;\n&lt;g id=\"node830\" class=\"node\"&gt;\n&lt;title&gt;3e4f2ec986a643bfba4acb043e1a43f8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13840.32,-321.72 13838.88,-321.72 13838.88,-320.28 13840.32,-320.28 13840.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 36c5f57b6b4e401f88a17712fa9847ab&amp;#45;&amp;#45;3e4f2ec986a643bfba4acb043e1a43f8 --&gt;\n&lt;g id=\"edge826\" class=\"edge\"&gt;\n&lt;title&gt;36c5f57b6b4e401f88a17712fa9847ab&amp;#45;&amp;#45;3e4f2ec986a643bfba4acb043e1a43f8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13747.07,-321C13749.8,-321 13835.85,-321 13838.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4a7564af9c734d4984ee2fd532bf166c --&gt;\n&lt;g id=\"node831\" class=\"node\"&gt;\n&lt;title&gt;4a7564af9c734d4984ee2fd532bf166c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"13933.2\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e4f2ec986a643bfba4acb043e1a43f8&amp;#45;&amp;#45;4a7564af9c734d4984ee2fd532bf166c --&gt;\n&lt;g id=\"edge827\" class=\"edge\"&gt;\n&lt;title&gt;3e4f2ec986a643bfba4acb043e1a43f8&amp;#45;&amp;#45;4a7564af9c734d4984ee2fd532bf166c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13840.67,-321C13842.97,-321 13904.81,-321 13925.52,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 104914b9a0da413c851e8165f4e28aeb --&gt;\n&lt;g id=\"node832\" class=\"node\"&gt;\n&lt;title&gt;104914b9a0da413c851e8165f4e28aeb&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M14043.6,-349.8C14043.6,-349.8 14010,-349.8 14010,-349.8 14004,-349.8 13998,-343.8 13998,-337.8 13998,-337.8 13998,-304.2 13998,-304.2 13998,-298.2 14004,-292.2 14010,-292.2 14010,-292.2 14043.6,-292.2 14043.6,-292.2 14049.6,-292.2 14055.6,-298.2 14055.6,-304.2 14055.6,-304.2 14055.6,-337.8 14055.6,-337.8 14055.6,-343.8 14049.6,-349.8 14043.6,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"14026.8\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 4a7564af9c734d4984ee2fd532bf166c&amp;#45;&amp;#45;104914b9a0da413c851e8165f4e28aeb --&gt;\n&lt;g id=\"edge828\" class=\"edge\"&gt;\n&lt;title&gt;4a7564af9c734d4984ee2fd532bf166c&amp;#45;&amp;#45;104914b9a0da413c851e8165f4e28aeb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13940.79,-321C13952.44,-321 13977.32,-321 13997.17,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 104914b9a0da413c851e8165f4e28aeb&amp;#45;&amp;#45;893693d3da314777b9a62396c7581383 --&gt;\n&lt;g id=\"edge1916\" class=\"edge\"&gt;\n&lt;title&gt;104914b9a0da413c851e8165f4e28aeb&amp;#45;&amp;#45;893693d3da314777b9a62396c7581383&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14026.8,-350.65C14026.8,-361.2 14026.8,-371.76 14026.8,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- ae579a1d6ffb48f7bb34a33f75f91ffe --&gt;\n&lt;g id=\"node833\" class=\"node\"&gt;\n&lt;title&gt;ae579a1d6ffb48f7bb34a33f75f91ffe&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14121.12,-321.72 14119.68,-321.72 14119.68,-320.28 14121.12,-320.28 14121.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 104914b9a0da413c851e8165f4e28aeb&amp;#45;&amp;#45;ae579a1d6ffb48f7bb34a33f75f91ffe --&gt;\n&lt;g id=\"edge829\" class=\"edge\"&gt;\n&lt;title&gt;104914b9a0da413c851e8165f4e28aeb&amp;#45;&amp;#45;ae579a1d6ffb48f7bb34a33f75f91ffe&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14056.28,-321C14082.33,-321 14117.14,-321 14119.3,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- d4e42ec186054078b21e9da900109ff6 --&gt;\n&lt;g id=\"node834\" class=\"node\"&gt;\n&lt;title&gt;d4e42ec186054078b21e9da900109ff6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14214.72,-321.72 14213.28,-321.72 14213.28,-320.28 14214.72,-320.28 14214.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ae579a1d6ffb48f7bb34a33f75f91ffe&amp;#45;&amp;#45;d4e42ec186054078b21e9da900109ff6 --&gt;\n&lt;g id=\"edge830\" class=\"edge\"&gt;\n&lt;title&gt;ae579a1d6ffb48f7bb34a33f75f91ffe&amp;#45;&amp;#45;d4e42ec186054078b21e9da900109ff6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14121.47,-321C14124.2,-321 14210.25,-321 14212.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 58f191d3e35e47f5bcf521964eb4204d --&gt;\n&lt;g id=\"node835\" class=\"node\"&gt;\n&lt;title&gt;58f191d3e35e47f5bcf521964eb4204d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14308.32,-321.72 14306.88,-321.72 14306.88,-320.28 14308.32,-320.28 14308.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d4e42ec186054078b21e9da900109ff6&amp;#45;&amp;#45;58f191d3e35e47f5bcf521964eb4204d --&gt;\n&lt;g id=\"edge831\" class=\"edge\"&gt;\n&lt;title&gt;d4e42ec186054078b21e9da900109ff6&amp;#45;&amp;#45;58f191d3e35e47f5bcf521964eb4204d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14215.07,-321C14217.8,-321 14303.85,-321 14306.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- cb62eded4fa843b5ae05b55c837f9998 --&gt;\n&lt;g id=\"node836\" class=\"node\"&gt;\n&lt;title&gt;cb62eded4fa843b5ae05b55c837f9998&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14460.72,-321.72 14459.28,-321.72 14459.28,-320.28 14460.72,-320.28 14460.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 58f191d3e35e47f5bcf521964eb4204d&amp;#45;&amp;#45;cb62eded4fa843b5ae05b55c837f9998 --&gt;\n&lt;g id=\"edge832\" class=\"edge\"&gt;\n&lt;title&gt;58f191d3e35e47f5bcf521964eb4204d&amp;#45;&amp;#45;cb62eded4fa843b5ae05b55c837f9998&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14308.71,-321C14313.19,-321 14454.48,-321 14458.89,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 74428779029244b7a0544a920f99d235 --&gt;\n&lt;g id=\"node837\" class=\"node\"&gt;\n&lt;title&gt;74428779029244b7a0544a920f99d235&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14613.12,-321.72 14611.68,-321.72 14611.68,-320.28 14613.12,-320.28 14613.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cb62eded4fa843b5ae05b55c837f9998&amp;#45;&amp;#45;74428779029244b7a0544a920f99d235 --&gt;\n&lt;g id=\"edge833\" class=\"edge\"&gt;\n&lt;title&gt;cb62eded4fa843b5ae05b55c837f9998&amp;#45;&amp;#45;74428779029244b7a0544a920f99d235&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14461.11,-321C14465.59,-321 14606.88,-321 14611.29,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- e47021fbac3d41eab23d7289b36a55c8 --&gt;\n&lt;g id=\"node838\" class=\"node\"&gt;\n&lt;title&gt;e47021fbac3d41eab23d7289b36a55c8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14706.72,-321.72 14705.28,-321.72 14705.28,-320.28 14706.72,-320.28 14706.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 74428779029244b7a0544a920f99d235&amp;#45;&amp;#45;e47021fbac3d41eab23d7289b36a55c8 --&gt;\n&lt;g id=\"edge834\" class=\"edge\"&gt;\n&lt;title&gt;74428779029244b7a0544a920f99d235&amp;#45;&amp;#45;e47021fbac3d41eab23d7289b36a55c8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14613.47,-321C14616.2,-321 14702.25,-321 14704.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- daf8b09183e24d008e76e294133089ff --&gt;\n&lt;g id=\"node839\" class=\"node\"&gt;\n&lt;title&gt;daf8b09183e24d008e76e294133089ff&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14800.32,-321.72 14798.88,-321.72 14798.88,-320.28 14800.32,-320.28 14800.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e47021fbac3d41eab23d7289b36a55c8&amp;#45;&amp;#45;daf8b09183e24d008e76e294133089ff --&gt;\n&lt;g id=\"edge835\" class=\"edge\"&gt;\n&lt;title&gt;e47021fbac3d41eab23d7289b36a55c8&amp;#45;&amp;#45;daf8b09183e24d008e76e294133089ff&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14707.07,-321C14709.8,-321 14795.85,-321 14798.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a100d2074689492e8e5169c80d6216d9 --&gt;\n&lt;g id=\"node840\" class=\"node\"&gt;\n&lt;title&gt;a100d2074689492e8e5169c80d6216d9&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M14910,-349.8C14910,-349.8 14876.4,-349.8 14876.4,-349.8 14870.4,-349.8 14864.4,-343.8 14864.4,-337.8 14864.4,-337.8 14864.4,-304.2 14864.4,-304.2 14864.4,-298.2 14870.4,-292.2 14876.4,-292.2 14876.4,-292.2 14910,-292.2 14910,-292.2 14916,-292.2 14922,-298.2 14922,-304.2 14922,-304.2 14922,-337.8 14922,-337.8 14922,-343.8 14916,-349.8 14910,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"14893.2\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- daf8b09183e24d008e76e294133089ff&amp;#45;&amp;#45;a100d2074689492e8e5169c80d6216d9 --&gt;\n&lt;g id=\"edge836\" class=\"edge\"&gt;\n&lt;title&gt;daf8b09183e24d008e76e294133089ff&amp;#45;&amp;#45;a100d2074689492e8e5169c80d6216d9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14800.67,-321C14802.39,-321 14837.28,-321 14863.48,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a100d2074689492e8e5169c80d6216d9&amp;#45;&amp;#45;3fdd0034871741e389ab3d6ce15894c8 --&gt;\n&lt;g id=\"edge1917\" class=\"edge\"&gt;\n&lt;title&gt;a100d2074689492e8e5169c80d6216d9&amp;#45;&amp;#45;3fdd0034871741e389ab3d6ce15894c8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14893.2,-350.65C14893.2,-361.2 14893.2,-371.76 14893.2,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- bd41c0da352146eda917bf68494d91c4 --&gt;\n&lt;g id=\"node841\" class=\"node\"&gt;\n&lt;title&gt;bd41c0da352146eda917bf68494d91c4&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"14986.8\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- a100d2074689492e8e5169c80d6216d9&amp;#45;&amp;#45;bd41c0da352146eda917bf68494d91c4 --&gt;\n&lt;g id=\"edge837\" class=\"edge\"&gt;\n&lt;title&gt;a100d2074689492e8e5169c80d6216d9&amp;#45;&amp;#45;bd41c0da352146eda917bf68494d91c4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14922.68,-321C14942.64,-321 14967.74,-321 14979.36,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2fd56c63f5ff4fc4850426e860ae43fb --&gt;\n&lt;g id=\"node842\" class=\"node\"&gt;\n&lt;title&gt;2fd56c63f5ff4fc4850426e860ae43fb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15081.12,-321.72 15079.68,-321.72 15079.68,-320.28 15081.12,-320.28 15081.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bd41c0da352146eda917bf68494d91c4&amp;#45;&amp;#45;2fd56c63f5ff4fc4850426e860ae43fb --&gt;\n&lt;g id=\"edge838\" class=\"edge\"&gt;\n&lt;title&gt;bd41c0da352146eda917bf68494d91c4&amp;#45;&amp;#45;2fd56c63f5ff4fc4850426e860ae43fb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14994.39,-321C15014.73,-321 15075.44,-321 15079.22,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 57f2ce723c6a407ba4eaa4643e028fa0 --&gt;\n&lt;g id=\"node843\" class=\"node\"&gt;\n&lt;title&gt;57f2ce723c6a407ba4eaa4643e028fa0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15233.52,-321.72 15232.08,-321.72 15232.08,-320.28 15233.52,-320.28 15233.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2fd56c63f5ff4fc4850426e860ae43fb&amp;#45;&amp;#45;57f2ce723c6a407ba4eaa4643e028fa0 --&gt;\n&lt;g id=\"edge839\" class=\"edge\"&gt;\n&lt;title&gt;2fd56c63f5ff4fc4850426e860ae43fb&amp;#45;&amp;#45;57f2ce723c6a407ba4eaa4643e028fa0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15081.51,-321C15085.99,-321 15227.28,-321 15231.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 505f4b1983a14385944bb7a003f73dae --&gt;\n&lt;g id=\"node844\" class=\"node\"&gt;\n&lt;title&gt;505f4b1983a14385944bb7a003f73dae&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15385.92,-321.72 15384.48,-321.72 15384.48,-320.28 15385.92,-320.28 15385.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 57f2ce723c6a407ba4eaa4643e028fa0&amp;#45;&amp;#45;505f4b1983a14385944bb7a003f73dae --&gt;\n&lt;g id=\"edge840\" class=\"edge\"&gt;\n&lt;title&gt;57f2ce723c6a407ba4eaa4643e028fa0&amp;#45;&amp;#45;505f4b1983a14385944bb7a003f73dae&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15233.91,-321C15238.39,-321 15379.68,-321 15384.09,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 02c6b1de6b0d4fd7996b651baaafd50c --&gt;\n&lt;g id=\"node845\" class=\"node\"&gt;\n&lt;title&gt;02c6b1de6b0d4fd7996b651baaafd50c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"15478.8\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 505f4b1983a14385944bb7a003f73dae&amp;#45;&amp;#45;02c6b1de6b0d4fd7996b651baaafd50c --&gt;\n&lt;g id=\"edge841\" class=\"edge\"&gt;\n&lt;title&gt;505f4b1983a14385944bb7a003f73dae&amp;#45;&amp;#45;02c6b1de6b0d4fd7996b651baaafd50c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15386.27,-321C15388.57,-321 15450.41,-321 15471.12,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ce2e5539b3a47529e265e1b33fb7063 --&gt;\n&lt;g id=\"node846\" class=\"node\"&gt;\n&lt;title&gt;0ce2e5539b3a47529e265e1b33fb7063&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M15589.2,-349.8C15589.2,-349.8 15555.6,-349.8 15555.6,-349.8 15549.6,-349.8 15543.6,-343.8 15543.6,-337.8 15543.6,-337.8 15543.6,-304.2 15543.6,-304.2 15543.6,-298.2 15549.6,-292.2 15555.6,-292.2 15555.6,-292.2 15589.2,-292.2 15589.2,-292.2 15595.2,-292.2 15601.2,-298.2 15601.2,-304.2 15601.2,-304.2 15601.2,-337.8 15601.2,-337.8 15601.2,-343.8 15595.2,-349.8 15589.2,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"15572.4\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 02c6b1de6b0d4fd7996b651baaafd50c&amp;#45;&amp;#45;0ce2e5539b3a47529e265e1b33fb7063 --&gt;\n&lt;g id=\"edge842\" class=\"edge\"&gt;\n&lt;title&gt;02c6b1de6b0d4fd7996b651baaafd50c&amp;#45;&amp;#45;0ce2e5539b3a47529e265e1b33fb7063&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15486.39,-321C15498.04,-321 15522.92,-321 15542.77,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ce2e5539b3a47529e265e1b33fb7063&amp;#45;&amp;#45;e786df2bc5cc4355b31aed822d9aa6dc --&gt;\n&lt;g id=\"edge1918\" class=\"edge\"&gt;\n&lt;title&gt;0ce2e5539b3a47529e265e1b33fb7063&amp;#45;&amp;#45;e786df2bc5cc4355b31aed822d9aa6dc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15572.4,-350.65C15572.4,-361.2 15572.4,-371.76 15572.4,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- b77294e5ae014203b16e1885c22df6cc --&gt;\n&lt;g id=\"node847\" class=\"node\"&gt;\n&lt;title&gt;b77294e5ae014203b16e1885c22df6cc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15666.72,-321.72 15665.28,-321.72 15665.28,-320.28 15666.72,-320.28 15666.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ce2e5539b3a47529e265e1b33fb7063&amp;#45;&amp;#45;b77294e5ae014203b16e1885c22df6cc --&gt;\n&lt;g id=\"edge843\" class=\"edge\"&gt;\n&lt;title&gt;0ce2e5539b3a47529e265e1b33fb7063&amp;#45;&amp;#45;b77294e5ae014203b16e1885c22df6cc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15601.88,-321C15627.93,-321 15662.74,-321 15664.9,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- f158c3323b604a0cb9c934cde15a952b --&gt;\n&lt;g id=\"node848\" class=\"node\"&gt;\n&lt;title&gt;f158c3323b604a0cb9c934cde15a952b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15760.32,-321.72 15758.88,-321.72 15758.88,-320.28 15760.32,-320.28 15760.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b77294e5ae014203b16e1885c22df6cc&amp;#45;&amp;#45;f158c3323b604a0cb9c934cde15a952b --&gt;\n&lt;g id=\"edge844\" class=\"edge\"&gt;\n&lt;title&gt;b77294e5ae014203b16e1885c22df6cc&amp;#45;&amp;#45;f158c3323b604a0cb9c934cde15a952b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15667.07,-321C15669.8,-321 15755.85,-321 15758.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 82ca98fb9b414051807803d2a724bb43 --&gt;\n&lt;g id=\"node849\" class=\"node\"&gt;\n&lt;title&gt;82ca98fb9b414051807803d2a724bb43&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15853.92,-321.72 15852.48,-321.72 15852.48,-320.28 15853.92,-320.28 15853.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f158c3323b604a0cb9c934cde15a952b&amp;#45;&amp;#45;82ca98fb9b414051807803d2a724bb43 --&gt;\n&lt;g id=\"edge845\" class=\"edge\"&gt;\n&lt;title&gt;f158c3323b604a0cb9c934cde15a952b&amp;#45;&amp;#45;82ca98fb9b414051807803d2a724bb43&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15760.67,-321C15763.4,-321 15849.45,-321 15852.14,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5970fb5145e54cbeb84e0c81fad63a71 --&gt;\n&lt;g id=\"node850\" class=\"node\"&gt;\n&lt;title&gt;5970fb5145e54cbeb84e0c81fad63a71&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M15963.6,-349.8C15963.6,-349.8 15930,-349.8 15930,-349.8 15924,-349.8 15918,-343.8 15918,-337.8 15918,-337.8 15918,-304.2 15918,-304.2 15918,-298.2 15924,-292.2 15930,-292.2 15930,-292.2 15963.6,-292.2 15963.6,-292.2 15969.6,-292.2 15975.6,-298.2 15975.6,-304.2 15975.6,-304.2 15975.6,-337.8 15975.6,-337.8 15975.6,-343.8 15969.6,-349.8 15963.6,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"15946.8\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 82ca98fb9b414051807803d2a724bb43&amp;#45;&amp;#45;5970fb5145e54cbeb84e0c81fad63a71 --&gt;\n&lt;g id=\"edge846\" class=\"edge\"&gt;\n&lt;title&gt;82ca98fb9b414051807803d2a724bb43&amp;#45;&amp;#45;5970fb5145e54cbeb84e0c81fad63a71&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15854.27,-321C15855.99,-321 15890.88,-321 15917.08,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5970fb5145e54cbeb84e0c81fad63a71&amp;#45;&amp;#45;faab64c90b3c47f6ad57955966f9f6e8 --&gt;\n&lt;g id=\"edge1919\" class=\"edge\"&gt;\n&lt;title&gt;5970fb5145e54cbeb84e0c81fad63a71&amp;#45;&amp;#45;faab64c90b3c47f6ad57955966f9f6e8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15946.8,-350.65C15946.8,-361.2 15946.8,-371.76 15946.8,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- e77a4a52a97f4e54bf481d17eab23f9b --&gt;\n&lt;g id=\"node851\" class=\"node\"&gt;\n&lt;title&gt;e77a4a52a97f4e54bf481d17eab23f9b&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"16040.4\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5970fb5145e54cbeb84e0c81fad63a71&amp;#45;&amp;#45;e77a4a52a97f4e54bf481d17eab23f9b --&gt;\n&lt;g id=\"edge847\" class=\"edge\"&gt;\n&lt;title&gt;5970fb5145e54cbeb84e0c81fad63a71&amp;#45;&amp;#45;e77a4a52a97f4e54bf481d17eab23f9b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15976.28,-321C15996.24,-321 16021.34,-321 16032.96,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ba4be51a10c47e5a7e3fab4d9143402 --&gt;\n&lt;g id=\"node852\" class=\"node\"&gt;\n&lt;title&gt;0ba4be51a10c47e5a7e3fab4d9143402&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16193.52,-321.72 16192.08,-321.72 16192.08,-320.28 16193.52,-320.28 16193.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e77a4a52a97f4e54bf481d17eab23f9b&amp;#45;&amp;#45;0ba4be51a10c47e5a7e3fab4d9143402 --&gt;\n&lt;g id=\"edge848\" class=\"edge\"&gt;\n&lt;title&gt;e77a4a52a97f4e54bf481d17eab23f9b&amp;#45;&amp;#45;0ba4be51a10c47e5a7e3fab4d9143402&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16047.86,-321C16076.2,-321 16188.22,-321 16191.72,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2fa78e7fe6564f6395accda14a4e5937 --&gt;\n&lt;g id=\"node853\" class=\"node\"&gt;\n&lt;title&gt;2fa78e7fe6564f6395accda14a4e5937&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"16345.2\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ba4be51a10c47e5a7e3fab4d9143402&amp;#45;&amp;#45;2fa78e7fe6564f6395accda14a4e5937 --&gt;\n&lt;g id=\"edge849\" class=\"edge\"&gt;\n&lt;title&gt;0ba4be51a10c47e5a7e3fab4d9143402&amp;#45;&amp;#45;2fa78e7fe6564f6395accda14a4e5937&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16193.91,-321C16197.88,-321 16308.97,-321 16337.55,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9c437ef0952b42b88ad175371ec45c18 --&gt;\n&lt;g id=\"node854\" class=\"node\"&gt;\n&lt;title&gt;9c437ef0952b42b88ad175371ec45c18&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M16455.6,-349.8C16455.6,-349.8 16422,-349.8 16422,-349.8 16416,-349.8 16410,-343.8 16410,-337.8 16410,-337.8 16410,-304.2 16410,-304.2 16410,-298.2 16416,-292.2 16422,-292.2 16422,-292.2 16455.6,-292.2 16455.6,-292.2 16461.6,-292.2 16467.6,-298.2 16467.6,-304.2 16467.6,-304.2 16467.6,-337.8 16467.6,-337.8 16467.6,-343.8 16461.6,-349.8 16455.6,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"16438.8\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2fa78e7fe6564f6395accda14a4e5937&amp;#45;&amp;#45;9c437ef0952b42b88ad175371ec45c18 --&gt;\n&lt;g id=\"edge850\" class=\"edge\"&gt;\n&lt;title&gt;2fa78e7fe6564f6395accda14a4e5937&amp;#45;&amp;#45;9c437ef0952b42b88ad175371ec45c18&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16352.79,-321C16364.44,-321 16389.32,-321 16409.17,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9c437ef0952b42b88ad175371ec45c18&amp;#45;&amp;#45;31a65459fb2743e1a7e05b9f24502249 --&gt;\n&lt;g id=\"edge1920\" class=\"edge\"&gt;\n&lt;title&gt;9c437ef0952b42b88ad175371ec45c18&amp;#45;&amp;#45;31a65459fb2743e1a7e05b9f24502249&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16438.8,-350.65C16438.8,-361.2 16438.8,-371.76 16438.8,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 96bca393a0d742988f73ab0248d949fb --&gt;\n&lt;g id=\"node855\" class=\"node\"&gt;\n&lt;title&gt;96bca393a0d742988f73ab0248d949fb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16533.12,-321.72 16531.68,-321.72 16531.68,-320.28 16533.12,-320.28 16533.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9c437ef0952b42b88ad175371ec45c18&amp;#45;&amp;#45;96bca393a0d742988f73ab0248d949fb --&gt;\n&lt;g id=\"edge851\" class=\"edge\"&gt;\n&lt;title&gt;9c437ef0952b42b88ad175371ec45c18&amp;#45;&amp;#45;96bca393a0d742988f73ab0248d949fb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16468.28,-321C16494.33,-321 16529.14,-321 16531.3,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3301138ae97343ffa3564d8e0cacfe34 --&gt;\n&lt;g id=\"node856\" class=\"node\"&gt;\n&lt;title&gt;3301138ae97343ffa3564d8e0cacfe34&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16626.72,-321.72 16625.28,-321.72 16625.28,-320.28 16626.72,-320.28 16626.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 96bca393a0d742988f73ab0248d949fb&amp;#45;&amp;#45;3301138ae97343ffa3564d8e0cacfe34 --&gt;\n&lt;g id=\"edge852\" class=\"edge\"&gt;\n&lt;title&gt;96bca393a0d742988f73ab0248d949fb&amp;#45;&amp;#45;3301138ae97343ffa3564d8e0cacfe34&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16533.47,-321C16536.2,-321 16622.25,-321 16624.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8147c5db3b5a4d899a1b57476ef6b2a7 --&gt;\n&lt;g id=\"node857\" class=\"node\"&gt;\n&lt;title&gt;8147c5db3b5a4d899a1b57476ef6b2a7&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M16736.4,-349.8C16736.4,-349.8 16702.8,-349.8 16702.8,-349.8 16696.8,-349.8 16690.8,-343.8 16690.8,-337.8 16690.8,-337.8 16690.8,-304.2 16690.8,-304.2 16690.8,-298.2 16696.8,-292.2 16702.8,-292.2 16702.8,-292.2 16736.4,-292.2 16736.4,-292.2 16742.4,-292.2 16748.4,-298.2 16748.4,-304.2 16748.4,-304.2 16748.4,-337.8 16748.4,-337.8 16748.4,-343.8 16742.4,-349.8 16736.4,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"16719.6\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 3301138ae97343ffa3564d8e0cacfe34&amp;#45;&amp;#45;8147c5db3b5a4d899a1b57476ef6b2a7 --&gt;\n&lt;g id=\"edge853\" class=\"edge\"&gt;\n&lt;title&gt;3301138ae97343ffa3564d8e0cacfe34&amp;#45;&amp;#45;8147c5db3b5a4d899a1b57476ef6b2a7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16627.07,-321C16628.79,-321 16663.68,-321 16689.88,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8147c5db3b5a4d899a1b57476ef6b2a7&amp;#45;&amp;#45;21822f628938466fa5bee9c555496561 --&gt;\n&lt;g id=\"edge1921\" class=\"edge\"&gt;\n&lt;title&gt;8147c5db3b5a4d899a1b57476ef6b2a7&amp;#45;&amp;#45;21822f628938466fa5bee9c555496561&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16719.6,-350.65C16719.6,-361.2 16719.6,-371.76 16719.6,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 047cd9247e2e4e97b463f94656fa3213 --&gt;\n&lt;g id=\"node858\" class=\"node\"&gt;\n&lt;title&gt;047cd9247e2e4e97b463f94656fa3213&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"16813.2\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8147c5db3b5a4d899a1b57476ef6b2a7&amp;#45;&amp;#45;047cd9247e2e4e97b463f94656fa3213 --&gt;\n&lt;g id=\"edge854\" class=\"edge\"&gt;\n&lt;title&gt;8147c5db3b5a4d899a1b57476ef6b2a7&amp;#45;&amp;#45;047cd9247e2e4e97b463f94656fa3213&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16749.08,-321C16769.04,-321 16794.14,-321 16805.76,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- f408b10e883f43e7929d51d1889d95d1 --&gt;\n&lt;g id=\"node859\" class=\"node\"&gt;\n&lt;title&gt;f408b10e883f43e7929d51d1889d95d1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16907.52,-321.72 16906.08,-321.72 16906.08,-320.28 16907.52,-320.28 16907.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 047cd9247e2e4e97b463f94656fa3213&amp;#45;&amp;#45;f408b10e883f43e7929d51d1889d95d1 --&gt;\n&lt;g id=\"edge855\" class=\"edge\"&gt;\n&lt;title&gt;047cd9247e2e4e97b463f94656fa3213&amp;#45;&amp;#45;f408b10e883f43e7929d51d1889d95d1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16820.79,-321C16841.13,-321 16901.84,-321 16905.62,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- d65dbe81f19341a59a6a117239a8e7fa --&gt;\n&lt;g id=\"node860\" class=\"node\"&gt;\n&lt;title&gt;d65dbe81f19341a59a6a117239a8e7fa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17059.92,-321.72 17058.48,-321.72 17058.48,-320.28 17059.92,-320.28 17059.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f408b10e883f43e7929d51d1889d95d1&amp;#45;&amp;#45;d65dbe81f19341a59a6a117239a8e7fa --&gt;\n&lt;g id=\"edge856\" class=\"edge\"&gt;\n&lt;title&gt;f408b10e883f43e7929d51d1889d95d1&amp;#45;&amp;#45;d65dbe81f19341a59a6a117239a8e7fa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16907.91,-321C16912.39,-321 17053.68,-321 17058.09,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a31ce16059294d6491a845c4a9691033 --&gt;\n&lt;g id=\"node861\" class=\"node\"&gt;\n&lt;title&gt;a31ce16059294d6491a845c4a9691033&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17212.32,-321.72 17210.88,-321.72 17210.88,-320.28 17212.32,-320.28 17212.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d65dbe81f19341a59a6a117239a8e7fa&amp;#45;&amp;#45;a31ce16059294d6491a845c4a9691033 --&gt;\n&lt;g id=\"edge857\" class=\"edge\"&gt;\n&lt;title&gt;d65dbe81f19341a59a6a117239a8e7fa&amp;#45;&amp;#45;a31ce16059294d6491a845c4a9691033&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17060.31,-321C17064.79,-321 17206.08,-321 17210.49,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- b6da8f8a729b42f591a583b05c7487c5 --&gt;\n&lt;g id=\"node862\" class=\"node\"&gt;\n&lt;title&gt;b6da8f8a729b42f591a583b05c7487c5&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"17305.2\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- a31ce16059294d6491a845c4a9691033&amp;#45;&amp;#45;b6da8f8a729b42f591a583b05c7487c5 --&gt;\n&lt;g id=\"edge858\" class=\"edge\"&gt;\n&lt;title&gt;a31ce16059294d6491a845c4a9691033&amp;#45;&amp;#45;b6da8f8a729b42f591a583b05c7487c5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17212.67,-321C17214.97,-321 17276.81,-321 17297.52,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0fc6a29a2aea4bb089c93ba1722c108e --&gt;\n&lt;g id=\"node863\" class=\"node\"&gt;\n&lt;title&gt;0fc6a29a2aea4bb089c93ba1722c108e&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M17415.6,-349.8C17415.6,-349.8 17382,-349.8 17382,-349.8 17376,-349.8 17370,-343.8 17370,-337.8 17370,-337.8 17370,-304.2 17370,-304.2 17370,-298.2 17376,-292.2 17382,-292.2 17382,-292.2 17415.6,-292.2 17415.6,-292.2 17421.6,-292.2 17427.6,-298.2 17427.6,-304.2 17427.6,-304.2 17427.6,-337.8 17427.6,-337.8 17427.6,-343.8 17421.6,-349.8 17415.6,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"17398.8\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- b6da8f8a729b42f591a583b05c7487c5&amp;#45;&amp;#45;0fc6a29a2aea4bb089c93ba1722c108e --&gt;\n&lt;g id=\"edge859\" class=\"edge\"&gt;\n&lt;title&gt;b6da8f8a729b42f591a583b05c7487c5&amp;#45;&amp;#45;0fc6a29a2aea4bb089c93ba1722c108e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17312.79,-321C17324.44,-321 17349.32,-321 17369.17,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0fc6a29a2aea4bb089c93ba1722c108e&amp;#45;&amp;#45;fb001755e1724f878eb27a92f2b5466c --&gt;\n&lt;g id=\"edge1922\" class=\"edge\"&gt;\n&lt;title&gt;0fc6a29a2aea4bb089c93ba1722c108e&amp;#45;&amp;#45;fb001755e1724f878eb27a92f2b5466c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17398.8,-350.65C17398.8,-361.2 17398.8,-371.76 17398.8,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5da4b47d798f4cbabade1c414e254cbb --&gt;\n&lt;g id=\"node864\" class=\"node\"&gt;\n&lt;title&gt;5da4b47d798f4cbabade1c414e254cbb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17493.12,-321.72 17491.68,-321.72 17491.68,-320.28 17493.12,-320.28 17493.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0fc6a29a2aea4bb089c93ba1722c108e&amp;#45;&amp;#45;5da4b47d798f4cbabade1c414e254cbb --&gt;\n&lt;g id=\"edge860\" class=\"edge\"&gt;\n&lt;title&gt;0fc6a29a2aea4bb089c93ba1722c108e&amp;#45;&amp;#45;5da4b47d798f4cbabade1c414e254cbb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17428.28,-321C17454.33,-321 17489.14,-321 17491.3,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2bae1fe780ba4cca8c3a20c35a1bc60e --&gt;\n&lt;g id=\"node865\" class=\"node\"&gt;\n&lt;title&gt;2bae1fe780ba4cca8c3a20c35a1bc60e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17586.72,-321.72 17585.28,-321.72 17585.28,-320.28 17586.72,-320.28 17586.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5da4b47d798f4cbabade1c414e254cbb&amp;#45;&amp;#45;2bae1fe780ba4cca8c3a20c35a1bc60e --&gt;\n&lt;g id=\"edge861\" class=\"edge\"&gt;\n&lt;title&gt;5da4b47d798f4cbabade1c414e254cbb&amp;#45;&amp;#45;2bae1fe780ba4cca8c3a20c35a1bc60e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17493.47,-321C17496.2,-321 17582.25,-321 17584.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a5c6aa7593e43698202b7e562c3304f --&gt;\n&lt;g id=\"node866\" class=\"node\"&gt;\n&lt;title&gt;5a5c6aa7593e43698202b7e562c3304f&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M17696.4,-349.8C17696.4,-349.8 17662.8,-349.8 17662.8,-349.8 17656.8,-349.8 17650.8,-343.8 17650.8,-337.8 17650.8,-337.8 17650.8,-304.2 17650.8,-304.2 17650.8,-298.2 17656.8,-292.2 17662.8,-292.2 17662.8,-292.2 17696.4,-292.2 17696.4,-292.2 17702.4,-292.2 17708.4,-298.2 17708.4,-304.2 17708.4,-304.2 17708.4,-337.8 17708.4,-337.8 17708.4,-343.8 17702.4,-349.8 17696.4,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"17679.6\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2bae1fe780ba4cca8c3a20c35a1bc60e&amp;#45;&amp;#45;5a5c6aa7593e43698202b7e562c3304f --&gt;\n&lt;g id=\"edge862\" class=\"edge\"&gt;\n&lt;title&gt;2bae1fe780ba4cca8c3a20c35a1bc60e&amp;#45;&amp;#45;5a5c6aa7593e43698202b7e562c3304f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17587.07,-321C17588.79,-321 17623.68,-321 17649.88,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a5c6aa7593e43698202b7e562c3304f&amp;#45;&amp;#45;bf343bd56cbb42d796a24df37ab981df --&gt;\n&lt;g id=\"edge1923\" class=\"edge\"&gt;\n&lt;title&gt;5a5c6aa7593e43698202b7e562c3304f&amp;#45;&amp;#45;bf343bd56cbb42d796a24df37ab981df&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17679.6,-350.65C17679.6,-361.2 17679.6,-371.76 17679.6,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- b0fb443ff00d45c19dde241f5569aa7c --&gt;\n&lt;g id=\"node867\" class=\"node\"&gt;\n&lt;title&gt;b0fb443ff00d45c19dde241f5569aa7c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"17773.2\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a5c6aa7593e43698202b7e562c3304f&amp;#45;&amp;#45;b0fb443ff00d45c19dde241f5569aa7c --&gt;\n&lt;g id=\"edge863\" class=\"edge\"&gt;\n&lt;title&gt;5a5c6aa7593e43698202b7e562c3304f&amp;#45;&amp;#45;b0fb443ff00d45c19dde241f5569aa7c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17709.08,-321C17729.04,-321 17754.14,-321 17765.76,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d0e53172ade4be0bbcac8530a8af513 --&gt;\n&lt;g id=\"node868\" class=\"node\"&gt;\n&lt;title&gt;7d0e53172ade4be0bbcac8530a8af513&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17867.52,-321.72 17866.08,-321.72 17866.08,-320.28 17867.52,-320.28 17867.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b0fb443ff00d45c19dde241f5569aa7c&amp;#45;&amp;#45;7d0e53172ade4be0bbcac8530a8af513 --&gt;\n&lt;g id=\"edge864\" class=\"edge\"&gt;\n&lt;title&gt;b0fb443ff00d45c19dde241f5569aa7c&amp;#45;&amp;#45;7d0e53172ade4be0bbcac8530a8af513&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17780.79,-321C17801.13,-321 17861.84,-321 17865.62,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a50d6abbee274a8292191cebda74c7fa --&gt;\n&lt;g id=\"node869\" class=\"node\"&gt;\n&lt;title&gt;a50d6abbee274a8292191cebda74c7fa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17961.12,-321.72 17959.68,-321.72 17959.68,-320.28 17961.12,-320.28 17961.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d0e53172ade4be0bbcac8530a8af513&amp;#45;&amp;#45;a50d6abbee274a8292191cebda74c7fa --&gt;\n&lt;g id=\"edge865\" class=\"edge\"&gt;\n&lt;title&gt;7d0e53172ade4be0bbcac8530a8af513&amp;#45;&amp;#45;a50d6abbee274a8292191cebda74c7fa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17867.87,-321C17870.6,-321 17956.65,-321 17959.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3146742e8b645ea859686468183707f --&gt;\n&lt;g id=\"node870\" class=\"node\"&gt;\n&lt;title&gt;c3146742e8b645ea859686468183707f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18113.52,-321.72 18112.08,-321.72 18112.08,-320.28 18113.52,-320.28 18113.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a50d6abbee274a8292191cebda74c7fa&amp;#45;&amp;#45;c3146742e8b645ea859686468183707f --&gt;\n&lt;g id=\"edge866\" class=\"edge\"&gt;\n&lt;title&gt;a50d6abbee274a8292191cebda74c7fa&amp;#45;&amp;#45;c3146742e8b645ea859686468183707f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17961.51,-321C17965.99,-321 18107.28,-321 18111.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a1faa7171464449acb25de26c871f40 --&gt;\n&lt;g id=\"node871\" class=\"node\"&gt;\n&lt;title&gt;5a1faa7171464449acb25de26c871f40&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18265.92,-321.72 18264.48,-321.72 18264.48,-320.28 18265.92,-320.28 18265.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3146742e8b645ea859686468183707f&amp;#45;&amp;#45;5a1faa7171464449acb25de26c871f40 --&gt;\n&lt;g id=\"edge867\" class=\"edge\"&gt;\n&lt;title&gt;c3146742e8b645ea859686468183707f&amp;#45;&amp;#45;5a1faa7171464449acb25de26c871f40&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18113.91,-321C18118.39,-321 18259.68,-321 18264.09,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a0993d59d4e145baa4008881f0700625 --&gt;\n&lt;g id=\"node872\" class=\"node\"&gt;\n&lt;title&gt;a0993d59d4e145baa4008881f0700625&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18359.52,-321.72 18358.08,-321.72 18358.08,-320.28 18359.52,-320.28 18359.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a1faa7171464449acb25de26c871f40&amp;#45;&amp;#45;a0993d59d4e145baa4008881f0700625 --&gt;\n&lt;g id=\"edge868\" class=\"edge\"&gt;\n&lt;title&gt;5a1faa7171464449acb25de26c871f40&amp;#45;&amp;#45;a0993d59d4e145baa4008881f0700625&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18266.27,-321C18269,-321 18355.05,-321 18357.74,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3609268691514b278e5a814abe0a1c41 --&gt;\n&lt;g id=\"node873\" class=\"node\"&gt;\n&lt;title&gt;3609268691514b278e5a814abe0a1c41&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"18452.4\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- a0993d59d4e145baa4008881f0700625&amp;#45;&amp;#45;3609268691514b278e5a814abe0a1c41 --&gt;\n&lt;g id=\"edge869\" class=\"edge\"&gt;\n&lt;title&gt;a0993d59d4e145baa4008881f0700625&amp;#45;&amp;#45;3609268691514b278e5a814abe0a1c41&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18359.87,-321C18362.17,-321 18424.01,-321 18444.72,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- d4aeb622acd44b00b2d70054a672f6f5 --&gt;\n&lt;g id=\"node874\" class=\"node\"&gt;\n&lt;title&gt;d4aeb622acd44b00b2d70054a672f6f5&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M18562.8,-349.8C18562.8,-349.8 18529.2,-349.8 18529.2,-349.8 18523.2,-349.8 18517.2,-343.8 18517.2,-337.8 18517.2,-337.8 18517.2,-304.2 18517.2,-304.2 18517.2,-298.2 18523.2,-292.2 18529.2,-292.2 18529.2,-292.2 18562.8,-292.2 18562.8,-292.2 18568.8,-292.2 18574.8,-298.2 18574.8,-304.2 18574.8,-304.2 18574.8,-337.8 18574.8,-337.8 18574.8,-343.8 18568.8,-349.8 18562.8,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"18546\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 3609268691514b278e5a814abe0a1c41&amp;#45;&amp;#45;d4aeb622acd44b00b2d70054a672f6f5 --&gt;\n&lt;g id=\"edge870\" class=\"edge\"&gt;\n&lt;title&gt;3609268691514b278e5a814abe0a1c41&amp;#45;&amp;#45;d4aeb622acd44b00b2d70054a672f6f5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18459.99,-321C18471.64,-321 18496.52,-321 18516.37,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- d4aeb622acd44b00b2d70054a672f6f5&amp;#45;&amp;#45;35dd89c91b7f41379680ed7375e2fe2c --&gt;\n&lt;g id=\"edge1924\" class=\"edge\"&gt;\n&lt;title&gt;d4aeb622acd44b00b2d70054a672f6f5&amp;#45;&amp;#45;35dd89c91b7f41379680ed7375e2fe2c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18546,-350.65C18546,-361.2 18546,-371.76 18546,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- e0e822de9bc142f1943d3c7a608f03cd --&gt;\n&lt;g id=\"node875\" class=\"node\"&gt;\n&lt;title&gt;e0e822de9bc142f1943d3c7a608f03cd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18640.32,-321.72 18638.88,-321.72 18638.88,-320.28 18640.32,-320.28 18640.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d4aeb622acd44b00b2d70054a672f6f5&amp;#45;&amp;#45;e0e822de9bc142f1943d3c7a608f03cd --&gt;\n&lt;g id=\"edge871\" class=\"edge\"&gt;\n&lt;title&gt;d4aeb622acd44b00b2d70054a672f6f5&amp;#45;&amp;#45;e0e822de9bc142f1943d3c7a608f03cd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18575.48,-321C18601.53,-321 18636.34,-321 18638.5,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 61fdd7cf4ebf4f1cae00195e5d5096d8 --&gt;\n&lt;g id=\"node876\" class=\"node\"&gt;\n&lt;title&gt;61fdd7cf4ebf4f1cae00195e5d5096d8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18733.92,-321.72 18732.48,-321.72 18732.48,-320.28 18733.92,-320.28 18733.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e0e822de9bc142f1943d3c7a608f03cd&amp;#45;&amp;#45;61fdd7cf4ebf4f1cae00195e5d5096d8 --&gt;\n&lt;g id=\"edge872\" class=\"edge\"&gt;\n&lt;title&gt;e0e822de9bc142f1943d3c7a608f03cd&amp;#45;&amp;#45;61fdd7cf4ebf4f1cae00195e5d5096d8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18640.67,-321C18643.4,-321 18729.45,-321 18732.14,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 22b2e2e412b7474d9cf1d772474567ab --&gt;\n&lt;g id=\"node877\" class=\"node\"&gt;\n&lt;title&gt;22b2e2e412b7474d9cf1d772474567ab&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M18843.6,-349.8C18843.6,-349.8 18810,-349.8 18810,-349.8 18804,-349.8 18798,-343.8 18798,-337.8 18798,-337.8 18798,-304.2 18798,-304.2 18798,-298.2 18804,-292.2 18810,-292.2 18810,-292.2 18843.6,-292.2 18843.6,-292.2 18849.6,-292.2 18855.6,-298.2 18855.6,-304.2 18855.6,-304.2 18855.6,-337.8 18855.6,-337.8 18855.6,-343.8 18849.6,-349.8 18843.6,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"18826.8\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 61fdd7cf4ebf4f1cae00195e5d5096d8&amp;#45;&amp;#45;22b2e2e412b7474d9cf1d772474567ab --&gt;\n&lt;g id=\"edge873\" class=\"edge\"&gt;\n&lt;title&gt;61fdd7cf4ebf4f1cae00195e5d5096d8&amp;#45;&amp;#45;22b2e2e412b7474d9cf1d772474567ab&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18734.27,-321C18735.99,-321 18770.88,-321 18797.08,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 22b2e2e412b7474d9cf1d772474567ab&amp;#45;&amp;#45;aa5f0039543949c7b443c7442a92cbeb --&gt;\n&lt;g id=\"edge1925\" class=\"edge\"&gt;\n&lt;title&gt;22b2e2e412b7474d9cf1d772474567ab&amp;#45;&amp;#45;aa5f0039543949c7b443c7442a92cbeb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18826.8,-350.65C18826.8,-361.2 18826.8,-371.76 18826.8,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 848c6943b2784be38d8d5c890f7d0008 --&gt;\n&lt;g id=\"node878\" class=\"node\"&gt;\n&lt;title&gt;848c6943b2784be38d8d5c890f7d0008&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"18920.4\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 22b2e2e412b7474d9cf1d772474567ab&amp;#45;&amp;#45;848c6943b2784be38d8d5c890f7d0008 --&gt;\n&lt;g id=\"edge874\" class=\"edge\"&gt;\n&lt;title&gt;22b2e2e412b7474d9cf1d772474567ab&amp;#45;&amp;#45;848c6943b2784be38d8d5c890f7d0008&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18856.28,-321C18876.24,-321 18901.34,-321 18912.96,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- da021df4c2c54474af48071b6c763598 --&gt;\n&lt;g id=\"node879\" class=\"node\"&gt;\n&lt;title&gt;da021df4c2c54474af48071b6c763598&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19014.72,-321.72 19013.28,-321.72 19013.28,-320.28 19014.72,-320.28 19014.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 848c6943b2784be38d8d5c890f7d0008&amp;#45;&amp;#45;da021df4c2c54474af48071b6c763598 --&gt;\n&lt;g id=\"edge875\" class=\"edge\"&gt;\n&lt;title&gt;848c6943b2784be38d8d5c890f7d0008&amp;#45;&amp;#45;da021df4c2c54474af48071b6c763598&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18927.99,-321C18948.33,-321 19009.04,-321 19012.82,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- da9256c3680f453c84dd558767a998bd --&gt;\n&lt;g id=\"node880\" class=\"node\"&gt;\n&lt;title&gt;da9256c3680f453c84dd558767a998bd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19108.32,-321.72 19106.88,-321.72 19106.88,-320.28 19108.32,-320.28 19108.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da021df4c2c54474af48071b6c763598&amp;#45;&amp;#45;da9256c3680f453c84dd558767a998bd --&gt;\n&lt;g id=\"edge876\" class=\"edge\"&gt;\n&lt;title&gt;da021df4c2c54474af48071b6c763598&amp;#45;&amp;#45;da9256c3680f453c84dd558767a998bd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19015.07,-321C19017.8,-321 19103.85,-321 19106.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 12393b3f550b4ec88e8b73e242d3cf27 --&gt;\n&lt;g id=\"node881\" class=\"node\"&gt;\n&lt;title&gt;12393b3f550b4ec88e8b73e242d3cf27&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19201.92,-321.72 19200.48,-321.72 19200.48,-320.28 19201.92,-320.28 19201.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da9256c3680f453c84dd558767a998bd&amp;#45;&amp;#45;12393b3f550b4ec88e8b73e242d3cf27 --&gt;\n&lt;g id=\"edge877\" class=\"edge\"&gt;\n&lt;title&gt;da9256c3680f453c84dd558767a998bd&amp;#45;&amp;#45;12393b3f550b4ec88e8b73e242d3cf27&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19108.67,-321C19111.4,-321 19197.45,-321 19200.14,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- de6e4ee41478431cb91748f26969bb60 --&gt;\n&lt;g id=\"node882\" class=\"node\"&gt;\n&lt;title&gt;de6e4ee41478431cb91748f26969bb60&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19354.32,-321.72 19352.88,-321.72 19352.88,-320.28 19354.32,-320.28 19354.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 12393b3f550b4ec88e8b73e242d3cf27&amp;#45;&amp;#45;de6e4ee41478431cb91748f26969bb60 --&gt;\n&lt;g id=\"edge878\" class=\"edge\"&gt;\n&lt;title&gt;12393b3f550b4ec88e8b73e242d3cf27&amp;#45;&amp;#45;de6e4ee41478431cb91748f26969bb60&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19202.31,-321C19206.79,-321 19348.08,-321 19352.49,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- d4a136e8d80c4d189fc59eb1fffe9eb7 --&gt;\n&lt;g id=\"node883\" class=\"node\"&gt;\n&lt;title&gt;d4a136e8d80c4d189fc59eb1fffe9eb7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19506.72,-321.72 19505.28,-321.72 19505.28,-320.28 19506.72,-320.28 19506.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- de6e4ee41478431cb91748f26969bb60&amp;#45;&amp;#45;d4a136e8d80c4d189fc59eb1fffe9eb7 --&gt;\n&lt;g id=\"edge879\" class=\"edge\"&gt;\n&lt;title&gt;de6e4ee41478431cb91748f26969bb60&amp;#45;&amp;#45;d4a136e8d80c4d189fc59eb1fffe9eb7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19354.71,-321C19359.19,-321 19500.48,-321 19504.89,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 35525ceaca5e48cba5d87fa8488477cd --&gt;\n&lt;g id=\"node884\" class=\"node\"&gt;\n&lt;title&gt;35525ceaca5e48cba5d87fa8488477cd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19600.32,-321.72 19598.88,-321.72 19598.88,-320.28 19600.32,-320.28 19600.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d4a136e8d80c4d189fc59eb1fffe9eb7&amp;#45;&amp;#45;35525ceaca5e48cba5d87fa8488477cd --&gt;\n&lt;g id=\"edge880\" class=\"edge\"&gt;\n&lt;title&gt;d4a136e8d80c4d189fc59eb1fffe9eb7&amp;#45;&amp;#45;35525ceaca5e48cba5d87fa8488477cd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19507.07,-321C19509.8,-321 19595.85,-321 19598.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 37a1cad8bc9b41ab9e3e426f6be5585a --&gt;\n&lt;g id=\"node885\" class=\"node\"&gt;\n&lt;title&gt;37a1cad8bc9b41ab9e3e426f6be5585a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19693.92,-321.72 19692.48,-321.72 19692.48,-320.28 19693.92,-320.28 19693.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 35525ceaca5e48cba5d87fa8488477cd&amp;#45;&amp;#45;37a1cad8bc9b41ab9e3e426f6be5585a --&gt;\n&lt;g id=\"edge881\" class=\"edge\"&gt;\n&lt;title&gt;35525ceaca5e48cba5d87fa8488477cd&amp;#45;&amp;#45;37a1cad8bc9b41ab9e3e426f6be5585a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19600.67,-321C19603.4,-321 19689.45,-321 19692.14,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 08e80e43a38349c490b3384ed67c3b70 --&gt;\n&lt;g id=\"node886\" class=\"node\"&gt;\n&lt;title&gt;08e80e43a38349c490b3384ed67c3b70&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"19786.8\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 37a1cad8bc9b41ab9e3e426f6be5585a&amp;#45;&amp;#45;08e80e43a38349c490b3384ed67c3b70 --&gt;\n&lt;g id=\"edge882\" class=\"edge\"&gt;\n&lt;title&gt;37a1cad8bc9b41ab9e3e426f6be5585a&amp;#45;&amp;#45;08e80e43a38349c490b3384ed67c3b70&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19694.27,-321C19696.57,-321 19758.41,-321 19779.12,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4fc9122cdec4686b73d912e54f9399d --&gt;\n&lt;g id=\"node887\" class=\"node\"&gt;\n&lt;title&gt;e4fc9122cdec4686b73d912e54f9399d&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M19897.2,-349.8C19897.2,-349.8 19863.6,-349.8 19863.6,-349.8 19857.6,-349.8 19851.6,-343.8 19851.6,-337.8 19851.6,-337.8 19851.6,-304.2 19851.6,-304.2 19851.6,-298.2 19857.6,-292.2 19863.6,-292.2 19863.6,-292.2 19897.2,-292.2 19897.2,-292.2 19903.2,-292.2 19909.2,-298.2 19909.2,-304.2 19909.2,-304.2 19909.2,-337.8 19909.2,-337.8 19909.2,-343.8 19903.2,-349.8 19897.2,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"19880.4\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 08e80e43a38349c490b3384ed67c3b70&amp;#45;&amp;#45;e4fc9122cdec4686b73d912e54f9399d --&gt;\n&lt;g id=\"edge883\" class=\"edge\"&gt;\n&lt;title&gt;08e80e43a38349c490b3384ed67c3b70&amp;#45;&amp;#45;e4fc9122cdec4686b73d912e54f9399d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19794.39,-321C19806.04,-321 19830.92,-321 19850.77,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4fc9122cdec4686b73d912e54f9399d&amp;#45;&amp;#45;750411a2d44247d5b1ebb4b833a7da23 --&gt;\n&lt;g id=\"edge1926\" class=\"edge\"&gt;\n&lt;title&gt;e4fc9122cdec4686b73d912e54f9399d&amp;#45;&amp;#45;750411a2d44247d5b1ebb4b833a7da23&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19880.4,-350.65C19880.4,-361.2 19880.4,-371.76 19880.4,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8bdf6326be224dfaa98b31b0ab3a8a06 --&gt;\n&lt;g id=\"node888\" class=\"node\"&gt;\n&lt;title&gt;8bdf6326be224dfaa98b31b0ab3a8a06&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19974.72,-321.72 19973.28,-321.72 19973.28,-320.28 19974.72,-320.28 19974.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4fc9122cdec4686b73d912e54f9399d&amp;#45;&amp;#45;8bdf6326be224dfaa98b31b0ab3a8a06 --&gt;\n&lt;g id=\"edge884\" class=\"edge\"&gt;\n&lt;title&gt;e4fc9122cdec4686b73d912e54f9399d&amp;#45;&amp;#45;8bdf6326be224dfaa98b31b0ab3a8a06&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19909.88,-321C19935.93,-321 19970.74,-321 19972.9,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 05013fec8f164953881b4ae613893a69 --&gt;\n&lt;g id=\"node889\" class=\"node\"&gt;\n&lt;title&gt;05013fec8f164953881b4ae613893a69&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M20084.4,-349.8C20084.4,-349.8 20050.8,-349.8 20050.8,-349.8 20044.8,-349.8 20038.8,-343.8 20038.8,-337.8 20038.8,-337.8 20038.8,-304.2 20038.8,-304.2 20038.8,-298.2 20044.8,-292.2 20050.8,-292.2 20050.8,-292.2 20084.4,-292.2 20084.4,-292.2 20090.4,-292.2 20096.4,-298.2 20096.4,-304.2 20096.4,-304.2 20096.4,-337.8 20096.4,-337.8 20096.4,-343.8 20090.4,-349.8 20084.4,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"20067.6\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 8bdf6326be224dfaa98b31b0ab3a8a06&amp;#45;&amp;#45;05013fec8f164953881b4ae613893a69 --&gt;\n&lt;g id=\"edge885\" class=\"edge\"&gt;\n&lt;title&gt;8bdf6326be224dfaa98b31b0ab3a8a06&amp;#45;&amp;#45;05013fec8f164953881b4ae613893a69&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19975.07,-321C19976.79,-321 20011.68,-321 20037.88,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 05013fec8f164953881b4ae613893a69&amp;#45;&amp;#45;2750efc851734f56825ecbd7341d3147 --&gt;\n&lt;g id=\"edge1927\" class=\"edge\"&gt;\n&lt;title&gt;05013fec8f164953881b4ae613893a69&amp;#45;&amp;#45;2750efc851734f56825ecbd7341d3147&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20067.6,-350.65C20067.6,-361.2 20067.6,-371.76 20067.6,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a7d75dc2d504fb2b986769930507e24 --&gt;\n&lt;g id=\"node890\" class=\"node\"&gt;\n&lt;title&gt;0a7d75dc2d504fb2b986769930507e24&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"20161.2\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 05013fec8f164953881b4ae613893a69&amp;#45;&amp;#45;0a7d75dc2d504fb2b986769930507e24 --&gt;\n&lt;g id=\"edge886\" class=\"edge\"&gt;\n&lt;title&gt;05013fec8f164953881b4ae613893a69&amp;#45;&amp;#45;0a7d75dc2d504fb2b986769930507e24&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20097.08,-321C20117.04,-321 20142.14,-321 20153.76,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 45e5328032144acaa75d28e626cfc595 --&gt;\n&lt;g id=\"node891\" class=\"node\"&gt;\n&lt;title&gt;45e5328032144acaa75d28e626cfc595&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20255.52,-321.72 20254.08,-321.72 20254.08,-320.28 20255.52,-320.28 20255.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a7d75dc2d504fb2b986769930507e24&amp;#45;&amp;#45;45e5328032144acaa75d28e626cfc595 --&gt;\n&lt;g id=\"edge887\" class=\"edge\"&gt;\n&lt;title&gt;0a7d75dc2d504fb2b986769930507e24&amp;#45;&amp;#45;45e5328032144acaa75d28e626cfc595&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20168.79,-321C20189.13,-321 20249.84,-321 20253.62,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- ea9d2526bf4d42428d677671542ec8b8 --&gt;\n&lt;g id=\"node892\" class=\"node\"&gt;\n&lt;title&gt;ea9d2526bf4d42428d677671542ec8b8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20349.12,-321.72 20347.68,-321.72 20347.68,-320.28 20349.12,-320.28 20349.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 45e5328032144acaa75d28e626cfc595&amp;#45;&amp;#45;ea9d2526bf4d42428d677671542ec8b8 --&gt;\n&lt;g id=\"edge888\" class=\"edge\"&gt;\n&lt;title&gt;45e5328032144acaa75d28e626cfc595&amp;#45;&amp;#45;ea9d2526bf4d42428d677671542ec8b8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20255.87,-321C20258.6,-321 20344.65,-321 20347.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- cb5e4419f27b4e3c84236316badff412 --&gt;\n&lt;g id=\"node893\" class=\"node\"&gt;\n&lt;title&gt;cb5e4419f27b4e3c84236316badff412&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20442.72,-321.72 20441.28,-321.72 20441.28,-320.28 20442.72,-320.28 20442.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ea9d2526bf4d42428d677671542ec8b8&amp;#45;&amp;#45;cb5e4419f27b4e3c84236316badff412 --&gt;\n&lt;g id=\"edge889\" class=\"edge\"&gt;\n&lt;title&gt;ea9d2526bf4d42428d677671542ec8b8&amp;#45;&amp;#45;cb5e4419f27b4e3c84236316badff412&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20349.47,-321C20352.2,-321 20438.25,-321 20440.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9d95b19bdcf1426fa008a9216b4845c2 --&gt;\n&lt;g id=\"node894\" class=\"node\"&gt;\n&lt;title&gt;9d95b19bdcf1426fa008a9216b4845c2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20595.12,-321.72 20593.68,-321.72 20593.68,-320.28 20595.12,-320.28 20595.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cb5e4419f27b4e3c84236316badff412&amp;#45;&amp;#45;9d95b19bdcf1426fa008a9216b4845c2 --&gt;\n&lt;g id=\"edge890\" class=\"edge\"&gt;\n&lt;title&gt;cb5e4419f27b4e3c84236316badff412&amp;#45;&amp;#45;9d95b19bdcf1426fa008a9216b4845c2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20443.11,-321C20447.59,-321 20588.88,-321 20593.29,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2ee809a5b7ab4604883dd8ba700a150d --&gt;\n&lt;g id=\"node895\" class=\"node\"&gt;\n&lt;title&gt;2ee809a5b7ab4604883dd8ba700a150d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20747.52,-321.72 20746.08,-321.72 20746.08,-320.28 20747.52,-320.28 20747.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9d95b19bdcf1426fa008a9216b4845c2&amp;#45;&amp;#45;2ee809a5b7ab4604883dd8ba700a150d --&gt;\n&lt;g id=\"edge891\" class=\"edge\"&gt;\n&lt;title&gt;9d95b19bdcf1426fa008a9216b4845c2&amp;#45;&amp;#45;2ee809a5b7ab4604883dd8ba700a150d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20595.51,-321C20599.99,-321 20741.28,-321 20745.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a557fd0ffbba4712b374acf9df8c742d --&gt;\n&lt;g id=\"node896\" class=\"node\"&gt;\n&lt;title&gt;a557fd0ffbba4712b374acf9df8c742d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20841.12,-321.72 20839.68,-321.72 20839.68,-320.28 20841.12,-320.28 20841.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2ee809a5b7ab4604883dd8ba700a150d&amp;#45;&amp;#45;a557fd0ffbba4712b374acf9df8c742d --&gt;\n&lt;g id=\"edge892\" class=\"edge\"&gt;\n&lt;title&gt;2ee809a5b7ab4604883dd8ba700a150d&amp;#45;&amp;#45;a557fd0ffbba4712b374acf9df8c742d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20747.87,-321C20750.6,-321 20836.65,-321 20839.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 89d2b39cc2774be4aa2520df415bc940 --&gt;\n&lt;g id=\"node897\" class=\"node\"&gt;\n&lt;title&gt;89d2b39cc2774be4aa2520df415bc940&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20934.72,-321.72 20933.28,-321.72 20933.28,-320.28 20934.72,-320.28 20934.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a557fd0ffbba4712b374acf9df8c742d&amp;#45;&amp;#45;89d2b39cc2774be4aa2520df415bc940 --&gt;\n&lt;g id=\"edge893\" class=\"edge\"&gt;\n&lt;title&gt;a557fd0ffbba4712b374acf9df8c742d&amp;#45;&amp;#45;89d2b39cc2774be4aa2520df415bc940&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20841.47,-321C20844.2,-321 20930.25,-321 20932.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0273b101a81445ae9330bbdc4438d74f --&gt;\n&lt;g id=\"node898\" class=\"node\"&gt;\n&lt;title&gt;0273b101a81445ae9330bbdc4438d74f&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"21027.6\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 89d2b39cc2774be4aa2520df415bc940&amp;#45;&amp;#45;0273b101a81445ae9330bbdc4438d74f --&gt;\n&lt;g id=\"edge894\" class=\"edge\"&gt;\n&lt;title&gt;89d2b39cc2774be4aa2520df415bc940&amp;#45;&amp;#45;0273b101a81445ae9330bbdc4438d74f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20935.07,-321C20937.37,-321 20999.21,-321 21019.92,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 24e3ffd0981346f4b8bef8434b929542 --&gt;\n&lt;g id=\"node899\" class=\"node\"&gt;\n&lt;title&gt;24e3ffd0981346f4b8bef8434b929542&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M21138,-349.8C21138,-349.8 21104.4,-349.8 21104.4,-349.8 21098.4,-349.8 21092.4,-343.8 21092.4,-337.8 21092.4,-337.8 21092.4,-304.2 21092.4,-304.2 21092.4,-298.2 21098.4,-292.2 21104.4,-292.2 21104.4,-292.2 21138,-292.2 21138,-292.2 21144,-292.2 21150,-298.2 21150,-304.2 21150,-304.2 21150,-337.8 21150,-337.8 21150,-343.8 21144,-349.8 21138,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"21121.2\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 0273b101a81445ae9330bbdc4438d74f&amp;#45;&amp;#45;24e3ffd0981346f4b8bef8434b929542 --&gt;\n&lt;g id=\"edge895\" class=\"edge\"&gt;\n&lt;title&gt;0273b101a81445ae9330bbdc4438d74f&amp;#45;&amp;#45;24e3ffd0981346f4b8bef8434b929542&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21035.19,-321C21046.84,-321 21071.72,-321 21091.57,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 24e3ffd0981346f4b8bef8434b929542&amp;#45;&amp;#45;20f000cd379044a491f44a0ff5a1c2e6 --&gt;\n&lt;g id=\"edge1928\" class=\"edge\"&gt;\n&lt;title&gt;24e3ffd0981346f4b8bef8434b929542&amp;#45;&amp;#45;20f000cd379044a491f44a0ff5a1c2e6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21121.2,-350.65C21121.2,-361.2 21121.2,-371.76 21121.2,-382.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 07dc50a193a8464ea035d455ddd5066a --&gt;\n&lt;g id=\"node900\" class=\"node\"&gt;\n&lt;title&gt;07dc50a193a8464ea035d455ddd5066a&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"21214.8\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 24e3ffd0981346f4b8bef8434b929542&amp;#45;&amp;#45;07dc50a193a8464ea035d455ddd5066a --&gt;\n&lt;g id=\"edge896\" class=\"edge\"&gt;\n&lt;title&gt;24e3ffd0981346f4b8bef8434b929542&amp;#45;&amp;#45;07dc50a193a8464ea035d455ddd5066a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21150.68,-321C21170.64,-321 21195.74,-321 21207.36,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- cfbaa4c43cd24b0abef736af1075f265 --&gt;\n&lt;g id=\"node901\" class=\"node\"&gt;\n&lt;title&gt;cfbaa4c43cd24b0abef736af1075f265&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21309.12,-321.72 21307.68,-321.72 21307.68,-320.28 21309.12,-320.28 21309.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 07dc50a193a8464ea035d455ddd5066a&amp;#45;&amp;#45;cfbaa4c43cd24b0abef736af1075f265 --&gt;\n&lt;g id=\"edge897\" class=\"edge\"&gt;\n&lt;title&gt;07dc50a193a8464ea035d455ddd5066a&amp;#45;&amp;#45;cfbaa4c43cd24b0abef736af1075f265&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21222.39,-321C21242.73,-321 21303.44,-321 21307.22,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c95318c61f54551af0d96f396e98344 --&gt;\n&lt;g id=\"node902\" class=\"node\"&gt;\n&lt;title&gt;0c95318c61f54551af0d96f396e98344&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21461.52,-321.72 21460.08,-321.72 21460.08,-320.28 21461.52,-320.28 21461.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cfbaa4c43cd24b0abef736af1075f265&amp;#45;&amp;#45;0c95318c61f54551af0d96f396e98344 --&gt;\n&lt;g id=\"edge898\" class=\"edge\"&gt;\n&lt;title&gt;cfbaa4c43cd24b0abef736af1075f265&amp;#45;&amp;#45;0c95318c61f54551af0d96f396e98344&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21309.51,-321C21313.99,-321 21455.28,-321 21459.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1a349744d75d431898c7049d61d91915 --&gt;\n&lt;g id=\"node903\" class=\"node\"&gt;\n&lt;title&gt;1a349744d75d431898c7049d61d91915&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21613.92,-321.72 21612.48,-321.72 21612.48,-320.28 21613.92,-320.28 21613.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c95318c61f54551af0d96f396e98344&amp;#45;&amp;#45;1a349744d75d431898c7049d61d91915 --&gt;\n&lt;g id=\"edge899\" class=\"edge\"&gt;\n&lt;title&gt;0c95318c61f54551af0d96f396e98344&amp;#45;&amp;#45;1a349744d75d431898c7049d61d91915&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21461.91,-321C21466.39,-321 21607.68,-321 21612.09,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- efb167d005a441f2a437a055c6ca364e --&gt;\n&lt;g id=\"node904\" class=\"node\"&gt;\n&lt;title&gt;efb167d005a441f2a437a055c6ca364e&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"21706.8\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1a349744d75d431898c7049d61d91915&amp;#45;&amp;#45;efb167d005a441f2a437a055c6ca364e --&gt;\n&lt;g id=\"edge900\" class=\"edge\"&gt;\n&lt;title&gt;1a349744d75d431898c7049d61d91915&amp;#45;&amp;#45;efb167d005a441f2a437a055c6ca364e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21614.27,-321C21616.57,-321 21678.41,-321 21699.12,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b53105ee8ee494e8bbb289f683f04f1 --&gt;\n&lt;g id=\"node905\" class=\"node\"&gt;\n&lt;title&gt;6b53105ee8ee494e8bbb289f683f04f1&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"21800.4\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- efb167d005a441f2a437a055c6ca364e&amp;#45;&amp;#45;6b53105ee8ee494e8bbb289f683f04f1 --&gt;\n&lt;g id=\"edge901\" class=\"edge\"&gt;\n&lt;title&gt;efb167d005a441f2a437a055c6ca364e&amp;#45;&amp;#45;6b53105ee8ee494e8bbb289f683f04f1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21714.39,-321C21731.29,-321 21776.04,-321 21792.87,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52f435e038084571801c52cb8f4ec165 --&gt;\n&lt;g id=\"node906\" class=\"node\"&gt;\n&lt;title&gt;52f435e038084571801c52cb8f4ec165&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21894.72,-321.72 21893.28,-321.72 21893.28,-320.28 21894.72,-320.28 21894.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b53105ee8ee494e8bbb289f683f04f1&amp;#45;&amp;#45;52f435e038084571801c52cb8f4ec165 --&gt;\n&lt;g id=\"edge902\" class=\"edge\"&gt;\n&lt;title&gt;6b53105ee8ee494e8bbb289f683f04f1&amp;#45;&amp;#45;52f435e038084571801c52cb8f4ec165&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21807.99,-321C21828.33,-321 21889.04,-321 21892.82,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- c273f31c464f4f8fa93081684a416721 --&gt;\n&lt;g id=\"node907\" class=\"node\"&gt;\n&lt;title&gt;c273f31c464f4f8fa93081684a416721&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21988.32,-321.72 21986.88,-321.72 21986.88,-320.28 21988.32,-320.28 21988.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52f435e038084571801c52cb8f4ec165&amp;#45;&amp;#45;c273f31c464f4f8fa93081684a416721 --&gt;\n&lt;g id=\"edge903\" class=\"edge\"&gt;\n&lt;title&gt;52f435e038084571801c52cb8f4ec165&amp;#45;&amp;#45;c273f31c464f4f8fa93081684a416721&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21895.07,-321C21897.8,-321 21983.85,-321 21986.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1e1eb1f23cdc45a286a7f536543e6769 --&gt;\n&lt;g id=\"node908\" class=\"node\"&gt;\n&lt;title&gt;1e1eb1f23cdc45a286a7f536543e6769&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22140.72,-321.72 22139.28,-321.72 22139.28,-320.28 22140.72,-320.28 22140.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c273f31c464f4f8fa93081684a416721&amp;#45;&amp;#45;1e1eb1f23cdc45a286a7f536543e6769 --&gt;\n&lt;g id=\"edge904\" class=\"edge\"&gt;\n&lt;title&gt;c273f31c464f4f8fa93081684a416721&amp;#45;&amp;#45;1e1eb1f23cdc45a286a7f536543e6769&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21988.71,-321C21993.19,-321 22134.48,-321 22138.89,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 83602146e0124959bf53383631665ff6 --&gt;\n&lt;g id=\"node909\" class=\"node\"&gt;\n&lt;title&gt;83602146e0124959bf53383631665ff6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22293.12,-321.72 22291.68,-321.72 22291.68,-320.28 22293.12,-320.28 22293.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1e1eb1f23cdc45a286a7f536543e6769&amp;#45;&amp;#45;83602146e0124959bf53383631665ff6 --&gt;\n&lt;g id=\"edge905\" class=\"edge\"&gt;\n&lt;title&gt;1e1eb1f23cdc45a286a7f536543e6769&amp;#45;&amp;#45;83602146e0124959bf53383631665ff6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22141.11,-321C22145.59,-321 22286.88,-321 22291.29,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- da3c036f809547b3802a6a0c494c6520 --&gt;\n&lt;g id=\"node910\" class=\"node\"&gt;\n&lt;title&gt;da3c036f809547b3802a6a0c494c6520&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22386.72,-321.72 22385.28,-321.72 22385.28,-320.28 22386.72,-320.28 22386.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 83602146e0124959bf53383631665ff6&amp;#45;&amp;#45;da3c036f809547b3802a6a0c494c6520 --&gt;\n&lt;g id=\"edge906\" class=\"edge\"&gt;\n&lt;title&gt;83602146e0124959bf53383631665ff6&amp;#45;&amp;#45;da3c036f809547b3802a6a0c494c6520&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22293.47,-321C22296.2,-321 22382.25,-321 22384.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- c1b8dbe0ff9b4fe79f802b13cba58221 --&gt;\n&lt;g id=\"node911\" class=\"node\"&gt;\n&lt;title&gt;c1b8dbe0ff9b4fe79f802b13cba58221&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"22479.6\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- da3c036f809547b3802a6a0c494c6520&amp;#45;&amp;#45;c1b8dbe0ff9b4fe79f802b13cba58221 --&gt;\n&lt;g id=\"edge907\" class=\"edge\"&gt;\n&lt;title&gt;da3c036f809547b3802a6a0c494c6520&amp;#45;&amp;#45;c1b8dbe0ff9b4fe79f802b13cba58221&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22387.07,-321C22389.37,-321 22451.21,-321 22471.92,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a41e4d05866140f19c543b9131e17040 --&gt;\n&lt;g id=\"node912\" class=\"node\"&gt;\n&lt;title&gt;a41e4d05866140f19c543b9131e17040&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"22573.2\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- c1b8dbe0ff9b4fe79f802b13cba58221&amp;#45;&amp;#45;a41e4d05866140f19c543b9131e17040 --&gt;\n&lt;g id=\"edge908\" class=\"edge\"&gt;\n&lt;title&gt;c1b8dbe0ff9b4fe79f802b13cba58221&amp;#45;&amp;#45;a41e4d05866140f19c543b9131e17040&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22487.19,-321C22504.09,-321 22548.84,-321 22565.67,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8e9143e39ad344d29bd6db401ec04896 --&gt;\n&lt;g id=\"node913\" class=\"node\"&gt;\n&lt;title&gt;8e9143e39ad344d29bd6db401ec04896&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22667.52,-321.72 22666.08,-321.72 22666.08,-320.28 22667.52,-320.28 22667.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a41e4d05866140f19c543b9131e17040&amp;#45;&amp;#45;8e9143e39ad344d29bd6db401ec04896 --&gt;\n&lt;g id=\"edge909\" class=\"edge\"&gt;\n&lt;title&gt;a41e4d05866140f19c543b9131e17040&amp;#45;&amp;#45;8e9143e39ad344d29bd6db401ec04896&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22580.79,-321C22601.13,-321 22661.84,-321 22665.62,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 460778ad202848c69c4e3d48f6e710a3 --&gt;\n&lt;g id=\"node914\" class=\"node\"&gt;\n&lt;title&gt;460778ad202848c69c4e3d48f6e710a3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22761.12,-321.72 22759.68,-321.72 22759.68,-320.28 22761.12,-320.28 22761.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8e9143e39ad344d29bd6db401ec04896&amp;#45;&amp;#45;460778ad202848c69c4e3d48f6e710a3 --&gt;\n&lt;g id=\"edge910\" class=\"edge\"&gt;\n&lt;title&gt;8e9143e39ad344d29bd6db401ec04896&amp;#45;&amp;#45;460778ad202848c69c4e3d48f6e710a3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22667.87,-321C22670.6,-321 22756.65,-321 22759.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8339607945847009cd6c1e8aefa5923 --&gt;\n&lt;g id=\"node915\" class=\"node\"&gt;\n&lt;title&gt;f8339607945847009cd6c1e8aefa5923&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22854.72,-321.72 22853.28,-321.72 22853.28,-320.28 22854.72,-320.28 22854.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 460778ad202848c69c4e3d48f6e710a3&amp;#45;&amp;#45;f8339607945847009cd6c1e8aefa5923 --&gt;\n&lt;g id=\"edge911\" class=\"edge\"&gt;\n&lt;title&gt;460778ad202848c69c4e3d48f6e710a3&amp;#45;&amp;#45;f8339607945847009cd6c1e8aefa5923&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22761.47,-321C22764.2,-321 22850.25,-321 22852.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7595eff1b9c3426dbda7336f785b93bc --&gt;\n&lt;g id=\"node916\" class=\"node\"&gt;\n&lt;title&gt;7595eff1b9c3426dbda7336f785b93bc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23007.12,-321.72 23005.68,-321.72 23005.68,-320.28 23007.12,-320.28 23007.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8339607945847009cd6c1e8aefa5923&amp;#45;&amp;#45;7595eff1b9c3426dbda7336f785b93bc --&gt;\n&lt;g id=\"edge912\" class=\"edge\"&gt;\n&lt;title&gt;f8339607945847009cd6c1e8aefa5923&amp;#45;&amp;#45;7595eff1b9c3426dbda7336f785b93bc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22855.11,-321C22859.59,-321 23000.88,-321 23005.29,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c55af5b791f4905ba6eb705d5bb3174 --&gt;\n&lt;g id=\"node917\" class=\"node\"&gt;\n&lt;title&gt;0c55af5b791f4905ba6eb705d5bb3174&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23159.52,-321.72 23158.08,-321.72 23158.08,-320.28 23159.52,-320.28 23159.52,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7595eff1b9c3426dbda7336f785b93bc&amp;#45;&amp;#45;0c55af5b791f4905ba6eb705d5bb3174 --&gt;\n&lt;g id=\"edge913\" class=\"edge\"&gt;\n&lt;title&gt;7595eff1b9c3426dbda7336f785b93bc&amp;#45;&amp;#45;0c55af5b791f4905ba6eb705d5bb3174&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23007.51,-321C23011.99,-321 23153.28,-321 23157.69,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- f27b7998b74a44ac8da1360c0bfa1423 --&gt;\n&lt;g id=\"node918\" class=\"node\"&gt;\n&lt;title&gt;f27b7998b74a44ac8da1360c0bfa1423&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23253.12,-321.72 23251.68,-321.72 23251.68,-320.28 23253.12,-320.28 23253.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c55af5b791f4905ba6eb705d5bb3174&amp;#45;&amp;#45;f27b7998b74a44ac8da1360c0bfa1423 --&gt;\n&lt;g id=\"edge914\" class=\"edge\"&gt;\n&lt;title&gt;0c55af5b791f4905ba6eb705d5bb3174&amp;#45;&amp;#45;f27b7998b74a44ac8da1360c0bfa1423&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23159.87,-321C23162.6,-321 23248.65,-321 23251.34,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 120e9b0ce2e54fc79c5d8cacd7b266cf --&gt;\n&lt;g id=\"node919\" class=\"node\"&gt;\n&lt;title&gt;120e9b0ce2e54fc79c5d8cacd7b266cf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23346.72,-321.72 23345.28,-321.72 23345.28,-320.28 23346.72,-320.28 23346.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f27b7998b74a44ac8da1360c0bfa1423&amp;#45;&amp;#45;120e9b0ce2e54fc79c5d8cacd7b266cf --&gt;\n&lt;g id=\"edge915\" class=\"edge\"&gt;\n&lt;title&gt;f27b7998b74a44ac8da1360c0bfa1423&amp;#45;&amp;#45;120e9b0ce2e54fc79c5d8cacd7b266cf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23253.47,-321C23256.2,-321 23342.25,-321 23344.94,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4b2bbfc9c37e4fd1b0fa0d69e98c6f1f --&gt;\n&lt;g id=\"node920\" class=\"node\"&gt;\n&lt;title&gt;4b2bbfc9c37e4fd1b0fa0d69e98c6f1f&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"23439.6\" cy=\"-321\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 120e9b0ce2e54fc79c5d8cacd7b266cf&amp;#45;&amp;#45;4b2bbfc9c37e4fd1b0fa0d69e98c6f1f --&gt;\n&lt;g id=\"edge916\" class=\"edge\"&gt;\n&lt;title&gt;120e9b0ce2e54fc79c5d8cacd7b266cf&amp;#45;&amp;#45;4b2bbfc9c37e4fd1b0fa0d69e98c6f1f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23347.07,-321C23349.37,-321 23411.21,-321 23431.92,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- f405b8ad211f4a4189498aa3865c6f65 --&gt;\n&lt;g id=\"node921\" class=\"node\"&gt;\n&lt;title&gt;f405b8ad211f4a4189498aa3865c6f65&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23533.92,-321.72 23532.48,-321.72 23532.48,-320.28 23533.92,-320.28 23533.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4b2bbfc9c37e4fd1b0fa0d69e98c6f1f&amp;#45;&amp;#45;f405b8ad211f4a4189498aa3865c6f65 --&gt;\n&lt;g id=\"edge917\" class=\"edge\"&gt;\n&lt;title&gt;4b2bbfc9c37e4fd1b0fa0d69e98c6f1f&amp;#45;&amp;#45;f405b8ad211f4a4189498aa3865c6f65&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23447.19,-321C23467.53,-321 23528.24,-321 23532.02,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 274c331c948e49a3a1f29d4ae9341270 --&gt;\n&lt;g id=\"node922\" class=\"node\"&gt;\n&lt;title&gt;274c331c948e49a3a1f29d4ae9341270&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23686.32,-321.72 23684.88,-321.72 23684.88,-320.28 23686.32,-320.28 23686.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f405b8ad211f4a4189498aa3865c6f65&amp;#45;&amp;#45;274c331c948e49a3a1f29d4ae9341270 --&gt;\n&lt;g id=\"edge918\" class=\"edge\"&gt;\n&lt;title&gt;f405b8ad211f4a4189498aa3865c6f65&amp;#45;&amp;#45;274c331c948e49a3a1f29d4ae9341270&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23534.31,-321C23538.79,-321 23680.08,-321 23684.49,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 41af7d991a1b4578a42d25a8094080d0 --&gt;\n&lt;g id=\"node923\" class=\"node\"&gt;\n&lt;title&gt;41af7d991a1b4578a42d25a8094080d0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23838.72,-321.72 23837.28,-321.72 23837.28,-320.28 23838.72,-320.28 23838.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 274c331c948e49a3a1f29d4ae9341270&amp;#45;&amp;#45;41af7d991a1b4578a42d25a8094080d0 --&gt;\n&lt;g id=\"edge919\" class=\"edge\"&gt;\n&lt;title&gt;274c331c948e49a3a1f29d4ae9341270&amp;#45;&amp;#45;41af7d991a1b4578a42d25a8094080d0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23686.71,-321C23691.19,-321 23832.48,-321 23836.89,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- a9080001a9af4255a58739064ad63d9f --&gt;\n&lt;g id=\"node924\" class=\"node\"&gt;\n&lt;title&gt;a9080001a9af4255a58739064ad63d9f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23932.32,-321.72 23930.88,-321.72 23930.88,-320.28 23932.32,-320.28 23932.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 41af7d991a1b4578a42d25a8094080d0&amp;#45;&amp;#45;a9080001a9af4255a58739064ad63d9f --&gt;\n&lt;g id=\"edge920\" class=\"edge\"&gt;\n&lt;title&gt;41af7d991a1b4578a42d25a8094080d0&amp;#45;&amp;#45;a9080001a9af4255a58739064ad63d9f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23839.07,-321C23841.8,-321 23927.85,-321 23930.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 33a2730d81f14163a58efafe75fbdf20 --&gt;\n&lt;g id=\"node925\" class=\"node\"&gt;\n&lt;title&gt;33a2730d81f14163a58efafe75fbdf20&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24025.92,-321.72 24024.48,-321.72 24024.48,-320.28 24025.92,-320.28 24025.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a9080001a9af4255a58739064ad63d9f&amp;#45;&amp;#45;33a2730d81f14163a58efafe75fbdf20 --&gt;\n&lt;g id=\"edge921\" class=\"edge\"&gt;\n&lt;title&gt;a9080001a9af4255a58739064ad63d9f&amp;#45;&amp;#45;33a2730d81f14163a58efafe75fbdf20&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23932.67,-321C23935.4,-321 24021.45,-321 24024.14,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 708afde0b66c48f3a1d36f82d4fc437a --&gt;\n&lt;g id=\"node926\" class=\"node\"&gt;\n&lt;title&gt;708afde0b66c48f3a1d36f82d4fc437a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24178.32,-321.72 24176.88,-321.72 24176.88,-320.28 24178.32,-320.28 24178.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 33a2730d81f14163a58efafe75fbdf20&amp;#45;&amp;#45;708afde0b66c48f3a1d36f82d4fc437a --&gt;\n&lt;g id=\"edge922\" class=\"edge\"&gt;\n&lt;title&gt;33a2730d81f14163a58efafe75fbdf20&amp;#45;&amp;#45;708afde0b66c48f3a1d36f82d4fc437a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24026.31,-321C24030.79,-321 24172.08,-321 24176.49,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 079c7afc8cdd4394ae484519dd09dcdf --&gt;\n&lt;g id=\"node927\" class=\"node\"&gt;\n&lt;title&gt;079c7afc8cdd4394ae484519dd09dcdf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24330.72,-321.72 24329.28,-321.72 24329.28,-320.28 24330.72,-320.28 24330.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 708afde0b66c48f3a1d36f82d4fc437a&amp;#45;&amp;#45;079c7afc8cdd4394ae484519dd09dcdf --&gt;\n&lt;g id=\"edge923\" class=\"edge\"&gt;\n&lt;title&gt;708afde0b66c48f3a1d36f82d4fc437a&amp;#45;&amp;#45;079c7afc8cdd4394ae484519dd09dcdf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24178.71,-321C24183.19,-321 24324.48,-321 24328.89,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5b079102ac2f4c9bb5c1f93d5afd8c3d --&gt;\n&lt;g id=\"node928\" class=\"node\"&gt;\n&lt;title&gt;5b079102ac2f4c9bb5c1f93d5afd8c3d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24424.32,-321.72 24422.88,-321.72 24422.88,-320.28 24424.32,-320.28 24424.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 079c7afc8cdd4394ae484519dd09dcdf&amp;#45;&amp;#45;5b079102ac2f4c9bb5c1f93d5afd8c3d --&gt;\n&lt;g id=\"edge924\" class=\"edge\"&gt;\n&lt;title&gt;079c7afc8cdd4394ae484519dd09dcdf&amp;#45;&amp;#45;5b079102ac2f4c9bb5c1f93d5afd8c3d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24331.07,-321C24333.8,-321 24419.85,-321 24422.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4c6d68bfcf6747a5824aec265fb87ac5 --&gt;\n&lt;g id=\"node929\" class=\"node\"&gt;\n&lt;title&gt;4c6d68bfcf6747a5824aec265fb87ac5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24517.92,-321.72 24516.48,-321.72 24516.48,-320.28 24517.92,-320.28 24517.92,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5b079102ac2f4c9bb5c1f93d5afd8c3d&amp;#45;&amp;#45;4c6d68bfcf6747a5824aec265fb87ac5 --&gt;\n&lt;g id=\"edge925\" class=\"edge\"&gt;\n&lt;title&gt;5b079102ac2f4c9bb5c1f93d5afd8c3d&amp;#45;&amp;#45;4c6d68bfcf6747a5824aec265fb87ac5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24424.67,-321C24427.4,-321 24513.45,-321 24516.14,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- d090469023c148a085f1b923e81b8edc --&gt;\n&lt;g id=\"node930\" class=\"node\"&gt;\n&lt;title&gt;d090469023c148a085f1b923e81b8edc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24670.32,-321.72 24668.88,-321.72 24668.88,-320.28 24670.32,-320.28 24670.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4c6d68bfcf6747a5824aec265fb87ac5&amp;#45;&amp;#45;d090469023c148a085f1b923e81b8edc --&gt;\n&lt;g id=\"edge926\" class=\"edge\"&gt;\n&lt;title&gt;4c6d68bfcf6747a5824aec265fb87ac5&amp;#45;&amp;#45;d090469023c148a085f1b923e81b8edc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24518.31,-321C24522.79,-321 24664.08,-321 24668.49,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17e7dc547b7446f5b86861e81316b321 --&gt;\n&lt;g id=\"node931\" class=\"node\"&gt;\n&lt;title&gt;17e7dc547b7446f5b86861e81316b321&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24822.72,-321.72 24821.28,-321.72 24821.28,-320.28 24822.72,-320.28 24822.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d090469023c148a085f1b923e81b8edc&amp;#45;&amp;#45;17e7dc547b7446f5b86861e81316b321 --&gt;\n&lt;g id=\"edge927\" class=\"edge\"&gt;\n&lt;title&gt;d090469023c148a085f1b923e81b8edc&amp;#45;&amp;#45;17e7dc547b7446f5b86861e81316b321&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24670.71,-321C24675.19,-321 24816.48,-321 24820.89,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 230d8a77893544bd8076e7cfc6842d54 --&gt;\n&lt;g id=\"node932\" class=\"node\"&gt;\n&lt;title&gt;230d8a77893544bd8076e7cfc6842d54&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24916.32,-321.72 24914.88,-321.72 24914.88,-320.28 24916.32,-320.28 24916.32,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17e7dc547b7446f5b86861e81316b321&amp;#45;&amp;#45;230d8a77893544bd8076e7cfc6842d54 --&gt;\n&lt;g id=\"edge928\" class=\"edge\"&gt;\n&lt;title&gt;17e7dc547b7446f5b86861e81316b321&amp;#45;&amp;#45;230d8a77893544bd8076e7cfc6842d54&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24823.07,-321C24825.8,-321 24911.85,-321 24914.54,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 28e597d396b04509b689c37968807ac1 --&gt;\n&lt;g id=\"node933\" class=\"node\"&gt;\n&lt;title&gt;28e597d396b04509b689c37968807ac1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25068.72,-321.72 25067.28,-321.72 25067.28,-320.28 25068.72,-320.28 25068.72,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 230d8a77893544bd8076e7cfc6842d54&amp;#45;&amp;#45;28e597d396b04509b689c37968807ac1 --&gt;\n&lt;g id=\"edge929\" class=\"edge\"&gt;\n&lt;title&gt;230d8a77893544bd8076e7cfc6842d54&amp;#45;&amp;#45;28e597d396b04509b689c37968807ac1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24916.71,-321C24921.19,-321 25062.48,-321 25066.89,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3383cabaf434a01b1ae64c0cf19d1b3 --&gt;\n&lt;g id=\"node934\" class=\"node\"&gt;\n&lt;title&gt;c3383cabaf434a01b1ae64c0cf19d1b3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25221.12,-321.72 25219.68,-321.72 25219.68,-320.28 25221.12,-320.28 25221.12,-321.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 28e597d396b04509b689c37968807ac1&amp;#45;&amp;#45;c3383cabaf434a01b1ae64c0cf19d1b3 --&gt;\n&lt;g id=\"edge930\" class=\"edge\"&gt;\n&lt;title&gt;28e597d396b04509b689c37968807ac1&amp;#45;&amp;#45;c3383cabaf434a01b1ae64c0cf19d1b3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25069.11,-321C25073.59,-321 25214.88,-321 25219.29,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9ae49d3aaf8e4fc58fa5e88790202485 --&gt;\n&lt;g id=\"node935\" class=\"node\"&gt;\n&lt;title&gt;9ae49d3aaf8e4fc58fa5e88790202485&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M25400.4,-349.8C25400.4,-349.8 25297.2,-349.8 25297.2,-349.8 25291.2,-349.8 25285.2,-343.8 25285.2,-337.8 25285.2,-337.8 25285.2,-304.2 25285.2,-304.2 25285.2,-298.2 25291.2,-292.2 25297.2,-292.2 25297.2,-292.2 25400.4,-292.2 25400.4,-292.2 25406.4,-292.2 25412.4,-298.2 25412.4,-304.2 25412.4,-304.2 25412.4,-337.8 25412.4,-337.8 25412.4,-343.8 25406.4,-349.8 25400.4,-349.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"25348.8\" y=\"-315.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b13)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- c3383cabaf434a01b1ae64c0cf19d1b3&amp;#45;&amp;#45;9ae49d3aaf8e4fc58fa5e88790202485 --&gt;\n&lt;g id=\"edge931\" class=\"edge\"&gt;\n&lt;title&gt;c3383cabaf434a01b1ae64c0cf19d1b3&amp;#45;&amp;#45;9ae49d3aaf8e4fc58fa5e88790202485&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25221.49,-321C25223.37,-321 25253.76,-321 25284.26,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9ae49d3aaf8e4fc58fa5e88790202485&amp;#45;&amp;#45;8e09b4792690426f9baeeb9b749cd6c6 --&gt;\n&lt;g id=\"edge932\" class=\"edge\"&gt;\n&lt;title&gt;9ae49d3aaf8e4fc58fa5e88790202485&amp;#45;&amp;#45;8e09b4792690426f9baeeb9b749cd6c6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25413.2,-321C25425.7,-321 25438.15,-321 25448.52,-321\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a7d5871ce1f4aaeb094ebfe45a11adb --&gt;\n&lt;g id=\"node1170\" class=\"node\"&gt;\n&lt;title&gt;0a7d5871ce1f4aaeb094ebfe45a11adb&lt;/title&gt;\n&lt;/g&gt;\n&lt;!-- 8e09b4792690426f9baeeb9b749cd6c6&amp;#45;&amp;#45;0a7d5871ce1f4aaeb094ebfe45a11adb --&gt;\n&lt;!-- 56b67e4c1b59465bbc148de83b24c926 --&gt;\n&lt;g id=\"node938\" class=\"node\"&gt;\n&lt;title&gt;56b67e4c1b59465bbc148de83b24c926&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"119.52,-252.72 118.08,-252.72 118.08,-251.28 119.52,-251.28 119.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8ce2caad17e74cb6834f557f0477582a&amp;#45;&amp;#45;56b67e4c1b59465bbc148de83b24c926 --&gt;\n&lt;g id=\"edge933\" class=\"edge\"&gt;\n&lt;title&gt;8ce2caad17e74cb6834f557f0477582a&amp;#45;&amp;#45;56b67e4c1b59465bbc148de83b24c926&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M53.97,-252C79.67,-252 115.48,-252 117.69,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 464473a5506f4e14862658047e6e600a --&gt;\n&lt;g id=\"node1171\" class=\"node\"&gt;\n&lt;title&gt;464473a5506f4e14862658047e6e600a&lt;/title&gt;\n&lt;text text-anchor=\"middle\" x=\"27\" y=\"-178.88\" font-family=\"JetBrains Mono\" font-size=\"15.00\"&gt;5&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 8ce2caad17e74cb6834f557f0477582a&amp;#45;&amp;#45;464473a5506f4e14862658047e6e600a --&gt;\n&lt;!-- 8375ac44257a4dc499e5b208d01d7ddf --&gt;\n&lt;g id=\"node939\" class=\"node\"&gt;\n&lt;title&gt;8375ac44257a4dc499e5b208d01d7ddf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"213.12,-252.72 211.68,-252.72 211.68,-251.28 213.12,-251.28 213.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 56b67e4c1b59465bbc148de83b24c926&amp;#45;&amp;#45;8375ac44257a4dc499e5b208d01d7ddf --&gt;\n&lt;g id=\"edge934\" class=\"edge\"&gt;\n&lt;title&gt;56b67e4c1b59465bbc148de83b24c926&amp;#45;&amp;#45;8375ac44257a4dc499e5b208d01d7ddf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M119.87,-252C122.6,-252 208.65,-252 211.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8dd49ab4b30b4b8b945b7c11b8af63f0 --&gt;\n&lt;g id=\"node940\" class=\"node\"&gt;\n&lt;title&gt;8dd49ab4b30b4b8b945b7c11b8af63f0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"306.72,-252.72 305.28,-252.72 305.28,-251.28 306.72,-251.28 306.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8375ac44257a4dc499e5b208d01d7ddf&amp;#45;&amp;#45;8dd49ab4b30b4b8b945b7c11b8af63f0 --&gt;\n&lt;g id=\"edge935\" class=\"edge\"&gt;\n&lt;title&gt;8375ac44257a4dc499e5b208d01d7ddf&amp;#45;&amp;#45;8dd49ab4b30b4b8b945b7c11b8af63f0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M213.47,-252C216.2,-252 302.25,-252 304.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 377e3dd750124d479407103dde136ce1 --&gt;\n&lt;g id=\"node941\" class=\"node\"&gt;\n&lt;title&gt;377e3dd750124d479407103dde136ce1&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M416.4,-280.8C416.4,-280.8 382.8,-280.8 382.8,-280.8 376.8,-280.8 370.8,-274.8 370.8,-268.8 370.8,-268.8 370.8,-235.2 370.8,-235.2 370.8,-229.2 376.8,-223.2 382.8,-223.2 382.8,-223.2 416.4,-223.2 416.4,-223.2 422.4,-223.2 428.4,-229.2 428.4,-235.2 428.4,-235.2 428.4,-268.8 428.4,-268.8 428.4,-274.8 422.4,-280.8 416.4,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"399.6\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 8dd49ab4b30b4b8b945b7c11b8af63f0&amp;#45;&amp;#45;377e3dd750124d479407103dde136ce1 --&gt;\n&lt;g id=\"edge936\" class=\"edge\"&gt;\n&lt;title&gt;8dd49ab4b30b4b8b945b7c11b8af63f0&amp;#45;&amp;#45;377e3dd750124d479407103dde136ce1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M307.07,-252C308.79,-252 343.68,-252 369.88,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 377e3dd750124d479407103dde136ce1&amp;#45;&amp;#45;20df36d88005401b831a045e527d77ac --&gt;\n&lt;g id=\"edge1929\" class=\"edge\"&gt;\n&lt;title&gt;377e3dd750124d479407103dde136ce1&amp;#45;&amp;#45;20df36d88005401b831a045e527d77ac&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M399.6,-281.65C399.6,-292.2 399.6,-302.76 399.6,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- e51b737917424592bce4c233253a322e --&gt;\n&lt;g id=\"node942\" class=\"node\"&gt;\n&lt;title&gt;e51b737917424592bce4c233253a322e&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"493.2\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 377e3dd750124d479407103dde136ce1&amp;#45;&amp;#45;e51b737917424592bce4c233253a322e --&gt;\n&lt;g id=\"edge937\" class=\"edge\"&gt;\n&lt;title&gt;377e3dd750124d479407103dde136ce1&amp;#45;&amp;#45;e51b737917424592bce4c233253a322e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M429.08,-252C449.04,-252 474.14,-252 485.76,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5d051e0ac99b430ba74fd4fa22a55ddc --&gt;\n&lt;g id=\"node943\" class=\"node\"&gt;\n&lt;title&gt;5d051e0ac99b430ba74fd4fa22a55ddc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"587.52,-252.72 586.08,-252.72 586.08,-251.28 587.52,-251.28 587.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e51b737917424592bce4c233253a322e&amp;#45;&amp;#45;5d051e0ac99b430ba74fd4fa22a55ddc --&gt;\n&lt;g id=\"edge938\" class=\"edge\"&gt;\n&lt;title&gt;e51b737917424592bce4c233253a322e&amp;#45;&amp;#45;5d051e0ac99b430ba74fd4fa22a55ddc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M500.79,-252C521.13,-252 581.84,-252 585.62,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 51c8467426cf4712970efae822c0a717 --&gt;\n&lt;g id=\"node944\" class=\"node\"&gt;\n&lt;title&gt;51c8467426cf4712970efae822c0a717&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"681.12,-252.72 679.68,-252.72 679.68,-251.28 681.12,-251.28 681.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5d051e0ac99b430ba74fd4fa22a55ddc&amp;#45;&amp;#45;51c8467426cf4712970efae822c0a717 --&gt;\n&lt;g id=\"edge939\" class=\"edge\"&gt;\n&lt;title&gt;5d051e0ac99b430ba74fd4fa22a55ddc&amp;#45;&amp;#45;51c8467426cf4712970efae822c0a717&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M587.87,-252C590.6,-252 676.65,-252 679.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e97ab65985744519c1344d58c609033 --&gt;\n&lt;g id=\"node945\" class=\"node\"&gt;\n&lt;title&gt;6e97ab65985744519c1344d58c609033&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"827.52,-252.72 826.08,-252.72 826.08,-251.28 827.52,-251.28 827.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 51c8467426cf4712970efae822c0a717&amp;#45;&amp;#45;6e97ab65985744519c1344d58c609033 --&gt;\n&lt;g id=\"edge940\" class=\"edge\"&gt;\n&lt;title&gt;51c8467426cf4712970efae822c0a717&amp;#45;&amp;#45;6e97ab65985744519c1344d58c609033&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M681.5,-252C685.81,-252 821.46,-252 825.7,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8a772c3ae964f9ca3700b082daecb9f --&gt;\n&lt;g id=\"node946\" class=\"node\"&gt;\n&lt;title&gt;f8a772c3ae964f9ca3700b082daecb9f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"973.92,-252.72 972.48,-252.72 972.48,-251.28 973.92,-251.28 973.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e97ab65985744519c1344d58c609033&amp;#45;&amp;#45;f8a772c3ae964f9ca3700b082daecb9f --&gt;\n&lt;g id=\"edge941\" class=\"edge\"&gt;\n&lt;title&gt;6e97ab65985744519c1344d58c609033&amp;#45;&amp;#45;f8a772c3ae964f9ca3700b082daecb9f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M827.9,-252C832.21,-252 967.86,-252 972.1,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd63d34e798a400290bf8b2b0cfc0ae3 --&gt;\n&lt;g id=\"node947\" class=\"node\"&gt;\n&lt;title&gt;dd63d34e798a400290bf8b2b0cfc0ae3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1067.52,-252.72 1066.08,-252.72 1066.08,-251.28 1067.52,-251.28 1067.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8a772c3ae964f9ca3700b082daecb9f&amp;#45;&amp;#45;dd63d34e798a400290bf8b2b0cfc0ae3 --&gt;\n&lt;g id=\"edge942\" class=\"edge\"&gt;\n&lt;title&gt;f8a772c3ae964f9ca3700b082daecb9f&amp;#45;&amp;#45;dd63d34e798a400290bf8b2b0cfc0ae3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M974.27,-252C977,-252 1063.05,-252 1065.74,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 03030fdfadac4903a3b4ac891992bbe4 --&gt;\n&lt;g id=\"node948\" class=\"node\"&gt;\n&lt;title&gt;03030fdfadac4903a3b4ac891992bbe4&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"1160.4\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd63d34e798a400290bf8b2b0cfc0ae3&amp;#45;&amp;#45;03030fdfadac4903a3b4ac891992bbe4 --&gt;\n&lt;g id=\"edge943\" class=\"edge\"&gt;\n&lt;title&gt;dd63d34e798a400290bf8b2b0cfc0ae3&amp;#45;&amp;#45;03030fdfadac4903a3b4ac891992bbe4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1067.87,-252C1070.17,-252 1132.01,-252 1152.72,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 165e0734e5e74f2389086e7bbb996f59 --&gt;\n&lt;g id=\"node949\" class=\"node\"&gt;\n&lt;title&gt;165e0734e5e74f2389086e7bbb996f59&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M1270.8,-280.8C1270.8,-280.8 1237.2,-280.8 1237.2,-280.8 1231.2,-280.8 1225.2,-274.8 1225.2,-268.8 1225.2,-268.8 1225.2,-235.2 1225.2,-235.2 1225.2,-229.2 1231.2,-223.2 1237.2,-223.2 1237.2,-223.2 1270.8,-223.2 1270.8,-223.2 1276.8,-223.2 1282.8,-229.2 1282.8,-235.2 1282.8,-235.2 1282.8,-268.8 1282.8,-268.8 1282.8,-274.8 1276.8,-280.8 1270.8,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"1254\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 03030fdfadac4903a3b4ac891992bbe4&amp;#45;&amp;#45;165e0734e5e74f2389086e7bbb996f59 --&gt;\n&lt;g id=\"edge944\" class=\"edge\"&gt;\n&lt;title&gt;03030fdfadac4903a3b4ac891992bbe4&amp;#45;&amp;#45;165e0734e5e74f2389086e7bbb996f59&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1167.99,-252C1179.64,-252 1204.52,-252 1224.37,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 165e0734e5e74f2389086e7bbb996f59&amp;#45;&amp;#45;59c42f663c8e4a18947c6ecfc18078af --&gt;\n&lt;g id=\"edge1930\" class=\"edge\"&gt;\n&lt;title&gt;165e0734e5e74f2389086e7bbb996f59&amp;#45;&amp;#45;59c42f663c8e4a18947c6ecfc18078af&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1254,-281.65C1254,-292.2 1254,-302.76 1254,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0583ed2615d74c158d3eb0f934969ee6 --&gt;\n&lt;g id=\"node950\" class=\"node\"&gt;\n&lt;title&gt;0583ed2615d74c158d3eb0f934969ee6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1348.32,-252.72 1346.88,-252.72 1346.88,-251.28 1348.32,-251.28 1348.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 165e0734e5e74f2389086e7bbb996f59&amp;#45;&amp;#45;0583ed2615d74c158d3eb0f934969ee6 --&gt;\n&lt;g id=\"edge945\" class=\"edge\"&gt;\n&lt;title&gt;165e0734e5e74f2389086e7bbb996f59&amp;#45;&amp;#45;0583ed2615d74c158d3eb0f934969ee6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1283.48,-252C1309.53,-252 1344.34,-252 1346.5,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 32eafd7f45c243d7b0a3dde2285c2246 --&gt;\n&lt;g id=\"node951\" class=\"node\"&gt;\n&lt;title&gt;32eafd7f45c243d7b0a3dde2285c2246&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1441.92,-252.72 1440.48,-252.72 1440.48,-251.28 1441.92,-251.28 1441.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0583ed2615d74c158d3eb0f934969ee6&amp;#45;&amp;#45;32eafd7f45c243d7b0a3dde2285c2246 --&gt;\n&lt;g id=\"edge946\" class=\"edge\"&gt;\n&lt;title&gt;0583ed2615d74c158d3eb0f934969ee6&amp;#45;&amp;#45;32eafd7f45c243d7b0a3dde2285c2246&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1348.67,-252C1351.4,-252 1437.45,-252 1440.14,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- d2017580aa3048e181f2285724b42405 --&gt;\n&lt;g id=\"node952\" class=\"node\"&gt;\n&lt;title&gt;d2017580aa3048e181f2285724b42405&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1535.52,-252.72 1534.08,-252.72 1534.08,-251.28 1535.52,-251.28 1535.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 32eafd7f45c243d7b0a3dde2285c2246&amp;#45;&amp;#45;d2017580aa3048e181f2285724b42405 --&gt;\n&lt;g id=\"edge947\" class=\"edge\"&gt;\n&lt;title&gt;32eafd7f45c243d7b0a3dde2285c2246&amp;#45;&amp;#45;d2017580aa3048e181f2285724b42405&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1442.27,-252C1445,-252 1531.05,-252 1533.74,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 150d3a9d4b0641c2ad7c71cf824ee968 --&gt;\n&lt;g id=\"node953\" class=\"node\"&gt;\n&lt;title&gt;150d3a9d4b0641c2ad7c71cf824ee968&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1629.12,-252.72 1627.68,-252.72 1627.68,-251.28 1629.12,-251.28 1629.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d2017580aa3048e181f2285724b42405&amp;#45;&amp;#45;150d3a9d4b0641c2ad7c71cf824ee968 --&gt;\n&lt;g id=\"edge948\" class=\"edge\"&gt;\n&lt;title&gt;d2017580aa3048e181f2285724b42405&amp;#45;&amp;#45;150d3a9d4b0641c2ad7c71cf824ee968&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1535.87,-252C1538.6,-252 1624.65,-252 1627.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d8b53e8994c4ce892adbf51d8c14ed2 --&gt;\n&lt;g id=\"node954\" class=\"node\"&gt;\n&lt;title&gt;6d8b53e8994c4ce892adbf51d8c14ed2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1781.52,-252.72 1780.08,-252.72 1780.08,-251.28 1781.52,-251.28 1781.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 150d3a9d4b0641c2ad7c71cf824ee968&amp;#45;&amp;#45;6d8b53e8994c4ce892adbf51d8c14ed2 --&gt;\n&lt;g id=\"edge949\" class=\"edge\"&gt;\n&lt;title&gt;150d3a9d4b0641c2ad7c71cf824ee968&amp;#45;&amp;#45;6d8b53e8994c4ce892adbf51d8c14ed2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1629.51,-252C1633.99,-252 1775.28,-252 1779.69,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 89be26de84734ae29915ff56553a28d2 --&gt;\n&lt;g id=\"node955\" class=\"node\"&gt;\n&lt;title&gt;89be26de84734ae29915ff56553a28d2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1933.92,-252.72 1932.48,-252.72 1932.48,-251.28 1933.92,-251.28 1933.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d8b53e8994c4ce892adbf51d8c14ed2&amp;#45;&amp;#45;89be26de84734ae29915ff56553a28d2 --&gt;\n&lt;g id=\"edge950\" class=\"edge\"&gt;\n&lt;title&gt;6d8b53e8994c4ce892adbf51d8c14ed2&amp;#45;&amp;#45;89be26de84734ae29915ff56553a28d2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1781.91,-252C1786.39,-252 1927.68,-252 1932.09,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9cc2903d4a141f3acfaa57500795571 --&gt;\n&lt;g id=\"node956\" class=\"node\"&gt;\n&lt;title&gt;c9cc2903d4a141f3acfaa57500795571&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2027.52,-252.72 2026.08,-252.72 2026.08,-251.28 2027.52,-251.28 2027.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 89be26de84734ae29915ff56553a28d2&amp;#45;&amp;#45;c9cc2903d4a141f3acfaa57500795571 --&gt;\n&lt;g id=\"edge951\" class=\"edge\"&gt;\n&lt;title&gt;89be26de84734ae29915ff56553a28d2&amp;#45;&amp;#45;c9cc2903d4a141f3acfaa57500795571&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1934.27,-252C1937,-252 2023.05,-252 2025.74,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- e12ee8d88fbc47bcaf79a2b609f7f649 --&gt;\n&lt;g id=\"node957\" class=\"node\"&gt;\n&lt;title&gt;e12ee8d88fbc47bcaf79a2b609f7f649&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2121.12,-252.72 2119.68,-252.72 2119.68,-251.28 2121.12,-251.28 2121.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9cc2903d4a141f3acfaa57500795571&amp;#45;&amp;#45;e12ee8d88fbc47bcaf79a2b609f7f649 --&gt;\n&lt;g id=\"edge952\" class=\"edge\"&gt;\n&lt;title&gt;c9cc2903d4a141f3acfaa57500795571&amp;#45;&amp;#45;e12ee8d88fbc47bcaf79a2b609f7f649&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2027.87,-252C2030.6,-252 2116.65,-252 2119.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- ef257594cff84ca2bb105feb7891cf44 --&gt;\n&lt;g id=\"node958\" class=\"node\"&gt;\n&lt;title&gt;ef257594cff84ca2bb105feb7891cf44&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2214.72,-252.72 2213.28,-252.72 2213.28,-251.28 2214.72,-251.28 2214.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e12ee8d88fbc47bcaf79a2b609f7f649&amp;#45;&amp;#45;ef257594cff84ca2bb105feb7891cf44 --&gt;\n&lt;g id=\"edge953\" class=\"edge\"&gt;\n&lt;title&gt;e12ee8d88fbc47bcaf79a2b609f7f649&amp;#45;&amp;#45;ef257594cff84ca2bb105feb7891cf44&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2121.47,-252C2124.2,-252 2210.25,-252 2212.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- e74d4dd60add483f8345dab736cf7f04 --&gt;\n&lt;g id=\"node959\" class=\"node\"&gt;\n&lt;title&gt;e74d4dd60add483f8345dab736cf7f04&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M2324.4,-280.8C2324.4,-280.8 2290.8,-280.8 2290.8,-280.8 2284.8,-280.8 2278.8,-274.8 2278.8,-268.8 2278.8,-268.8 2278.8,-235.2 2278.8,-235.2 2278.8,-229.2 2284.8,-223.2 2290.8,-223.2 2290.8,-223.2 2324.4,-223.2 2324.4,-223.2 2330.4,-223.2 2336.4,-229.2 2336.4,-235.2 2336.4,-235.2 2336.4,-268.8 2336.4,-268.8 2336.4,-274.8 2330.4,-280.8 2324.4,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"2307.6\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- ef257594cff84ca2bb105feb7891cf44&amp;#45;&amp;#45;e74d4dd60add483f8345dab736cf7f04 --&gt;\n&lt;g id=\"edge954\" class=\"edge\"&gt;\n&lt;title&gt;ef257594cff84ca2bb105feb7891cf44&amp;#45;&amp;#45;e74d4dd60add483f8345dab736cf7f04&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2215.07,-252C2216.79,-252 2251.68,-252 2277.88,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- e74d4dd60add483f8345dab736cf7f04&amp;#45;&amp;#45;362f24d5fbb9418e8ba2a2b51f62440e --&gt;\n&lt;g id=\"edge1931\" class=\"edge\"&gt;\n&lt;title&gt;e74d4dd60add483f8345dab736cf7f04&amp;#45;&amp;#45;362f24d5fbb9418e8ba2a2b51f62440e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2307.6,-281.65C2307.6,-292.2 2307.6,-302.76 2307.6,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4f659d42526d49c695fcd4ee24af25b5 --&gt;\n&lt;g id=\"node960\" class=\"node\"&gt;\n&lt;title&gt;4f659d42526d49c695fcd4ee24af25b5&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"2401.2\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- e74d4dd60add483f8345dab736cf7f04&amp;#45;&amp;#45;4f659d42526d49c695fcd4ee24af25b5 --&gt;\n&lt;g id=\"edge955\" class=\"edge\"&gt;\n&lt;title&gt;e74d4dd60add483f8345dab736cf7f04&amp;#45;&amp;#45;4f659d42526d49c695fcd4ee24af25b5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2337.08,-252C2357.04,-252 2382.14,-252 2393.76,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5193e064ab5947208712de0a3e50abdf --&gt;\n&lt;g id=\"node961\" class=\"node\"&gt;\n&lt;title&gt;5193e064ab5947208712de0a3e50abdf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2554.32,-252.72 2552.88,-252.72 2552.88,-251.28 2554.32,-251.28 2554.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4f659d42526d49c695fcd4ee24af25b5&amp;#45;&amp;#45;5193e064ab5947208712de0a3e50abdf --&gt;\n&lt;g id=\"edge956\" class=\"edge\"&gt;\n&lt;title&gt;4f659d42526d49c695fcd4ee24af25b5&amp;#45;&amp;#45;5193e064ab5947208712de0a3e50abdf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2408.66,-252C2437,-252 2549.02,-252 2552.52,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93c8e58856104aff8013f692274f294c --&gt;\n&lt;g id=\"node962\" class=\"node\"&gt;\n&lt;title&gt;93c8e58856104aff8013f692274f294c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"2706\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5193e064ab5947208712de0a3e50abdf&amp;#45;&amp;#45;93c8e58856104aff8013f692274f294c --&gt;\n&lt;g id=\"edge957\" class=\"edge\"&gt;\n&lt;title&gt;5193e064ab5947208712de0a3e50abdf&amp;#45;&amp;#45;93c8e58856104aff8013f692274f294c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2554.71,-252C2558.68,-252 2669.77,-252 2698.35,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 16b4f97287dc420d822144a2eb0c4f7c --&gt;\n&lt;g id=\"node963\" class=\"node\"&gt;\n&lt;title&gt;16b4f97287dc420d822144a2eb0c4f7c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M2816.4,-280.8C2816.4,-280.8 2782.8,-280.8 2782.8,-280.8 2776.8,-280.8 2770.8,-274.8 2770.8,-268.8 2770.8,-268.8 2770.8,-235.2 2770.8,-235.2 2770.8,-229.2 2776.8,-223.2 2782.8,-223.2 2782.8,-223.2 2816.4,-223.2 2816.4,-223.2 2822.4,-223.2 2828.4,-229.2 2828.4,-235.2 2828.4,-235.2 2828.4,-268.8 2828.4,-268.8 2828.4,-274.8 2822.4,-280.8 2816.4,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"2799.6\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 93c8e58856104aff8013f692274f294c&amp;#45;&amp;#45;16b4f97287dc420d822144a2eb0c4f7c --&gt;\n&lt;g id=\"edge958\" class=\"edge\"&gt;\n&lt;title&gt;93c8e58856104aff8013f692274f294c&amp;#45;&amp;#45;16b4f97287dc420d822144a2eb0c4f7c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2713.59,-252C2725.24,-252 2750.12,-252 2769.97,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 16b4f97287dc420d822144a2eb0c4f7c&amp;#45;&amp;#45;252fb9acebc440c7a96841045e664718 --&gt;\n&lt;g id=\"edge1932\" class=\"edge\"&gt;\n&lt;title&gt;16b4f97287dc420d822144a2eb0c4f7c&amp;#45;&amp;#45;252fb9acebc440c7a96841045e664718&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2799.6,-281.65C2799.6,-292.2 2799.6,-302.76 2799.6,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- ba441febae5445c2b9364627c2311079 --&gt;\n&lt;g id=\"node964\" class=\"node\"&gt;\n&lt;title&gt;ba441febae5445c2b9364627c2311079&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2893.92,-252.72 2892.48,-252.72 2892.48,-251.28 2893.92,-251.28 2893.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 16b4f97287dc420d822144a2eb0c4f7c&amp;#45;&amp;#45;ba441febae5445c2b9364627c2311079 --&gt;\n&lt;g id=\"edge959\" class=\"edge\"&gt;\n&lt;title&gt;16b4f97287dc420d822144a2eb0c4f7c&amp;#45;&amp;#45;ba441febae5445c2b9364627c2311079&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2829.08,-252C2855.13,-252 2889.94,-252 2892.1,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5d3d0544ffb34e778d841aa1b9f69240 --&gt;\n&lt;g id=\"node965\" class=\"node\"&gt;\n&lt;title&gt;5d3d0544ffb34e778d841aa1b9f69240&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2987.52,-252.72 2986.08,-252.72 2986.08,-251.28 2987.52,-251.28 2987.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ba441febae5445c2b9364627c2311079&amp;#45;&amp;#45;5d3d0544ffb34e778d841aa1b9f69240 --&gt;\n&lt;g id=\"edge960\" class=\"edge\"&gt;\n&lt;title&gt;ba441febae5445c2b9364627c2311079&amp;#45;&amp;#45;5d3d0544ffb34e778d841aa1b9f69240&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2894.27,-252C2897,-252 2983.05,-252 2985.74,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 60f63d8ca35e4c189ece8f13559161e4 --&gt;\n&lt;g id=\"node966\" class=\"node\"&gt;\n&lt;title&gt;60f63d8ca35e4c189ece8f13559161e4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3081.12,-252.72 3079.68,-252.72 3079.68,-251.28 3081.12,-251.28 3081.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5d3d0544ffb34e778d841aa1b9f69240&amp;#45;&amp;#45;60f63d8ca35e4c189ece8f13559161e4 --&gt;\n&lt;g id=\"edge961\" class=\"edge\"&gt;\n&lt;title&gt;5d3d0544ffb34e778d841aa1b9f69240&amp;#45;&amp;#45;60f63d8ca35e4c189ece8f13559161e4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2987.87,-252C2990.6,-252 3076.65,-252 3079.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 45e25132fcce407487977a61b5d55a82 --&gt;\n&lt;g id=\"node967\" class=\"node\"&gt;\n&lt;title&gt;45e25132fcce407487977a61b5d55a82&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3174.72,-252.72 3173.28,-252.72 3173.28,-251.28 3174.72,-251.28 3174.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 60f63d8ca35e4c189ece8f13559161e4&amp;#45;&amp;#45;45e25132fcce407487977a61b5d55a82 --&gt;\n&lt;g id=\"edge962\" class=\"edge\"&gt;\n&lt;title&gt;60f63d8ca35e4c189ece8f13559161e4&amp;#45;&amp;#45;45e25132fcce407487977a61b5d55a82&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3081.47,-252C3084.2,-252 3170.25,-252 3172.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e771d9014bc489191b02e38912e7213 --&gt;\n&lt;g id=\"node968\" class=\"node\"&gt;\n&lt;title&gt;3e771d9014bc489191b02e38912e7213&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3268.32,-252.72 3266.88,-252.72 3266.88,-251.28 3268.32,-251.28 3268.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 45e25132fcce407487977a61b5d55a82&amp;#45;&amp;#45;3e771d9014bc489191b02e38912e7213 --&gt;\n&lt;g id=\"edge963\" class=\"edge\"&gt;\n&lt;title&gt;45e25132fcce407487977a61b5d55a82&amp;#45;&amp;#45;3e771d9014bc489191b02e38912e7213&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3175.07,-252C3177.8,-252 3263.85,-252 3266.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- ab05de4a07bb4a839dd1fcb470c211eb --&gt;\n&lt;g id=\"node969\" class=\"node\"&gt;\n&lt;title&gt;ab05de4a07bb4a839dd1fcb470c211eb&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M3378,-280.8C3378,-280.8 3344.4,-280.8 3344.4,-280.8 3338.4,-280.8 3332.4,-274.8 3332.4,-268.8 3332.4,-268.8 3332.4,-235.2 3332.4,-235.2 3332.4,-229.2 3338.4,-223.2 3344.4,-223.2 3344.4,-223.2 3378,-223.2 3378,-223.2 3384,-223.2 3390,-229.2 3390,-235.2 3390,-235.2 3390,-268.8 3390,-268.8 3390,-274.8 3384,-280.8 3378,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"3361.2\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 3e771d9014bc489191b02e38912e7213&amp;#45;&amp;#45;ab05de4a07bb4a839dd1fcb470c211eb --&gt;\n&lt;g id=\"edge964\" class=\"edge\"&gt;\n&lt;title&gt;3e771d9014bc489191b02e38912e7213&amp;#45;&amp;#45;ab05de4a07bb4a839dd1fcb470c211eb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3268.67,-252C3270.39,-252 3305.28,-252 3331.48,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- ab05de4a07bb4a839dd1fcb470c211eb&amp;#45;&amp;#45;17537e71816f4bbdb3593a557bcd0881 --&gt;\n&lt;g id=\"edge1933\" class=\"edge\"&gt;\n&lt;title&gt;ab05de4a07bb4a839dd1fcb470c211eb&amp;#45;&amp;#45;17537e71816f4bbdb3593a557bcd0881&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3361.2,-281.65C3361.2,-292.2 3361.2,-302.76 3361.2,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7acb62808b3e4a22b0f97c5391402015 --&gt;\n&lt;g id=\"node970\" class=\"node\"&gt;\n&lt;title&gt;7acb62808b3e4a22b0f97c5391402015&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M3589.2,-280.8C3589.2,-280.8 3438,-280.8 3438,-280.8 3432,-280.8 3426,-274.8 3426,-268.8 3426,-268.8 3426,-235.2 3426,-235.2 3426,-229.2 3432,-223.2 3438,-223.2 3438,-223.2 3589.2,-223.2 3589.2,-223.2 3595.2,-223.2 3601.2,-229.2 3601.2,-235.2 3601.2,-235.2 3601.2,-268.8 3601.2,-268.8 3601.2,-274.8 3595.2,-280.8 3589.2,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"3513.6\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- ab05de4a07bb4a839dd1fcb470c211eb&amp;#45;&amp;#45;7acb62808b3e4a22b0f97c5391402015 --&gt;\n&lt;g id=\"edge965\" class=\"edge\"&gt;\n&lt;title&gt;ab05de4a07bb4a839dd1fcb470c211eb&amp;#45;&amp;#45;7acb62808b3e4a22b0f97c5391402015&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3390.84,-252C3400.9,-252 3412.79,-252 3425.13,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- b8d1747c134f4969b37a700a66005994 --&gt;\n&lt;g id=\"node971\" class=\"node\"&gt;\n&lt;title&gt;b8d1747c134f4969b37a700a66005994&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M3682.8,-280.8C3682.8,-280.8 3649.2,-280.8 3649.2,-280.8 3643.2,-280.8 3637.2,-274.8 3637.2,-268.8 3637.2,-268.8 3637.2,-235.2 3637.2,-235.2 3637.2,-229.2 3643.2,-223.2 3649.2,-223.2 3649.2,-223.2 3682.8,-223.2 3682.8,-223.2 3688.8,-223.2 3694.8,-229.2 3694.8,-235.2 3694.8,-235.2 3694.8,-268.8 3694.8,-268.8 3694.8,-274.8 3688.8,-280.8 3682.8,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"3666\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 7acb62808b3e4a22b0f97c5391402015&amp;#45;&amp;#45;b8d1747c134f4969b37a700a66005994 --&gt;\n&lt;g id=\"edge966\" class=\"edge\"&gt;\n&lt;title&gt;7acb62808b3e4a22b0f97c5391402015&amp;#45;&amp;#45;b8d1747c134f4969b37a700a66005994&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3602.09,-252C3614.37,-252 3626.2,-252 3636.22,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- b8d1747c134f4969b37a700a66005994&amp;#45;&amp;#45;c7cee19c2e824b8da9c9f2e15ff5d119 --&gt;\n&lt;g id=\"edge1934\" class=\"edge\"&gt;\n&lt;title&gt;b8d1747c134f4969b37a700a66005994&amp;#45;&amp;#45;c7cee19c2e824b8da9c9f2e15ff5d119&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3666,-281.65C3666,-292.2 3666,-302.76 3666,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- ebd3cfd572d04fa4b9d054ecf9ce752d --&gt;\n&lt;g id=\"node972\" class=\"node\"&gt;\n&lt;title&gt;ebd3cfd572d04fa4b9d054ecf9ce752d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3760.32,-252.72 3758.88,-252.72 3758.88,-251.28 3760.32,-251.28 3760.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b8d1747c134f4969b37a700a66005994&amp;#45;&amp;#45;ebd3cfd572d04fa4b9d054ecf9ce752d --&gt;\n&lt;g id=\"edge967\" class=\"edge\"&gt;\n&lt;title&gt;b8d1747c134f4969b37a700a66005994&amp;#45;&amp;#45;ebd3cfd572d04fa4b9d054ecf9ce752d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3695.48,-252C3721.53,-252 3756.34,-252 3758.5,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- a2507e4a76dd4e70ac8881a7c4fe2525 --&gt;\n&lt;g id=\"node973\" class=\"node\"&gt;\n&lt;title&gt;a2507e4a76dd4e70ac8881a7c4fe2525&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3853.92,-252.72 3852.48,-252.72 3852.48,-251.28 3853.92,-251.28 3853.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ebd3cfd572d04fa4b9d054ecf9ce752d&amp;#45;&amp;#45;a2507e4a76dd4e70ac8881a7c4fe2525 --&gt;\n&lt;g id=\"edge968\" class=\"edge\"&gt;\n&lt;title&gt;ebd3cfd572d04fa4b9d054ecf9ce752d&amp;#45;&amp;#45;a2507e4a76dd4e70ac8881a7c4fe2525&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3760.67,-252C3763.4,-252 3849.45,-252 3852.14,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9f91e78c16884ab4b89c27851aa44b72 --&gt;\n&lt;g id=\"node974\" class=\"node\"&gt;\n&lt;title&gt;9f91e78c16884ab4b89c27851aa44b72&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3947.52,-252.72 3946.08,-252.72 3946.08,-251.28 3947.52,-251.28 3947.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a2507e4a76dd4e70ac8881a7c4fe2525&amp;#45;&amp;#45;9f91e78c16884ab4b89c27851aa44b72 --&gt;\n&lt;g id=\"edge969\" class=\"edge\"&gt;\n&lt;title&gt;a2507e4a76dd4e70ac8881a7c4fe2525&amp;#45;&amp;#45;9f91e78c16884ab4b89c27851aa44b72&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3854.27,-252C3857,-252 3943.05,-252 3945.74,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- df756786b59f4f278429ad9762c289bc --&gt;\n&lt;g id=\"node975\" class=\"node\"&gt;\n&lt;title&gt;df756786b59f4f278429ad9762c289bc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4041.12,-252.72 4039.68,-252.72 4039.68,-251.28 4041.12,-251.28 4041.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9f91e78c16884ab4b89c27851aa44b72&amp;#45;&amp;#45;df756786b59f4f278429ad9762c289bc --&gt;\n&lt;g id=\"edge970\" class=\"edge\"&gt;\n&lt;title&gt;9f91e78c16884ab4b89c27851aa44b72&amp;#45;&amp;#45;df756786b59f4f278429ad9762c289bc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3947.87,-252C3950.6,-252 4036.65,-252 4039.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 098d2412263c4cc093a31629a7fd5248 --&gt;\n&lt;g id=\"node976\" class=\"node\"&gt;\n&lt;title&gt;098d2412263c4cc093a31629a7fd5248&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M4150.8,-280.8C4150.8,-280.8 4117.2,-280.8 4117.2,-280.8 4111.2,-280.8 4105.2,-274.8 4105.2,-268.8 4105.2,-268.8 4105.2,-235.2 4105.2,-235.2 4105.2,-229.2 4111.2,-223.2 4117.2,-223.2 4117.2,-223.2 4150.8,-223.2 4150.8,-223.2 4156.8,-223.2 4162.8,-229.2 4162.8,-235.2 4162.8,-235.2 4162.8,-268.8 4162.8,-268.8 4162.8,-274.8 4156.8,-280.8 4150.8,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"4134\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- df756786b59f4f278429ad9762c289bc&amp;#45;&amp;#45;098d2412263c4cc093a31629a7fd5248 --&gt;\n&lt;g id=\"edge971\" class=\"edge\"&gt;\n&lt;title&gt;df756786b59f4f278429ad9762c289bc&amp;#45;&amp;#45;098d2412263c4cc093a31629a7fd5248&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4041.47,-252C4043.19,-252 4078.08,-252 4104.28,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 098d2412263c4cc093a31629a7fd5248&amp;#45;&amp;#45;7664e3d05cc7415b86e79c4f2cdb2faa --&gt;\n&lt;g id=\"edge1935\" class=\"edge\"&gt;\n&lt;title&gt;098d2412263c4cc093a31629a7fd5248&amp;#45;&amp;#45;7664e3d05cc7415b86e79c4f2cdb2faa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4134,-281.65C4134,-292.2 4134,-302.76 4134,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7217094d6da412891c12abe9aec8fe4 --&gt;\n&lt;g id=\"node977\" class=\"node\"&gt;\n&lt;title&gt;e7217094d6da412891c12abe9aec8fe4&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"4227.6\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 098d2412263c4cc093a31629a7fd5248&amp;#45;&amp;#45;e7217094d6da412891c12abe9aec8fe4 --&gt;\n&lt;g id=\"edge972\" class=\"edge\"&gt;\n&lt;title&gt;098d2412263c4cc093a31629a7fd5248&amp;#45;&amp;#45;e7217094d6da412891c12abe9aec8fe4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4163.48,-252C4183.44,-252 4208.54,-252 4220.16,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 18b2eec01ddd4a788b2ebbe93511207c --&gt;\n&lt;g id=\"node978\" class=\"node\"&gt;\n&lt;title&gt;18b2eec01ddd4a788b2ebbe93511207c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4380.72,-252.72 4379.28,-252.72 4379.28,-251.28 4380.72,-251.28 4380.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7217094d6da412891c12abe9aec8fe4&amp;#45;&amp;#45;18b2eec01ddd4a788b2ebbe93511207c --&gt;\n&lt;g id=\"edge973\" class=\"edge\"&gt;\n&lt;title&gt;e7217094d6da412891c12abe9aec8fe4&amp;#45;&amp;#45;18b2eec01ddd4a788b2ebbe93511207c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4235.06,-252C4263.4,-252 4375.42,-252 4378.92,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- d413fa8ef2fd450798478d696ec647db --&gt;\n&lt;g id=\"node979\" class=\"node\"&gt;\n&lt;title&gt;d413fa8ef2fd450798478d696ec647db&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"4532.4\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 18b2eec01ddd4a788b2ebbe93511207c&amp;#45;&amp;#45;d413fa8ef2fd450798478d696ec647db --&gt;\n&lt;g id=\"edge974\" class=\"edge\"&gt;\n&lt;title&gt;18b2eec01ddd4a788b2ebbe93511207c&amp;#45;&amp;#45;d413fa8ef2fd450798478d696ec647db&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4381.11,-252C4385.08,-252 4496.17,-252 4524.75,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 82f6b43c3f104129b03f82c239b3f24e --&gt;\n&lt;g id=\"node980\" class=\"node\"&gt;\n&lt;title&gt;82f6b43c3f104129b03f82c239b3f24e&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M4642.8,-280.8C4642.8,-280.8 4609.2,-280.8 4609.2,-280.8 4603.2,-280.8 4597.2,-274.8 4597.2,-268.8 4597.2,-268.8 4597.2,-235.2 4597.2,-235.2 4597.2,-229.2 4603.2,-223.2 4609.2,-223.2 4609.2,-223.2 4642.8,-223.2 4642.8,-223.2 4648.8,-223.2 4654.8,-229.2 4654.8,-235.2 4654.8,-235.2 4654.8,-268.8 4654.8,-268.8 4654.8,-274.8 4648.8,-280.8 4642.8,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"4626\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d413fa8ef2fd450798478d696ec647db&amp;#45;&amp;#45;82f6b43c3f104129b03f82c239b3f24e --&gt;\n&lt;g id=\"edge975\" class=\"edge\"&gt;\n&lt;title&gt;d413fa8ef2fd450798478d696ec647db&amp;#45;&amp;#45;82f6b43c3f104129b03f82c239b3f24e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4539.99,-252C4551.64,-252 4576.52,-252 4596.37,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 82f6b43c3f104129b03f82c239b3f24e&amp;#45;&amp;#45;1761a32289cd47088b4b99d9146ef281 --&gt;\n&lt;g id=\"edge1936\" class=\"edge\"&gt;\n&lt;title&gt;82f6b43c3f104129b03f82c239b3f24e&amp;#45;&amp;#45;1761a32289cd47088b4b99d9146ef281&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4626,-281.65C4626,-292.2 4626,-302.76 4626,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5f9d0f73ad6743afb83559a302350891 --&gt;\n&lt;g id=\"node981\" class=\"node\"&gt;\n&lt;title&gt;5f9d0f73ad6743afb83559a302350891&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4720.32,-252.72 4718.88,-252.72 4718.88,-251.28 4720.32,-251.28 4720.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 82f6b43c3f104129b03f82c239b3f24e&amp;#45;&amp;#45;5f9d0f73ad6743afb83559a302350891 --&gt;\n&lt;g id=\"edge976\" class=\"edge\"&gt;\n&lt;title&gt;82f6b43c3f104129b03f82c239b3f24e&amp;#45;&amp;#45;5f9d0f73ad6743afb83559a302350891&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4655.48,-252C4681.53,-252 4716.34,-252 4718.5,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1cf152d221ed46aa97f9be4f95b315ad --&gt;\n&lt;g id=\"node982\" class=\"node\"&gt;\n&lt;title&gt;1cf152d221ed46aa97f9be4f95b315ad&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4813.92,-252.72 4812.48,-252.72 4812.48,-251.28 4813.92,-251.28 4813.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5f9d0f73ad6743afb83559a302350891&amp;#45;&amp;#45;1cf152d221ed46aa97f9be4f95b315ad --&gt;\n&lt;g id=\"edge977\" class=\"edge\"&gt;\n&lt;title&gt;5f9d0f73ad6743afb83559a302350891&amp;#45;&amp;#45;1cf152d221ed46aa97f9be4f95b315ad&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4720.67,-252C4723.4,-252 4809.45,-252 4812.14,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 80217c45b6bc4e1d9b022b89e002237a --&gt;\n&lt;g id=\"node983\" class=\"node\"&gt;\n&lt;title&gt;80217c45b6bc4e1d9b022b89e002237a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4907.52,-252.72 4906.08,-252.72 4906.08,-251.28 4907.52,-251.28 4907.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1cf152d221ed46aa97f9be4f95b315ad&amp;#45;&amp;#45;80217c45b6bc4e1d9b022b89e002237a --&gt;\n&lt;g id=\"edge978\" class=\"edge\"&gt;\n&lt;title&gt;1cf152d221ed46aa97f9be4f95b315ad&amp;#45;&amp;#45;80217c45b6bc4e1d9b022b89e002237a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4814.27,-252C4817,-252 4903.05,-252 4905.74,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 49c61af6a0b147038f8794d97b707b38 --&gt;\n&lt;g id=\"node984\" class=\"node\"&gt;\n&lt;title&gt;49c61af6a0b147038f8794d97b707b38&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5001.12,-252.72 4999.68,-252.72 4999.68,-251.28 5001.12,-251.28 5001.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 80217c45b6bc4e1d9b022b89e002237a&amp;#45;&amp;#45;49c61af6a0b147038f8794d97b707b38 --&gt;\n&lt;g id=\"edge979\" class=\"edge\"&gt;\n&lt;title&gt;80217c45b6bc4e1d9b022b89e002237a&amp;#45;&amp;#45;49c61af6a0b147038f8794d97b707b38&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4907.87,-252C4910.6,-252 4996.65,-252 4999.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 388fc62b78734b9db816b54af1a2e14c --&gt;\n&lt;g id=\"node985\" class=\"node\"&gt;\n&lt;title&gt;388fc62b78734b9db816b54af1a2e14c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M5110.8,-280.8C5110.8,-280.8 5077.2,-280.8 5077.2,-280.8 5071.2,-280.8 5065.2,-274.8 5065.2,-268.8 5065.2,-268.8 5065.2,-235.2 5065.2,-235.2 5065.2,-229.2 5071.2,-223.2 5077.2,-223.2 5077.2,-223.2 5110.8,-223.2 5110.8,-223.2 5116.8,-223.2 5122.8,-229.2 5122.8,-235.2 5122.8,-235.2 5122.8,-268.8 5122.8,-268.8 5122.8,-274.8 5116.8,-280.8 5110.8,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"5094\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 49c61af6a0b147038f8794d97b707b38&amp;#45;&amp;#45;388fc62b78734b9db816b54af1a2e14c --&gt;\n&lt;g id=\"edge980\" class=\"edge\"&gt;\n&lt;title&gt;49c61af6a0b147038f8794d97b707b38&amp;#45;&amp;#45;388fc62b78734b9db816b54af1a2e14c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5001.47,-252C5003.19,-252 5038.08,-252 5064.28,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 388fc62b78734b9db816b54af1a2e14c&amp;#45;&amp;#45;8efbb8af17ab4d3fa87641236af424ca --&gt;\n&lt;g id=\"edge1937\" class=\"edge\"&gt;\n&lt;title&gt;388fc62b78734b9db816b54af1a2e14c&amp;#45;&amp;#45;8efbb8af17ab4d3fa87641236af424ca&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5094,-281.65C5094,-292.2 5094,-302.76 5094,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8a5ffd3890744aeda3fabb24fa84d467 --&gt;\n&lt;g id=\"node986\" class=\"node\"&gt;\n&lt;title&gt;8a5ffd3890744aeda3fabb24fa84d467&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"5187.6\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 388fc62b78734b9db816b54af1a2e14c&amp;#45;&amp;#45;8a5ffd3890744aeda3fabb24fa84d467 --&gt;\n&lt;g id=\"edge981\" class=\"edge\"&gt;\n&lt;title&gt;388fc62b78734b9db816b54af1a2e14c&amp;#45;&amp;#45;8a5ffd3890744aeda3fabb24fa84d467&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5123.48,-252C5143.44,-252 5168.54,-252 5180.16,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6526c93f763c4e86b98e222a48eb2c6c --&gt;\n&lt;g id=\"node987\" class=\"node\"&gt;\n&lt;title&gt;6526c93f763c4e86b98e222a48eb2c6c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5281.92,-252.72 5280.48,-252.72 5280.48,-251.28 5281.92,-251.28 5281.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8a5ffd3890744aeda3fabb24fa84d467&amp;#45;&amp;#45;6526c93f763c4e86b98e222a48eb2c6c --&gt;\n&lt;g id=\"edge982\" class=\"edge\"&gt;\n&lt;title&gt;8a5ffd3890744aeda3fabb24fa84d467&amp;#45;&amp;#45;6526c93f763c4e86b98e222a48eb2c6c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5195.19,-252C5215.53,-252 5276.24,-252 5280.02,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0483f38153224354bc22da58be924754 --&gt;\n&lt;g id=\"node988\" class=\"node\"&gt;\n&lt;title&gt;0483f38153224354bc22da58be924754&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5434.32,-252.72 5432.88,-252.72 5432.88,-251.28 5434.32,-251.28 5434.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6526c93f763c4e86b98e222a48eb2c6c&amp;#45;&amp;#45;0483f38153224354bc22da58be924754 --&gt;\n&lt;g id=\"edge983\" class=\"edge\"&gt;\n&lt;title&gt;6526c93f763c4e86b98e222a48eb2c6c&amp;#45;&amp;#45;0483f38153224354bc22da58be924754&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5282.31,-252C5286.79,-252 5428.08,-252 5432.49,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 01855427ba4b4053adf597374acc7008 --&gt;\n&lt;g id=\"node989\" class=\"node\"&gt;\n&lt;title&gt;01855427ba4b4053adf597374acc7008&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5586.72,-252.72 5585.28,-252.72 5585.28,-251.28 5586.72,-251.28 5586.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0483f38153224354bc22da58be924754&amp;#45;&amp;#45;01855427ba4b4053adf597374acc7008 --&gt;\n&lt;g id=\"edge984\" class=\"edge\"&gt;\n&lt;title&gt;0483f38153224354bc22da58be924754&amp;#45;&amp;#45;01855427ba4b4053adf597374acc7008&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5434.71,-252C5439.19,-252 5580.48,-252 5584.89,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 66b69cda0e7b4bb8903a6202f433fe58 --&gt;\n&lt;g id=\"node990\" class=\"node\"&gt;\n&lt;title&gt;66b69cda0e7b4bb8903a6202f433fe58&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"5679.6\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 01855427ba4b4053adf597374acc7008&amp;#45;&amp;#45;66b69cda0e7b4bb8903a6202f433fe58 --&gt;\n&lt;g id=\"edge985\" class=\"edge\"&gt;\n&lt;title&gt;01855427ba4b4053adf597374acc7008&amp;#45;&amp;#45;66b69cda0e7b4bb8903a6202f433fe58&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5587.07,-252C5589.37,-252 5651.21,-252 5671.92,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd89dda3f7c34163b7bae8eae36211c3 --&gt;\n&lt;g id=\"node991\" class=\"node\"&gt;\n&lt;title&gt;dd89dda3f7c34163b7bae8eae36211c3&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M5790,-280.8C5790,-280.8 5756.4,-280.8 5756.4,-280.8 5750.4,-280.8 5744.4,-274.8 5744.4,-268.8 5744.4,-268.8 5744.4,-235.2 5744.4,-235.2 5744.4,-229.2 5750.4,-223.2 5756.4,-223.2 5756.4,-223.2 5790,-223.2 5790,-223.2 5796,-223.2 5802,-229.2 5802,-235.2 5802,-235.2 5802,-268.8 5802,-268.8 5802,-274.8 5796,-280.8 5790,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"5773.2\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 66b69cda0e7b4bb8903a6202f433fe58&amp;#45;&amp;#45;dd89dda3f7c34163b7bae8eae36211c3 --&gt;\n&lt;g id=\"edge986\" class=\"edge\"&gt;\n&lt;title&gt;66b69cda0e7b4bb8903a6202f433fe58&amp;#45;&amp;#45;dd89dda3f7c34163b7bae8eae36211c3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5687.19,-252C5698.84,-252 5723.72,-252 5743.57,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd89dda3f7c34163b7bae8eae36211c3&amp;#45;&amp;#45;e4e46f1d606e4155959492b7c3436cfc --&gt;\n&lt;g id=\"edge1938\" class=\"edge\"&gt;\n&lt;title&gt;dd89dda3f7c34163b7bae8eae36211c3&amp;#45;&amp;#45;e4e46f1d606e4155959492b7c3436cfc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5773.2,-281.65C5773.2,-292.2 5773.2,-302.76 5773.2,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- c15037c67337491e97088d3759865bf4 --&gt;\n&lt;g id=\"node992\" class=\"node\"&gt;\n&lt;title&gt;c15037c67337491e97088d3759865bf4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5867.52,-252.72 5866.08,-252.72 5866.08,-251.28 5867.52,-251.28 5867.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd89dda3f7c34163b7bae8eae36211c3&amp;#45;&amp;#45;c15037c67337491e97088d3759865bf4 --&gt;\n&lt;g id=\"edge987\" class=\"edge\"&gt;\n&lt;title&gt;dd89dda3f7c34163b7bae8eae36211c3&amp;#45;&amp;#45;c15037c67337491e97088d3759865bf4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5802.68,-252C5828.73,-252 5863.54,-252 5865.7,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1e0ecfd9b72a49da9dd1b281f985338c --&gt;\n&lt;g id=\"node993\" class=\"node\"&gt;\n&lt;title&gt;1e0ecfd9b72a49da9dd1b281f985338c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5961.12,-252.72 5959.68,-252.72 5959.68,-251.28 5961.12,-251.28 5961.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c15037c67337491e97088d3759865bf4&amp;#45;&amp;#45;1e0ecfd9b72a49da9dd1b281f985338c --&gt;\n&lt;g id=\"edge988\" class=\"edge\"&gt;\n&lt;title&gt;c15037c67337491e97088d3759865bf4&amp;#45;&amp;#45;1e0ecfd9b72a49da9dd1b281f985338c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5867.87,-252C5870.6,-252 5956.65,-252 5959.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93c9323b330545bf84b8accc3230821c --&gt;\n&lt;g id=\"node994\" class=\"node\"&gt;\n&lt;title&gt;93c9323b330545bf84b8accc3230821c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6054.72,-252.72 6053.28,-252.72 6053.28,-251.28 6054.72,-251.28 6054.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1e0ecfd9b72a49da9dd1b281f985338c&amp;#45;&amp;#45;93c9323b330545bf84b8accc3230821c --&gt;\n&lt;g id=\"edge989\" class=\"edge\"&gt;\n&lt;title&gt;1e0ecfd9b72a49da9dd1b281f985338c&amp;#45;&amp;#45;93c9323b330545bf84b8accc3230821c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5961.47,-252C5964.2,-252 6050.25,-252 6052.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2bdc80abc6ae4805974827526462ba68 --&gt;\n&lt;g id=\"node995\" class=\"node\"&gt;\n&lt;title&gt;2bdc80abc6ae4805974827526462ba68&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6148.32,-252.72 6146.88,-252.72 6146.88,-251.28 6148.32,-251.28 6148.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93c9323b330545bf84b8accc3230821c&amp;#45;&amp;#45;2bdc80abc6ae4805974827526462ba68 --&gt;\n&lt;g id=\"edge990\" class=\"edge\"&gt;\n&lt;title&gt;93c9323b330545bf84b8accc3230821c&amp;#45;&amp;#45;2bdc80abc6ae4805974827526462ba68&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6055.07,-252C6057.8,-252 6143.85,-252 6146.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a95dc5e102649c1bb65feabfb6cc453 --&gt;\n&lt;g id=\"node996\" class=\"node\"&gt;\n&lt;title&gt;5a95dc5e102649c1bb65feabfb6cc453&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M6258,-280.8C6258,-280.8 6224.4,-280.8 6224.4,-280.8 6218.4,-280.8 6212.4,-274.8 6212.4,-268.8 6212.4,-268.8 6212.4,-235.2 6212.4,-235.2 6212.4,-229.2 6218.4,-223.2 6224.4,-223.2 6224.4,-223.2 6258,-223.2 6258,-223.2 6264,-223.2 6270,-229.2 6270,-235.2 6270,-235.2 6270,-268.8 6270,-268.8 6270,-274.8 6264,-280.8 6258,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"6241.2\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2bdc80abc6ae4805974827526462ba68&amp;#45;&amp;#45;5a95dc5e102649c1bb65feabfb6cc453 --&gt;\n&lt;g id=\"edge991\" class=\"edge\"&gt;\n&lt;title&gt;2bdc80abc6ae4805974827526462ba68&amp;#45;&amp;#45;5a95dc5e102649c1bb65feabfb6cc453&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6148.67,-252C6150.39,-252 6185.28,-252 6211.48,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a95dc5e102649c1bb65feabfb6cc453&amp;#45;&amp;#45;748ebeec5bc742d5a13cd6168f974d61 --&gt;\n&lt;g id=\"edge1939\" class=\"edge\"&gt;\n&lt;title&gt;5a95dc5e102649c1bb65feabfb6cc453&amp;#45;&amp;#45;748ebeec5bc742d5a13cd6168f974d61&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6241.2,-281.65C6241.2,-292.2 6241.2,-302.76 6241.2,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 781aaed20bde43c896c4277dd8a90d9c --&gt;\n&lt;g id=\"node997\" class=\"node\"&gt;\n&lt;title&gt;781aaed20bde43c896c4277dd8a90d9c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"6334.8\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a95dc5e102649c1bb65feabfb6cc453&amp;#45;&amp;#45;781aaed20bde43c896c4277dd8a90d9c --&gt;\n&lt;g id=\"edge992\" class=\"edge\"&gt;\n&lt;title&gt;5a95dc5e102649c1bb65feabfb6cc453&amp;#45;&amp;#45;781aaed20bde43c896c4277dd8a90d9c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6270.68,-252C6290.64,-252 6315.74,-252 6327.36,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4ff6dd6f5d5c4b4593a7bb81d9a645ef --&gt;\n&lt;g id=\"node998\" class=\"node\"&gt;\n&lt;title&gt;4ff6dd6f5d5c4b4593a7bb81d9a645ef&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6429.12,-252.72 6427.68,-252.72 6427.68,-251.28 6429.12,-251.28 6429.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 781aaed20bde43c896c4277dd8a90d9c&amp;#45;&amp;#45;4ff6dd6f5d5c4b4593a7bb81d9a645ef --&gt;\n&lt;g id=\"edge993\" class=\"edge\"&gt;\n&lt;title&gt;781aaed20bde43c896c4277dd8a90d9c&amp;#45;&amp;#45;4ff6dd6f5d5c4b4593a7bb81d9a645ef&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6342.39,-252C6362.73,-252 6423.44,-252 6427.22,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 524292f929c84f659bae961e9e12acb4 --&gt;\n&lt;g id=\"node999\" class=\"node\"&gt;\n&lt;title&gt;524292f929c84f659bae961e9e12acb4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6522.72,-252.72 6521.28,-252.72 6521.28,-251.28 6522.72,-251.28 6522.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4ff6dd6f5d5c4b4593a7bb81d9a645ef&amp;#45;&amp;#45;524292f929c84f659bae961e9e12acb4 --&gt;\n&lt;g id=\"edge994\" class=\"edge\"&gt;\n&lt;title&gt;4ff6dd6f5d5c4b4593a7bb81d9a645ef&amp;#45;&amp;#45;524292f929c84f659bae961e9e12acb4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6429.47,-252C6432.2,-252 6518.25,-252 6520.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2038cfaa81254f4196abe170ef751d74 --&gt;\n&lt;g id=\"node1000\" class=\"node\"&gt;\n&lt;title&gt;2038cfaa81254f4196abe170ef751d74&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6675.12,-252.72 6673.68,-252.72 6673.68,-251.28 6675.12,-251.28 6675.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 524292f929c84f659bae961e9e12acb4&amp;#45;&amp;#45;2038cfaa81254f4196abe170ef751d74 --&gt;\n&lt;g id=\"edge995\" class=\"edge\"&gt;\n&lt;title&gt;524292f929c84f659bae961e9e12acb4&amp;#45;&amp;#45;2038cfaa81254f4196abe170ef751d74&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6523.11,-252C6527.59,-252 6668.88,-252 6673.29,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b256658c30a40c9bf5c14485182e19c --&gt;\n&lt;g id=\"node1001\" class=\"node\"&gt;\n&lt;title&gt;6b256658c30a40c9bf5c14485182e19c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6827.52,-252.72 6826.08,-252.72 6826.08,-251.28 6827.52,-251.28 6827.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2038cfaa81254f4196abe170ef751d74&amp;#45;&amp;#45;6b256658c30a40c9bf5c14485182e19c --&gt;\n&lt;g id=\"edge996\" class=\"edge\"&gt;\n&lt;title&gt;2038cfaa81254f4196abe170ef751d74&amp;#45;&amp;#45;6b256658c30a40c9bf5c14485182e19c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6675.51,-252C6679.99,-252 6821.28,-252 6825.69,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3859272c4e3e44ab986e7fbf1f13ab06 --&gt;\n&lt;g id=\"node1002\" class=\"node\"&gt;\n&lt;title&gt;3859272c4e3e44ab986e7fbf1f13ab06&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6921.12,-252.72 6919.68,-252.72 6919.68,-251.28 6921.12,-251.28 6921.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b256658c30a40c9bf5c14485182e19c&amp;#45;&amp;#45;3859272c4e3e44ab986e7fbf1f13ab06 --&gt;\n&lt;g id=\"edge997\" class=\"edge\"&gt;\n&lt;title&gt;6b256658c30a40c9bf5c14485182e19c&amp;#45;&amp;#45;3859272c4e3e44ab986e7fbf1f13ab06&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6827.87,-252C6830.6,-252 6916.65,-252 6919.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 33841bf66cc74676b7c6115fbd380c1f --&gt;\n&lt;g id=\"node1003\" class=\"node\"&gt;\n&lt;title&gt;33841bf66cc74676b7c6115fbd380c1f&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"7014\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3859272c4e3e44ab986e7fbf1f13ab06&amp;#45;&amp;#45;33841bf66cc74676b7c6115fbd380c1f --&gt;\n&lt;g id=\"edge998\" class=\"edge\"&gt;\n&lt;title&gt;3859272c4e3e44ab986e7fbf1f13ab06&amp;#45;&amp;#45;33841bf66cc74676b7c6115fbd380c1f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6921.47,-252C6923.77,-252 6985.61,-252 7006.32,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0401eccf2fd24c00bbbfcc696ab12e2b --&gt;\n&lt;g id=\"node1004\" class=\"node\"&gt;\n&lt;title&gt;0401eccf2fd24c00bbbfcc696ab12e2b&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M7124.4,-280.8C7124.4,-280.8 7090.8,-280.8 7090.8,-280.8 7084.8,-280.8 7078.8,-274.8 7078.8,-268.8 7078.8,-268.8 7078.8,-235.2 7078.8,-235.2 7078.8,-229.2 7084.8,-223.2 7090.8,-223.2 7090.8,-223.2 7124.4,-223.2 7124.4,-223.2 7130.4,-223.2 7136.4,-229.2 7136.4,-235.2 7136.4,-235.2 7136.4,-268.8 7136.4,-268.8 7136.4,-274.8 7130.4,-280.8 7124.4,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"7107.6\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 33841bf66cc74676b7c6115fbd380c1f&amp;#45;&amp;#45;0401eccf2fd24c00bbbfcc696ab12e2b --&gt;\n&lt;g id=\"edge999\" class=\"edge\"&gt;\n&lt;title&gt;33841bf66cc74676b7c6115fbd380c1f&amp;#45;&amp;#45;0401eccf2fd24c00bbbfcc696ab12e2b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7021.59,-252C7033.24,-252 7058.12,-252 7077.97,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0401eccf2fd24c00bbbfcc696ab12e2b&amp;#45;&amp;#45;f20e987c03d74538958436cda0b6775f --&gt;\n&lt;g id=\"edge1940\" class=\"edge\"&gt;\n&lt;title&gt;0401eccf2fd24c00bbbfcc696ab12e2b&amp;#45;&amp;#45;f20e987c03d74538958436cda0b6775f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7107.6,-281.65C7107.6,-292.2 7107.6,-302.76 7107.6,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- fdf311fd3fe14bee8e2beee71dc78418 --&gt;\n&lt;g id=\"node1005\" class=\"node\"&gt;\n&lt;title&gt;fdf311fd3fe14bee8e2beee71dc78418&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7201.92,-252.72 7200.48,-252.72 7200.48,-251.28 7201.92,-251.28 7201.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0401eccf2fd24c00bbbfcc696ab12e2b&amp;#45;&amp;#45;fdf311fd3fe14bee8e2beee71dc78418 --&gt;\n&lt;g id=\"edge1000\" class=\"edge\"&gt;\n&lt;title&gt;0401eccf2fd24c00bbbfcc696ab12e2b&amp;#45;&amp;#45;fdf311fd3fe14bee8e2beee71dc78418&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7137.08,-252C7163.13,-252 7197.94,-252 7200.1,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 45eb61178d92454bae0412a32ff5d409 --&gt;\n&lt;g id=\"node1006\" class=\"node\"&gt;\n&lt;title&gt;45eb61178d92454bae0412a32ff5d409&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7295.52,-252.72 7294.08,-252.72 7294.08,-251.28 7295.52,-251.28 7295.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fdf311fd3fe14bee8e2beee71dc78418&amp;#45;&amp;#45;45eb61178d92454bae0412a32ff5d409 --&gt;\n&lt;g id=\"edge1001\" class=\"edge\"&gt;\n&lt;title&gt;fdf311fd3fe14bee8e2beee71dc78418&amp;#45;&amp;#45;45eb61178d92454bae0412a32ff5d409&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7202.27,-252C7205,-252 7291.05,-252 7293.74,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- d3fd30ef29c5438a8e1011c46ea6b2ab --&gt;\n&lt;g id=\"node1007\" class=\"node\"&gt;\n&lt;title&gt;d3fd30ef29c5438a8e1011c46ea6b2ab&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7389.12,-252.72 7387.68,-252.72 7387.68,-251.28 7389.12,-251.28 7389.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 45eb61178d92454bae0412a32ff5d409&amp;#45;&amp;#45;d3fd30ef29c5438a8e1011c46ea6b2ab --&gt;\n&lt;g id=\"edge1002\" class=\"edge\"&gt;\n&lt;title&gt;45eb61178d92454bae0412a32ff5d409&amp;#45;&amp;#45;d3fd30ef29c5438a8e1011c46ea6b2ab&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7295.87,-252C7298.6,-252 7384.65,-252 7387.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- df5333c6ba004ffcb2fff573c290efb4 --&gt;\n&lt;g id=\"node1008\" class=\"node\"&gt;\n&lt;title&gt;df5333c6ba004ffcb2fff573c290efb4&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M7498.8,-280.8C7498.8,-280.8 7465.2,-280.8 7465.2,-280.8 7459.2,-280.8 7453.2,-274.8 7453.2,-268.8 7453.2,-268.8 7453.2,-235.2 7453.2,-235.2 7453.2,-229.2 7459.2,-223.2 7465.2,-223.2 7465.2,-223.2 7498.8,-223.2 7498.8,-223.2 7504.8,-223.2 7510.8,-229.2 7510.8,-235.2 7510.8,-235.2 7510.8,-268.8 7510.8,-268.8 7510.8,-274.8 7504.8,-280.8 7498.8,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"7482\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d3fd30ef29c5438a8e1011c46ea6b2ab&amp;#45;&amp;#45;df5333c6ba004ffcb2fff573c290efb4 --&gt;\n&lt;g id=\"edge1003\" class=\"edge\"&gt;\n&lt;title&gt;d3fd30ef29c5438a8e1011c46ea6b2ab&amp;#45;&amp;#45;df5333c6ba004ffcb2fff573c290efb4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7389.47,-252C7391.19,-252 7426.08,-252 7452.28,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- df5333c6ba004ffcb2fff573c290efb4&amp;#45;&amp;#45;2c1c64b44539463bb6e479466e1634da --&gt;\n&lt;g id=\"edge1941\" class=\"edge\"&gt;\n&lt;title&gt;df5333c6ba004ffcb2fff573c290efb4&amp;#45;&amp;#45;2c1c64b44539463bb6e479466e1634da&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7482,-281.65C7482,-292.2 7482,-302.76 7482,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 92bf3ef483f54bf485e07e0ee0bc2e2a --&gt;\n&lt;g id=\"node1009\" class=\"node\"&gt;\n&lt;title&gt;92bf3ef483f54bf485e07e0ee0bc2e2a&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"7575.6\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- df5333c6ba004ffcb2fff573c290efb4&amp;#45;&amp;#45;92bf3ef483f54bf485e07e0ee0bc2e2a --&gt;\n&lt;g id=\"edge1004\" class=\"edge\"&gt;\n&lt;title&gt;df5333c6ba004ffcb2fff573c290efb4&amp;#45;&amp;#45;92bf3ef483f54bf485e07e0ee0bc2e2a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7511.48,-252C7531.44,-252 7556.54,-252 7568.16,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- f452837f07d14ade8e9ccad79a9da964 --&gt;\n&lt;g id=\"node1010\" class=\"node\"&gt;\n&lt;title&gt;f452837f07d14ade8e9ccad79a9da964&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7669.92,-252.72 7668.48,-252.72 7668.48,-251.28 7669.92,-251.28 7669.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 92bf3ef483f54bf485e07e0ee0bc2e2a&amp;#45;&amp;#45;f452837f07d14ade8e9ccad79a9da964 --&gt;\n&lt;g id=\"edge1005\" class=\"edge\"&gt;\n&lt;title&gt;92bf3ef483f54bf485e07e0ee0bc2e2a&amp;#45;&amp;#45;f452837f07d14ade8e9ccad79a9da964&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7583.19,-252C7603.53,-252 7664.24,-252 7668.02,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- bfd6b7fdbb1540d8aadd46e7b17bb5ee --&gt;\n&lt;g id=\"node1011\" class=\"node\"&gt;\n&lt;title&gt;bfd6b7fdbb1540d8aadd46e7b17bb5ee&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7763.52,-252.72 7762.08,-252.72 7762.08,-251.28 7763.52,-251.28 7763.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f452837f07d14ade8e9ccad79a9da964&amp;#45;&amp;#45;bfd6b7fdbb1540d8aadd46e7b17bb5ee --&gt;\n&lt;g id=\"edge1006\" class=\"edge\"&gt;\n&lt;title&gt;f452837f07d14ade8e9ccad79a9da964&amp;#45;&amp;#45;bfd6b7fdbb1540d8aadd46e7b17bb5ee&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7670.27,-252C7673,-252 7759.05,-252 7761.74,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7f98605d79474213920616ea3337cefc --&gt;\n&lt;g id=\"node1012\" class=\"node\"&gt;\n&lt;title&gt;7f98605d79474213920616ea3337cefc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7915.92,-252.72 7914.48,-252.72 7914.48,-251.28 7915.92,-251.28 7915.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bfd6b7fdbb1540d8aadd46e7b17bb5ee&amp;#45;&amp;#45;7f98605d79474213920616ea3337cefc --&gt;\n&lt;g id=\"edge1007\" class=\"edge\"&gt;\n&lt;title&gt;bfd6b7fdbb1540d8aadd46e7b17bb5ee&amp;#45;&amp;#45;7f98605d79474213920616ea3337cefc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7763.91,-252C7768.39,-252 7909.68,-252 7914.09,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8b02b840356492ab8d2a11e45dcee80 --&gt;\n&lt;g id=\"node1013\" class=\"node\"&gt;\n&lt;title&gt;f8b02b840356492ab8d2a11e45dcee80&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8068.32,-252.72 8066.88,-252.72 8066.88,-251.28 8068.32,-251.28 8068.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7f98605d79474213920616ea3337cefc&amp;#45;&amp;#45;f8b02b840356492ab8d2a11e45dcee80 --&gt;\n&lt;g id=\"edge1008\" class=\"edge\"&gt;\n&lt;title&gt;7f98605d79474213920616ea3337cefc&amp;#45;&amp;#45;f8b02b840356492ab8d2a11e45dcee80&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7916.31,-252C7920.79,-252 8062.08,-252 8066.49,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2d302ec47a5d473eb1087b5330389ba0 --&gt;\n&lt;g id=\"node1014\" class=\"node\"&gt;\n&lt;title&gt;2d302ec47a5d473eb1087b5330389ba0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8161.92,-252.72 8160.48,-252.72 8160.48,-251.28 8161.92,-251.28 8161.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8b02b840356492ab8d2a11e45dcee80&amp;#45;&amp;#45;2d302ec47a5d473eb1087b5330389ba0 --&gt;\n&lt;g id=\"edge1009\" class=\"edge\"&gt;\n&lt;title&gt;f8b02b840356492ab8d2a11e45dcee80&amp;#45;&amp;#45;2d302ec47a5d473eb1087b5330389ba0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8068.67,-252C8071.4,-252 8157.45,-252 8160.14,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 927bfea9c5984fd493df6102c9415dd8 --&gt;\n&lt;g id=\"node1015\" class=\"node\"&gt;\n&lt;title&gt;927bfea9c5984fd493df6102c9415dd8&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"8254.8\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2d302ec47a5d473eb1087b5330389ba0&amp;#45;&amp;#45;927bfea9c5984fd493df6102c9415dd8 --&gt;\n&lt;g id=\"edge1010\" class=\"edge\"&gt;\n&lt;title&gt;2d302ec47a5d473eb1087b5330389ba0&amp;#45;&amp;#45;927bfea9c5984fd493df6102c9415dd8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8162.27,-252C8164.57,-252 8226.41,-252 8247.12,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 220d30f7c91145de864334a164d1cda4 --&gt;\n&lt;g id=\"node1016\" class=\"node\"&gt;\n&lt;title&gt;220d30f7c91145de864334a164d1cda4&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M8365.2,-280.8C8365.2,-280.8 8331.6,-280.8 8331.6,-280.8 8325.6,-280.8 8319.6,-274.8 8319.6,-268.8 8319.6,-268.8 8319.6,-235.2 8319.6,-235.2 8319.6,-229.2 8325.6,-223.2 8331.6,-223.2 8331.6,-223.2 8365.2,-223.2 8365.2,-223.2 8371.2,-223.2 8377.2,-229.2 8377.2,-235.2 8377.2,-235.2 8377.2,-268.8 8377.2,-268.8 8377.2,-274.8 8371.2,-280.8 8365.2,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"8348.4\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 927bfea9c5984fd493df6102c9415dd8&amp;#45;&amp;#45;220d30f7c91145de864334a164d1cda4 --&gt;\n&lt;g id=\"edge1011\" class=\"edge\"&gt;\n&lt;title&gt;927bfea9c5984fd493df6102c9415dd8&amp;#45;&amp;#45;220d30f7c91145de864334a164d1cda4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8262.39,-252C8274.04,-252 8298.92,-252 8318.77,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 220d30f7c91145de864334a164d1cda4&amp;#45;&amp;#45;1d912f17f9964142904b1531bb9571de --&gt;\n&lt;g id=\"edge1942\" class=\"edge\"&gt;\n&lt;title&gt;220d30f7c91145de864334a164d1cda4&amp;#45;&amp;#45;1d912f17f9964142904b1531bb9571de&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8348.4,-281.65C8348.4,-292.2 8348.4,-302.76 8348.4,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 109f79b3d3e243f58157985ad1c6a076 --&gt;\n&lt;g id=\"node1017\" class=\"node\"&gt;\n&lt;title&gt;109f79b3d3e243f58157985ad1c6a076&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8442.72,-252.72 8441.28,-252.72 8441.28,-251.28 8442.72,-251.28 8442.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 220d30f7c91145de864334a164d1cda4&amp;#45;&amp;#45;109f79b3d3e243f58157985ad1c6a076 --&gt;\n&lt;g id=\"edge1012\" class=\"edge\"&gt;\n&lt;title&gt;220d30f7c91145de864334a164d1cda4&amp;#45;&amp;#45;109f79b3d3e243f58157985ad1c6a076&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8377.88,-252C8403.93,-252 8438.74,-252 8440.9,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 36604876011f46c9a9d574928b187995 --&gt;\n&lt;g id=\"node1018\" class=\"node\"&gt;\n&lt;title&gt;36604876011f46c9a9d574928b187995&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M8552.4,-280.8C8552.4,-280.8 8518.8,-280.8 8518.8,-280.8 8512.8,-280.8 8506.8,-274.8 8506.8,-268.8 8506.8,-268.8 8506.8,-235.2 8506.8,-235.2 8506.8,-229.2 8512.8,-223.2 8518.8,-223.2 8518.8,-223.2 8552.4,-223.2 8552.4,-223.2 8558.4,-223.2 8564.4,-229.2 8564.4,-235.2 8564.4,-235.2 8564.4,-268.8 8564.4,-268.8 8564.4,-274.8 8558.4,-280.8 8552.4,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"8535.6\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 109f79b3d3e243f58157985ad1c6a076&amp;#45;&amp;#45;36604876011f46c9a9d574928b187995 --&gt;\n&lt;g id=\"edge1013\" class=\"edge\"&gt;\n&lt;title&gt;109f79b3d3e243f58157985ad1c6a076&amp;#45;&amp;#45;36604876011f46c9a9d574928b187995&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8443.07,-252C8444.79,-252 8479.68,-252 8505.88,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 36604876011f46c9a9d574928b187995&amp;#45;&amp;#45;0c1286ce0fe544ee893a1c4ea3801e6f --&gt;\n&lt;g id=\"edge1943\" class=\"edge\"&gt;\n&lt;title&gt;36604876011f46c9a9d574928b187995&amp;#45;&amp;#45;0c1286ce0fe544ee893a1c4ea3801e6f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8535.6,-281.65C8535.6,-292.2 8535.6,-302.76 8535.6,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1bdfc730baea4929b6fe65b61f7f05e4 --&gt;\n&lt;g id=\"node1019\" class=\"node\"&gt;\n&lt;title&gt;1bdfc730baea4929b6fe65b61f7f05e4&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"8629.2\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 36604876011f46c9a9d574928b187995&amp;#45;&amp;#45;1bdfc730baea4929b6fe65b61f7f05e4 --&gt;\n&lt;g id=\"edge1014\" class=\"edge\"&gt;\n&lt;title&gt;36604876011f46c9a9d574928b187995&amp;#45;&amp;#45;1bdfc730baea4929b6fe65b61f7f05e4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8565.08,-252C8585.04,-252 8610.14,-252 8621.76,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 506aee0ef6de43cd901b2152b34c1c25 --&gt;\n&lt;g id=\"node1020\" class=\"node\"&gt;\n&lt;title&gt;506aee0ef6de43cd901b2152b34c1c25&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8782.32,-252.72 8780.88,-252.72 8780.88,-251.28 8782.32,-251.28 8782.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1bdfc730baea4929b6fe65b61f7f05e4&amp;#45;&amp;#45;506aee0ef6de43cd901b2152b34c1c25 --&gt;\n&lt;g id=\"edge1015\" class=\"edge\"&gt;\n&lt;title&gt;1bdfc730baea4929b6fe65b61f7f05e4&amp;#45;&amp;#45;506aee0ef6de43cd901b2152b34c1c25&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8636.66,-252C8665,-252 8777.02,-252 8780.52,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- e316eec1fad8448db3012b624ece64aa --&gt;\n&lt;g id=\"node1021\" class=\"node\"&gt;\n&lt;title&gt;e316eec1fad8448db3012b624ece64aa&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"8934\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 506aee0ef6de43cd901b2152b34c1c25&amp;#45;&amp;#45;e316eec1fad8448db3012b624ece64aa --&gt;\n&lt;g id=\"edge1016\" class=\"edge\"&gt;\n&lt;title&gt;506aee0ef6de43cd901b2152b34c1c25&amp;#45;&amp;#45;e316eec1fad8448db3012b624ece64aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8782.71,-252C8786.68,-252 8897.77,-252 8926.35,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7608fa590c6c4ed4b2b59f5d1bd58fc0 --&gt;\n&lt;g id=\"node1022\" class=\"node\"&gt;\n&lt;title&gt;7608fa590c6c4ed4b2b59f5d1bd58fc0&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M9044.4,-280.8C9044.4,-280.8 9010.8,-280.8 9010.8,-280.8 9004.8,-280.8 8998.8,-274.8 8998.8,-268.8 8998.8,-268.8 8998.8,-235.2 8998.8,-235.2 8998.8,-229.2 9004.8,-223.2 9010.8,-223.2 9010.8,-223.2 9044.4,-223.2 9044.4,-223.2 9050.4,-223.2 9056.4,-229.2 9056.4,-235.2 9056.4,-235.2 9056.4,-268.8 9056.4,-268.8 9056.4,-274.8 9050.4,-280.8 9044.4,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"9027.6\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- e316eec1fad8448db3012b624ece64aa&amp;#45;&amp;#45;7608fa590c6c4ed4b2b59f5d1bd58fc0 --&gt;\n&lt;g id=\"edge1017\" class=\"edge\"&gt;\n&lt;title&gt;e316eec1fad8448db3012b624ece64aa&amp;#45;&amp;#45;7608fa590c6c4ed4b2b59f5d1bd58fc0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8941.59,-252C8953.24,-252 8978.12,-252 8997.97,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7608fa590c6c4ed4b2b59f5d1bd58fc0&amp;#45;&amp;#45;166f2ac2ff1443c681b2921b29a52f3e --&gt;\n&lt;g id=\"edge1944\" class=\"edge\"&gt;\n&lt;title&gt;7608fa590c6c4ed4b2b59f5d1bd58fc0&amp;#45;&amp;#45;166f2ac2ff1443c681b2921b29a52f3e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9027.6,-281.65C9027.6,-292.2 9027.6,-302.76 9027.6,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 83890c2525a04d1994808df1fc0d31ca --&gt;\n&lt;g id=\"node1023\" class=\"node\"&gt;\n&lt;title&gt;83890c2525a04d1994808df1fc0d31ca&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M9138,-280.8C9138,-280.8 9104.4,-280.8 9104.4,-280.8 9098.4,-280.8 9092.4,-274.8 9092.4,-268.8 9092.4,-268.8 9092.4,-235.2 9092.4,-235.2 9092.4,-229.2 9098.4,-223.2 9104.4,-223.2 9104.4,-223.2 9138,-223.2 9138,-223.2 9144,-223.2 9150,-229.2 9150,-235.2 9150,-235.2 9150,-268.8 9150,-268.8 9150,-274.8 9144,-280.8 9138,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"9121.2\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 7608fa590c6c4ed4b2b59f5d1bd58fc0&amp;#45;&amp;#45;83890c2525a04d1994808df1fc0d31ca --&gt;\n&lt;g id=\"edge1018\" class=\"edge\"&gt;\n&lt;title&gt;7608fa590c6c4ed4b2b59f5d1bd58fc0&amp;#45;&amp;#45;83890c2525a04d1994808df1fc0d31ca&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9057.08,-252C9068,-252 9080.47,-252 9091.42,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 83890c2525a04d1994808df1fc0d31ca&amp;#45;&amp;#45;807d5cae170949e18cc3e60baf17253c --&gt;\n&lt;g id=\"edge1945\" class=\"edge\"&gt;\n&lt;title&gt;83890c2525a04d1994808df1fc0d31ca&amp;#45;&amp;#45;807d5cae170949e18cc3e60baf17253c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9121.2,-281.65C9121.2,-292.2 9121.2,-302.76 9121.2,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0439151d71634190bcf149f53fb12f73 --&gt;\n&lt;g id=\"node1024\" class=\"node\"&gt;\n&lt;title&gt;0439151d71634190bcf149f53fb12f73&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"9214.8\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 83890c2525a04d1994808df1fc0d31ca&amp;#45;&amp;#45;0439151d71634190bcf149f53fb12f73 --&gt;\n&lt;g id=\"edge1019\" class=\"edge\"&gt;\n&lt;title&gt;83890c2525a04d1994808df1fc0d31ca&amp;#45;&amp;#45;0439151d71634190bcf149f53fb12f73&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9150.68,-252C9170.64,-252 9195.74,-252 9207.36,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- d5157fd58ec140f0b995ec3e19492ef7 --&gt;\n&lt;g id=\"node1025\" class=\"node\"&gt;\n&lt;title&gt;d5157fd58ec140f0b995ec3e19492ef7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9309.12,-252.72 9307.68,-252.72 9307.68,-251.28 9309.12,-251.28 9309.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0439151d71634190bcf149f53fb12f73&amp;#45;&amp;#45;d5157fd58ec140f0b995ec3e19492ef7 --&gt;\n&lt;g id=\"edge1020\" class=\"edge\"&gt;\n&lt;title&gt;0439151d71634190bcf149f53fb12f73&amp;#45;&amp;#45;d5157fd58ec140f0b995ec3e19492ef7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9222.39,-252C9242.73,-252 9303.44,-252 9307.22,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 62cdfbc3b5884c06b970fbe8e87be25c --&gt;\n&lt;g id=\"node1026\" class=\"node\"&gt;\n&lt;title&gt;62cdfbc3b5884c06b970fbe8e87be25c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9461.52,-252.72 9460.08,-252.72 9460.08,-251.28 9461.52,-251.28 9461.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d5157fd58ec140f0b995ec3e19492ef7&amp;#45;&amp;#45;62cdfbc3b5884c06b970fbe8e87be25c --&gt;\n&lt;g id=\"edge1021\" class=\"edge\"&gt;\n&lt;title&gt;d5157fd58ec140f0b995ec3e19492ef7&amp;#45;&amp;#45;62cdfbc3b5884c06b970fbe8e87be25c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9309.51,-252C9313.99,-252 9455.28,-252 9459.69,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4460f68392be4ef9983e37c975f10d70 --&gt;\n&lt;g id=\"node1027\" class=\"node\"&gt;\n&lt;title&gt;4460f68392be4ef9983e37c975f10d70&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9613.92,-252.72 9612.48,-252.72 9612.48,-251.28 9613.92,-251.28 9613.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 62cdfbc3b5884c06b970fbe8e87be25c&amp;#45;&amp;#45;4460f68392be4ef9983e37c975f10d70 --&gt;\n&lt;g id=\"edge1022\" class=\"edge\"&gt;\n&lt;title&gt;62cdfbc3b5884c06b970fbe8e87be25c&amp;#45;&amp;#45;4460f68392be4ef9983e37c975f10d70&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9461.91,-252C9466.39,-252 9607.68,-252 9612.09,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 645151fa55af4adbbc6cfca9cf1d51ba --&gt;\n&lt;g id=\"node1028\" class=\"node\"&gt;\n&lt;title&gt;645151fa55af4adbbc6cfca9cf1d51ba&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"9706.8\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4460f68392be4ef9983e37c975f10d70&amp;#45;&amp;#45;645151fa55af4adbbc6cfca9cf1d51ba --&gt;\n&lt;g id=\"edge1023\" class=\"edge\"&gt;\n&lt;title&gt;4460f68392be4ef9983e37c975f10d70&amp;#45;&amp;#45;645151fa55af4adbbc6cfca9cf1d51ba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9614.27,-252C9616.57,-252 9678.41,-252 9699.12,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93f2527b60274178a44c3a434b65991b --&gt;\n&lt;g id=\"node1029\" class=\"node\"&gt;\n&lt;title&gt;93f2527b60274178a44c3a434b65991b&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M9817.2,-280.8C9817.2,-280.8 9783.6,-280.8 9783.6,-280.8 9777.6,-280.8 9771.6,-274.8 9771.6,-268.8 9771.6,-268.8 9771.6,-235.2 9771.6,-235.2 9771.6,-229.2 9777.6,-223.2 9783.6,-223.2 9783.6,-223.2 9817.2,-223.2 9817.2,-223.2 9823.2,-223.2 9829.2,-229.2 9829.2,-235.2 9829.2,-235.2 9829.2,-268.8 9829.2,-268.8 9829.2,-274.8 9823.2,-280.8 9817.2,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"9800.4\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 645151fa55af4adbbc6cfca9cf1d51ba&amp;#45;&amp;#45;93f2527b60274178a44c3a434b65991b --&gt;\n&lt;g id=\"edge1024\" class=\"edge\"&gt;\n&lt;title&gt;645151fa55af4adbbc6cfca9cf1d51ba&amp;#45;&amp;#45;93f2527b60274178a44c3a434b65991b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9714.39,-252C9726.04,-252 9750.92,-252 9770.77,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93f2527b60274178a44c3a434b65991b&amp;#45;&amp;#45;a1e98c24cf0349bfacee97e3a317bd25 --&gt;\n&lt;g id=\"edge1946\" class=\"edge\"&gt;\n&lt;title&gt;93f2527b60274178a44c3a434b65991b&amp;#45;&amp;#45;a1e98c24cf0349bfacee97e3a317bd25&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9800.4,-281.65C9800.4,-292.2 9800.4,-302.76 9800.4,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6c44d51d6c15440282cac857489ae7b0 --&gt;\n&lt;g id=\"node1030\" class=\"node\"&gt;\n&lt;title&gt;6c44d51d6c15440282cac857489ae7b0&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M9910.8,-280.8C9910.8,-280.8 9877.2,-280.8 9877.2,-280.8 9871.2,-280.8 9865.2,-274.8 9865.2,-268.8 9865.2,-268.8 9865.2,-235.2 9865.2,-235.2 9865.2,-229.2 9871.2,-223.2 9877.2,-223.2 9877.2,-223.2 9910.8,-223.2 9910.8,-223.2 9916.8,-223.2 9922.8,-229.2 9922.8,-235.2 9922.8,-235.2 9922.8,-268.8 9922.8,-268.8 9922.8,-274.8 9916.8,-280.8 9910.8,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"9894\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 93f2527b60274178a44c3a434b65991b&amp;#45;&amp;#45;6c44d51d6c15440282cac857489ae7b0 --&gt;\n&lt;g id=\"edge1025\" class=\"edge\"&gt;\n&lt;title&gt;93f2527b60274178a44c3a434b65991b&amp;#45;&amp;#45;6c44d51d6c15440282cac857489ae7b0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9829.88,-252C9840.8,-252 9853.27,-252 9864.22,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6c44d51d6c15440282cac857489ae7b0&amp;#45;&amp;#45;0ad6513589334e11975fef311ee6529c --&gt;\n&lt;g id=\"edge1947\" class=\"edge\"&gt;\n&lt;title&gt;6c44d51d6c15440282cac857489ae7b0&amp;#45;&amp;#45;0ad6513589334e11975fef311ee6529c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9894,-281.65C9894,-292.2 9894,-302.76 9894,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 763a19a9ff77456183815c131a709398 --&gt;\n&lt;g id=\"node1031\" class=\"node\"&gt;\n&lt;title&gt;763a19a9ff77456183815c131a709398&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"9987.6\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6c44d51d6c15440282cac857489ae7b0&amp;#45;&amp;#45;763a19a9ff77456183815c131a709398 --&gt;\n&lt;g id=\"edge1026\" class=\"edge\"&gt;\n&lt;title&gt;6c44d51d6c15440282cac857489ae7b0&amp;#45;&amp;#45;763a19a9ff77456183815c131a709398&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9923.48,-252C9943.44,-252 9968.54,-252 9980.16,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 11debff7360a44c9a9f409942ecdf3cf --&gt;\n&lt;g id=\"node1032\" class=\"node\"&gt;\n&lt;title&gt;11debff7360a44c9a9f409942ecdf3cf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10081.92,-252.72 10080.48,-252.72 10080.48,-251.28 10081.92,-251.28 10081.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 763a19a9ff77456183815c131a709398&amp;#45;&amp;#45;11debff7360a44c9a9f409942ecdf3cf --&gt;\n&lt;g id=\"edge1027\" class=\"edge\"&gt;\n&lt;title&gt;763a19a9ff77456183815c131a709398&amp;#45;&amp;#45;11debff7360a44c9a9f409942ecdf3cf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9995.19,-252C10015.53,-252 10076.24,-252 10080.02,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- c5a625769a9f4a79b23cd0e24118ccc0 --&gt;\n&lt;g id=\"node1033\" class=\"node\"&gt;\n&lt;title&gt;c5a625769a9f4a79b23cd0e24118ccc0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10175.52,-252.72 10174.08,-252.72 10174.08,-251.28 10175.52,-251.28 10175.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 11debff7360a44c9a9f409942ecdf3cf&amp;#45;&amp;#45;c5a625769a9f4a79b23cd0e24118ccc0 --&gt;\n&lt;g id=\"edge1028\" class=\"edge\"&gt;\n&lt;title&gt;11debff7360a44c9a9f409942ecdf3cf&amp;#45;&amp;#45;c5a625769a9f4a79b23cd0e24118ccc0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10082.27,-252C10085,-252 10171.05,-252 10173.74,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- a2a1f1ba8ba54ac7948e21532fd00f9b --&gt;\n&lt;g id=\"node1034\" class=\"node\"&gt;\n&lt;title&gt;a2a1f1ba8ba54ac7948e21532fd00f9b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10327.92,-252.72 10326.48,-252.72 10326.48,-251.28 10327.92,-251.28 10327.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c5a625769a9f4a79b23cd0e24118ccc0&amp;#45;&amp;#45;a2a1f1ba8ba54ac7948e21532fd00f9b --&gt;\n&lt;g id=\"edge1029\" class=\"edge\"&gt;\n&lt;title&gt;c5a625769a9f4a79b23cd0e24118ccc0&amp;#45;&amp;#45;a2a1f1ba8ba54ac7948e21532fd00f9b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10175.91,-252C10180.39,-252 10321.68,-252 10326.09,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- b15d579b9a0e4011b104a13cdec47a1e --&gt;\n&lt;g id=\"node1035\" class=\"node\"&gt;\n&lt;title&gt;b15d579b9a0e4011b104a13cdec47a1e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10480.32,-252.72 10478.88,-252.72 10478.88,-251.28 10480.32,-251.28 10480.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a2a1f1ba8ba54ac7948e21532fd00f9b&amp;#45;&amp;#45;b15d579b9a0e4011b104a13cdec47a1e --&gt;\n&lt;g id=\"edge1030\" class=\"edge\"&gt;\n&lt;title&gt;a2a1f1ba8ba54ac7948e21532fd00f9b&amp;#45;&amp;#45;b15d579b9a0e4011b104a13cdec47a1e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10328.31,-252C10332.79,-252 10474.08,-252 10478.49,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 74e11ada32ed44158b602a3acb391967 --&gt;\n&lt;g id=\"node1036\" class=\"node\"&gt;\n&lt;title&gt;74e11ada32ed44158b602a3acb391967&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10573.92,-252.72 10572.48,-252.72 10572.48,-251.28 10573.92,-251.28 10573.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b15d579b9a0e4011b104a13cdec47a1e&amp;#45;&amp;#45;74e11ada32ed44158b602a3acb391967 --&gt;\n&lt;g id=\"edge1031\" class=\"edge\"&gt;\n&lt;title&gt;b15d579b9a0e4011b104a13cdec47a1e&amp;#45;&amp;#45;74e11ada32ed44158b602a3acb391967&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10480.67,-252C10483.4,-252 10569.45,-252 10572.14,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- b727652443a6478eac179e846c6492f7 --&gt;\n&lt;g id=\"node1037\" class=\"node\"&gt;\n&lt;title&gt;b727652443a6478eac179e846c6492f7&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"10666.8\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 74e11ada32ed44158b602a3acb391967&amp;#45;&amp;#45;b727652443a6478eac179e846c6492f7 --&gt;\n&lt;g id=\"edge1032\" class=\"edge\"&gt;\n&lt;title&gt;74e11ada32ed44158b602a3acb391967&amp;#45;&amp;#45;b727652443a6478eac179e846c6492f7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10574.27,-252C10576.57,-252 10638.41,-252 10659.12,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 871530c16ff64d079aadc9b12f14f9cc --&gt;\n&lt;g id=\"node1038\" class=\"node\"&gt;\n&lt;title&gt;871530c16ff64d079aadc9b12f14f9cc&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M10777.2,-280.8C10777.2,-280.8 10743.6,-280.8 10743.6,-280.8 10737.6,-280.8 10731.6,-274.8 10731.6,-268.8 10731.6,-268.8 10731.6,-235.2 10731.6,-235.2 10731.6,-229.2 10737.6,-223.2 10743.6,-223.2 10743.6,-223.2 10777.2,-223.2 10777.2,-223.2 10783.2,-223.2 10789.2,-229.2 10789.2,-235.2 10789.2,-235.2 10789.2,-268.8 10789.2,-268.8 10789.2,-274.8 10783.2,-280.8 10777.2,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"10760.4\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- b727652443a6478eac179e846c6492f7&amp;#45;&amp;#45;871530c16ff64d079aadc9b12f14f9cc --&gt;\n&lt;g id=\"edge1033\" class=\"edge\"&gt;\n&lt;title&gt;b727652443a6478eac179e846c6492f7&amp;#45;&amp;#45;871530c16ff64d079aadc9b12f14f9cc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10674.39,-252C10686.04,-252 10710.92,-252 10730.77,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 871530c16ff64d079aadc9b12f14f9cc&amp;#45;&amp;#45;8582989f25d148249467a0e5cd4c80ab --&gt;\n&lt;g id=\"edge1948\" class=\"edge\"&gt;\n&lt;title&gt;871530c16ff64d079aadc9b12f14f9cc&amp;#45;&amp;#45;8582989f25d148249467a0e5cd4c80ab&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10760.4,-281.65C10760.4,-292.2 10760.4,-302.76 10760.4,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 00250f4e505f4af5a66c5a2f22b52cd2 --&gt;\n&lt;g id=\"node1039\" class=\"node\"&gt;\n&lt;title&gt;00250f4e505f4af5a66c5a2f22b52cd2&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"10854\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 871530c16ff64d079aadc9b12f14f9cc&amp;#45;&amp;#45;00250f4e505f4af5a66c5a2f22b52cd2 --&gt;\n&lt;g id=\"edge1034\" class=\"edge\"&gt;\n&lt;title&gt;871530c16ff64d079aadc9b12f14f9cc&amp;#45;&amp;#45;00250f4e505f4af5a66c5a2f22b52cd2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10789.88,-252C10809.84,-252 10834.94,-252 10846.56,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- eb5706e2d56d4c9a92dfd183688d79b5 --&gt;\n&lt;g id=\"node1040\" class=\"node\"&gt;\n&lt;title&gt;eb5706e2d56d4c9a92dfd183688d79b5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11007.12,-252.72 11005.68,-252.72 11005.68,-251.28 11007.12,-251.28 11007.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 00250f4e505f4af5a66c5a2f22b52cd2&amp;#45;&amp;#45;eb5706e2d56d4c9a92dfd183688d79b5 --&gt;\n&lt;g id=\"edge1035\" class=\"edge\"&gt;\n&lt;title&gt;00250f4e505f4af5a66c5a2f22b52cd2&amp;#45;&amp;#45;eb5706e2d56d4c9a92dfd183688d79b5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10861.46,-252C10889.8,-252 11001.82,-252 11005.32,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1c6bf956b89b4870bc42fbbc02b72c90 --&gt;\n&lt;g id=\"node1041\" class=\"node\"&gt;\n&lt;title&gt;1c6bf956b89b4870bc42fbbc02b72c90&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"11158.8\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- eb5706e2d56d4c9a92dfd183688d79b5&amp;#45;&amp;#45;1c6bf956b89b4870bc42fbbc02b72c90 --&gt;\n&lt;g id=\"edge1036\" class=\"edge\"&gt;\n&lt;title&gt;eb5706e2d56d4c9a92dfd183688d79b5&amp;#45;&amp;#45;1c6bf956b89b4870bc42fbbc02b72c90&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11007.51,-252C11011.48,-252 11122.57,-252 11151.15,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9b8be97d4cc9425fa3c1688b70676551 --&gt;\n&lt;g id=\"node1042\" class=\"node\"&gt;\n&lt;title&gt;9b8be97d4cc9425fa3c1688b70676551&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"11252.4\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1c6bf956b89b4870bc42fbbc02b72c90&amp;#45;&amp;#45;9b8be97d4cc9425fa3c1688b70676551 --&gt;\n&lt;g id=\"edge1037\" class=\"edge\"&gt;\n&lt;title&gt;1c6bf956b89b4870bc42fbbc02b72c90&amp;#45;&amp;#45;9b8be97d4cc9425fa3c1688b70676551&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11166.39,-252C11183.29,-252 11228.04,-252 11244.87,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 13784d62f623440a8d056338f51747b1 --&gt;\n&lt;g id=\"node1043\" class=\"node\"&gt;\n&lt;title&gt;13784d62f623440a8d056338f51747b1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11346.72,-252.72 11345.28,-252.72 11345.28,-251.28 11346.72,-251.28 11346.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9b8be97d4cc9425fa3c1688b70676551&amp;#45;&amp;#45;13784d62f623440a8d056338f51747b1 --&gt;\n&lt;g id=\"edge1038\" class=\"edge\"&gt;\n&lt;title&gt;9b8be97d4cc9425fa3c1688b70676551&amp;#45;&amp;#45;13784d62f623440a8d056338f51747b1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11259.99,-252C11280.33,-252 11341.04,-252 11344.82,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a0c84dd55fb4bb69e60f72d88d3d818 --&gt;\n&lt;g id=\"node1044\" class=\"node\"&gt;\n&lt;title&gt;9a0c84dd55fb4bb69e60f72d88d3d818&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11499.12,-252.72 11497.68,-252.72 11497.68,-251.28 11499.12,-251.28 11499.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 13784d62f623440a8d056338f51747b1&amp;#45;&amp;#45;9a0c84dd55fb4bb69e60f72d88d3d818 --&gt;\n&lt;g id=\"edge1039\" class=\"edge\"&gt;\n&lt;title&gt;13784d62f623440a8d056338f51747b1&amp;#45;&amp;#45;9a0c84dd55fb4bb69e60f72d88d3d818&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11347.11,-252C11351.59,-252 11492.88,-252 11497.29,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 75f29b8761c14057b6eacd7051dd61b2 --&gt;\n&lt;g id=\"node1045\" class=\"node\"&gt;\n&lt;title&gt;75f29b8761c14057b6eacd7051dd61b2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11651.52,-252.72 11650.08,-252.72 11650.08,-251.28 11651.52,-251.28 11651.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a0c84dd55fb4bb69e60f72d88d3d818&amp;#45;&amp;#45;75f29b8761c14057b6eacd7051dd61b2 --&gt;\n&lt;g id=\"edge1040\" class=\"edge\"&gt;\n&lt;title&gt;9a0c84dd55fb4bb69e60f72d88d3d818&amp;#45;&amp;#45;75f29b8761c14057b6eacd7051dd61b2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11499.51,-252C11503.99,-252 11645.28,-252 11649.69,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- afb873e116184fbc8c09b0e1c4baa9c1 --&gt;\n&lt;g id=\"node1046\" class=\"node\"&gt;\n&lt;title&gt;afb873e116184fbc8c09b0e1c4baa9c1&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"11744.4\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 75f29b8761c14057b6eacd7051dd61b2&amp;#45;&amp;#45;afb873e116184fbc8c09b0e1c4baa9c1 --&gt;\n&lt;g id=\"edge1041\" class=\"edge\"&gt;\n&lt;title&gt;75f29b8761c14057b6eacd7051dd61b2&amp;#45;&amp;#45;afb873e116184fbc8c09b0e1c4baa9c1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11651.87,-252C11654.17,-252 11716.01,-252 11736.72,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c5bf9e45fb9437cb2f41e907a11a99d --&gt;\n&lt;g id=\"node1047\" class=\"node\"&gt;\n&lt;title&gt;7c5bf9e45fb9437cb2f41e907a11a99d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11838.72,-252.72 11837.28,-252.72 11837.28,-251.28 11838.72,-251.28 11838.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- afb873e116184fbc8c09b0e1c4baa9c1&amp;#45;&amp;#45;7c5bf9e45fb9437cb2f41e907a11a99d --&gt;\n&lt;g id=\"edge1042\" class=\"edge\"&gt;\n&lt;title&gt;afb873e116184fbc8c09b0e1c4baa9c1&amp;#45;&amp;#45;7c5bf9e45fb9437cb2f41e907a11a99d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11751.99,-252C11772.33,-252 11833.04,-252 11836.82,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7263cf1d89814ab7a41f592e83f27226 --&gt;\n&lt;g id=\"node1048\" class=\"node\"&gt;\n&lt;title&gt;7263cf1d89814ab7a41f592e83f27226&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11991.12,-252.72 11989.68,-252.72 11989.68,-251.28 11991.12,-251.28 11991.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c5bf9e45fb9437cb2f41e907a11a99d&amp;#45;&amp;#45;7263cf1d89814ab7a41f592e83f27226 --&gt;\n&lt;g id=\"edge1043\" class=\"edge\"&gt;\n&lt;title&gt;7c5bf9e45fb9437cb2f41e907a11a99d&amp;#45;&amp;#45;7263cf1d89814ab7a41f592e83f27226&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11839.11,-252C11843.59,-252 11984.88,-252 11989.29,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 08bef5cfb5b64ef0b4738a5d54001138 --&gt;\n&lt;g id=\"node1049\" class=\"node\"&gt;\n&lt;title&gt;08bef5cfb5b64ef0b4738a5d54001138&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12143.52,-252.72 12142.08,-252.72 12142.08,-251.28 12143.52,-251.28 12143.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7263cf1d89814ab7a41f592e83f27226&amp;#45;&amp;#45;08bef5cfb5b64ef0b4738a5d54001138 --&gt;\n&lt;g id=\"edge1044\" class=\"edge\"&gt;\n&lt;title&gt;7263cf1d89814ab7a41f592e83f27226&amp;#45;&amp;#45;08bef5cfb5b64ef0b4738a5d54001138&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11991.51,-252C11995.99,-252 12137.28,-252 12141.69,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 66e756f298cb4f0e98c9679ad3bb333f --&gt;\n&lt;g id=\"node1050\" class=\"node\"&gt;\n&lt;title&gt;66e756f298cb4f0e98c9679ad3bb333f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12237.12,-252.72 12235.68,-252.72 12235.68,-251.28 12237.12,-251.28 12237.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 08bef5cfb5b64ef0b4738a5d54001138&amp;#45;&amp;#45;66e756f298cb4f0e98c9679ad3bb333f --&gt;\n&lt;g id=\"edge1045\" class=\"edge\"&gt;\n&lt;title&gt;08bef5cfb5b64ef0b4738a5d54001138&amp;#45;&amp;#45;66e756f298cb4f0e98c9679ad3bb333f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12143.87,-252C12146.6,-252 12232.65,-252 12235.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3bdb488e1ed14044b8c53c08fea5a185 --&gt;\n&lt;g id=\"node1051\" class=\"node\"&gt;\n&lt;title&gt;3bdb488e1ed14044b8c53c08fea5a185&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12389.52,-252.72 12388.08,-252.72 12388.08,-251.28 12389.52,-251.28 12389.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 66e756f298cb4f0e98c9679ad3bb333f&amp;#45;&amp;#45;3bdb488e1ed14044b8c53c08fea5a185 --&gt;\n&lt;g id=\"edge1046\" class=\"edge\"&gt;\n&lt;title&gt;66e756f298cb4f0e98c9679ad3bb333f&amp;#45;&amp;#45;3bdb488e1ed14044b8c53c08fea5a185&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12237.51,-252C12241.99,-252 12383.28,-252 12387.69,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- fd1e75af16fe43c6a91e46cfaec98c98 --&gt;\n&lt;g id=\"node1052\" class=\"node\"&gt;\n&lt;title&gt;fd1e75af16fe43c6a91e46cfaec98c98&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12541.92,-252.72 12540.48,-252.72 12540.48,-251.28 12541.92,-251.28 12541.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3bdb488e1ed14044b8c53c08fea5a185&amp;#45;&amp;#45;fd1e75af16fe43c6a91e46cfaec98c98 --&gt;\n&lt;g id=\"edge1047\" class=\"edge\"&gt;\n&lt;title&gt;3bdb488e1ed14044b8c53c08fea5a185&amp;#45;&amp;#45;fd1e75af16fe43c6a91e46cfaec98c98&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12389.91,-252C12394.39,-252 12535.68,-252 12540.09,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5d54f403c9dd48eb8ebc37c804effeb1 --&gt;\n&lt;g id=\"node1053\" class=\"node\"&gt;\n&lt;title&gt;5d54f403c9dd48eb8ebc37c804effeb1&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M12721.2,-280.8C12721.2,-280.8 12618,-280.8 12618,-280.8 12612,-280.8 12606,-274.8 12606,-268.8 12606,-268.8 12606,-235.2 12606,-235.2 12606,-229.2 12612,-223.2 12618,-223.2 12618,-223.2 12721.2,-223.2 12721.2,-223.2 12727.2,-223.2 12733.2,-229.2 12733.2,-235.2 12733.2,-235.2 12733.2,-268.8 12733.2,-268.8 12733.2,-274.8 12727.2,-280.8 12721.2,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12669.6\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b04)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- fd1e75af16fe43c6a91e46cfaec98c98&amp;#45;&amp;#45;5d54f403c9dd48eb8ebc37c804effeb1 --&gt;\n&lt;g id=\"edge1048\" class=\"edge\"&gt;\n&lt;title&gt;fd1e75af16fe43c6a91e46cfaec98c98&amp;#45;&amp;#45;5d54f403c9dd48eb8ebc37c804effeb1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12542.29,-252C12544.17,-252 12574.56,-252 12605.06,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1dd48076c6b446ef84767475a0b06fc2 --&gt;\n&lt;g id=\"node1054\" class=\"node\"&gt;\n&lt;title&gt;1dd48076c6b446ef84767475a0b06fc2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12798.72,-252.72 12797.28,-252.72 12797.28,-251.28 12798.72,-251.28 12798.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5d54f403c9dd48eb8ebc37c804effeb1&amp;#45;&amp;#45;1dd48076c6b446ef84767475a0b06fc2 --&gt;\n&lt;g id=\"edge1049\" class=\"edge\"&gt;\n&lt;title&gt;5d54f403c9dd48eb8ebc37c804effeb1&amp;#45;&amp;#45;1dd48076c6b446ef84767475a0b06fc2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12734.17,-252C12764.66,-252 12795.04,-252 12796.91,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5ee21168c2d6486bac5a75d11e992f78 --&gt;\n&lt;g id=\"node1055\" class=\"node\"&gt;\n&lt;title&gt;5ee21168c2d6486bac5a75d11e992f78&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12892.32,-252.72 12890.88,-252.72 12890.88,-251.28 12892.32,-251.28 12892.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1dd48076c6b446ef84767475a0b06fc2&amp;#45;&amp;#45;5ee21168c2d6486bac5a75d11e992f78 --&gt;\n&lt;g id=\"edge1050\" class=\"edge\"&gt;\n&lt;title&gt;1dd48076c6b446ef84767475a0b06fc2&amp;#45;&amp;#45;5ee21168c2d6486bac5a75d11e992f78&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12799.07,-252C12801.8,-252 12887.85,-252 12890.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- cacad21a4c83418da77813a73f20da9b --&gt;\n&lt;g id=\"node1056\" class=\"node\"&gt;\n&lt;title&gt;cacad21a4c83418da77813a73f20da9b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12985.92,-252.72 12984.48,-252.72 12984.48,-251.28 12985.92,-251.28 12985.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5ee21168c2d6486bac5a75d11e992f78&amp;#45;&amp;#45;cacad21a4c83418da77813a73f20da9b --&gt;\n&lt;g id=\"edge1051\" class=\"edge\"&gt;\n&lt;title&gt;5ee21168c2d6486bac5a75d11e992f78&amp;#45;&amp;#45;cacad21a4c83418da77813a73f20da9b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12892.67,-252C12895.4,-252 12981.45,-252 12984.14,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d9bc775bc1840728dda4cce7b52cb70 --&gt;\n&lt;g id=\"node1057\" class=\"node\"&gt;\n&lt;title&gt;4d9bc775bc1840728dda4cce7b52cb70&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M13095.6,-280.8C13095.6,-280.8 13062,-280.8 13062,-280.8 13056,-280.8 13050,-274.8 13050,-268.8 13050,-268.8 13050,-235.2 13050,-235.2 13050,-229.2 13056,-223.2 13062,-223.2 13062,-223.2 13095.6,-223.2 13095.6,-223.2 13101.6,-223.2 13107.6,-229.2 13107.6,-235.2 13107.6,-235.2 13107.6,-268.8 13107.6,-268.8 13107.6,-274.8 13101.6,-280.8 13095.6,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"13078.8\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- cacad21a4c83418da77813a73f20da9b&amp;#45;&amp;#45;4d9bc775bc1840728dda4cce7b52cb70 --&gt;\n&lt;g id=\"edge1052\" class=\"edge\"&gt;\n&lt;title&gt;cacad21a4c83418da77813a73f20da9b&amp;#45;&amp;#45;4d9bc775bc1840728dda4cce7b52cb70&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12986.27,-252C12987.99,-252 13022.88,-252 13049.08,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d9bc775bc1840728dda4cce7b52cb70&amp;#45;&amp;#45;dede2941a9bb45449b04e8d3e7078ba2 --&gt;\n&lt;g id=\"edge1949\" class=\"edge\"&gt;\n&lt;title&gt;4d9bc775bc1840728dda4cce7b52cb70&amp;#45;&amp;#45;dede2941a9bb45449b04e8d3e7078ba2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13078.8,-281.65C13078.8,-292.2 13078.8,-302.76 13078.8,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 45f90264e9a34184bcef7d753b5e6128 --&gt;\n&lt;g id=\"node1058\" class=\"node\"&gt;\n&lt;title&gt;45f90264e9a34184bcef7d753b5e6128&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"13172.4\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d9bc775bc1840728dda4cce7b52cb70&amp;#45;&amp;#45;45f90264e9a34184bcef7d753b5e6128 --&gt;\n&lt;g id=\"edge1053\" class=\"edge\"&gt;\n&lt;title&gt;4d9bc775bc1840728dda4cce7b52cb70&amp;#45;&amp;#45;45f90264e9a34184bcef7d753b5e6128&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13108.28,-252C13128.24,-252 13153.34,-252 13164.96,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- acc1d994a879432f812ac6348c12b915 --&gt;\n&lt;g id=\"node1059\" class=\"node\"&gt;\n&lt;title&gt;acc1d994a879432f812ac6348c12b915&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13266.72,-252.72 13265.28,-252.72 13265.28,-251.28 13266.72,-251.28 13266.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 45f90264e9a34184bcef7d753b5e6128&amp;#45;&amp;#45;acc1d994a879432f812ac6348c12b915 --&gt;\n&lt;g id=\"edge1054\" class=\"edge\"&gt;\n&lt;title&gt;45f90264e9a34184bcef7d753b5e6128&amp;#45;&amp;#45;acc1d994a879432f812ac6348c12b915&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13179.99,-252C13200.33,-252 13261.04,-252 13264.82,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- d6cb763309de4b28a0646c849a1274c3 --&gt;\n&lt;g id=\"node1060\" class=\"node\"&gt;\n&lt;title&gt;d6cb763309de4b28a0646c849a1274c3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13360.32,-252.72 13358.88,-252.72 13358.88,-251.28 13360.32,-251.28 13360.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- acc1d994a879432f812ac6348c12b915&amp;#45;&amp;#45;d6cb763309de4b28a0646c849a1274c3 --&gt;\n&lt;g id=\"edge1055\" class=\"edge\"&gt;\n&lt;title&gt;acc1d994a879432f812ac6348c12b915&amp;#45;&amp;#45;d6cb763309de4b28a0646c849a1274c3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13267.07,-252C13269.8,-252 13355.85,-252 13358.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- b120f33aa93646ba91179e6199b9b39e --&gt;\n&lt;g id=\"node1061\" class=\"node\"&gt;\n&lt;title&gt;b120f33aa93646ba91179e6199b9b39e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13506.72,-252.72 13505.28,-252.72 13505.28,-251.28 13506.72,-251.28 13506.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d6cb763309de4b28a0646c849a1274c3&amp;#45;&amp;#45;b120f33aa93646ba91179e6199b9b39e --&gt;\n&lt;g id=\"edge1056\" class=\"edge\"&gt;\n&lt;title&gt;d6cb763309de4b28a0646c849a1274c3&amp;#45;&amp;#45;b120f33aa93646ba91179e6199b9b39e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13360.7,-252C13365.01,-252 13500.66,-252 13504.9,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 91932905597e43f9a98dac951b2add6b --&gt;\n&lt;g id=\"node1062\" class=\"node\"&gt;\n&lt;title&gt;91932905597e43f9a98dac951b2add6b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13653.12,-252.72 13651.68,-252.72 13651.68,-251.28 13653.12,-251.28 13653.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b120f33aa93646ba91179e6199b9b39e&amp;#45;&amp;#45;91932905597e43f9a98dac951b2add6b --&gt;\n&lt;g id=\"edge1057\" class=\"edge\"&gt;\n&lt;title&gt;b120f33aa93646ba91179e6199b9b39e&amp;#45;&amp;#45;91932905597e43f9a98dac951b2add6b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13507.1,-252C13511.41,-252 13647.06,-252 13651.3,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- fa6d621815e740b2b2a5cec9ccc3c320 --&gt;\n&lt;g id=\"node1063\" class=\"node\"&gt;\n&lt;title&gt;fa6d621815e740b2b2a5cec9ccc3c320&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13746.72,-252.72 13745.28,-252.72 13745.28,-251.28 13746.72,-251.28 13746.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 91932905597e43f9a98dac951b2add6b&amp;#45;&amp;#45;fa6d621815e740b2b2a5cec9ccc3c320 --&gt;\n&lt;g id=\"edge1058\" class=\"edge\"&gt;\n&lt;title&gt;91932905597e43f9a98dac951b2add6b&amp;#45;&amp;#45;fa6d621815e740b2b2a5cec9ccc3c320&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13653.47,-252C13656.2,-252 13742.25,-252 13744.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- c11a303b3745490ab1377340a6632db1 --&gt;\n&lt;g id=\"node1064\" class=\"node\"&gt;\n&lt;title&gt;c11a303b3745490ab1377340a6632db1&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"13839.6\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- fa6d621815e740b2b2a5cec9ccc3c320&amp;#45;&amp;#45;c11a303b3745490ab1377340a6632db1 --&gt;\n&lt;g id=\"edge1059\" class=\"edge\"&gt;\n&lt;title&gt;fa6d621815e740b2b2a5cec9ccc3c320&amp;#45;&amp;#45;c11a303b3745490ab1377340a6632db1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13747.07,-252C13749.37,-252 13811.21,-252 13831.92,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2e0034d1112c4e0f9e8095f5f04dec1f --&gt;\n&lt;g id=\"node1065\" class=\"node\"&gt;\n&lt;title&gt;2e0034d1112c4e0f9e8095f5f04dec1f&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M13950,-280.8C13950,-280.8 13916.4,-280.8 13916.4,-280.8 13910.4,-280.8 13904.4,-274.8 13904.4,-268.8 13904.4,-268.8 13904.4,-235.2 13904.4,-235.2 13904.4,-229.2 13910.4,-223.2 13916.4,-223.2 13916.4,-223.2 13950,-223.2 13950,-223.2 13956,-223.2 13962,-229.2 13962,-235.2 13962,-235.2 13962,-268.8 13962,-268.8 13962,-274.8 13956,-280.8 13950,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"13933.2\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- c11a303b3745490ab1377340a6632db1&amp;#45;&amp;#45;2e0034d1112c4e0f9e8095f5f04dec1f --&gt;\n&lt;g id=\"edge1060\" class=\"edge\"&gt;\n&lt;title&gt;c11a303b3745490ab1377340a6632db1&amp;#45;&amp;#45;2e0034d1112c4e0f9e8095f5f04dec1f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13847.19,-252C13858.84,-252 13883.72,-252 13903.57,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2e0034d1112c4e0f9e8095f5f04dec1f&amp;#45;&amp;#45;4a7564af9c734d4984ee2fd532bf166c --&gt;\n&lt;g id=\"edge1950\" class=\"edge\"&gt;\n&lt;title&gt;2e0034d1112c4e0f9e8095f5f04dec1f&amp;#45;&amp;#45;4a7564af9c734d4984ee2fd532bf166c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13933.2,-281.65C13933.2,-292.2 13933.2,-302.76 13933.2,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4c1098575734f47bec4a52f55adc581 --&gt;\n&lt;g id=\"node1066\" class=\"node\"&gt;\n&lt;title&gt;e4c1098575734f47bec4a52f55adc581&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14027.52,-252.72 14026.08,-252.72 14026.08,-251.28 14027.52,-251.28 14027.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2e0034d1112c4e0f9e8095f5f04dec1f&amp;#45;&amp;#45;e4c1098575734f47bec4a52f55adc581 --&gt;\n&lt;g id=\"edge1061\" class=\"edge\"&gt;\n&lt;title&gt;2e0034d1112c4e0f9e8095f5f04dec1f&amp;#45;&amp;#45;e4c1098575734f47bec4a52f55adc581&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13962.68,-252C13988.73,-252 14023.54,-252 14025.7,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- e81f18c9884b462a9a66451063607e64 --&gt;\n&lt;g id=\"node1067\" class=\"node\"&gt;\n&lt;title&gt;e81f18c9884b462a9a66451063607e64&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14121.12,-252.72 14119.68,-252.72 14119.68,-251.28 14121.12,-251.28 14121.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4c1098575734f47bec4a52f55adc581&amp;#45;&amp;#45;e81f18c9884b462a9a66451063607e64 --&gt;\n&lt;g id=\"edge1062\" class=\"edge\"&gt;\n&lt;title&gt;e4c1098575734f47bec4a52f55adc581&amp;#45;&amp;#45;e81f18c9884b462a9a66451063607e64&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14027.87,-252C14030.6,-252 14116.65,-252 14119.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- c2dd9d6257ec486d91fd6c147261320a --&gt;\n&lt;g id=\"node1068\" class=\"node\"&gt;\n&lt;title&gt;c2dd9d6257ec486d91fd6c147261320a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14214.72,-252.72 14213.28,-252.72 14213.28,-251.28 14214.72,-251.28 14214.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e81f18c9884b462a9a66451063607e64&amp;#45;&amp;#45;c2dd9d6257ec486d91fd6c147261320a --&gt;\n&lt;g id=\"edge1063\" class=\"edge\"&gt;\n&lt;title&gt;e81f18c9884b462a9a66451063607e64&amp;#45;&amp;#45;c2dd9d6257ec486d91fd6c147261320a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14121.47,-252C14124.2,-252 14210.25,-252 14212.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- febb19f22083427ba8de345d48cc3c9f --&gt;\n&lt;g id=\"node1069\" class=\"node\"&gt;\n&lt;title&gt;febb19f22083427ba8de345d48cc3c9f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14308.32,-252.72 14306.88,-252.72 14306.88,-251.28 14308.32,-251.28 14308.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c2dd9d6257ec486d91fd6c147261320a&amp;#45;&amp;#45;febb19f22083427ba8de345d48cc3c9f --&gt;\n&lt;g id=\"edge1064\" class=\"edge\"&gt;\n&lt;title&gt;c2dd9d6257ec486d91fd6c147261320a&amp;#45;&amp;#45;febb19f22083427ba8de345d48cc3c9f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14215.07,-252C14217.8,-252 14303.85,-252 14306.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- e2df47fb754444d885d1b45c1d0ffcbe --&gt;\n&lt;g id=\"node1070\" class=\"node\"&gt;\n&lt;title&gt;e2df47fb754444d885d1b45c1d0ffcbe&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14460.72,-252.72 14459.28,-252.72 14459.28,-251.28 14460.72,-251.28 14460.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- febb19f22083427ba8de345d48cc3c9f&amp;#45;&amp;#45;e2df47fb754444d885d1b45c1d0ffcbe --&gt;\n&lt;g id=\"edge1065\" class=\"edge\"&gt;\n&lt;title&gt;febb19f22083427ba8de345d48cc3c9f&amp;#45;&amp;#45;e2df47fb754444d885d1b45c1d0ffcbe&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14308.71,-252C14313.19,-252 14454.48,-252 14458.89,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- d5fa5d1f8f154d89838a8b658384e1ef --&gt;\n&lt;g id=\"node1071\" class=\"node\"&gt;\n&lt;title&gt;d5fa5d1f8f154d89838a8b658384e1ef&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14613.12,-252.72 14611.68,-252.72 14611.68,-251.28 14613.12,-251.28 14613.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e2df47fb754444d885d1b45c1d0ffcbe&amp;#45;&amp;#45;d5fa5d1f8f154d89838a8b658384e1ef --&gt;\n&lt;g id=\"edge1066\" class=\"edge\"&gt;\n&lt;title&gt;e2df47fb754444d885d1b45c1d0ffcbe&amp;#45;&amp;#45;d5fa5d1f8f154d89838a8b658384e1ef&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14461.11,-252C14465.59,-252 14606.88,-252 14611.29,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- e1eba99d73484d65a2fe8587f8dd7a13 --&gt;\n&lt;g id=\"node1072\" class=\"node\"&gt;\n&lt;title&gt;e1eba99d73484d65a2fe8587f8dd7a13&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14706.72,-252.72 14705.28,-252.72 14705.28,-251.28 14706.72,-251.28 14706.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d5fa5d1f8f154d89838a8b658384e1ef&amp;#45;&amp;#45;e1eba99d73484d65a2fe8587f8dd7a13 --&gt;\n&lt;g id=\"edge1067\" class=\"edge\"&gt;\n&lt;title&gt;d5fa5d1f8f154d89838a8b658384e1ef&amp;#45;&amp;#45;e1eba99d73484d65a2fe8587f8dd7a13&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14613.47,-252C14616.2,-252 14702.25,-252 14704.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5e494cc58ddc4bedbf1fb3d60eab0e64 --&gt;\n&lt;g id=\"node1073\" class=\"node\"&gt;\n&lt;title&gt;5e494cc58ddc4bedbf1fb3d60eab0e64&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14800.32,-252.72 14798.88,-252.72 14798.88,-251.28 14800.32,-251.28 14800.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e1eba99d73484d65a2fe8587f8dd7a13&amp;#45;&amp;#45;5e494cc58ddc4bedbf1fb3d60eab0e64 --&gt;\n&lt;g id=\"edge1068\" class=\"edge\"&gt;\n&lt;title&gt;e1eba99d73484d65a2fe8587f8dd7a13&amp;#45;&amp;#45;5e494cc58ddc4bedbf1fb3d60eab0e64&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14707.07,-252C14709.8,-252 14795.85,-252 14798.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- f409d379fb1c49e3832656ed3d172a1b --&gt;\n&lt;g id=\"node1074\" class=\"node\"&gt;\n&lt;title&gt;f409d379fb1c49e3832656ed3d172a1b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14893.92,-252.72 14892.48,-252.72 14892.48,-251.28 14893.92,-251.28 14893.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5e494cc58ddc4bedbf1fb3d60eab0e64&amp;#45;&amp;#45;f409d379fb1c49e3832656ed3d172a1b --&gt;\n&lt;g id=\"edge1069\" class=\"edge\"&gt;\n&lt;title&gt;5e494cc58ddc4bedbf1fb3d60eab0e64&amp;#45;&amp;#45;f409d379fb1c49e3832656ed3d172a1b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14800.67,-252C14803.4,-252 14889.45,-252 14892.14,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 893df4d4d8d04787893d0836809ac769 --&gt;\n&lt;g id=\"node1075\" class=\"node\"&gt;\n&lt;title&gt;893df4d4d8d04787893d0836809ac769&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M15003.6,-280.8C15003.6,-280.8 14970,-280.8 14970,-280.8 14964,-280.8 14958,-274.8 14958,-268.8 14958,-268.8 14958,-235.2 14958,-235.2 14958,-229.2 14964,-223.2 14970,-223.2 14970,-223.2 15003.6,-223.2 15003.6,-223.2 15009.6,-223.2 15015.6,-229.2 15015.6,-235.2 15015.6,-235.2 15015.6,-268.8 15015.6,-268.8 15015.6,-274.8 15009.6,-280.8 15003.6,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"14986.8\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- f409d379fb1c49e3832656ed3d172a1b&amp;#45;&amp;#45;893df4d4d8d04787893d0836809ac769 --&gt;\n&lt;g id=\"edge1070\" class=\"edge\"&gt;\n&lt;title&gt;f409d379fb1c49e3832656ed3d172a1b&amp;#45;&amp;#45;893df4d4d8d04787893d0836809ac769&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14894.27,-252C14895.99,-252 14930.88,-252 14957.08,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 893df4d4d8d04787893d0836809ac769&amp;#45;&amp;#45;bd41c0da352146eda917bf68494d91c4 --&gt;\n&lt;g id=\"edge1951\" class=\"edge\"&gt;\n&lt;title&gt;893df4d4d8d04787893d0836809ac769&amp;#45;&amp;#45;bd41c0da352146eda917bf68494d91c4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14986.8,-281.65C14986.8,-292.2 14986.8,-302.76 14986.8,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- b21d8b2a8e5148d6873d98e585cfbfa6 --&gt;\n&lt;g id=\"node1076\" class=\"node\"&gt;\n&lt;title&gt;b21d8b2a8e5148d6873d98e585cfbfa6&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"15080.4\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 893df4d4d8d04787893d0836809ac769&amp;#45;&amp;#45;b21d8b2a8e5148d6873d98e585cfbfa6 --&gt;\n&lt;g id=\"edge1071\" class=\"edge\"&gt;\n&lt;title&gt;893df4d4d8d04787893d0836809ac769&amp;#45;&amp;#45;b21d8b2a8e5148d6873d98e585cfbfa6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15016.28,-252C15036.24,-252 15061.34,-252 15072.96,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a494a5f0d484fa19b6537944bc415ad --&gt;\n&lt;g id=\"node1077\" class=\"node\"&gt;\n&lt;title&gt;5a494a5f0d484fa19b6537944bc415ad&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15233.52,-252.72 15232.08,-252.72 15232.08,-251.28 15233.52,-251.28 15233.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b21d8b2a8e5148d6873d98e585cfbfa6&amp;#45;&amp;#45;5a494a5f0d484fa19b6537944bc415ad --&gt;\n&lt;g id=\"edge1072\" class=\"edge\"&gt;\n&lt;title&gt;b21d8b2a8e5148d6873d98e585cfbfa6&amp;#45;&amp;#45;5a494a5f0d484fa19b6537944bc415ad&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15087.86,-252C15116.2,-252 15228.22,-252 15231.72,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9b31e55ab7544c3a937c6f6bcb46c085 --&gt;\n&lt;g id=\"node1078\" class=\"node\"&gt;\n&lt;title&gt;9b31e55ab7544c3a937c6f6bcb46c085&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"15385.2\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a494a5f0d484fa19b6537944bc415ad&amp;#45;&amp;#45;9b31e55ab7544c3a937c6f6bcb46c085 --&gt;\n&lt;g id=\"edge1073\" class=\"edge\"&gt;\n&lt;title&gt;5a494a5f0d484fa19b6537944bc415ad&amp;#45;&amp;#45;9b31e55ab7544c3a937c6f6bcb46c085&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15233.91,-252C15237.88,-252 15348.97,-252 15377.55,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- d5749881ac744540889da94f2d115322 --&gt;\n&lt;g id=\"node1079\" class=\"node\"&gt;\n&lt;title&gt;d5749881ac744540889da94f2d115322&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M15495.6,-280.8C15495.6,-280.8 15462,-280.8 15462,-280.8 15456,-280.8 15450,-274.8 15450,-268.8 15450,-268.8 15450,-235.2 15450,-235.2 15450,-229.2 15456,-223.2 15462,-223.2 15462,-223.2 15495.6,-223.2 15495.6,-223.2 15501.6,-223.2 15507.6,-229.2 15507.6,-235.2 15507.6,-235.2 15507.6,-268.8 15507.6,-268.8 15507.6,-274.8 15501.6,-280.8 15495.6,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"15478.8\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 9b31e55ab7544c3a937c6f6bcb46c085&amp;#45;&amp;#45;d5749881ac744540889da94f2d115322 --&gt;\n&lt;g id=\"edge1074\" class=\"edge\"&gt;\n&lt;title&gt;9b31e55ab7544c3a937c6f6bcb46c085&amp;#45;&amp;#45;d5749881ac744540889da94f2d115322&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15392.79,-252C15404.44,-252 15429.32,-252 15449.17,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- d5749881ac744540889da94f2d115322&amp;#45;&amp;#45;02c6b1de6b0d4fd7996b651baaafd50c --&gt;\n&lt;g id=\"edge1952\" class=\"edge\"&gt;\n&lt;title&gt;d5749881ac744540889da94f2d115322&amp;#45;&amp;#45;02c6b1de6b0d4fd7996b651baaafd50c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15478.8,-281.65C15478.8,-292.2 15478.8,-302.76 15478.8,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17a8d01668b94413b5fda47c20eab1ad --&gt;\n&lt;g id=\"node1080\" class=\"node\"&gt;\n&lt;title&gt;17a8d01668b94413b5fda47c20eab1ad&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15573.12,-252.72 15571.68,-252.72 15571.68,-251.28 15573.12,-251.28 15573.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d5749881ac744540889da94f2d115322&amp;#45;&amp;#45;17a8d01668b94413b5fda47c20eab1ad --&gt;\n&lt;g id=\"edge1075\" class=\"edge\"&gt;\n&lt;title&gt;d5749881ac744540889da94f2d115322&amp;#45;&amp;#45;17a8d01668b94413b5fda47c20eab1ad&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15508.28,-252C15534.33,-252 15569.14,-252 15571.3,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c3dbd0f3e5b45bcae53e6734292f02b --&gt;\n&lt;g id=\"node1081\" class=\"node\"&gt;\n&lt;title&gt;7c3dbd0f3e5b45bcae53e6734292f02b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15666.72,-252.72 15665.28,-252.72 15665.28,-251.28 15666.72,-251.28 15666.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17a8d01668b94413b5fda47c20eab1ad&amp;#45;&amp;#45;7c3dbd0f3e5b45bcae53e6734292f02b --&gt;\n&lt;g id=\"edge1076\" class=\"edge\"&gt;\n&lt;title&gt;17a8d01668b94413b5fda47c20eab1ad&amp;#45;&amp;#45;7c3dbd0f3e5b45bcae53e6734292f02b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15573.47,-252C15576.2,-252 15662.25,-252 15664.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- cf9bcee2e7c2422ab6c15fdf36926f07 --&gt;\n&lt;g id=\"node1082\" class=\"node\"&gt;\n&lt;title&gt;cf9bcee2e7c2422ab6c15fdf36926f07&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15760.32,-252.72 15758.88,-252.72 15758.88,-251.28 15760.32,-251.28 15760.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c3dbd0f3e5b45bcae53e6734292f02b&amp;#45;&amp;#45;cf9bcee2e7c2422ab6c15fdf36926f07 --&gt;\n&lt;g id=\"edge1077\" class=\"edge\"&gt;\n&lt;title&gt;7c3dbd0f3e5b45bcae53e6734292f02b&amp;#45;&amp;#45;cf9bcee2e7c2422ab6c15fdf36926f07&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15667.07,-252C15669.8,-252 15755.85,-252 15758.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 579364407a3f4791a81aa2937ac63ca7 --&gt;\n&lt;g id=\"node1083\" class=\"node\"&gt;\n&lt;title&gt;579364407a3f4791a81aa2937ac63ca7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15853.92,-252.72 15852.48,-252.72 15852.48,-251.28 15853.92,-251.28 15853.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cf9bcee2e7c2422ab6c15fdf36926f07&amp;#45;&amp;#45;579364407a3f4791a81aa2937ac63ca7 --&gt;\n&lt;g id=\"edge1078\" class=\"edge\"&gt;\n&lt;title&gt;cf9bcee2e7c2422ab6c15fdf36926f07&amp;#45;&amp;#45;579364407a3f4791a81aa2937ac63ca7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15760.67,-252C15763.4,-252 15849.45,-252 15852.14,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d7cc8b31b7d415f87fff3223a9f2d62 --&gt;\n&lt;g id=\"node1084\" class=\"node\"&gt;\n&lt;title&gt;7d7cc8b31b7d415f87fff3223a9f2d62&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15947.52,-252.72 15946.08,-252.72 15946.08,-251.28 15947.52,-251.28 15947.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 579364407a3f4791a81aa2937ac63ca7&amp;#45;&amp;#45;7d7cc8b31b7d415f87fff3223a9f2d62 --&gt;\n&lt;g id=\"edge1079\" class=\"edge\"&gt;\n&lt;title&gt;579364407a3f4791a81aa2937ac63ca7&amp;#45;&amp;#45;7d7cc8b31b7d415f87fff3223a9f2d62&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15854.27,-252C15857,-252 15943.05,-252 15945.74,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e843c36267448a5b17926681cb7d536 --&gt;\n&lt;g id=\"node1085\" class=\"node\"&gt;\n&lt;title&gt;6e843c36267448a5b17926681cb7d536&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M16057.2,-280.8C16057.2,-280.8 16023.6,-280.8 16023.6,-280.8 16017.6,-280.8 16011.6,-274.8 16011.6,-268.8 16011.6,-268.8 16011.6,-235.2 16011.6,-235.2 16011.6,-229.2 16017.6,-223.2 16023.6,-223.2 16023.6,-223.2 16057.2,-223.2 16057.2,-223.2 16063.2,-223.2 16069.2,-229.2 16069.2,-235.2 16069.2,-235.2 16069.2,-268.8 16069.2,-268.8 16069.2,-274.8 16063.2,-280.8 16057.2,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"16040.4\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 7d7cc8b31b7d415f87fff3223a9f2d62&amp;#45;&amp;#45;6e843c36267448a5b17926681cb7d536 --&gt;\n&lt;g id=\"edge1080\" class=\"edge\"&gt;\n&lt;title&gt;7d7cc8b31b7d415f87fff3223a9f2d62&amp;#45;&amp;#45;6e843c36267448a5b17926681cb7d536&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15947.87,-252C15949.59,-252 15984.48,-252 16010.68,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e843c36267448a5b17926681cb7d536&amp;#45;&amp;#45;e77a4a52a97f4e54bf481d17eab23f9b --&gt;\n&lt;g id=\"edge1953\" class=\"edge\"&gt;\n&lt;title&gt;6e843c36267448a5b17926681cb7d536&amp;#45;&amp;#45;e77a4a52a97f4e54bf481d17eab23f9b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16040.4,-281.65C16040.4,-292.2 16040.4,-302.76 16040.4,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- c27ab54da32e4f419ffa5991fbe989cd --&gt;\n&lt;g id=\"node1086\" class=\"node\"&gt;\n&lt;title&gt;c27ab54da32e4f419ffa5991fbe989cd&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M16268.4,-280.8C16268.4,-280.8 16117.2,-280.8 16117.2,-280.8 16111.2,-280.8 16105.2,-274.8 16105.2,-268.8 16105.2,-268.8 16105.2,-235.2 16105.2,-235.2 16105.2,-229.2 16111.2,-223.2 16117.2,-223.2 16117.2,-223.2 16268.4,-223.2 16268.4,-223.2 16274.4,-223.2 16280.4,-229.2 16280.4,-235.2 16280.4,-235.2 16280.4,-268.8 16280.4,-268.8 16280.4,-274.8 16274.4,-280.8 16268.4,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"16192.8\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 6e843c36267448a5b17926681cb7d536&amp;#45;&amp;#45;c27ab54da32e4f419ffa5991fbe989cd --&gt;\n&lt;g id=\"edge1081\" class=\"edge\"&gt;\n&lt;title&gt;6e843c36267448a5b17926681cb7d536&amp;#45;&amp;#45;c27ab54da32e4f419ffa5991fbe989cd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16070.04,-252C16080.1,-252 16091.99,-252 16104.33,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7ca6e855341d409fbc76adec12ecf1f4 --&gt;\n&lt;g id=\"node1087\" class=\"node\"&gt;\n&lt;title&gt;7ca6e855341d409fbc76adec12ecf1f4&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M16362,-280.8C16362,-280.8 16328.4,-280.8 16328.4,-280.8 16322.4,-280.8 16316.4,-274.8 16316.4,-268.8 16316.4,-268.8 16316.4,-235.2 16316.4,-235.2 16316.4,-229.2 16322.4,-223.2 16328.4,-223.2 16328.4,-223.2 16362,-223.2 16362,-223.2 16368,-223.2 16374,-229.2 16374,-235.2 16374,-235.2 16374,-268.8 16374,-268.8 16374,-274.8 16368,-280.8 16362,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"16345.2\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- c27ab54da32e4f419ffa5991fbe989cd&amp;#45;&amp;#45;7ca6e855341d409fbc76adec12ecf1f4 --&gt;\n&lt;g id=\"edge1082\" class=\"edge\"&gt;\n&lt;title&gt;c27ab54da32e4f419ffa5991fbe989cd&amp;#45;&amp;#45;7ca6e855341d409fbc76adec12ecf1f4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16281.29,-252C16293.57,-252 16305.4,-252 16315.42,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7ca6e855341d409fbc76adec12ecf1f4&amp;#45;&amp;#45;2fa78e7fe6564f6395accda14a4e5937 --&gt;\n&lt;g id=\"edge1954\" class=\"edge\"&gt;\n&lt;title&gt;7ca6e855341d409fbc76adec12ecf1f4&amp;#45;&amp;#45;2fa78e7fe6564f6395accda14a4e5937&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16345.2,-281.65C16345.2,-292.2 16345.2,-302.76 16345.2,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- f08142a43d5940dd908b3011f56b0d24 --&gt;\n&lt;g id=\"node1088\" class=\"node\"&gt;\n&lt;title&gt;f08142a43d5940dd908b3011f56b0d24&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16439.52,-252.72 16438.08,-252.72 16438.08,-251.28 16439.52,-251.28 16439.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7ca6e855341d409fbc76adec12ecf1f4&amp;#45;&amp;#45;f08142a43d5940dd908b3011f56b0d24 --&gt;\n&lt;g id=\"edge1083\" class=\"edge\"&gt;\n&lt;title&gt;7ca6e855341d409fbc76adec12ecf1f4&amp;#45;&amp;#45;f08142a43d5940dd908b3011f56b0d24&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16374.68,-252C16400.73,-252 16435.54,-252 16437.7,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- d3d587260aeb4786abb8480f9b7eb782 --&gt;\n&lt;g id=\"node1089\" class=\"node\"&gt;\n&lt;title&gt;d3d587260aeb4786abb8480f9b7eb782&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16533.12,-252.72 16531.68,-252.72 16531.68,-251.28 16533.12,-251.28 16533.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f08142a43d5940dd908b3011f56b0d24&amp;#45;&amp;#45;d3d587260aeb4786abb8480f9b7eb782 --&gt;\n&lt;g id=\"edge1084\" class=\"edge\"&gt;\n&lt;title&gt;f08142a43d5940dd908b3011f56b0d24&amp;#45;&amp;#45;d3d587260aeb4786abb8480f9b7eb782&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16439.87,-252C16442.6,-252 16528.65,-252 16531.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 68ce5b2163fb459a8074c2c3004721ee --&gt;\n&lt;g id=\"node1090\" class=\"node\"&gt;\n&lt;title&gt;68ce5b2163fb459a8074c2c3004721ee&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16626.72,-252.72 16625.28,-252.72 16625.28,-251.28 16626.72,-251.28 16626.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d3d587260aeb4786abb8480f9b7eb782&amp;#45;&amp;#45;68ce5b2163fb459a8074c2c3004721ee --&gt;\n&lt;g id=\"edge1085\" class=\"edge\"&gt;\n&lt;title&gt;d3d587260aeb4786abb8480f9b7eb782&amp;#45;&amp;#45;68ce5b2163fb459a8074c2c3004721ee&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16533.47,-252C16536.2,-252 16622.25,-252 16624.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 214d41267b3e4c8b93f5d3777de4351a --&gt;\n&lt;g id=\"node1091\" class=\"node\"&gt;\n&lt;title&gt;214d41267b3e4c8b93f5d3777de4351a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16720.32,-252.72 16718.88,-252.72 16718.88,-251.28 16720.32,-251.28 16720.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 68ce5b2163fb459a8074c2c3004721ee&amp;#45;&amp;#45;214d41267b3e4c8b93f5d3777de4351a --&gt;\n&lt;g id=\"edge1086\" class=\"edge\"&gt;\n&lt;title&gt;68ce5b2163fb459a8074c2c3004721ee&amp;#45;&amp;#45;214d41267b3e4c8b93f5d3777de4351a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16627.07,-252C16629.8,-252 16715.85,-252 16718.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0518988cc21b4de3bea8e27a992cd35c --&gt;\n&lt;g id=\"node1092\" class=\"node\"&gt;\n&lt;title&gt;0518988cc21b4de3bea8e27a992cd35c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M16830,-280.8C16830,-280.8 16796.4,-280.8 16796.4,-280.8 16790.4,-280.8 16784.4,-274.8 16784.4,-268.8 16784.4,-268.8 16784.4,-235.2 16784.4,-235.2 16784.4,-229.2 16790.4,-223.2 16796.4,-223.2 16796.4,-223.2 16830,-223.2 16830,-223.2 16836,-223.2 16842,-229.2 16842,-235.2 16842,-235.2 16842,-268.8 16842,-268.8 16842,-274.8 16836,-280.8 16830,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"16813.2\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 214d41267b3e4c8b93f5d3777de4351a&amp;#45;&amp;#45;0518988cc21b4de3bea8e27a992cd35c --&gt;\n&lt;g id=\"edge1087\" class=\"edge\"&gt;\n&lt;title&gt;214d41267b3e4c8b93f5d3777de4351a&amp;#45;&amp;#45;0518988cc21b4de3bea8e27a992cd35c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16720.67,-252C16722.39,-252 16757.28,-252 16783.48,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0518988cc21b4de3bea8e27a992cd35c&amp;#45;&amp;#45;047cd9247e2e4e97b463f94656fa3213 --&gt;\n&lt;g id=\"edge1955\" class=\"edge\"&gt;\n&lt;title&gt;0518988cc21b4de3bea8e27a992cd35c&amp;#45;&amp;#45;047cd9247e2e4e97b463f94656fa3213&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16813.2,-281.65C16813.2,-292.2 16813.2,-302.76 16813.2,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 91adf42e24c744619d0f9aef294cfe60 --&gt;\n&lt;g id=\"node1093\" class=\"node\"&gt;\n&lt;title&gt;91adf42e24c744619d0f9aef294cfe60&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"16906.8\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0518988cc21b4de3bea8e27a992cd35c&amp;#45;&amp;#45;91adf42e24c744619d0f9aef294cfe60 --&gt;\n&lt;g id=\"edge1088\" class=\"edge\"&gt;\n&lt;title&gt;0518988cc21b4de3bea8e27a992cd35c&amp;#45;&amp;#45;91adf42e24c744619d0f9aef294cfe60&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16842.68,-252C16862.64,-252 16887.74,-252 16899.36,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- a61c8a34e8b246bcb97e49b1f6c9f0f5 --&gt;\n&lt;g id=\"node1094\" class=\"node\"&gt;\n&lt;title&gt;a61c8a34e8b246bcb97e49b1f6c9f0f5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17059.92,-252.72 17058.48,-252.72 17058.48,-251.28 17059.92,-251.28 17059.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 91adf42e24c744619d0f9aef294cfe60&amp;#45;&amp;#45;a61c8a34e8b246bcb97e49b1f6c9f0f5 --&gt;\n&lt;g id=\"edge1089\" class=\"edge\"&gt;\n&lt;title&gt;91adf42e24c744619d0f9aef294cfe60&amp;#45;&amp;#45;a61c8a34e8b246bcb97e49b1f6c9f0f5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16914.26,-252C16942.6,-252 17054.62,-252 17058.12,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- aa6ab42a897f4b64a43b8253b2fe2a6b --&gt;\n&lt;g id=\"node1095\" class=\"node\"&gt;\n&lt;title&gt;aa6ab42a897f4b64a43b8253b2fe2a6b&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"17211.6\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- a61c8a34e8b246bcb97e49b1f6c9f0f5&amp;#45;&amp;#45;aa6ab42a897f4b64a43b8253b2fe2a6b --&gt;\n&lt;g id=\"edge1090\" class=\"edge\"&gt;\n&lt;title&gt;a61c8a34e8b246bcb97e49b1f6c9f0f5&amp;#45;&amp;#45;aa6ab42a897f4b64a43b8253b2fe2a6b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17060.31,-252C17064.28,-252 17175.37,-252 17203.95,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 96a516f4d0f4456f9f0900c7748951a0 --&gt;\n&lt;g id=\"node1096\" class=\"node\"&gt;\n&lt;title&gt;96a516f4d0f4456f9f0900c7748951a0&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M17322,-280.8C17322,-280.8 17288.4,-280.8 17288.4,-280.8 17282.4,-280.8 17276.4,-274.8 17276.4,-268.8 17276.4,-268.8 17276.4,-235.2 17276.4,-235.2 17276.4,-229.2 17282.4,-223.2 17288.4,-223.2 17288.4,-223.2 17322,-223.2 17322,-223.2 17328,-223.2 17334,-229.2 17334,-235.2 17334,-235.2 17334,-268.8 17334,-268.8 17334,-274.8 17328,-280.8 17322,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"17305.2\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- aa6ab42a897f4b64a43b8253b2fe2a6b&amp;#45;&amp;#45;96a516f4d0f4456f9f0900c7748951a0 --&gt;\n&lt;g id=\"edge1091\" class=\"edge\"&gt;\n&lt;title&gt;aa6ab42a897f4b64a43b8253b2fe2a6b&amp;#45;&amp;#45;96a516f4d0f4456f9f0900c7748951a0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17219.19,-252C17230.84,-252 17255.72,-252 17275.57,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 96a516f4d0f4456f9f0900c7748951a0&amp;#45;&amp;#45;b6da8f8a729b42f591a583b05c7487c5 --&gt;\n&lt;g id=\"edge1956\" class=\"edge\"&gt;\n&lt;title&gt;96a516f4d0f4456f9f0900c7748951a0&amp;#45;&amp;#45;b6da8f8a729b42f591a583b05c7487c5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17305.2,-281.65C17305.2,-292.2 17305.2,-302.76 17305.2,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 40030aa40b324c9a849ddc88b9040486 --&gt;\n&lt;g id=\"node1097\" class=\"node\"&gt;\n&lt;title&gt;40030aa40b324c9a849ddc88b9040486&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17399.52,-252.72 17398.08,-252.72 17398.08,-251.28 17399.52,-251.28 17399.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 96a516f4d0f4456f9f0900c7748951a0&amp;#45;&amp;#45;40030aa40b324c9a849ddc88b9040486 --&gt;\n&lt;g id=\"edge1092\" class=\"edge\"&gt;\n&lt;title&gt;96a516f4d0f4456f9f0900c7748951a0&amp;#45;&amp;#45;40030aa40b324c9a849ddc88b9040486&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17334.68,-252C17360.73,-252 17395.54,-252 17397.7,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- a698d39b61fb4c0291928e10493dff8b --&gt;\n&lt;g id=\"node1098\" class=\"node\"&gt;\n&lt;title&gt;a698d39b61fb4c0291928e10493dff8b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17493.12,-252.72 17491.68,-252.72 17491.68,-251.28 17493.12,-251.28 17493.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 40030aa40b324c9a849ddc88b9040486&amp;#45;&amp;#45;a698d39b61fb4c0291928e10493dff8b --&gt;\n&lt;g id=\"edge1093\" class=\"edge\"&gt;\n&lt;title&gt;40030aa40b324c9a849ddc88b9040486&amp;#45;&amp;#45;a698d39b61fb4c0291928e10493dff8b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17399.87,-252C17402.6,-252 17488.65,-252 17491.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4098b5111ca24d70b4baa92b9d89a310 --&gt;\n&lt;g id=\"node1099\" class=\"node\"&gt;\n&lt;title&gt;4098b5111ca24d70b4baa92b9d89a310&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17586.72,-252.72 17585.28,-252.72 17585.28,-251.28 17586.72,-251.28 17586.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a698d39b61fb4c0291928e10493dff8b&amp;#45;&amp;#45;4098b5111ca24d70b4baa92b9d89a310 --&gt;\n&lt;g id=\"edge1094\" class=\"edge\"&gt;\n&lt;title&gt;a698d39b61fb4c0291928e10493dff8b&amp;#45;&amp;#45;4098b5111ca24d70b4baa92b9d89a310&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17493.47,-252C17496.2,-252 17582.25,-252 17584.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- c6d946b13d4644da8aab5eab00b3e1f2 --&gt;\n&lt;g id=\"node1100\" class=\"node\"&gt;\n&lt;title&gt;c6d946b13d4644da8aab5eab00b3e1f2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17680.32,-252.72 17678.88,-252.72 17678.88,-251.28 17680.32,-251.28 17680.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4098b5111ca24d70b4baa92b9d89a310&amp;#45;&amp;#45;c6d946b13d4644da8aab5eab00b3e1f2 --&gt;\n&lt;g id=\"edge1095\" class=\"edge\"&gt;\n&lt;title&gt;4098b5111ca24d70b4baa92b9d89a310&amp;#45;&amp;#45;c6d946b13d4644da8aab5eab00b3e1f2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17587.07,-252C17589.8,-252 17675.85,-252 17678.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0041c937b23245ff931884875a7c0e35 --&gt;\n&lt;g id=\"node1101\" class=\"node\"&gt;\n&lt;title&gt;0041c937b23245ff931884875a7c0e35&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M17790,-280.8C17790,-280.8 17756.4,-280.8 17756.4,-280.8 17750.4,-280.8 17744.4,-274.8 17744.4,-268.8 17744.4,-268.8 17744.4,-235.2 17744.4,-235.2 17744.4,-229.2 17750.4,-223.2 17756.4,-223.2 17756.4,-223.2 17790,-223.2 17790,-223.2 17796,-223.2 17802,-229.2 17802,-235.2 17802,-235.2 17802,-268.8 17802,-268.8 17802,-274.8 17796,-280.8 17790,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"17773.2\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- c6d946b13d4644da8aab5eab00b3e1f2&amp;#45;&amp;#45;0041c937b23245ff931884875a7c0e35 --&gt;\n&lt;g id=\"edge1096\" class=\"edge\"&gt;\n&lt;title&gt;c6d946b13d4644da8aab5eab00b3e1f2&amp;#45;&amp;#45;0041c937b23245ff931884875a7c0e35&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17680.67,-252C17682.39,-252 17717.28,-252 17743.48,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0041c937b23245ff931884875a7c0e35&amp;#45;&amp;#45;b0fb443ff00d45c19dde241f5569aa7c --&gt;\n&lt;g id=\"edge1957\" class=\"edge\"&gt;\n&lt;title&gt;0041c937b23245ff931884875a7c0e35&amp;#45;&amp;#45;b0fb443ff00d45c19dde241f5569aa7c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17773.2,-281.65C17773.2,-292.2 17773.2,-302.76 17773.2,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 65c80ce91f35488c925227d482a49e08 --&gt;\n&lt;g id=\"node1102\" class=\"node\"&gt;\n&lt;title&gt;65c80ce91f35488c925227d482a49e08&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"17866.8\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0041c937b23245ff931884875a7c0e35&amp;#45;&amp;#45;65c80ce91f35488c925227d482a49e08 --&gt;\n&lt;g id=\"edge1097\" class=\"edge\"&gt;\n&lt;title&gt;0041c937b23245ff931884875a7c0e35&amp;#45;&amp;#45;65c80ce91f35488c925227d482a49e08&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17802.68,-252C17822.64,-252 17847.74,-252 17859.36,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 711a0aab747d4060a78f606461b19037 --&gt;\n&lt;g id=\"node1103\" class=\"node\"&gt;\n&lt;title&gt;711a0aab747d4060a78f606461b19037&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17961.12,-252.72 17959.68,-252.72 17959.68,-251.28 17961.12,-251.28 17961.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 65c80ce91f35488c925227d482a49e08&amp;#45;&amp;#45;711a0aab747d4060a78f606461b19037 --&gt;\n&lt;g id=\"edge1098\" class=\"edge\"&gt;\n&lt;title&gt;65c80ce91f35488c925227d482a49e08&amp;#45;&amp;#45;711a0aab747d4060a78f606461b19037&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17874.39,-252C17894.73,-252 17955.44,-252 17959.22,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5ad00b4f39414f759dbc118302f29c8e --&gt;\n&lt;g id=\"node1104\" class=\"node\"&gt;\n&lt;title&gt;5ad00b4f39414f759dbc118302f29c8e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18113.52,-252.72 18112.08,-252.72 18112.08,-251.28 18113.52,-251.28 18113.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 711a0aab747d4060a78f606461b19037&amp;#45;&amp;#45;5ad00b4f39414f759dbc118302f29c8e --&gt;\n&lt;g id=\"edge1099\" class=\"edge\"&gt;\n&lt;title&gt;711a0aab747d4060a78f606461b19037&amp;#45;&amp;#45;5ad00b4f39414f759dbc118302f29c8e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17961.51,-252C17965.99,-252 18107.28,-252 18111.69,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- ea8bbbd7d37b4b64a9dc48878f51124a --&gt;\n&lt;g id=\"node1105\" class=\"node\"&gt;\n&lt;title&gt;ea8bbbd7d37b4b64a9dc48878f51124a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18265.92,-252.72 18264.48,-252.72 18264.48,-251.28 18265.92,-251.28 18265.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5ad00b4f39414f759dbc118302f29c8e&amp;#45;&amp;#45;ea8bbbd7d37b4b64a9dc48878f51124a --&gt;\n&lt;g id=\"edge1100\" class=\"edge\"&gt;\n&lt;title&gt;5ad00b4f39414f759dbc118302f29c8e&amp;#45;&amp;#45;ea8bbbd7d37b4b64a9dc48878f51124a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18113.91,-252C18118.39,-252 18259.68,-252 18264.09,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- fbbcb8bc5e12414e9f80359c84cd76ba --&gt;\n&lt;g id=\"node1106\" class=\"node\"&gt;\n&lt;title&gt;fbbcb8bc5e12414e9f80359c84cd76ba&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"18358.8\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- ea8bbbd7d37b4b64a9dc48878f51124a&amp;#45;&amp;#45;fbbcb8bc5e12414e9f80359c84cd76ba --&gt;\n&lt;g id=\"edge1101\" class=\"edge\"&gt;\n&lt;title&gt;ea8bbbd7d37b4b64a9dc48878f51124a&amp;#45;&amp;#45;fbbcb8bc5e12414e9f80359c84cd76ba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18266.27,-252C18268.57,-252 18330.41,-252 18351.12,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- da7d2b7697164f07a071f79d7e35c8f0 --&gt;\n&lt;g id=\"node1107\" class=\"node\"&gt;\n&lt;title&gt;da7d2b7697164f07a071f79d7e35c8f0&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M18469.2,-280.8C18469.2,-280.8 18435.6,-280.8 18435.6,-280.8 18429.6,-280.8 18423.6,-274.8 18423.6,-268.8 18423.6,-268.8 18423.6,-235.2 18423.6,-235.2 18423.6,-229.2 18429.6,-223.2 18435.6,-223.2 18435.6,-223.2 18469.2,-223.2 18469.2,-223.2 18475.2,-223.2 18481.2,-229.2 18481.2,-235.2 18481.2,-235.2 18481.2,-268.8 18481.2,-268.8 18481.2,-274.8 18475.2,-280.8 18469.2,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"18452.4\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- fbbcb8bc5e12414e9f80359c84cd76ba&amp;#45;&amp;#45;da7d2b7697164f07a071f79d7e35c8f0 --&gt;\n&lt;g id=\"edge1102\" class=\"edge\"&gt;\n&lt;title&gt;fbbcb8bc5e12414e9f80359c84cd76ba&amp;#45;&amp;#45;da7d2b7697164f07a071f79d7e35c8f0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18366.39,-252C18378.04,-252 18402.92,-252 18422.77,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- da7d2b7697164f07a071f79d7e35c8f0&amp;#45;&amp;#45;3609268691514b278e5a814abe0a1c41 --&gt;\n&lt;g id=\"edge1958\" class=\"edge\"&gt;\n&lt;title&gt;da7d2b7697164f07a071f79d7e35c8f0&amp;#45;&amp;#45;3609268691514b278e5a814abe0a1c41&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18452.4,-281.65C18452.4,-292.2 18452.4,-302.76 18452.4,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 88bdcbddfb0a43c5a3455e405a561215 --&gt;\n&lt;g id=\"node1108\" class=\"node\"&gt;\n&lt;title&gt;88bdcbddfb0a43c5a3455e405a561215&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18546.72,-252.72 18545.28,-252.72 18545.28,-251.28 18546.72,-251.28 18546.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da7d2b7697164f07a071f79d7e35c8f0&amp;#45;&amp;#45;88bdcbddfb0a43c5a3455e405a561215 --&gt;\n&lt;g id=\"edge1103\" class=\"edge\"&gt;\n&lt;title&gt;da7d2b7697164f07a071f79d7e35c8f0&amp;#45;&amp;#45;88bdcbddfb0a43c5a3455e405a561215&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18481.88,-252C18507.93,-252 18542.74,-252 18544.9,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 26814eff98f04c81b525f88b99130a8c --&gt;\n&lt;g id=\"node1109\" class=\"node\"&gt;\n&lt;title&gt;26814eff98f04c81b525f88b99130a8c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18640.32,-252.72 18638.88,-252.72 18638.88,-251.28 18640.32,-251.28 18640.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 88bdcbddfb0a43c5a3455e405a561215&amp;#45;&amp;#45;26814eff98f04c81b525f88b99130a8c --&gt;\n&lt;g id=\"edge1104\" class=\"edge\"&gt;\n&lt;title&gt;88bdcbddfb0a43c5a3455e405a561215&amp;#45;&amp;#45;26814eff98f04c81b525f88b99130a8c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18547.07,-252C18549.8,-252 18635.85,-252 18638.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 33bb594d739e4959b3d1989244ad95c9 --&gt;\n&lt;g id=\"node1110\" class=\"node\"&gt;\n&lt;title&gt;33bb594d739e4959b3d1989244ad95c9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18733.92,-252.72 18732.48,-252.72 18732.48,-251.28 18733.92,-251.28 18733.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 26814eff98f04c81b525f88b99130a8c&amp;#45;&amp;#45;33bb594d739e4959b3d1989244ad95c9 --&gt;\n&lt;g id=\"edge1105\" class=\"edge\"&gt;\n&lt;title&gt;26814eff98f04c81b525f88b99130a8c&amp;#45;&amp;#45;33bb594d739e4959b3d1989244ad95c9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18640.67,-252C18643.4,-252 18729.45,-252 18732.14,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- dde8afac4587402e97e401425df627ca --&gt;\n&lt;g id=\"node1111\" class=\"node\"&gt;\n&lt;title&gt;dde8afac4587402e97e401425df627ca&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18827.52,-252.72 18826.08,-252.72 18826.08,-251.28 18827.52,-251.28 18827.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 33bb594d739e4959b3d1989244ad95c9&amp;#45;&amp;#45;dde8afac4587402e97e401425df627ca --&gt;\n&lt;g id=\"edge1106\" class=\"edge\"&gt;\n&lt;title&gt;33bb594d739e4959b3d1989244ad95c9&amp;#45;&amp;#45;dde8afac4587402e97e401425df627ca&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18734.27,-252C18737,-252 18823.05,-252 18825.74,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- ebc675d113d94ae99a7e8b5b579f3f62 --&gt;\n&lt;g id=\"node1112\" class=\"node\"&gt;\n&lt;title&gt;ebc675d113d94ae99a7e8b5b579f3f62&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M18937.2,-280.8C18937.2,-280.8 18903.6,-280.8 18903.6,-280.8 18897.6,-280.8 18891.6,-274.8 18891.6,-268.8 18891.6,-268.8 18891.6,-235.2 18891.6,-235.2 18891.6,-229.2 18897.6,-223.2 18903.6,-223.2 18903.6,-223.2 18937.2,-223.2 18937.2,-223.2 18943.2,-223.2 18949.2,-229.2 18949.2,-235.2 18949.2,-235.2 18949.2,-268.8 18949.2,-268.8 18949.2,-274.8 18943.2,-280.8 18937.2,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"18920.4\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- dde8afac4587402e97e401425df627ca&amp;#45;&amp;#45;ebc675d113d94ae99a7e8b5b579f3f62 --&gt;\n&lt;g id=\"edge1107\" class=\"edge\"&gt;\n&lt;title&gt;dde8afac4587402e97e401425df627ca&amp;#45;&amp;#45;ebc675d113d94ae99a7e8b5b579f3f62&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18827.87,-252C18829.59,-252 18864.48,-252 18890.68,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- ebc675d113d94ae99a7e8b5b579f3f62&amp;#45;&amp;#45;848c6943b2784be38d8d5c890f7d0008 --&gt;\n&lt;g id=\"edge1959\" class=\"edge\"&gt;\n&lt;title&gt;ebc675d113d94ae99a7e8b5b579f3f62&amp;#45;&amp;#45;848c6943b2784be38d8d5c890f7d0008&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18920.4,-281.65C18920.4,-292.2 18920.4,-302.76 18920.4,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 61175703b6d54fedaedeba9028ca2ee1 --&gt;\n&lt;g id=\"node1113\" class=\"node\"&gt;\n&lt;title&gt;61175703b6d54fedaedeba9028ca2ee1&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"19014\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- ebc675d113d94ae99a7e8b5b579f3f62&amp;#45;&amp;#45;61175703b6d54fedaedeba9028ca2ee1 --&gt;\n&lt;g id=\"edge1108\" class=\"edge\"&gt;\n&lt;title&gt;ebc675d113d94ae99a7e8b5b579f3f62&amp;#45;&amp;#45;61175703b6d54fedaedeba9028ca2ee1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18949.88,-252C18969.84,-252 18994.94,-252 19006.56,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 839363b418fe41f28a49d87951d5438f --&gt;\n&lt;g id=\"node1114\" class=\"node\"&gt;\n&lt;title&gt;839363b418fe41f28a49d87951d5438f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19108.32,-252.72 19106.88,-252.72 19106.88,-251.28 19108.32,-251.28 19108.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 61175703b6d54fedaedeba9028ca2ee1&amp;#45;&amp;#45;839363b418fe41f28a49d87951d5438f --&gt;\n&lt;g id=\"edge1109\" class=\"edge\"&gt;\n&lt;title&gt;61175703b6d54fedaedeba9028ca2ee1&amp;#45;&amp;#45;839363b418fe41f28a49d87951d5438f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19021.59,-252C19041.93,-252 19102.64,-252 19106.42,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- cf29f23c619c4f5bb43db86acb4d5df9 --&gt;\n&lt;g id=\"node1115\" class=\"node\"&gt;\n&lt;title&gt;cf29f23c619c4f5bb43db86acb4d5df9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19201.92,-252.72 19200.48,-252.72 19200.48,-251.28 19201.92,-251.28 19201.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 839363b418fe41f28a49d87951d5438f&amp;#45;&amp;#45;cf29f23c619c4f5bb43db86acb4d5df9 --&gt;\n&lt;g id=\"edge1110\" class=\"edge\"&gt;\n&lt;title&gt;839363b418fe41f28a49d87951d5438f&amp;#45;&amp;#45;cf29f23c619c4f5bb43db86acb4d5df9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19108.67,-252C19111.4,-252 19197.45,-252 19200.14,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- ad9dd3651a354a8d967a704f03dd4a06 --&gt;\n&lt;g id=\"node1116\" class=\"node\"&gt;\n&lt;title&gt;ad9dd3651a354a8d967a704f03dd4a06&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19354.32,-252.72 19352.88,-252.72 19352.88,-251.28 19354.32,-251.28 19354.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cf29f23c619c4f5bb43db86acb4d5df9&amp;#45;&amp;#45;ad9dd3651a354a8d967a704f03dd4a06 --&gt;\n&lt;g id=\"edge1111\" class=\"edge\"&gt;\n&lt;title&gt;cf29f23c619c4f5bb43db86acb4d5df9&amp;#45;&amp;#45;ad9dd3651a354a8d967a704f03dd4a06&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19202.31,-252C19206.79,-252 19348.08,-252 19352.49,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- b2f4d22b258142d4b86020224da8233e --&gt;\n&lt;g id=\"node1117\" class=\"node\"&gt;\n&lt;title&gt;b2f4d22b258142d4b86020224da8233e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19506.72,-252.72 19505.28,-252.72 19505.28,-251.28 19506.72,-251.28 19506.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ad9dd3651a354a8d967a704f03dd4a06&amp;#45;&amp;#45;b2f4d22b258142d4b86020224da8233e --&gt;\n&lt;g id=\"edge1112\" class=\"edge\"&gt;\n&lt;title&gt;ad9dd3651a354a8d967a704f03dd4a06&amp;#45;&amp;#45;b2f4d22b258142d4b86020224da8233e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19354.71,-252C19359.19,-252 19500.48,-252 19504.89,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d412afe59ea4136885b9c9ad0f02fb9 --&gt;\n&lt;g id=\"node1118\" class=\"node\"&gt;\n&lt;title&gt;7d412afe59ea4136885b9c9ad0f02fb9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19600.32,-252.72 19598.88,-252.72 19598.88,-251.28 19600.32,-251.28 19600.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b2f4d22b258142d4b86020224da8233e&amp;#45;&amp;#45;7d412afe59ea4136885b9c9ad0f02fb9 --&gt;\n&lt;g id=\"edge1113\" class=\"edge\"&gt;\n&lt;title&gt;b2f4d22b258142d4b86020224da8233e&amp;#45;&amp;#45;7d412afe59ea4136885b9c9ad0f02fb9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19507.07,-252C19509.8,-252 19595.85,-252 19598.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5804c4bb4ade4d5ca463e160dc7d375c --&gt;\n&lt;g id=\"node1119\" class=\"node\"&gt;\n&lt;title&gt;5804c4bb4ade4d5ca463e160dc7d375c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"19693.2\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d412afe59ea4136885b9c9ad0f02fb9&amp;#45;&amp;#45;5804c4bb4ade4d5ca463e160dc7d375c --&gt;\n&lt;g id=\"edge1114\" class=\"edge\"&gt;\n&lt;title&gt;7d412afe59ea4136885b9c9ad0f02fb9&amp;#45;&amp;#45;5804c4bb4ade4d5ca463e160dc7d375c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19600.67,-252C19602.97,-252 19664.81,-252 19685.52,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5c2d34a8a628461b9feb1d58b0b14a4d --&gt;\n&lt;g id=\"node1120\" class=\"node\"&gt;\n&lt;title&gt;5c2d34a8a628461b9feb1d58b0b14a4d&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M19803.6,-280.8C19803.6,-280.8 19770,-280.8 19770,-280.8 19764,-280.8 19758,-274.8 19758,-268.8 19758,-268.8 19758,-235.2 19758,-235.2 19758,-229.2 19764,-223.2 19770,-223.2 19770,-223.2 19803.6,-223.2 19803.6,-223.2 19809.6,-223.2 19815.6,-229.2 19815.6,-235.2 19815.6,-235.2 19815.6,-268.8 19815.6,-268.8 19815.6,-274.8 19809.6,-280.8 19803.6,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"19786.8\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5804c4bb4ade4d5ca463e160dc7d375c&amp;#45;&amp;#45;5c2d34a8a628461b9feb1d58b0b14a4d --&gt;\n&lt;g id=\"edge1115\" class=\"edge\"&gt;\n&lt;title&gt;5804c4bb4ade4d5ca463e160dc7d375c&amp;#45;&amp;#45;5c2d34a8a628461b9feb1d58b0b14a4d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19700.79,-252C19712.44,-252 19737.32,-252 19757.17,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5c2d34a8a628461b9feb1d58b0b14a4d&amp;#45;&amp;#45;08e80e43a38349c490b3384ed67c3b70 --&gt;\n&lt;g id=\"edge1960\" class=\"edge\"&gt;\n&lt;title&gt;5c2d34a8a628461b9feb1d58b0b14a4d&amp;#45;&amp;#45;08e80e43a38349c490b3384ed67c3b70&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19786.8,-281.65C19786.8,-292.2 19786.8,-302.76 19786.8,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2363936eddb5491593f35b2fc43f58fe --&gt;\n&lt;g id=\"node1121\" class=\"node\"&gt;\n&lt;title&gt;2363936eddb5491593f35b2fc43f58fe&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19881.12,-252.72 19879.68,-252.72 19879.68,-251.28 19881.12,-251.28 19881.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5c2d34a8a628461b9feb1d58b0b14a4d&amp;#45;&amp;#45;2363936eddb5491593f35b2fc43f58fe --&gt;\n&lt;g id=\"edge1116\" class=\"edge\"&gt;\n&lt;title&gt;5c2d34a8a628461b9feb1d58b0b14a4d&amp;#45;&amp;#45;2363936eddb5491593f35b2fc43f58fe&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19816.28,-252C19842.33,-252 19877.14,-252 19879.3,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0843669be095452f83de0f8702f26da2 --&gt;\n&lt;g id=\"node1122\" class=\"node\"&gt;\n&lt;title&gt;0843669be095452f83de0f8702f26da2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19974.72,-252.72 19973.28,-252.72 19973.28,-251.28 19974.72,-251.28 19974.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2363936eddb5491593f35b2fc43f58fe&amp;#45;&amp;#45;0843669be095452f83de0f8702f26da2 --&gt;\n&lt;g id=\"edge1117\" class=\"edge\"&gt;\n&lt;title&gt;2363936eddb5491593f35b2fc43f58fe&amp;#45;&amp;#45;0843669be095452f83de0f8702f26da2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19881.47,-252C19884.2,-252 19970.25,-252 19972.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- ca92ede7f2a94867880bfd44be70d085 --&gt;\n&lt;g id=\"node1123\" class=\"node\"&gt;\n&lt;title&gt;ca92ede7f2a94867880bfd44be70d085&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20068.32,-252.72 20066.88,-252.72 20066.88,-251.28 20068.32,-251.28 20068.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0843669be095452f83de0f8702f26da2&amp;#45;&amp;#45;ca92ede7f2a94867880bfd44be70d085 --&gt;\n&lt;g id=\"edge1118\" class=\"edge\"&gt;\n&lt;title&gt;0843669be095452f83de0f8702f26da2&amp;#45;&amp;#45;ca92ede7f2a94867880bfd44be70d085&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19975.07,-252C19977.8,-252 20063.85,-252 20066.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 21cd49028c6e41658c1c1df461601e60 --&gt;\n&lt;g id=\"node1124\" class=\"node\"&gt;\n&lt;title&gt;21cd49028c6e41658c1c1df461601e60&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M20178,-280.8C20178,-280.8 20144.4,-280.8 20144.4,-280.8 20138.4,-280.8 20132.4,-274.8 20132.4,-268.8 20132.4,-268.8 20132.4,-235.2 20132.4,-235.2 20132.4,-229.2 20138.4,-223.2 20144.4,-223.2 20144.4,-223.2 20178,-223.2 20178,-223.2 20184,-223.2 20190,-229.2 20190,-235.2 20190,-235.2 20190,-268.8 20190,-268.8 20190,-274.8 20184,-280.8 20178,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"20161.2\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- ca92ede7f2a94867880bfd44be70d085&amp;#45;&amp;#45;21cd49028c6e41658c1c1df461601e60 --&gt;\n&lt;g id=\"edge1119\" class=\"edge\"&gt;\n&lt;title&gt;ca92ede7f2a94867880bfd44be70d085&amp;#45;&amp;#45;21cd49028c6e41658c1c1df461601e60&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20068.67,-252C20070.39,-252 20105.28,-252 20131.48,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 21cd49028c6e41658c1c1df461601e60&amp;#45;&amp;#45;0a7d75dc2d504fb2b986769930507e24 --&gt;\n&lt;g id=\"edge1961\" class=\"edge\"&gt;\n&lt;title&gt;21cd49028c6e41658c1c1df461601e60&amp;#45;&amp;#45;0a7d75dc2d504fb2b986769930507e24&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20161.2,-281.65C20161.2,-292.2 20161.2,-302.76 20161.2,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98c4cf8f6a93422ca174f9dce05f99c3 --&gt;\n&lt;g id=\"node1125\" class=\"node\"&gt;\n&lt;title&gt;98c4cf8f6a93422ca174f9dce05f99c3&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"20254.8\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 21cd49028c6e41658c1c1df461601e60&amp;#45;&amp;#45;98c4cf8f6a93422ca174f9dce05f99c3 --&gt;\n&lt;g id=\"edge1120\" class=\"edge\"&gt;\n&lt;title&gt;21cd49028c6e41658c1c1df461601e60&amp;#45;&amp;#45;98c4cf8f6a93422ca174f9dce05f99c3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20190.68,-252C20210.64,-252 20235.74,-252 20247.36,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44daae99ba3b4f67bb147ae3a88f4334 --&gt;\n&lt;g id=\"node1126\" class=\"node\"&gt;\n&lt;title&gt;44daae99ba3b4f67bb147ae3a88f4334&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20349.12,-252.72 20347.68,-252.72 20347.68,-251.28 20349.12,-251.28 20349.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98c4cf8f6a93422ca174f9dce05f99c3&amp;#45;&amp;#45;44daae99ba3b4f67bb147ae3a88f4334 --&gt;\n&lt;g id=\"edge1121\" class=\"edge\"&gt;\n&lt;title&gt;98c4cf8f6a93422ca174f9dce05f99c3&amp;#45;&amp;#45;44daae99ba3b4f67bb147ae3a88f4334&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20262.39,-252C20282.73,-252 20343.44,-252 20347.22,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d0417f46aab49899c33469e8cdfb2d1 --&gt;\n&lt;g id=\"node1127\" class=\"node\"&gt;\n&lt;title&gt;0d0417f46aab49899c33469e8cdfb2d1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20442.72,-252.72 20441.28,-252.72 20441.28,-251.28 20442.72,-251.28 20442.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44daae99ba3b4f67bb147ae3a88f4334&amp;#45;&amp;#45;0d0417f46aab49899c33469e8cdfb2d1 --&gt;\n&lt;g id=\"edge1122\" class=\"edge\"&gt;\n&lt;title&gt;44daae99ba3b4f67bb147ae3a88f4334&amp;#45;&amp;#45;0d0417f46aab49899c33469e8cdfb2d1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20349.47,-252C20352.2,-252 20438.25,-252 20440.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7e15226df20b48d58f532040c4d8cc14 --&gt;\n&lt;g id=\"node1128\" class=\"node\"&gt;\n&lt;title&gt;7e15226df20b48d58f532040c4d8cc14&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20595.12,-252.72 20593.68,-252.72 20593.68,-251.28 20595.12,-251.28 20595.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d0417f46aab49899c33469e8cdfb2d1&amp;#45;&amp;#45;7e15226df20b48d58f532040c4d8cc14 --&gt;\n&lt;g id=\"edge1123\" class=\"edge\"&gt;\n&lt;title&gt;0d0417f46aab49899c33469e8cdfb2d1&amp;#45;&amp;#45;7e15226df20b48d58f532040c4d8cc14&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20443.11,-252C20447.59,-252 20588.88,-252 20593.29,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 080855cd56654ae8b6d16711b5ec9d99 --&gt;\n&lt;g id=\"node1129\" class=\"node\"&gt;\n&lt;title&gt;080855cd56654ae8b6d16711b5ec9d99&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20747.52,-252.72 20746.08,-252.72 20746.08,-251.28 20747.52,-251.28 20747.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7e15226df20b48d58f532040c4d8cc14&amp;#45;&amp;#45;080855cd56654ae8b6d16711b5ec9d99 --&gt;\n&lt;g id=\"edge1124\" class=\"edge\"&gt;\n&lt;title&gt;7e15226df20b48d58f532040c4d8cc14&amp;#45;&amp;#45;080855cd56654ae8b6d16711b5ec9d99&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20595.51,-252C20599.99,-252 20741.28,-252 20745.69,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 686ae59fe1414e8883e79169fbefb831 --&gt;\n&lt;g id=\"node1130\" class=\"node\"&gt;\n&lt;title&gt;686ae59fe1414e8883e79169fbefb831&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20841.12,-252.72 20839.68,-252.72 20839.68,-251.28 20841.12,-251.28 20841.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 080855cd56654ae8b6d16711b5ec9d99&amp;#45;&amp;#45;686ae59fe1414e8883e79169fbefb831 --&gt;\n&lt;g id=\"edge1125\" class=\"edge\"&gt;\n&lt;title&gt;080855cd56654ae8b6d16711b5ec9d99&amp;#45;&amp;#45;686ae59fe1414e8883e79169fbefb831&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20747.87,-252C20750.6,-252 20836.65,-252 20839.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5151d9b1e5e0490089720c637b4de7fd --&gt;\n&lt;g id=\"node1131\" class=\"node\"&gt;\n&lt;title&gt;5151d9b1e5e0490089720c637b4de7fd&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"20934\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 686ae59fe1414e8883e79169fbefb831&amp;#45;&amp;#45;5151d9b1e5e0490089720c637b4de7fd --&gt;\n&lt;g id=\"edge1126\" class=\"edge\"&gt;\n&lt;title&gt;686ae59fe1414e8883e79169fbefb831&amp;#45;&amp;#45;5151d9b1e5e0490089720c637b4de7fd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20841.47,-252C20843.77,-252 20905.61,-252 20926.32,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2e29fcf661594be4a6c35e14aa0086ba --&gt;\n&lt;g id=\"node1132\" class=\"node\"&gt;\n&lt;title&gt;2e29fcf661594be4a6c35e14aa0086ba&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M21044.4,-280.8C21044.4,-280.8 21010.8,-280.8 21010.8,-280.8 21004.8,-280.8 20998.8,-274.8 20998.8,-268.8 20998.8,-268.8 20998.8,-235.2 20998.8,-235.2 20998.8,-229.2 21004.8,-223.2 21010.8,-223.2 21010.8,-223.2 21044.4,-223.2 21044.4,-223.2 21050.4,-223.2 21056.4,-229.2 21056.4,-235.2 21056.4,-235.2 21056.4,-268.8 21056.4,-268.8 21056.4,-274.8 21050.4,-280.8 21044.4,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"21027.6\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5151d9b1e5e0490089720c637b4de7fd&amp;#45;&amp;#45;2e29fcf661594be4a6c35e14aa0086ba --&gt;\n&lt;g id=\"edge1127\" class=\"edge\"&gt;\n&lt;title&gt;5151d9b1e5e0490089720c637b4de7fd&amp;#45;&amp;#45;2e29fcf661594be4a6c35e14aa0086ba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20941.59,-252C20953.24,-252 20978.12,-252 20997.97,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2e29fcf661594be4a6c35e14aa0086ba&amp;#45;&amp;#45;0273b101a81445ae9330bbdc4438d74f --&gt;\n&lt;g id=\"edge1962\" class=\"edge\"&gt;\n&lt;title&gt;2e29fcf661594be4a6c35e14aa0086ba&amp;#45;&amp;#45;0273b101a81445ae9330bbdc4438d74f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21027.6,-281.65C21027.6,-292.2 21027.6,-302.76 21027.6,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- b1b5ff7499f044a39eab8986c53456f6 --&gt;\n&lt;g id=\"node1133\" class=\"node\"&gt;\n&lt;title&gt;b1b5ff7499f044a39eab8986c53456f6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21121.92,-252.72 21120.48,-252.72 21120.48,-251.28 21121.92,-251.28 21121.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2e29fcf661594be4a6c35e14aa0086ba&amp;#45;&amp;#45;b1b5ff7499f044a39eab8986c53456f6 --&gt;\n&lt;g id=\"edge1128\" class=\"edge\"&gt;\n&lt;title&gt;2e29fcf661594be4a6c35e14aa0086ba&amp;#45;&amp;#45;b1b5ff7499f044a39eab8986c53456f6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21057.08,-252C21083.13,-252 21117.94,-252 21120.1,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1d64c432f9024bf79db4eb7074229034 --&gt;\n&lt;g id=\"node1134\" class=\"node\"&gt;\n&lt;title&gt;1d64c432f9024bf79db4eb7074229034&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M21231.6,-280.8C21231.6,-280.8 21198,-280.8 21198,-280.8 21192,-280.8 21186,-274.8 21186,-268.8 21186,-268.8 21186,-235.2 21186,-235.2 21186,-229.2 21192,-223.2 21198,-223.2 21198,-223.2 21231.6,-223.2 21231.6,-223.2 21237.6,-223.2 21243.6,-229.2 21243.6,-235.2 21243.6,-235.2 21243.6,-268.8 21243.6,-268.8 21243.6,-274.8 21237.6,-280.8 21231.6,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"21214.8\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- b1b5ff7499f044a39eab8986c53456f6&amp;#45;&amp;#45;1d64c432f9024bf79db4eb7074229034 --&gt;\n&lt;g id=\"edge1129\" class=\"edge\"&gt;\n&lt;title&gt;b1b5ff7499f044a39eab8986c53456f6&amp;#45;&amp;#45;1d64c432f9024bf79db4eb7074229034&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21122.27,-252C21123.99,-252 21158.88,-252 21185.08,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1d64c432f9024bf79db4eb7074229034&amp;#45;&amp;#45;07dc50a193a8464ea035d455ddd5066a --&gt;\n&lt;g id=\"edge1963\" class=\"edge\"&gt;\n&lt;title&gt;1d64c432f9024bf79db4eb7074229034&amp;#45;&amp;#45;07dc50a193a8464ea035d455ddd5066a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21214.8,-281.65C21214.8,-292.2 21214.8,-302.76 21214.8,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- c0338f370c7249c682558bfd41222484 --&gt;\n&lt;g id=\"node1135\" class=\"node\"&gt;\n&lt;title&gt;c0338f370c7249c682558bfd41222484&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"21308.4\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1d64c432f9024bf79db4eb7074229034&amp;#45;&amp;#45;c0338f370c7249c682558bfd41222484 --&gt;\n&lt;g id=\"edge1130\" class=\"edge\"&gt;\n&lt;title&gt;1d64c432f9024bf79db4eb7074229034&amp;#45;&amp;#45;c0338f370c7249c682558bfd41222484&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21244.28,-252C21264.24,-252 21289.34,-252 21300.96,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- a9382ee4786442d3a5312a726d06d132 --&gt;\n&lt;g id=\"node1136\" class=\"node\"&gt;\n&lt;title&gt;a9382ee4786442d3a5312a726d06d132&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21461.52,-252.72 21460.08,-252.72 21460.08,-251.28 21461.52,-251.28 21461.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c0338f370c7249c682558bfd41222484&amp;#45;&amp;#45;a9382ee4786442d3a5312a726d06d132 --&gt;\n&lt;g id=\"edge1131\" class=\"edge\"&gt;\n&lt;title&gt;c0338f370c7249c682558bfd41222484&amp;#45;&amp;#45;a9382ee4786442d3a5312a726d06d132&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21315.86,-252C21344.2,-252 21456.22,-252 21459.72,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- dcbd4b3db7a94d22ac0fbbfeea92c615 --&gt;\n&lt;g id=\"node1137\" class=\"node\"&gt;\n&lt;title&gt;dcbd4b3db7a94d22ac0fbbfeea92c615&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"21613.2\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- a9382ee4786442d3a5312a726d06d132&amp;#45;&amp;#45;dcbd4b3db7a94d22ac0fbbfeea92c615 --&gt;\n&lt;g id=\"edge1132\" class=\"edge\"&gt;\n&lt;title&gt;a9382ee4786442d3a5312a726d06d132&amp;#45;&amp;#45;dcbd4b3db7a94d22ac0fbbfeea92c615&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21461.91,-252C21465.88,-252 21576.97,-252 21605.55,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 35957f0eed984264b821771424292de0 --&gt;\n&lt;g id=\"node1138\" class=\"node\"&gt;\n&lt;title&gt;35957f0eed984264b821771424292de0&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M21723.6,-280.8C21723.6,-280.8 21690,-280.8 21690,-280.8 21684,-280.8 21678,-274.8 21678,-268.8 21678,-268.8 21678,-235.2 21678,-235.2 21678,-229.2 21684,-223.2 21690,-223.2 21690,-223.2 21723.6,-223.2 21723.6,-223.2 21729.6,-223.2 21735.6,-229.2 21735.6,-235.2 21735.6,-235.2 21735.6,-268.8 21735.6,-268.8 21735.6,-274.8 21729.6,-280.8 21723.6,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"21706.8\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- dcbd4b3db7a94d22ac0fbbfeea92c615&amp;#45;&amp;#45;35957f0eed984264b821771424292de0 --&gt;\n&lt;g id=\"edge1133\" class=\"edge\"&gt;\n&lt;title&gt;dcbd4b3db7a94d22ac0fbbfeea92c615&amp;#45;&amp;#45;35957f0eed984264b821771424292de0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21620.79,-252C21632.44,-252 21657.32,-252 21677.17,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 35957f0eed984264b821771424292de0&amp;#45;&amp;#45;efb167d005a441f2a437a055c6ca364e --&gt;\n&lt;g id=\"edge1964\" class=\"edge\"&gt;\n&lt;title&gt;35957f0eed984264b821771424292de0&amp;#45;&amp;#45;efb167d005a441f2a437a055c6ca364e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21706.8,-281.65C21706.8,-292.2 21706.8,-302.76 21706.8,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 820b24235a204579a76dd83f42c7aac8 --&gt;\n&lt;g id=\"node1139\" class=\"node\"&gt;\n&lt;title&gt;820b24235a204579a76dd83f42c7aac8&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M21817.2,-280.8C21817.2,-280.8 21783.6,-280.8 21783.6,-280.8 21777.6,-280.8 21771.6,-274.8 21771.6,-268.8 21771.6,-268.8 21771.6,-235.2 21771.6,-235.2 21771.6,-229.2 21777.6,-223.2 21783.6,-223.2 21783.6,-223.2 21817.2,-223.2 21817.2,-223.2 21823.2,-223.2 21829.2,-229.2 21829.2,-235.2 21829.2,-235.2 21829.2,-268.8 21829.2,-268.8 21829.2,-274.8 21823.2,-280.8 21817.2,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"21800.4\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 35957f0eed984264b821771424292de0&amp;#45;&amp;#45;820b24235a204579a76dd83f42c7aac8 --&gt;\n&lt;g id=\"edge1134\" class=\"edge\"&gt;\n&lt;title&gt;35957f0eed984264b821771424292de0&amp;#45;&amp;#45;820b24235a204579a76dd83f42c7aac8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21736.28,-252C21747.2,-252 21759.67,-252 21770.62,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 820b24235a204579a76dd83f42c7aac8&amp;#45;&amp;#45;6b53105ee8ee494e8bbb289f683f04f1 --&gt;\n&lt;g id=\"edge1965\" class=\"edge\"&gt;\n&lt;title&gt;820b24235a204579a76dd83f42c7aac8&amp;#45;&amp;#45;6b53105ee8ee494e8bbb289f683f04f1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21800.4,-281.65C21800.4,-292.2 21800.4,-302.76 21800.4,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 110fce9c839a44609700dc0571eb8ea7 --&gt;\n&lt;g id=\"node1140\" class=\"node\"&gt;\n&lt;title&gt;110fce9c839a44609700dc0571eb8ea7&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"21894\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 820b24235a204579a76dd83f42c7aac8&amp;#45;&amp;#45;110fce9c839a44609700dc0571eb8ea7 --&gt;\n&lt;g id=\"edge1135\" class=\"edge\"&gt;\n&lt;title&gt;820b24235a204579a76dd83f42c7aac8&amp;#45;&amp;#45;110fce9c839a44609700dc0571eb8ea7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21829.88,-252C21849.84,-252 21874.94,-252 21886.56,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1a183a4a25ce452bb9429293acb16d5f --&gt;\n&lt;g id=\"node1141\" class=\"node\"&gt;\n&lt;title&gt;1a183a4a25ce452bb9429293acb16d5f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21988.32,-252.72 21986.88,-252.72 21986.88,-251.28 21988.32,-251.28 21988.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 110fce9c839a44609700dc0571eb8ea7&amp;#45;&amp;#45;1a183a4a25ce452bb9429293acb16d5f --&gt;\n&lt;g id=\"edge1136\" class=\"edge\"&gt;\n&lt;title&gt;110fce9c839a44609700dc0571eb8ea7&amp;#45;&amp;#45;1a183a4a25ce452bb9429293acb16d5f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21901.59,-252C21921.93,-252 21982.64,-252 21986.42,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8be825e58504b2eac731ea57450c982 --&gt;\n&lt;g id=\"node1142\" class=\"node\"&gt;\n&lt;title&gt;f8be825e58504b2eac731ea57450c982&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22140.72,-252.72 22139.28,-252.72 22139.28,-251.28 22140.72,-251.28 22140.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1a183a4a25ce452bb9429293acb16d5f&amp;#45;&amp;#45;f8be825e58504b2eac731ea57450c982 --&gt;\n&lt;g id=\"edge1137\" class=\"edge\"&gt;\n&lt;title&gt;1a183a4a25ce452bb9429293acb16d5f&amp;#45;&amp;#45;f8be825e58504b2eac731ea57450c982&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21988.71,-252C21993.19,-252 22134.48,-252 22138.89,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 75b99b713df243a9b753a50038ff1945 --&gt;\n&lt;g id=\"node1143\" class=\"node\"&gt;\n&lt;title&gt;75b99b713df243a9b753a50038ff1945&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22293.12,-252.72 22291.68,-252.72 22291.68,-251.28 22293.12,-251.28 22293.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8be825e58504b2eac731ea57450c982&amp;#45;&amp;#45;75b99b713df243a9b753a50038ff1945 --&gt;\n&lt;g id=\"edge1138\" class=\"edge\"&gt;\n&lt;title&gt;f8be825e58504b2eac731ea57450c982&amp;#45;&amp;#45;75b99b713df243a9b753a50038ff1945&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22141.11,-252C22145.59,-252 22286.88,-252 22291.29,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 896c844f6f4a496c85ec7e5e05697fe5 --&gt;\n&lt;g id=\"node1144\" class=\"node\"&gt;\n&lt;title&gt;896c844f6f4a496c85ec7e5e05697fe5&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"22386\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 75b99b713df243a9b753a50038ff1945&amp;#45;&amp;#45;896c844f6f4a496c85ec7e5e05697fe5 --&gt;\n&lt;g id=\"edge1139\" class=\"edge\"&gt;\n&lt;title&gt;75b99b713df243a9b753a50038ff1945&amp;#45;&amp;#45;896c844f6f4a496c85ec7e5e05697fe5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22293.47,-252C22295.77,-252 22357.61,-252 22378.32,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 247e7726547a4f899f44a33adbcc88be --&gt;\n&lt;g id=\"node1145\" class=\"node\"&gt;\n&lt;title&gt;247e7726547a4f899f44a33adbcc88be&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M22496.4,-280.8C22496.4,-280.8 22462.8,-280.8 22462.8,-280.8 22456.8,-280.8 22450.8,-274.8 22450.8,-268.8 22450.8,-268.8 22450.8,-235.2 22450.8,-235.2 22450.8,-229.2 22456.8,-223.2 22462.8,-223.2 22462.8,-223.2 22496.4,-223.2 22496.4,-223.2 22502.4,-223.2 22508.4,-229.2 22508.4,-235.2 22508.4,-235.2 22508.4,-268.8 22508.4,-268.8 22508.4,-274.8 22502.4,-280.8 22496.4,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"22479.6\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 896c844f6f4a496c85ec7e5e05697fe5&amp;#45;&amp;#45;247e7726547a4f899f44a33adbcc88be --&gt;\n&lt;g id=\"edge1140\" class=\"edge\"&gt;\n&lt;title&gt;896c844f6f4a496c85ec7e5e05697fe5&amp;#45;&amp;#45;247e7726547a4f899f44a33adbcc88be&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22393.59,-252C22405.24,-252 22430.12,-252 22449.97,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 247e7726547a4f899f44a33adbcc88be&amp;#45;&amp;#45;c1b8dbe0ff9b4fe79f802b13cba58221 --&gt;\n&lt;g id=\"edge1966\" class=\"edge\"&gt;\n&lt;title&gt;247e7726547a4f899f44a33adbcc88be&amp;#45;&amp;#45;c1b8dbe0ff9b4fe79f802b13cba58221&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22479.6,-281.65C22479.6,-292.2 22479.6,-302.76 22479.6,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- e8b22111a0e1479a960d494796e53459 --&gt;\n&lt;g id=\"node1146\" class=\"node\"&gt;\n&lt;title&gt;e8b22111a0e1479a960d494796e53459&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M22590,-280.8C22590,-280.8 22556.4,-280.8 22556.4,-280.8 22550.4,-280.8 22544.4,-274.8 22544.4,-268.8 22544.4,-268.8 22544.4,-235.2 22544.4,-235.2 22544.4,-229.2 22550.4,-223.2 22556.4,-223.2 22556.4,-223.2 22590,-223.2 22590,-223.2 22596,-223.2 22602,-229.2 22602,-235.2 22602,-235.2 22602,-268.8 22602,-268.8 22602,-274.8 22596,-280.8 22590,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"22573.2\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 247e7726547a4f899f44a33adbcc88be&amp;#45;&amp;#45;e8b22111a0e1479a960d494796e53459 --&gt;\n&lt;g id=\"edge1141\" class=\"edge\"&gt;\n&lt;title&gt;247e7726547a4f899f44a33adbcc88be&amp;#45;&amp;#45;e8b22111a0e1479a960d494796e53459&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22509.08,-252C22520,-252 22532.47,-252 22543.42,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- e8b22111a0e1479a960d494796e53459&amp;#45;&amp;#45;a41e4d05866140f19c543b9131e17040 --&gt;\n&lt;g id=\"edge1967\" class=\"edge\"&gt;\n&lt;title&gt;e8b22111a0e1479a960d494796e53459&amp;#45;&amp;#45;a41e4d05866140f19c543b9131e17040&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22573.2,-281.65C22573.2,-292.2 22573.2,-302.76 22573.2,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e428438cb4341bca48d9e47b8026e8b --&gt;\n&lt;g id=\"node1147\" class=\"node\"&gt;\n&lt;title&gt;9e428438cb4341bca48d9e47b8026e8b&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"22666.8\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- e8b22111a0e1479a960d494796e53459&amp;#45;&amp;#45;9e428438cb4341bca48d9e47b8026e8b --&gt;\n&lt;g id=\"edge1142\" class=\"edge\"&gt;\n&lt;title&gt;e8b22111a0e1479a960d494796e53459&amp;#45;&amp;#45;9e428438cb4341bca48d9e47b8026e8b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22602.68,-252C22622.64,-252 22647.74,-252 22659.36,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6fbe4b5c32e0441c842f481a400ededd --&gt;\n&lt;g id=\"node1148\" class=\"node\"&gt;\n&lt;title&gt;6fbe4b5c32e0441c842f481a400ededd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22761.12,-252.72 22759.68,-252.72 22759.68,-251.28 22761.12,-251.28 22761.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e428438cb4341bca48d9e47b8026e8b&amp;#45;&amp;#45;6fbe4b5c32e0441c842f481a400ededd --&gt;\n&lt;g id=\"edge1143\" class=\"edge\"&gt;\n&lt;title&gt;9e428438cb4341bca48d9e47b8026e8b&amp;#45;&amp;#45;6fbe4b5c32e0441c842f481a400ededd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22674.39,-252C22694.73,-252 22755.44,-252 22759.22,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44f7b017cf2b4607b7c7f1c2adf30d52 --&gt;\n&lt;g id=\"node1149\" class=\"node\"&gt;\n&lt;title&gt;44f7b017cf2b4607b7c7f1c2adf30d52&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22854.72,-252.72 22853.28,-252.72 22853.28,-251.28 22854.72,-251.28 22854.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6fbe4b5c32e0441c842f481a400ededd&amp;#45;&amp;#45;44f7b017cf2b4607b7c7f1c2adf30d52 --&gt;\n&lt;g id=\"edge1144\" class=\"edge\"&gt;\n&lt;title&gt;6fbe4b5c32e0441c842f481a400ededd&amp;#45;&amp;#45;44f7b017cf2b4607b7c7f1c2adf30d52&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22761.47,-252C22764.2,-252 22850.25,-252 22852.94,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 368c2f1dd18c46e791776dac17a471e7 --&gt;\n&lt;g id=\"node1150\" class=\"node\"&gt;\n&lt;title&gt;368c2f1dd18c46e791776dac17a471e7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23007.12,-252.72 23005.68,-252.72 23005.68,-251.28 23007.12,-251.28 23007.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44f7b017cf2b4607b7c7f1c2adf30d52&amp;#45;&amp;#45;368c2f1dd18c46e791776dac17a471e7 --&gt;\n&lt;g id=\"edge1145\" class=\"edge\"&gt;\n&lt;title&gt;44f7b017cf2b4607b7c7f1c2adf30d52&amp;#45;&amp;#45;368c2f1dd18c46e791776dac17a471e7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22855.11,-252C22859.59,-252 23000.88,-252 23005.29,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6694972750d14ad8907ccef56c641512 --&gt;\n&lt;g id=\"node1151\" class=\"node\"&gt;\n&lt;title&gt;6694972750d14ad8907ccef56c641512&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23159.52,-252.72 23158.08,-252.72 23158.08,-251.28 23159.52,-251.28 23159.52,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 368c2f1dd18c46e791776dac17a471e7&amp;#45;&amp;#45;6694972750d14ad8907ccef56c641512 --&gt;\n&lt;g id=\"edge1146\" class=\"edge\"&gt;\n&lt;title&gt;368c2f1dd18c46e791776dac17a471e7&amp;#45;&amp;#45;6694972750d14ad8907ccef56c641512&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23007.51,-252C23011.99,-252 23153.28,-252 23157.69,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 612b9e173af3406e9b0ff866ba6c5cdd --&gt;\n&lt;g id=\"node1152\" class=\"node\"&gt;\n&lt;title&gt;612b9e173af3406e9b0ff866ba6c5cdd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23253.12,-252.72 23251.68,-252.72 23251.68,-251.28 23253.12,-251.28 23253.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6694972750d14ad8907ccef56c641512&amp;#45;&amp;#45;612b9e173af3406e9b0ff866ba6c5cdd --&gt;\n&lt;g id=\"edge1147\" class=\"edge\"&gt;\n&lt;title&gt;6694972750d14ad8907ccef56c641512&amp;#45;&amp;#45;612b9e173af3406e9b0ff866ba6c5cdd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23159.87,-252C23162.6,-252 23248.65,-252 23251.34,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 50987187e0a74cefa10d98cad87cf7ff --&gt;\n&lt;g id=\"node1153\" class=\"node\"&gt;\n&lt;title&gt;50987187e0a74cefa10d98cad87cf7ff&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"23346\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 612b9e173af3406e9b0ff866ba6c5cdd&amp;#45;&amp;#45;50987187e0a74cefa10d98cad87cf7ff --&gt;\n&lt;g id=\"edge1148\" class=\"edge\"&gt;\n&lt;title&gt;612b9e173af3406e9b0ff866ba6c5cdd&amp;#45;&amp;#45;50987187e0a74cefa10d98cad87cf7ff&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23253.47,-252C23255.77,-252 23317.61,-252 23338.32,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- c53cc2f1b4324b0fb84d14c0969ca682 --&gt;\n&lt;g id=\"node1154\" class=\"node\"&gt;\n&lt;title&gt;c53cc2f1b4324b0fb84d14c0969ca682&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M23456.4,-280.8C23456.4,-280.8 23422.8,-280.8 23422.8,-280.8 23416.8,-280.8 23410.8,-274.8 23410.8,-268.8 23410.8,-268.8 23410.8,-235.2 23410.8,-235.2 23410.8,-229.2 23416.8,-223.2 23422.8,-223.2 23422.8,-223.2 23456.4,-223.2 23456.4,-223.2 23462.4,-223.2 23468.4,-229.2 23468.4,-235.2 23468.4,-235.2 23468.4,-268.8 23468.4,-268.8 23468.4,-274.8 23462.4,-280.8 23456.4,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"23439.6\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 50987187e0a74cefa10d98cad87cf7ff&amp;#45;&amp;#45;c53cc2f1b4324b0fb84d14c0969ca682 --&gt;\n&lt;g id=\"edge1149\" class=\"edge\"&gt;\n&lt;title&gt;50987187e0a74cefa10d98cad87cf7ff&amp;#45;&amp;#45;c53cc2f1b4324b0fb84d14c0969ca682&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23353.59,-252C23365.24,-252 23390.12,-252 23409.97,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- c53cc2f1b4324b0fb84d14c0969ca682&amp;#45;&amp;#45;4b2bbfc9c37e4fd1b0fa0d69e98c6f1f --&gt;\n&lt;g id=\"edge1968\" class=\"edge\"&gt;\n&lt;title&gt;c53cc2f1b4324b0fb84d14c0969ca682&amp;#45;&amp;#45;4b2bbfc9c37e4fd1b0fa0d69e98c6f1f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23439.6,-281.65C23439.6,-292.2 23439.6,-302.76 23439.6,-313.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 78378fee6b5c485a99fc98f6802b3a9a --&gt;\n&lt;g id=\"node1155\" class=\"node\"&gt;\n&lt;title&gt;78378fee6b5c485a99fc98f6802b3a9a&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"23533.2\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- c53cc2f1b4324b0fb84d14c0969ca682&amp;#45;&amp;#45;78378fee6b5c485a99fc98f6802b3a9a --&gt;\n&lt;g id=\"edge1150\" class=\"edge\"&gt;\n&lt;title&gt;c53cc2f1b4324b0fb84d14c0969ca682&amp;#45;&amp;#45;78378fee6b5c485a99fc98f6802b3a9a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23469.08,-252C23489.04,-252 23514.14,-252 23525.76,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 87f2b17e729f4152aeb9b734ec3054aa --&gt;\n&lt;g id=\"node1156\" class=\"node\"&gt;\n&lt;title&gt;87f2b17e729f4152aeb9b734ec3054aa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23686.32,-252.72 23684.88,-252.72 23684.88,-251.28 23686.32,-251.28 23686.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 78378fee6b5c485a99fc98f6802b3a9a&amp;#45;&amp;#45;87f2b17e729f4152aeb9b734ec3054aa --&gt;\n&lt;g id=\"edge1151\" class=\"edge\"&gt;\n&lt;title&gt;78378fee6b5c485a99fc98f6802b3a9a&amp;#45;&amp;#45;87f2b17e729f4152aeb9b734ec3054aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23540.66,-252C23569,-252 23681.02,-252 23684.52,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- aa82ecd590fe4817931c7ebeb548a453 --&gt;\n&lt;g id=\"node1157\" class=\"node\"&gt;\n&lt;title&gt;aa82ecd590fe4817931c7ebeb548a453&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"23838\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 87f2b17e729f4152aeb9b734ec3054aa&amp;#45;&amp;#45;aa82ecd590fe4817931c7ebeb548a453 --&gt;\n&lt;g id=\"edge1152\" class=\"edge\"&gt;\n&lt;title&gt;87f2b17e729f4152aeb9b734ec3054aa&amp;#45;&amp;#45;aa82ecd590fe4817931c7ebeb548a453&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23686.71,-252C23690.68,-252 23801.77,-252 23830.35,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- d508789fd2024ef8be4fdafc1fc4f3a2 --&gt;\n&lt;g id=\"node1158\" class=\"node\"&gt;\n&lt;title&gt;d508789fd2024ef8be4fdafc1fc4f3a2&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"23931.6\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- aa82ecd590fe4817931c7ebeb548a453&amp;#45;&amp;#45;d508789fd2024ef8be4fdafc1fc4f3a2 --&gt;\n&lt;g id=\"edge1153\" class=\"edge\"&gt;\n&lt;title&gt;aa82ecd590fe4817931c7ebeb548a453&amp;#45;&amp;#45;d508789fd2024ef8be4fdafc1fc4f3a2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23845.59,-252C23862.49,-252 23907.24,-252 23924.07,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 887e4ed1bc0c451382a7d7456e51da9c --&gt;\n&lt;g id=\"node1159\" class=\"node\"&gt;\n&lt;title&gt;887e4ed1bc0c451382a7d7456e51da9c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24025.92,-252.72 24024.48,-252.72 24024.48,-251.28 24025.92,-251.28 24025.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d508789fd2024ef8be4fdafc1fc4f3a2&amp;#45;&amp;#45;887e4ed1bc0c451382a7d7456e51da9c --&gt;\n&lt;g id=\"edge1154\" class=\"edge\"&gt;\n&lt;title&gt;d508789fd2024ef8be4fdafc1fc4f3a2&amp;#45;&amp;#45;887e4ed1bc0c451382a7d7456e51da9c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23939.19,-252C23959.53,-252 24020.24,-252 24024.02,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9462003fef874405b48138a0af4a44e9 --&gt;\n&lt;g id=\"node1160\" class=\"node\"&gt;\n&lt;title&gt;9462003fef874405b48138a0af4a44e9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24178.32,-252.72 24176.88,-252.72 24176.88,-251.28 24178.32,-251.28 24178.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 887e4ed1bc0c451382a7d7456e51da9c&amp;#45;&amp;#45;9462003fef874405b48138a0af4a44e9 --&gt;\n&lt;g id=\"edge1155\" class=\"edge\"&gt;\n&lt;title&gt;887e4ed1bc0c451382a7d7456e51da9c&amp;#45;&amp;#45;9462003fef874405b48138a0af4a44e9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24026.31,-252C24030.79,-252 24172.08,-252 24176.49,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 58aaa219c68b498195719f7ae0c8105a --&gt;\n&lt;g id=\"node1161\" class=\"node\"&gt;\n&lt;title&gt;58aaa219c68b498195719f7ae0c8105a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24330.72,-252.72 24329.28,-252.72 24329.28,-251.28 24330.72,-251.28 24330.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9462003fef874405b48138a0af4a44e9&amp;#45;&amp;#45;58aaa219c68b498195719f7ae0c8105a --&gt;\n&lt;g id=\"edge1156\" class=\"edge\"&gt;\n&lt;title&gt;9462003fef874405b48138a0af4a44e9&amp;#45;&amp;#45;58aaa219c68b498195719f7ae0c8105a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24178.71,-252C24183.19,-252 24324.48,-252 24328.89,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d188fa8462b497dac5ef0125bed14b1 --&gt;\n&lt;g id=\"node1162\" class=\"node\"&gt;\n&lt;title&gt;4d188fa8462b497dac5ef0125bed14b1&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"24423.6\" cy=\"-252\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 58aaa219c68b498195719f7ae0c8105a&amp;#45;&amp;#45;4d188fa8462b497dac5ef0125bed14b1 --&gt;\n&lt;g id=\"edge1157\" class=\"edge\"&gt;\n&lt;title&gt;58aaa219c68b498195719f7ae0c8105a&amp;#45;&amp;#45;4d188fa8462b497dac5ef0125bed14b1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24331.07,-252C24333.37,-252 24395.21,-252 24415.92,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- eb1dd6d62ab24d26852a8097ca2228c2 --&gt;\n&lt;g id=\"node1163\" class=\"node\"&gt;\n&lt;title&gt;eb1dd6d62ab24d26852a8097ca2228c2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24517.92,-252.72 24516.48,-252.72 24516.48,-251.28 24517.92,-251.28 24517.92,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d188fa8462b497dac5ef0125bed14b1&amp;#45;&amp;#45;eb1dd6d62ab24d26852a8097ca2228c2 --&gt;\n&lt;g id=\"edge1158\" class=\"edge\"&gt;\n&lt;title&gt;4d188fa8462b497dac5ef0125bed14b1&amp;#45;&amp;#45;eb1dd6d62ab24d26852a8097ca2228c2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24431.19,-252C24451.53,-252 24512.24,-252 24516.02,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3d90e4fdcbe54cc09c7b07c9dc4dd08f --&gt;\n&lt;g id=\"node1164\" class=\"node\"&gt;\n&lt;title&gt;3d90e4fdcbe54cc09c7b07c9dc4dd08f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24670.32,-252.72 24668.88,-252.72 24668.88,-251.28 24670.32,-251.28 24670.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- eb1dd6d62ab24d26852a8097ca2228c2&amp;#45;&amp;#45;3d90e4fdcbe54cc09c7b07c9dc4dd08f --&gt;\n&lt;g id=\"edge1159\" class=\"edge\"&gt;\n&lt;title&gt;eb1dd6d62ab24d26852a8097ca2228c2&amp;#45;&amp;#45;3d90e4fdcbe54cc09c7b07c9dc4dd08f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24518.31,-252C24522.79,-252 24664.08,-252 24668.49,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- d245ea58e7454f7f8c4827db20bd34a1 --&gt;\n&lt;g id=\"node1165\" class=\"node\"&gt;\n&lt;title&gt;d245ea58e7454f7f8c4827db20bd34a1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24822.72,-252.72 24821.28,-252.72 24821.28,-251.28 24822.72,-251.28 24822.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3d90e4fdcbe54cc09c7b07c9dc4dd08f&amp;#45;&amp;#45;d245ea58e7454f7f8c4827db20bd34a1 --&gt;\n&lt;g id=\"edge1160\" class=\"edge\"&gt;\n&lt;title&gt;3d90e4fdcbe54cc09c7b07c9dc4dd08f&amp;#45;&amp;#45;d245ea58e7454f7f8c4827db20bd34a1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24670.71,-252C24675.19,-252 24816.48,-252 24820.89,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- ca64c04dbc90448e866c9766a181ea21 --&gt;\n&lt;g id=\"node1166\" class=\"node\"&gt;\n&lt;title&gt;ca64c04dbc90448e866c9766a181ea21&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24916.32,-252.72 24914.88,-252.72 24914.88,-251.28 24916.32,-251.28 24916.32,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d245ea58e7454f7f8c4827db20bd34a1&amp;#45;&amp;#45;ca64c04dbc90448e866c9766a181ea21 --&gt;\n&lt;g id=\"edge1161\" class=\"edge\"&gt;\n&lt;title&gt;d245ea58e7454f7f8c4827db20bd34a1&amp;#45;&amp;#45;ca64c04dbc90448e866c9766a181ea21&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24823.07,-252C24825.8,-252 24911.85,-252 24914.54,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- d7608b54124b434da7c38c677460d668 --&gt;\n&lt;g id=\"node1167\" class=\"node\"&gt;\n&lt;title&gt;d7608b54124b434da7c38c677460d668&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25068.72,-252.72 25067.28,-252.72 25067.28,-251.28 25068.72,-251.28 25068.72,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ca64c04dbc90448e866c9766a181ea21&amp;#45;&amp;#45;d7608b54124b434da7c38c677460d668 --&gt;\n&lt;g id=\"edge1162\" class=\"edge\"&gt;\n&lt;title&gt;ca64c04dbc90448e866c9766a181ea21&amp;#45;&amp;#45;d7608b54124b434da7c38c677460d668&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24916.71,-252C24921.19,-252 25062.48,-252 25066.89,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- b8fd2094f43c46f983c3703da86248ed --&gt;\n&lt;g id=\"node1168\" class=\"node\"&gt;\n&lt;title&gt;b8fd2094f43c46f983c3703da86248ed&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25221.12,-252.72 25219.68,-252.72 25219.68,-251.28 25221.12,-251.28 25221.12,-252.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d7608b54124b434da7c38c677460d668&amp;#45;&amp;#45;b8fd2094f43c46f983c3703da86248ed --&gt;\n&lt;g id=\"edge1163\" class=\"edge\"&gt;\n&lt;title&gt;d7608b54124b434da7c38c677460d668&amp;#45;&amp;#45;b8fd2094f43c46f983c3703da86248ed&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25069.11,-252C25073.59,-252 25214.88,-252 25219.29,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 08ce9725ac6b4e3199bc6da8bc8ad149 --&gt;\n&lt;g id=\"node1169\" class=\"node\"&gt;\n&lt;title&gt;08ce9725ac6b4e3199bc6da8bc8ad149&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M25400.4,-280.8C25400.4,-280.8 25297.2,-280.8 25297.2,-280.8 25291.2,-280.8 25285.2,-274.8 25285.2,-268.8 25285.2,-268.8 25285.2,-235.2 25285.2,-235.2 25285.2,-229.2 25291.2,-223.2 25297.2,-223.2 25297.2,-223.2 25400.4,-223.2 25400.4,-223.2 25406.4,-223.2 25412.4,-229.2 25412.4,-235.2 25412.4,-235.2 25412.4,-268.8 25412.4,-268.8 25412.4,-274.8 25406.4,-280.8 25400.4,-280.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"25348.8\" y=\"-246.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b14)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- b8fd2094f43c46f983c3703da86248ed&amp;#45;&amp;#45;08ce9725ac6b4e3199bc6da8bc8ad149 --&gt;\n&lt;g id=\"edge1164\" class=\"edge\"&gt;\n&lt;title&gt;b8fd2094f43c46f983c3703da86248ed&amp;#45;&amp;#45;08ce9725ac6b4e3199bc6da8bc8ad149&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25221.49,-252C25223.37,-252 25253.76,-252 25284.26,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 08ce9725ac6b4e3199bc6da8bc8ad149&amp;#45;&amp;#45;0a7d5871ce1f4aaeb094ebfe45a11adb --&gt;\n&lt;g id=\"edge1165\" class=\"edge\"&gt;\n&lt;title&gt;08ce9725ac6b4e3199bc6da8bc8ad149&amp;#45;&amp;#45;0a7d5871ce1f4aaeb094ebfe45a11adb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25413.2,-252C25425.7,-252 25438.15,-252 25448.52,-252\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3de6c296398442a2b9bbcf08fbdb5d80 --&gt;\n&lt;g id=\"node1404\" class=\"node\"&gt;\n&lt;title&gt;3de6c296398442a2b9bbcf08fbdb5d80&lt;/title&gt;\n&lt;/g&gt;\n&lt;!-- 0a7d5871ce1f4aaeb094ebfe45a11adb&amp;#45;&amp;#45;3de6c296398442a2b9bbcf08fbdb5d80 --&gt;\n&lt;!-- 2787e6b74fb640edaa4e3f172098a976 --&gt;\n&lt;g id=\"node1172\" class=\"node\"&gt;\n&lt;title&gt;2787e6b74fb640edaa4e3f172098a976&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"119.52,-183.72 118.08,-183.72 118.08,-182.28 119.52,-182.28 119.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 464473a5506f4e14862658047e6e600a&amp;#45;&amp;#45;2787e6b74fb640edaa4e3f172098a976 --&gt;\n&lt;g id=\"edge1166\" class=\"edge\"&gt;\n&lt;title&gt;464473a5506f4e14862658047e6e600a&amp;#45;&amp;#45;2787e6b74fb640edaa4e3f172098a976&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M53.97,-183C79.67,-183 115.48,-183 117.69,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- d1a5c722dd36408aab3e1bb7f9a34d16 --&gt;\n&lt;g id=\"node1405\" class=\"node\"&gt;\n&lt;title&gt;d1a5c722dd36408aab3e1bb7f9a34d16&lt;/title&gt;\n&lt;text text-anchor=\"middle\" x=\"27\" y=\"-109.88\" font-family=\"JetBrains Mono\" font-size=\"15.00\"&gt;6&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 464473a5506f4e14862658047e6e600a&amp;#45;&amp;#45;d1a5c722dd36408aab3e1bb7f9a34d16 --&gt;\n&lt;!-- e82ac01553a846289021b85bb271edd8 --&gt;\n&lt;g id=\"node1173\" class=\"node\"&gt;\n&lt;title&gt;e82ac01553a846289021b85bb271edd8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"213.12,-183.72 211.68,-183.72 211.68,-182.28 213.12,-182.28 213.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2787e6b74fb640edaa4e3f172098a976&amp;#45;&amp;#45;e82ac01553a846289021b85bb271edd8 --&gt;\n&lt;g id=\"edge1167\" class=\"edge\"&gt;\n&lt;title&gt;2787e6b74fb640edaa4e3f172098a976&amp;#45;&amp;#45;e82ac01553a846289021b85bb271edd8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M119.87,-183C122.6,-183 208.65,-183 211.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- b234660139c84a9ca429d858e8a56676 --&gt;\n&lt;g id=\"node1174\" class=\"node\"&gt;\n&lt;title&gt;b234660139c84a9ca429d858e8a56676&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"306.72,-183.72 305.28,-183.72 305.28,-182.28 306.72,-182.28 306.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e82ac01553a846289021b85bb271edd8&amp;#45;&amp;#45;b234660139c84a9ca429d858e8a56676 --&gt;\n&lt;g id=\"edge1168\" class=\"edge\"&gt;\n&lt;title&gt;e82ac01553a846289021b85bb271edd8&amp;#45;&amp;#45;b234660139c84a9ca429d858e8a56676&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M213.47,-183C216.2,-183 302.25,-183 304.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 478f9a43c4a94cd1b738811dfc02229a --&gt;\n&lt;g id=\"node1175\" class=\"node\"&gt;\n&lt;title&gt;478f9a43c4a94cd1b738811dfc02229a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"400.32,-183.72 398.88,-183.72 398.88,-182.28 400.32,-182.28 400.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b234660139c84a9ca429d858e8a56676&amp;#45;&amp;#45;478f9a43c4a94cd1b738811dfc02229a --&gt;\n&lt;g id=\"edge1169\" class=\"edge\"&gt;\n&lt;title&gt;b234660139c84a9ca429d858e8a56676&amp;#45;&amp;#45;478f9a43c4a94cd1b738811dfc02229a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M307.07,-183C309.8,-183 395.85,-183 398.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 369e94a3916244e29136c5314abb06c6 --&gt;\n&lt;g id=\"node1176\" class=\"node\"&gt;\n&lt;title&gt;369e94a3916244e29136c5314abb06c6&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M510,-211.8C510,-211.8 476.4,-211.8 476.4,-211.8 470.4,-211.8 464.4,-205.8 464.4,-199.8 464.4,-199.8 464.4,-166.2 464.4,-166.2 464.4,-160.2 470.4,-154.2 476.4,-154.2 476.4,-154.2 510,-154.2 510,-154.2 516,-154.2 522,-160.2 522,-166.2 522,-166.2 522,-199.8 522,-199.8 522,-205.8 516,-211.8 510,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"493.2\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 478f9a43c4a94cd1b738811dfc02229a&amp;#45;&amp;#45;369e94a3916244e29136c5314abb06c6 --&gt;\n&lt;g id=\"edge1170\" class=\"edge\"&gt;\n&lt;title&gt;478f9a43c4a94cd1b738811dfc02229a&amp;#45;&amp;#45;369e94a3916244e29136c5314abb06c6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M400.67,-183C402.39,-183 437.28,-183 463.48,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 369e94a3916244e29136c5314abb06c6&amp;#45;&amp;#45;e51b737917424592bce4c233253a322e --&gt;\n&lt;g id=\"edge1969\" class=\"edge\"&gt;\n&lt;title&gt;369e94a3916244e29136c5314abb06c6&amp;#45;&amp;#45;e51b737917424592bce4c233253a322e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M493.2,-212.65C493.2,-223.2 493.2,-233.76 493.2,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- b05a2c67e2ed4f83970ce8af637fa3c8 --&gt;\n&lt;g id=\"node1177\" class=\"node\"&gt;\n&lt;title&gt;b05a2c67e2ed4f83970ce8af637fa3c8&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"586.8\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 369e94a3916244e29136c5314abb06c6&amp;#45;&amp;#45;b05a2c67e2ed4f83970ce8af637fa3c8 --&gt;\n&lt;g id=\"edge1171\" class=\"edge\"&gt;\n&lt;title&gt;369e94a3916244e29136c5314abb06c6&amp;#45;&amp;#45;b05a2c67e2ed4f83970ce8af637fa3c8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M522.68,-183C542.64,-183 567.74,-183 579.36,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 48838e611ee449ecafe633a837b31e51 --&gt;\n&lt;g id=\"node1178\" class=\"node\"&gt;\n&lt;title&gt;48838e611ee449ecafe633a837b31e51&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"681.12,-183.72 679.68,-183.72 679.68,-182.28 681.12,-182.28 681.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b05a2c67e2ed4f83970ce8af637fa3c8&amp;#45;&amp;#45;48838e611ee449ecafe633a837b31e51 --&gt;\n&lt;g id=\"edge1172\" class=\"edge\"&gt;\n&lt;title&gt;b05a2c67e2ed4f83970ce8af637fa3c8&amp;#45;&amp;#45;48838e611ee449ecafe633a837b31e51&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M594.39,-183C614.73,-183 675.44,-183 679.22,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 11464990daab4867b7252e83f8c99cc8 --&gt;\n&lt;g id=\"node1179\" class=\"node\"&gt;\n&lt;title&gt;11464990daab4867b7252e83f8c99cc8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"827.52,-183.72 826.08,-183.72 826.08,-182.28 827.52,-182.28 827.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 48838e611ee449ecafe633a837b31e51&amp;#45;&amp;#45;11464990daab4867b7252e83f8c99cc8 --&gt;\n&lt;g id=\"edge1173\" class=\"edge\"&gt;\n&lt;title&gt;48838e611ee449ecafe633a837b31e51&amp;#45;&amp;#45;11464990daab4867b7252e83f8c99cc8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M681.5,-183C685.81,-183 821.46,-183 825.7,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 842912d31e6742b8b56655877271385a --&gt;\n&lt;g id=\"node1180\" class=\"node\"&gt;\n&lt;title&gt;842912d31e6742b8b56655877271385a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"973.92,-183.72 972.48,-183.72 972.48,-182.28 973.92,-182.28 973.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 11464990daab4867b7252e83f8c99cc8&amp;#45;&amp;#45;842912d31e6742b8b56655877271385a --&gt;\n&lt;g id=\"edge1174\" class=\"edge\"&gt;\n&lt;title&gt;11464990daab4867b7252e83f8c99cc8&amp;#45;&amp;#45;842912d31e6742b8b56655877271385a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M827.9,-183C832.21,-183 967.86,-183 972.1,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3a6087116b5045e4a8b41ae9b0ada326 --&gt;\n&lt;g id=\"node1181\" class=\"node\"&gt;\n&lt;title&gt;3a6087116b5045e4a8b41ae9b0ada326&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"1066.8\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 842912d31e6742b8b56655877271385a&amp;#45;&amp;#45;3a6087116b5045e4a8b41ae9b0ada326 --&gt;\n&lt;g id=\"edge1175\" class=\"edge\"&gt;\n&lt;title&gt;842912d31e6742b8b56655877271385a&amp;#45;&amp;#45;3a6087116b5045e4a8b41ae9b0ada326&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M974.27,-183C976.57,-183 1038.41,-183 1059.12,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7afe819b979e4e34b11e7162baf642a0 --&gt;\n&lt;g id=\"node1182\" class=\"node\"&gt;\n&lt;title&gt;7afe819b979e4e34b11e7162baf642a0&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M1177.2,-211.8C1177.2,-211.8 1143.6,-211.8 1143.6,-211.8 1137.6,-211.8 1131.6,-205.8 1131.6,-199.8 1131.6,-199.8 1131.6,-166.2 1131.6,-166.2 1131.6,-160.2 1137.6,-154.2 1143.6,-154.2 1143.6,-154.2 1177.2,-154.2 1177.2,-154.2 1183.2,-154.2 1189.2,-160.2 1189.2,-166.2 1189.2,-166.2 1189.2,-199.8 1189.2,-199.8 1189.2,-205.8 1183.2,-211.8 1177.2,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"1160.4\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 3a6087116b5045e4a8b41ae9b0ada326&amp;#45;&amp;#45;7afe819b979e4e34b11e7162baf642a0 --&gt;\n&lt;g id=\"edge1176\" class=\"edge\"&gt;\n&lt;title&gt;3a6087116b5045e4a8b41ae9b0ada326&amp;#45;&amp;#45;7afe819b979e4e34b11e7162baf642a0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1074.39,-183C1086.04,-183 1110.92,-183 1130.77,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7afe819b979e4e34b11e7162baf642a0&amp;#45;&amp;#45;03030fdfadac4903a3b4ac891992bbe4 --&gt;\n&lt;g id=\"edge1970\" class=\"edge\"&gt;\n&lt;title&gt;7afe819b979e4e34b11e7162baf642a0&amp;#45;&amp;#45;03030fdfadac4903a3b4ac891992bbe4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1160.4,-212.65C1160.4,-223.2 1160.4,-233.76 1160.4,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8ac7878d97d843fb85a8545832374c3a --&gt;\n&lt;g id=\"node1183\" class=\"node\"&gt;\n&lt;title&gt;8ac7878d97d843fb85a8545832374c3a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1254.72,-183.72 1253.28,-183.72 1253.28,-182.28 1254.72,-182.28 1254.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7afe819b979e4e34b11e7162baf642a0&amp;#45;&amp;#45;8ac7878d97d843fb85a8545832374c3a --&gt;\n&lt;g id=\"edge1177\" class=\"edge\"&gt;\n&lt;title&gt;7afe819b979e4e34b11e7162baf642a0&amp;#45;&amp;#45;8ac7878d97d843fb85a8545832374c3a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1189.88,-183C1215.93,-183 1250.74,-183 1252.9,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- a5e187bee57746e185a85ccd66d8a917 --&gt;\n&lt;g id=\"node1184\" class=\"node\"&gt;\n&lt;title&gt;a5e187bee57746e185a85ccd66d8a917&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1348.32,-183.72 1346.88,-183.72 1346.88,-182.28 1348.32,-182.28 1348.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8ac7878d97d843fb85a8545832374c3a&amp;#45;&amp;#45;a5e187bee57746e185a85ccd66d8a917 --&gt;\n&lt;g id=\"edge1178\" class=\"edge\"&gt;\n&lt;title&gt;8ac7878d97d843fb85a8545832374c3a&amp;#45;&amp;#45;a5e187bee57746e185a85ccd66d8a917&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1255.07,-183C1257.8,-183 1343.85,-183 1346.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- a21753061a4345c3aba30f3e6c0b030d --&gt;\n&lt;g id=\"node1185\" class=\"node\"&gt;\n&lt;title&gt;a21753061a4345c3aba30f3e6c0b030d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1441.92,-183.72 1440.48,-183.72 1440.48,-182.28 1441.92,-182.28 1441.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a5e187bee57746e185a85ccd66d8a917&amp;#45;&amp;#45;a21753061a4345c3aba30f3e6c0b030d --&gt;\n&lt;g id=\"edge1179\" class=\"edge\"&gt;\n&lt;title&gt;a5e187bee57746e185a85ccd66d8a917&amp;#45;&amp;#45;a21753061a4345c3aba30f3e6c0b030d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1348.67,-183C1351.4,-183 1437.45,-183 1440.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 51b1cd2a4f994362b744a7d52c64111e --&gt;\n&lt;g id=\"node1186\" class=\"node\"&gt;\n&lt;title&gt;51b1cd2a4f994362b744a7d52c64111e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1535.52,-183.72 1534.08,-183.72 1534.08,-182.28 1535.52,-182.28 1535.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a21753061a4345c3aba30f3e6c0b030d&amp;#45;&amp;#45;51b1cd2a4f994362b744a7d52c64111e --&gt;\n&lt;g id=\"edge1180\" class=\"edge\"&gt;\n&lt;title&gt;a21753061a4345c3aba30f3e6c0b030d&amp;#45;&amp;#45;51b1cd2a4f994362b744a7d52c64111e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1442.27,-183C1445,-183 1531.05,-183 1533.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 75ab9cd1cd56425f9edbff6e89e8074b --&gt;\n&lt;g id=\"node1187\" class=\"node\"&gt;\n&lt;title&gt;75ab9cd1cd56425f9edbff6e89e8074b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1629.12,-183.72 1627.68,-183.72 1627.68,-182.28 1629.12,-182.28 1629.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 51b1cd2a4f994362b744a7d52c64111e&amp;#45;&amp;#45;75ab9cd1cd56425f9edbff6e89e8074b --&gt;\n&lt;g id=\"edge1181\" class=\"edge\"&gt;\n&lt;title&gt;51b1cd2a4f994362b744a7d52c64111e&amp;#45;&amp;#45;75ab9cd1cd56425f9edbff6e89e8074b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1535.87,-183C1538.6,-183 1624.65,-183 1627.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9b0409b5bdba40ae94424a255e65642d --&gt;\n&lt;g id=\"node1188\" class=\"node\"&gt;\n&lt;title&gt;9b0409b5bdba40ae94424a255e65642d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1781.52,-183.72 1780.08,-183.72 1780.08,-182.28 1781.52,-182.28 1781.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 75ab9cd1cd56425f9edbff6e89e8074b&amp;#45;&amp;#45;9b0409b5bdba40ae94424a255e65642d --&gt;\n&lt;g id=\"edge1182\" class=\"edge\"&gt;\n&lt;title&gt;75ab9cd1cd56425f9edbff6e89e8074b&amp;#45;&amp;#45;9b0409b5bdba40ae94424a255e65642d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1629.51,-183C1633.99,-183 1775.28,-183 1779.69,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- bbbb38f399dd468f9eda2d1996ef8465 --&gt;\n&lt;g id=\"node1189\" class=\"node\"&gt;\n&lt;title&gt;bbbb38f399dd468f9eda2d1996ef8465&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1933.92,-183.72 1932.48,-183.72 1932.48,-182.28 1933.92,-182.28 1933.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9b0409b5bdba40ae94424a255e65642d&amp;#45;&amp;#45;bbbb38f399dd468f9eda2d1996ef8465 --&gt;\n&lt;g id=\"edge1183\" class=\"edge\"&gt;\n&lt;title&gt;9b0409b5bdba40ae94424a255e65642d&amp;#45;&amp;#45;bbbb38f399dd468f9eda2d1996ef8465&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1781.91,-183C1786.39,-183 1927.68,-183 1932.09,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 36ee68c9d99244bfbe681ff7b5cbde14 --&gt;\n&lt;g id=\"node1190\" class=\"node\"&gt;\n&lt;title&gt;36ee68c9d99244bfbe681ff7b5cbde14&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2027.52,-183.72 2026.08,-183.72 2026.08,-182.28 2027.52,-182.28 2027.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bbbb38f399dd468f9eda2d1996ef8465&amp;#45;&amp;#45;36ee68c9d99244bfbe681ff7b5cbde14 --&gt;\n&lt;g id=\"edge1184\" class=\"edge\"&gt;\n&lt;title&gt;bbbb38f399dd468f9eda2d1996ef8465&amp;#45;&amp;#45;36ee68c9d99244bfbe681ff7b5cbde14&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1934.27,-183C1937,-183 2023.05,-183 2025.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- be9b60028e404fc4aeceeb58e84103d3 --&gt;\n&lt;g id=\"node1191\" class=\"node\"&gt;\n&lt;title&gt;be9b60028e404fc4aeceeb58e84103d3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2121.12,-183.72 2119.68,-183.72 2119.68,-182.28 2121.12,-182.28 2121.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 36ee68c9d99244bfbe681ff7b5cbde14&amp;#45;&amp;#45;be9b60028e404fc4aeceeb58e84103d3 --&gt;\n&lt;g id=\"edge1185\" class=\"edge\"&gt;\n&lt;title&gt;36ee68c9d99244bfbe681ff7b5cbde14&amp;#45;&amp;#45;be9b60028e404fc4aeceeb58e84103d3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2027.87,-183C2030.6,-183 2116.65,-183 2119.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 118629d3b0544eae8e92d44c7dc49245 --&gt;\n&lt;g id=\"node1192\" class=\"node\"&gt;\n&lt;title&gt;118629d3b0544eae8e92d44c7dc49245&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2214.72,-183.72 2213.28,-183.72 2213.28,-182.28 2214.72,-182.28 2214.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- be9b60028e404fc4aeceeb58e84103d3&amp;#45;&amp;#45;118629d3b0544eae8e92d44c7dc49245 --&gt;\n&lt;g id=\"edge1186\" class=\"edge\"&gt;\n&lt;title&gt;be9b60028e404fc4aeceeb58e84103d3&amp;#45;&amp;#45;118629d3b0544eae8e92d44c7dc49245&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2121.47,-183C2124.2,-183 2210.25,-183 2212.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- ffd404adae834f799c178370b6dd99ed --&gt;\n&lt;g id=\"node1193\" class=\"node\"&gt;\n&lt;title&gt;ffd404adae834f799c178370b6dd99ed&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2308.32,-183.72 2306.88,-183.72 2306.88,-182.28 2308.32,-182.28 2308.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 118629d3b0544eae8e92d44c7dc49245&amp;#45;&amp;#45;ffd404adae834f799c178370b6dd99ed --&gt;\n&lt;g id=\"edge1187\" class=\"edge\"&gt;\n&lt;title&gt;118629d3b0544eae8e92d44c7dc49245&amp;#45;&amp;#45;ffd404adae834f799c178370b6dd99ed&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2215.07,-183C2217.8,-183 2303.85,-183 2306.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- f73fabe654724e7f927a7f0573e0c0f8 --&gt;\n&lt;g id=\"node1194\" class=\"node\"&gt;\n&lt;title&gt;f73fabe654724e7f927a7f0573e0c0f8&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M2418,-211.8C2418,-211.8 2384.4,-211.8 2384.4,-211.8 2378.4,-211.8 2372.4,-205.8 2372.4,-199.8 2372.4,-199.8 2372.4,-166.2 2372.4,-166.2 2372.4,-160.2 2378.4,-154.2 2384.4,-154.2 2384.4,-154.2 2418,-154.2 2418,-154.2 2424,-154.2 2430,-160.2 2430,-166.2 2430,-166.2 2430,-199.8 2430,-199.8 2430,-205.8 2424,-211.8 2418,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"2401.2\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- ffd404adae834f799c178370b6dd99ed&amp;#45;&amp;#45;f73fabe654724e7f927a7f0573e0c0f8 --&gt;\n&lt;g id=\"edge1188\" class=\"edge\"&gt;\n&lt;title&gt;ffd404adae834f799c178370b6dd99ed&amp;#45;&amp;#45;f73fabe654724e7f927a7f0573e0c0f8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2308.67,-183C2310.39,-183 2345.28,-183 2371.48,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- f73fabe654724e7f927a7f0573e0c0f8&amp;#45;&amp;#45;4f659d42526d49c695fcd4ee24af25b5 --&gt;\n&lt;g id=\"edge1971\" class=\"edge\"&gt;\n&lt;title&gt;f73fabe654724e7f927a7f0573e0c0f8&amp;#45;&amp;#45;4f659d42526d49c695fcd4ee24af25b5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2401.2,-212.65C2401.2,-223.2 2401.2,-233.76 2401.2,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2b4e2a5fc1ac4930b4b18b236512cc15 --&gt;\n&lt;g id=\"node1195\" class=\"node\"&gt;\n&lt;title&gt;2b4e2a5fc1ac4930b4b18b236512cc15&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M2629.2,-211.8C2629.2,-211.8 2478,-211.8 2478,-211.8 2472,-211.8 2466,-205.8 2466,-199.8 2466,-199.8 2466,-166.2 2466,-166.2 2466,-160.2 2472,-154.2 2478,-154.2 2478,-154.2 2629.2,-154.2 2629.2,-154.2 2635.2,-154.2 2641.2,-160.2 2641.2,-166.2 2641.2,-166.2 2641.2,-199.8 2641.2,-199.8 2641.2,-205.8 2635.2,-211.8 2629.2,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"2553.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- f73fabe654724e7f927a7f0573e0c0f8&amp;#45;&amp;#45;2b4e2a5fc1ac4930b4b18b236512cc15 --&gt;\n&lt;g id=\"edge1189\" class=\"edge\"&gt;\n&lt;title&gt;f73fabe654724e7f927a7f0573e0c0f8&amp;#45;&amp;#45;2b4e2a5fc1ac4930b4b18b236512cc15&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2430.84,-183C2440.9,-183 2452.79,-183 2465.13,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 34cbf76c77df4008bba5ebbd4da80d28 --&gt;\n&lt;g id=\"node1196\" class=\"node\"&gt;\n&lt;title&gt;34cbf76c77df4008bba5ebbd4da80d28&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M2722.8,-211.8C2722.8,-211.8 2689.2,-211.8 2689.2,-211.8 2683.2,-211.8 2677.2,-205.8 2677.2,-199.8 2677.2,-199.8 2677.2,-166.2 2677.2,-166.2 2677.2,-160.2 2683.2,-154.2 2689.2,-154.2 2689.2,-154.2 2722.8,-154.2 2722.8,-154.2 2728.8,-154.2 2734.8,-160.2 2734.8,-166.2 2734.8,-166.2 2734.8,-199.8 2734.8,-199.8 2734.8,-205.8 2728.8,-211.8 2722.8,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"2706\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2b4e2a5fc1ac4930b4b18b236512cc15&amp;#45;&amp;#45;34cbf76c77df4008bba5ebbd4da80d28 --&gt;\n&lt;g id=\"edge1190\" class=\"edge\"&gt;\n&lt;title&gt;2b4e2a5fc1ac4930b4b18b236512cc15&amp;#45;&amp;#45;34cbf76c77df4008bba5ebbd4da80d28&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2642.09,-183C2654.37,-183 2666.2,-183 2676.22,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 34cbf76c77df4008bba5ebbd4da80d28&amp;#45;&amp;#45;93c8e58856104aff8013f692274f294c --&gt;\n&lt;g id=\"edge1972\" class=\"edge\"&gt;\n&lt;title&gt;34cbf76c77df4008bba5ebbd4da80d28&amp;#45;&amp;#45;93c8e58856104aff8013f692274f294c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2706,-212.65C2706,-223.2 2706,-233.76 2706,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- a7f5b41467bb45848dc059a080013268 --&gt;\n&lt;g id=\"node1197\" class=\"node\"&gt;\n&lt;title&gt;a7f5b41467bb45848dc059a080013268&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2800.32,-183.72 2798.88,-183.72 2798.88,-182.28 2800.32,-182.28 2800.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 34cbf76c77df4008bba5ebbd4da80d28&amp;#45;&amp;#45;a7f5b41467bb45848dc059a080013268 --&gt;\n&lt;g id=\"edge1191\" class=\"edge\"&gt;\n&lt;title&gt;34cbf76c77df4008bba5ebbd4da80d28&amp;#45;&amp;#45;a7f5b41467bb45848dc059a080013268&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2735.48,-183C2761.53,-183 2796.34,-183 2798.5,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1aee7ba5203f40e596739e9ddd2c0fb7 --&gt;\n&lt;g id=\"node1198\" class=\"node\"&gt;\n&lt;title&gt;1aee7ba5203f40e596739e9ddd2c0fb7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2893.92,-183.72 2892.48,-183.72 2892.48,-182.28 2893.92,-182.28 2893.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a7f5b41467bb45848dc059a080013268&amp;#45;&amp;#45;1aee7ba5203f40e596739e9ddd2c0fb7 --&gt;\n&lt;g id=\"edge1192\" class=\"edge\"&gt;\n&lt;title&gt;a7f5b41467bb45848dc059a080013268&amp;#45;&amp;#45;1aee7ba5203f40e596739e9ddd2c0fb7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2800.67,-183C2803.4,-183 2889.45,-183 2892.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- d2b321d3d5f846e29512078680e8686b --&gt;\n&lt;g id=\"node1199\" class=\"node\"&gt;\n&lt;title&gt;d2b321d3d5f846e29512078680e8686b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2987.52,-183.72 2986.08,-183.72 2986.08,-182.28 2987.52,-182.28 2987.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1aee7ba5203f40e596739e9ddd2c0fb7&amp;#45;&amp;#45;d2b321d3d5f846e29512078680e8686b --&gt;\n&lt;g id=\"edge1193\" class=\"edge\"&gt;\n&lt;title&gt;1aee7ba5203f40e596739e9ddd2c0fb7&amp;#45;&amp;#45;d2b321d3d5f846e29512078680e8686b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2894.27,-183C2897,-183 2983.05,-183 2985.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 31cd79a014f24df5bcd5f11bc00fab98 --&gt;\n&lt;g id=\"node1200\" class=\"node\"&gt;\n&lt;title&gt;31cd79a014f24df5bcd5f11bc00fab98&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3081.12,-183.72 3079.68,-183.72 3079.68,-182.28 3081.12,-182.28 3081.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d2b321d3d5f846e29512078680e8686b&amp;#45;&amp;#45;31cd79a014f24df5bcd5f11bc00fab98 --&gt;\n&lt;g id=\"edge1194\" class=\"edge\"&gt;\n&lt;title&gt;d2b321d3d5f846e29512078680e8686b&amp;#45;&amp;#45;31cd79a014f24df5bcd5f11bc00fab98&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2987.87,-183C2990.6,-183 3076.65,-183 3079.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 08a9e6369cf44630a9aaf147070e5495 --&gt;\n&lt;g id=\"node1201\" class=\"node\"&gt;\n&lt;title&gt;08a9e6369cf44630a9aaf147070e5495&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3174.72,-183.72 3173.28,-183.72 3173.28,-182.28 3174.72,-182.28 3174.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 31cd79a014f24df5bcd5f11bc00fab98&amp;#45;&amp;#45;08a9e6369cf44630a9aaf147070e5495 --&gt;\n&lt;g id=\"edge1195\" class=\"edge\"&gt;\n&lt;title&gt;31cd79a014f24df5bcd5f11bc00fab98&amp;#45;&amp;#45;08a9e6369cf44630a9aaf147070e5495&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3081.47,-183C3084.2,-183 3170.25,-183 3172.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98f5a3064cd043beb2123f691bdaada4 --&gt;\n&lt;g id=\"node1202\" class=\"node\"&gt;\n&lt;title&gt;98f5a3064cd043beb2123f691bdaada4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3268.32,-183.72 3266.88,-183.72 3266.88,-182.28 3268.32,-182.28 3268.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 08a9e6369cf44630a9aaf147070e5495&amp;#45;&amp;#45;98f5a3064cd043beb2123f691bdaada4 --&gt;\n&lt;g id=\"edge1196\" class=\"edge\"&gt;\n&lt;title&gt;08a9e6369cf44630a9aaf147070e5495&amp;#45;&amp;#45;98f5a3064cd043beb2123f691bdaada4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3175.07,-183C3177.8,-183 3263.85,-183 3266.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44d7cdfe80e246ae844f066731812b60 --&gt;\n&lt;g id=\"node1203\" class=\"node\"&gt;\n&lt;title&gt;44d7cdfe80e246ae844f066731812b60&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3361.92,-183.72 3360.48,-183.72 3360.48,-182.28 3361.92,-182.28 3361.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98f5a3064cd043beb2123f691bdaada4&amp;#45;&amp;#45;44d7cdfe80e246ae844f066731812b60 --&gt;\n&lt;g id=\"edge1197\" class=\"edge\"&gt;\n&lt;title&gt;98f5a3064cd043beb2123f691bdaada4&amp;#45;&amp;#45;44d7cdfe80e246ae844f066731812b60&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3268.67,-183C3271.4,-183 3357.45,-183 3360.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9628e724d17b45738160d3f38b05ab84 --&gt;\n&lt;g id=\"node1204\" class=\"node\"&gt;\n&lt;title&gt;9628e724d17b45738160d3f38b05ab84&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3514.32,-183.72 3512.88,-183.72 3512.88,-182.28 3514.32,-182.28 3514.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44d7cdfe80e246ae844f066731812b60&amp;#45;&amp;#45;9628e724d17b45738160d3f38b05ab84 --&gt;\n&lt;g id=\"edge1198\" class=\"edge\"&gt;\n&lt;title&gt;44d7cdfe80e246ae844f066731812b60&amp;#45;&amp;#45;9628e724d17b45738160d3f38b05ab84&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3362.31,-183C3366.79,-183 3508.08,-183 3512.49,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- f0fb0279dc9c43c3ad67b1232169bd96 --&gt;\n&lt;g id=\"node1205\" class=\"node\"&gt;\n&lt;title&gt;f0fb0279dc9c43c3ad67b1232169bd96&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3666.72,-183.72 3665.28,-183.72 3665.28,-182.28 3666.72,-182.28 3666.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9628e724d17b45738160d3f38b05ab84&amp;#45;&amp;#45;f0fb0279dc9c43c3ad67b1232169bd96 --&gt;\n&lt;g id=\"edge1199\" class=\"edge\"&gt;\n&lt;title&gt;9628e724d17b45738160d3f38b05ab84&amp;#45;&amp;#45;f0fb0279dc9c43c3ad67b1232169bd96&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3514.71,-183C3519.19,-183 3660.48,-183 3664.89,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- d0a37a552a0b4c109598feb85d905567 --&gt;\n&lt;g id=\"node1206\" class=\"node\"&gt;\n&lt;title&gt;d0a37a552a0b4c109598feb85d905567&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3760.32,-183.72 3758.88,-183.72 3758.88,-182.28 3760.32,-182.28 3760.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f0fb0279dc9c43c3ad67b1232169bd96&amp;#45;&amp;#45;d0a37a552a0b4c109598feb85d905567 --&gt;\n&lt;g id=\"edge1200\" class=\"edge\"&gt;\n&lt;title&gt;f0fb0279dc9c43c3ad67b1232169bd96&amp;#45;&amp;#45;d0a37a552a0b4c109598feb85d905567&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3667.07,-183C3669.8,-183 3755.85,-183 3758.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5d805496c7124fdea0957e116dbaa0dd --&gt;\n&lt;g id=\"node1207\" class=\"node\"&gt;\n&lt;title&gt;5d805496c7124fdea0957e116dbaa0dd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3853.92,-183.72 3852.48,-183.72 3852.48,-182.28 3853.92,-182.28 3853.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d0a37a552a0b4c109598feb85d905567&amp;#45;&amp;#45;5d805496c7124fdea0957e116dbaa0dd --&gt;\n&lt;g id=\"edge1201\" class=\"edge\"&gt;\n&lt;title&gt;d0a37a552a0b4c109598feb85d905567&amp;#45;&amp;#45;5d805496c7124fdea0957e116dbaa0dd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3760.67,-183C3763.4,-183 3849.45,-183 3852.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ce6867752244c8c8c6d116cf22878e6 --&gt;\n&lt;g id=\"node1208\" class=\"node\"&gt;\n&lt;title&gt;6ce6867752244c8c8c6d116cf22878e6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3947.52,-183.72 3946.08,-183.72 3946.08,-182.28 3947.52,-182.28 3947.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5d805496c7124fdea0957e116dbaa0dd&amp;#45;&amp;#45;6ce6867752244c8c8c6d116cf22878e6 --&gt;\n&lt;g id=\"edge1202\" class=\"edge\"&gt;\n&lt;title&gt;5d805496c7124fdea0957e116dbaa0dd&amp;#45;&amp;#45;6ce6867752244c8c8c6d116cf22878e6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3854.27,-183C3857,-183 3943.05,-183 3945.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- d235043c1e29406dbbc99f1083e05232 --&gt;\n&lt;g id=\"node1209\" class=\"node\"&gt;\n&lt;title&gt;d235043c1e29406dbbc99f1083e05232&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4041.12,-183.72 4039.68,-183.72 4039.68,-182.28 4041.12,-182.28 4041.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6ce6867752244c8c8c6d116cf22878e6&amp;#45;&amp;#45;d235043c1e29406dbbc99f1083e05232 --&gt;\n&lt;g id=\"edge1203\" class=\"edge\"&gt;\n&lt;title&gt;6ce6867752244c8c8c6d116cf22878e6&amp;#45;&amp;#45;d235043c1e29406dbbc99f1083e05232&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3947.87,-183C3950.6,-183 4036.65,-183 4039.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 88d2dd360f854ffe8a500776e94b0f25 --&gt;\n&lt;g id=\"node1210\" class=\"node\"&gt;\n&lt;title&gt;88d2dd360f854ffe8a500776e94b0f25&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4134.72,-183.72 4133.28,-183.72 4133.28,-182.28 4134.72,-182.28 4134.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d235043c1e29406dbbc99f1083e05232&amp;#45;&amp;#45;88d2dd360f854ffe8a500776e94b0f25 --&gt;\n&lt;g id=\"edge1204\" class=\"edge\"&gt;\n&lt;title&gt;d235043c1e29406dbbc99f1083e05232&amp;#45;&amp;#45;88d2dd360f854ffe8a500776e94b0f25&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4041.47,-183C4044.2,-183 4130.25,-183 4132.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 92accc18b1b54b5ab261ec674a7c9f01 --&gt;\n&lt;g id=\"node1211\" class=\"node\"&gt;\n&lt;title&gt;92accc18b1b54b5ab261ec674a7c9f01&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M4244.4,-211.8C4244.4,-211.8 4210.8,-211.8 4210.8,-211.8 4204.8,-211.8 4198.8,-205.8 4198.8,-199.8 4198.8,-199.8 4198.8,-166.2 4198.8,-166.2 4198.8,-160.2 4204.8,-154.2 4210.8,-154.2 4210.8,-154.2 4244.4,-154.2 4244.4,-154.2 4250.4,-154.2 4256.4,-160.2 4256.4,-166.2 4256.4,-166.2 4256.4,-199.8 4256.4,-199.8 4256.4,-205.8 4250.4,-211.8 4244.4,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"4227.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 88d2dd360f854ffe8a500776e94b0f25&amp;#45;&amp;#45;92accc18b1b54b5ab261ec674a7c9f01 --&gt;\n&lt;g id=\"edge1205\" class=\"edge\"&gt;\n&lt;title&gt;88d2dd360f854ffe8a500776e94b0f25&amp;#45;&amp;#45;92accc18b1b54b5ab261ec674a7c9f01&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4135.07,-183C4136.79,-183 4171.68,-183 4197.88,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 92accc18b1b54b5ab261ec674a7c9f01&amp;#45;&amp;#45;e7217094d6da412891c12abe9aec8fe4 --&gt;\n&lt;g id=\"edge1973\" class=\"edge\"&gt;\n&lt;title&gt;92accc18b1b54b5ab261ec674a7c9f01&amp;#45;&amp;#45;e7217094d6da412891c12abe9aec8fe4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4227.6,-212.65C4227.6,-223.2 4227.6,-233.76 4227.6,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- f9b601af39c242ee97d8df01d25199c9 --&gt;\n&lt;g id=\"node1212\" class=\"node\"&gt;\n&lt;title&gt;f9b601af39c242ee97d8df01d25199c9&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M4455.6,-211.8C4455.6,-211.8 4304.4,-211.8 4304.4,-211.8 4298.4,-211.8 4292.4,-205.8 4292.4,-199.8 4292.4,-199.8 4292.4,-166.2 4292.4,-166.2 4292.4,-160.2 4298.4,-154.2 4304.4,-154.2 4304.4,-154.2 4455.6,-154.2 4455.6,-154.2 4461.6,-154.2 4467.6,-160.2 4467.6,-166.2 4467.6,-166.2 4467.6,-199.8 4467.6,-199.8 4467.6,-205.8 4461.6,-211.8 4455.6,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"4380\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 92accc18b1b54b5ab261ec674a7c9f01&amp;#45;&amp;#45;f9b601af39c242ee97d8df01d25199c9 --&gt;\n&lt;g id=\"edge1206\" class=\"edge\"&gt;\n&lt;title&gt;92accc18b1b54b5ab261ec674a7c9f01&amp;#45;&amp;#45;f9b601af39c242ee97d8df01d25199c9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4257.24,-183C4267.3,-183 4279.19,-183 4291.53,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- b5f2c5fdc2de44abb9bd4edf83ec2b64 --&gt;\n&lt;g id=\"node1213\" class=\"node\"&gt;\n&lt;title&gt;b5f2c5fdc2de44abb9bd4edf83ec2b64&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M4549.2,-211.8C4549.2,-211.8 4515.6,-211.8 4515.6,-211.8 4509.6,-211.8 4503.6,-205.8 4503.6,-199.8 4503.6,-199.8 4503.6,-166.2 4503.6,-166.2 4503.6,-160.2 4509.6,-154.2 4515.6,-154.2 4515.6,-154.2 4549.2,-154.2 4549.2,-154.2 4555.2,-154.2 4561.2,-160.2 4561.2,-166.2 4561.2,-166.2 4561.2,-199.8 4561.2,-199.8 4561.2,-205.8 4555.2,-211.8 4549.2,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"4532.4\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- f9b601af39c242ee97d8df01d25199c9&amp;#45;&amp;#45;b5f2c5fdc2de44abb9bd4edf83ec2b64 --&gt;\n&lt;g id=\"edge1207\" class=\"edge\"&gt;\n&lt;title&gt;f9b601af39c242ee97d8df01d25199c9&amp;#45;&amp;#45;b5f2c5fdc2de44abb9bd4edf83ec2b64&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4468.49,-183C4480.77,-183 4492.6,-183 4502.62,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- b5f2c5fdc2de44abb9bd4edf83ec2b64&amp;#45;&amp;#45;d413fa8ef2fd450798478d696ec647db --&gt;\n&lt;g id=\"edge1974\" class=\"edge\"&gt;\n&lt;title&gt;b5f2c5fdc2de44abb9bd4edf83ec2b64&amp;#45;&amp;#45;d413fa8ef2fd450798478d696ec647db&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4532.4,-212.65C4532.4,-223.2 4532.4,-233.76 4532.4,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- adde303103a74a978e57fef8df33dbfa --&gt;\n&lt;g id=\"node1214\" class=\"node\"&gt;\n&lt;title&gt;adde303103a74a978e57fef8df33dbfa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4626.72,-183.72 4625.28,-183.72 4625.28,-182.28 4626.72,-182.28 4626.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b5f2c5fdc2de44abb9bd4edf83ec2b64&amp;#45;&amp;#45;adde303103a74a978e57fef8df33dbfa --&gt;\n&lt;g id=\"edge1208\" class=\"edge\"&gt;\n&lt;title&gt;b5f2c5fdc2de44abb9bd4edf83ec2b64&amp;#45;&amp;#45;adde303103a74a978e57fef8df33dbfa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4561.88,-183C4587.93,-183 4622.74,-183 4624.9,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- b1261dcfc8a04a9282ec85463805ca1f --&gt;\n&lt;g id=\"node1215\" class=\"node\"&gt;\n&lt;title&gt;b1261dcfc8a04a9282ec85463805ca1f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4720.32,-183.72 4718.88,-183.72 4718.88,-182.28 4720.32,-182.28 4720.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- adde303103a74a978e57fef8df33dbfa&amp;#45;&amp;#45;b1261dcfc8a04a9282ec85463805ca1f --&gt;\n&lt;g id=\"edge1209\" class=\"edge\"&gt;\n&lt;title&gt;adde303103a74a978e57fef8df33dbfa&amp;#45;&amp;#45;b1261dcfc8a04a9282ec85463805ca1f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4627.07,-183C4629.8,-183 4715.85,-183 4718.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6244f62bc1aa4c02a86807d48794e064 --&gt;\n&lt;g id=\"node1216\" class=\"node\"&gt;\n&lt;title&gt;6244f62bc1aa4c02a86807d48794e064&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4813.92,-183.72 4812.48,-183.72 4812.48,-182.28 4813.92,-182.28 4813.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b1261dcfc8a04a9282ec85463805ca1f&amp;#45;&amp;#45;6244f62bc1aa4c02a86807d48794e064 --&gt;\n&lt;g id=\"edge1210\" class=\"edge\"&gt;\n&lt;title&gt;b1261dcfc8a04a9282ec85463805ca1f&amp;#45;&amp;#45;6244f62bc1aa4c02a86807d48794e064&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4720.67,-183C4723.4,-183 4809.45,-183 4812.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- dee2a09526a9405fb656eb265ab658a9 --&gt;\n&lt;g id=\"node1217\" class=\"node\"&gt;\n&lt;title&gt;dee2a09526a9405fb656eb265ab658a9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4907.52,-183.72 4906.08,-183.72 4906.08,-182.28 4907.52,-182.28 4907.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6244f62bc1aa4c02a86807d48794e064&amp;#45;&amp;#45;dee2a09526a9405fb656eb265ab658a9 --&gt;\n&lt;g id=\"edge1211\" class=\"edge\"&gt;\n&lt;title&gt;6244f62bc1aa4c02a86807d48794e064&amp;#45;&amp;#45;dee2a09526a9405fb656eb265ab658a9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4814.27,-183C4817,-183 4903.05,-183 4905.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- b16596f23777451f9874675caa9de0b1 --&gt;\n&lt;g id=\"node1218\" class=\"node\"&gt;\n&lt;title&gt;b16596f23777451f9874675caa9de0b1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5001.12,-183.72 4999.68,-183.72 4999.68,-182.28 5001.12,-182.28 5001.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dee2a09526a9405fb656eb265ab658a9&amp;#45;&amp;#45;b16596f23777451f9874675caa9de0b1 --&gt;\n&lt;g id=\"edge1212\" class=\"edge\"&gt;\n&lt;title&gt;dee2a09526a9405fb656eb265ab658a9&amp;#45;&amp;#45;b16596f23777451f9874675caa9de0b1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4907.87,-183C4910.6,-183 4996.65,-183 4999.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 85ce6d3133434f83ba3e0e9a072cb482 --&gt;\n&lt;g id=\"node1219\" class=\"node\"&gt;\n&lt;title&gt;85ce6d3133434f83ba3e0e9a072cb482&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5094.72,-183.72 5093.28,-183.72 5093.28,-182.28 5094.72,-182.28 5094.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b16596f23777451f9874675caa9de0b1&amp;#45;&amp;#45;85ce6d3133434f83ba3e0e9a072cb482 --&gt;\n&lt;g id=\"edge1213\" class=\"edge\"&gt;\n&lt;title&gt;b16596f23777451f9874675caa9de0b1&amp;#45;&amp;#45;85ce6d3133434f83ba3e0e9a072cb482&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5001.47,-183C5004.2,-183 5090.25,-183 5092.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- d010af8dfeb644958a36c02635aa0878 --&gt;\n&lt;g id=\"node1220\" class=\"node\"&gt;\n&lt;title&gt;d010af8dfeb644958a36c02635aa0878&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M5204.4,-211.8C5204.4,-211.8 5170.8,-211.8 5170.8,-211.8 5164.8,-211.8 5158.8,-205.8 5158.8,-199.8 5158.8,-199.8 5158.8,-166.2 5158.8,-166.2 5158.8,-160.2 5164.8,-154.2 5170.8,-154.2 5170.8,-154.2 5204.4,-154.2 5204.4,-154.2 5210.4,-154.2 5216.4,-160.2 5216.4,-166.2 5216.4,-166.2 5216.4,-199.8 5216.4,-199.8 5216.4,-205.8 5210.4,-211.8 5204.4,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"5187.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 85ce6d3133434f83ba3e0e9a072cb482&amp;#45;&amp;#45;d010af8dfeb644958a36c02635aa0878 --&gt;\n&lt;g id=\"edge1214\" class=\"edge\"&gt;\n&lt;title&gt;85ce6d3133434f83ba3e0e9a072cb482&amp;#45;&amp;#45;d010af8dfeb644958a36c02635aa0878&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5095.07,-183C5096.79,-183 5131.68,-183 5157.88,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- d010af8dfeb644958a36c02635aa0878&amp;#45;&amp;#45;8a5ffd3890744aeda3fabb24fa84d467 --&gt;\n&lt;g id=\"edge1975\" class=\"edge\"&gt;\n&lt;title&gt;d010af8dfeb644958a36c02635aa0878&amp;#45;&amp;#45;8a5ffd3890744aeda3fabb24fa84d467&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5187.6,-212.65C5187.6,-223.2 5187.6,-233.76 5187.6,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a6facb148ab4568bf118352093cab95 --&gt;\n&lt;g id=\"node1221\" class=\"node\"&gt;\n&lt;title&gt;9a6facb148ab4568bf118352093cab95&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"5281.2\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- d010af8dfeb644958a36c02635aa0878&amp;#45;&amp;#45;9a6facb148ab4568bf118352093cab95 --&gt;\n&lt;g id=\"edge1215\" class=\"edge\"&gt;\n&lt;title&gt;d010af8dfeb644958a36c02635aa0878&amp;#45;&amp;#45;9a6facb148ab4568bf118352093cab95&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5217.08,-183C5237.04,-183 5262.14,-183 5273.76,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 605e75cd423a47c99fd4645a8b796f00 --&gt;\n&lt;g id=\"node1222\" class=\"node\"&gt;\n&lt;title&gt;605e75cd423a47c99fd4645a8b796f00&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5434.32,-183.72 5432.88,-183.72 5432.88,-182.28 5434.32,-182.28 5434.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a6facb148ab4568bf118352093cab95&amp;#45;&amp;#45;605e75cd423a47c99fd4645a8b796f00 --&gt;\n&lt;g id=\"edge1216\" class=\"edge\"&gt;\n&lt;title&gt;9a6facb148ab4568bf118352093cab95&amp;#45;&amp;#45;605e75cd423a47c99fd4645a8b796f00&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5288.66,-183C5317,-183 5429.02,-183 5432.52,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4ff4608df42b49ca9ffedaba3525b699 --&gt;\n&lt;g id=\"node1223\" class=\"node\"&gt;\n&lt;title&gt;4ff4608df42b49ca9ffedaba3525b699&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"5586\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 605e75cd423a47c99fd4645a8b796f00&amp;#45;&amp;#45;4ff4608df42b49ca9ffedaba3525b699 --&gt;\n&lt;g id=\"edge1217\" class=\"edge\"&gt;\n&lt;title&gt;605e75cd423a47c99fd4645a8b796f00&amp;#45;&amp;#45;4ff4608df42b49ca9ffedaba3525b699&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5434.71,-183C5438.68,-183 5549.77,-183 5578.35,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 055edb7833d047a190eb4f04f9eb9043 --&gt;\n&lt;g id=\"node1224\" class=\"node\"&gt;\n&lt;title&gt;055edb7833d047a190eb4f04f9eb9043&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M5696.4,-211.8C5696.4,-211.8 5662.8,-211.8 5662.8,-211.8 5656.8,-211.8 5650.8,-205.8 5650.8,-199.8 5650.8,-199.8 5650.8,-166.2 5650.8,-166.2 5650.8,-160.2 5656.8,-154.2 5662.8,-154.2 5662.8,-154.2 5696.4,-154.2 5696.4,-154.2 5702.4,-154.2 5708.4,-160.2 5708.4,-166.2 5708.4,-166.2 5708.4,-199.8 5708.4,-199.8 5708.4,-205.8 5702.4,-211.8 5696.4,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"5679.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 4ff4608df42b49ca9ffedaba3525b699&amp;#45;&amp;#45;055edb7833d047a190eb4f04f9eb9043 --&gt;\n&lt;g id=\"edge1218\" class=\"edge\"&gt;\n&lt;title&gt;4ff4608df42b49ca9ffedaba3525b699&amp;#45;&amp;#45;055edb7833d047a190eb4f04f9eb9043&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5593.59,-183C5605.24,-183 5630.12,-183 5649.97,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 055edb7833d047a190eb4f04f9eb9043&amp;#45;&amp;#45;66b69cda0e7b4bb8903a6202f433fe58 --&gt;\n&lt;g id=\"edge1976\" class=\"edge\"&gt;\n&lt;title&gt;055edb7833d047a190eb4f04f9eb9043&amp;#45;&amp;#45;66b69cda0e7b4bb8903a6202f433fe58&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5679.6,-212.65C5679.6,-223.2 5679.6,-233.76 5679.6,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 261927e831374a74bb942745f50a86fb --&gt;\n&lt;g id=\"node1225\" class=\"node\"&gt;\n&lt;title&gt;261927e831374a74bb942745f50a86fb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5773.92,-183.72 5772.48,-183.72 5772.48,-182.28 5773.92,-182.28 5773.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 055edb7833d047a190eb4f04f9eb9043&amp;#45;&amp;#45;261927e831374a74bb942745f50a86fb --&gt;\n&lt;g id=\"edge1219\" class=\"edge\"&gt;\n&lt;title&gt;055edb7833d047a190eb4f04f9eb9043&amp;#45;&amp;#45;261927e831374a74bb942745f50a86fb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5709.08,-183C5735.13,-183 5769.94,-183 5772.1,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b348cf6ac754f7ba55fe37af08dde46 --&gt;\n&lt;g id=\"node1226\" class=\"node\"&gt;\n&lt;title&gt;6b348cf6ac754f7ba55fe37af08dde46&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5867.52,-183.72 5866.08,-183.72 5866.08,-182.28 5867.52,-182.28 5867.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 261927e831374a74bb942745f50a86fb&amp;#45;&amp;#45;6b348cf6ac754f7ba55fe37af08dde46 --&gt;\n&lt;g id=\"edge1220\" class=\"edge\"&gt;\n&lt;title&gt;261927e831374a74bb942745f50a86fb&amp;#45;&amp;#45;6b348cf6ac754f7ba55fe37af08dde46&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5774.27,-183C5777,-183 5863.05,-183 5865.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1a6254d96f704756955a6509be259050 --&gt;\n&lt;g id=\"node1227\" class=\"node\"&gt;\n&lt;title&gt;1a6254d96f704756955a6509be259050&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5961.12,-183.72 5959.68,-183.72 5959.68,-182.28 5961.12,-182.28 5961.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b348cf6ac754f7ba55fe37af08dde46&amp;#45;&amp;#45;1a6254d96f704756955a6509be259050 --&gt;\n&lt;g id=\"edge1221\" class=\"edge\"&gt;\n&lt;title&gt;6b348cf6ac754f7ba55fe37af08dde46&amp;#45;&amp;#45;1a6254d96f704756955a6509be259050&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5867.87,-183C5870.6,-183 5956.65,-183 5959.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- babd2a79131c4be6907eb05ebeaad139 --&gt;\n&lt;g id=\"node1228\" class=\"node\"&gt;\n&lt;title&gt;babd2a79131c4be6907eb05ebeaad139&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6054.72,-183.72 6053.28,-183.72 6053.28,-182.28 6054.72,-182.28 6054.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1a6254d96f704756955a6509be259050&amp;#45;&amp;#45;babd2a79131c4be6907eb05ebeaad139 --&gt;\n&lt;g id=\"edge1222\" class=\"edge\"&gt;\n&lt;title&gt;1a6254d96f704756955a6509be259050&amp;#45;&amp;#45;babd2a79131c4be6907eb05ebeaad139&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5961.47,-183C5964.2,-183 6050.25,-183 6052.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 681d4558d9d746389e5570844a021aca --&gt;\n&lt;g id=\"node1229\" class=\"node\"&gt;\n&lt;title&gt;681d4558d9d746389e5570844a021aca&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6148.32,-183.72 6146.88,-183.72 6146.88,-182.28 6148.32,-182.28 6148.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- babd2a79131c4be6907eb05ebeaad139&amp;#45;&amp;#45;681d4558d9d746389e5570844a021aca --&gt;\n&lt;g id=\"edge1223\" class=\"edge\"&gt;\n&lt;title&gt;babd2a79131c4be6907eb05ebeaad139&amp;#45;&amp;#45;681d4558d9d746389e5570844a021aca&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6055.07,-183C6057.8,-183 6143.85,-183 6146.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- a529710d44b245878b8826f676b5c3c8 --&gt;\n&lt;g id=\"node1230\" class=\"node\"&gt;\n&lt;title&gt;a529710d44b245878b8826f676b5c3c8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6241.92,-183.72 6240.48,-183.72 6240.48,-182.28 6241.92,-182.28 6241.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 681d4558d9d746389e5570844a021aca&amp;#45;&amp;#45;a529710d44b245878b8826f676b5c3c8 --&gt;\n&lt;g id=\"edge1224\" class=\"edge\"&gt;\n&lt;title&gt;681d4558d9d746389e5570844a021aca&amp;#45;&amp;#45;a529710d44b245878b8826f676b5c3c8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6148.67,-183C6151.4,-183 6237.45,-183 6240.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- da22f98cd5d54d01871883f35f96f932 --&gt;\n&lt;g id=\"node1231\" class=\"node\"&gt;\n&lt;title&gt;da22f98cd5d54d01871883f35f96f932&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M6351.6,-211.8C6351.6,-211.8 6318,-211.8 6318,-211.8 6312,-211.8 6306,-205.8 6306,-199.8 6306,-199.8 6306,-166.2 6306,-166.2 6306,-160.2 6312,-154.2 6318,-154.2 6318,-154.2 6351.6,-154.2 6351.6,-154.2 6357.6,-154.2 6363.6,-160.2 6363.6,-166.2 6363.6,-166.2 6363.6,-199.8 6363.6,-199.8 6363.6,-205.8 6357.6,-211.8 6351.6,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"6334.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- a529710d44b245878b8826f676b5c3c8&amp;#45;&amp;#45;da22f98cd5d54d01871883f35f96f932 --&gt;\n&lt;g id=\"edge1225\" class=\"edge\"&gt;\n&lt;title&gt;a529710d44b245878b8826f676b5c3c8&amp;#45;&amp;#45;da22f98cd5d54d01871883f35f96f932&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6242.27,-183C6243.99,-183 6278.88,-183 6305.08,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- da22f98cd5d54d01871883f35f96f932&amp;#45;&amp;#45;781aaed20bde43c896c4277dd8a90d9c --&gt;\n&lt;g id=\"edge1977\" class=\"edge\"&gt;\n&lt;title&gt;da22f98cd5d54d01871883f35f96f932&amp;#45;&amp;#45;781aaed20bde43c896c4277dd8a90d9c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6334.8,-212.65C6334.8,-223.2 6334.8,-233.76 6334.8,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1ebea61b766e4fa08f692e05836d90d8 --&gt;\n&lt;g id=\"node1232\" class=\"node\"&gt;\n&lt;title&gt;1ebea61b766e4fa08f692e05836d90d8&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"6428.4\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- da22f98cd5d54d01871883f35f96f932&amp;#45;&amp;#45;1ebea61b766e4fa08f692e05836d90d8 --&gt;\n&lt;g id=\"edge1226\" class=\"edge\"&gt;\n&lt;title&gt;da22f98cd5d54d01871883f35f96f932&amp;#45;&amp;#45;1ebea61b766e4fa08f692e05836d90d8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6364.28,-183C6384.24,-183 6409.34,-183 6420.96,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 632e4286cc044f1387fe83658012a9ce --&gt;\n&lt;g id=\"node1233\" class=\"node\"&gt;\n&lt;title&gt;632e4286cc044f1387fe83658012a9ce&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6522.72,-183.72 6521.28,-183.72 6521.28,-182.28 6522.72,-182.28 6522.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1ebea61b766e4fa08f692e05836d90d8&amp;#45;&amp;#45;632e4286cc044f1387fe83658012a9ce --&gt;\n&lt;g id=\"edge1227\" class=\"edge\"&gt;\n&lt;title&gt;1ebea61b766e4fa08f692e05836d90d8&amp;#45;&amp;#45;632e4286cc044f1387fe83658012a9ce&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6435.99,-183C6456.33,-183 6517.04,-183 6520.82,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- f7f3db18727740928b3134e7b7787ef8 --&gt;\n&lt;g id=\"node1234\" class=\"node\"&gt;\n&lt;title&gt;f7f3db18727740928b3134e7b7787ef8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6675.12,-183.72 6673.68,-183.72 6673.68,-182.28 6675.12,-182.28 6675.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 632e4286cc044f1387fe83658012a9ce&amp;#45;&amp;#45;f7f3db18727740928b3134e7b7787ef8 --&gt;\n&lt;g id=\"edge1228\" class=\"edge\"&gt;\n&lt;title&gt;632e4286cc044f1387fe83658012a9ce&amp;#45;&amp;#45;f7f3db18727740928b3134e7b7787ef8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6523.11,-183C6527.59,-183 6668.88,-183 6673.29,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- e49c4b85c6f342d99ae075d4ebe558b7 --&gt;\n&lt;g id=\"node1235\" class=\"node\"&gt;\n&lt;title&gt;e49c4b85c6f342d99ae075d4ebe558b7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6827.52,-183.72 6826.08,-183.72 6826.08,-182.28 6827.52,-182.28 6827.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f7f3db18727740928b3134e7b7787ef8&amp;#45;&amp;#45;e49c4b85c6f342d99ae075d4ebe558b7 --&gt;\n&lt;g id=\"edge1229\" class=\"edge\"&gt;\n&lt;title&gt;f7f3db18727740928b3134e7b7787ef8&amp;#45;&amp;#45;e49c4b85c6f342d99ae075d4ebe558b7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6675.51,-183C6679.99,-183 6821.28,-183 6825.69,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 65164beb5b194944b301e0e9ca205bde --&gt;\n&lt;g id=\"node1236\" class=\"node\"&gt;\n&lt;title&gt;65164beb5b194944b301e0e9ca205bde&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"6920.4\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- e49c4b85c6f342d99ae075d4ebe558b7&amp;#45;&amp;#45;65164beb5b194944b301e0e9ca205bde --&gt;\n&lt;g id=\"edge1230\" class=\"edge\"&gt;\n&lt;title&gt;e49c4b85c6f342d99ae075d4ebe558b7&amp;#45;&amp;#45;65164beb5b194944b301e0e9ca205bde&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6827.87,-183C6830.17,-183 6892.01,-183 6912.72,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 00a493b082ca427ebc83f0179b7467dc --&gt;\n&lt;g id=\"node1237\" class=\"node\"&gt;\n&lt;title&gt;00a493b082ca427ebc83f0179b7467dc&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M7030.8,-211.8C7030.8,-211.8 6997.2,-211.8 6997.2,-211.8 6991.2,-211.8 6985.2,-205.8 6985.2,-199.8 6985.2,-199.8 6985.2,-166.2 6985.2,-166.2 6985.2,-160.2 6991.2,-154.2 6997.2,-154.2 6997.2,-154.2 7030.8,-154.2 7030.8,-154.2 7036.8,-154.2 7042.8,-160.2 7042.8,-166.2 7042.8,-166.2 7042.8,-199.8 7042.8,-199.8 7042.8,-205.8 7036.8,-211.8 7030.8,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"7014\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 65164beb5b194944b301e0e9ca205bde&amp;#45;&amp;#45;00a493b082ca427ebc83f0179b7467dc --&gt;\n&lt;g id=\"edge1231\" class=\"edge\"&gt;\n&lt;title&gt;65164beb5b194944b301e0e9ca205bde&amp;#45;&amp;#45;00a493b082ca427ebc83f0179b7467dc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6927.99,-183C6939.64,-183 6964.52,-183 6984.37,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 00a493b082ca427ebc83f0179b7467dc&amp;#45;&amp;#45;33841bf66cc74676b7c6115fbd380c1f --&gt;\n&lt;g id=\"edge1978\" class=\"edge\"&gt;\n&lt;title&gt;00a493b082ca427ebc83f0179b7467dc&amp;#45;&amp;#45;33841bf66cc74676b7c6115fbd380c1f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7014,-212.65C7014,-223.2 7014,-233.76 7014,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7dcc9aba2979436b8ced9f02d4f5e906 --&gt;\n&lt;g id=\"node1238\" class=\"node\"&gt;\n&lt;title&gt;7dcc9aba2979436b8ced9f02d4f5e906&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7108.32,-183.72 7106.88,-183.72 7106.88,-182.28 7108.32,-182.28 7108.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 00a493b082ca427ebc83f0179b7467dc&amp;#45;&amp;#45;7dcc9aba2979436b8ced9f02d4f5e906 --&gt;\n&lt;g id=\"edge1232\" class=\"edge\"&gt;\n&lt;title&gt;00a493b082ca427ebc83f0179b7467dc&amp;#45;&amp;#45;7dcc9aba2979436b8ced9f02d4f5e906&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7043.48,-183C7069.53,-183 7104.34,-183 7106.5,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 858631a6fc3f418b97b7d0e932b116a3 --&gt;\n&lt;g id=\"node1239\" class=\"node\"&gt;\n&lt;title&gt;858631a6fc3f418b97b7d0e932b116a3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7201.92,-183.72 7200.48,-183.72 7200.48,-182.28 7201.92,-182.28 7201.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7dcc9aba2979436b8ced9f02d4f5e906&amp;#45;&amp;#45;858631a6fc3f418b97b7d0e932b116a3 --&gt;\n&lt;g id=\"edge1233\" class=\"edge\"&gt;\n&lt;title&gt;7dcc9aba2979436b8ced9f02d4f5e906&amp;#45;&amp;#45;858631a6fc3f418b97b7d0e932b116a3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7108.67,-183C7111.4,-183 7197.45,-183 7200.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 77c5caedd5e34466b71d423dc9003c52 --&gt;\n&lt;g id=\"node1240\" class=\"node\"&gt;\n&lt;title&gt;77c5caedd5e34466b71d423dc9003c52&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7295.52,-183.72 7294.08,-183.72 7294.08,-182.28 7295.52,-182.28 7295.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 858631a6fc3f418b97b7d0e932b116a3&amp;#45;&amp;#45;77c5caedd5e34466b71d423dc9003c52 --&gt;\n&lt;g id=\"edge1234\" class=\"edge\"&gt;\n&lt;title&gt;858631a6fc3f418b97b7d0e932b116a3&amp;#45;&amp;#45;77c5caedd5e34466b71d423dc9003c52&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7202.27,-183C7205,-183 7291.05,-183 7293.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3a35e7222c3b4ed78ca2c0d2d4203555 --&gt;\n&lt;g id=\"node1241\" class=\"node\"&gt;\n&lt;title&gt;3a35e7222c3b4ed78ca2c0d2d4203555&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7389.12,-183.72 7387.68,-183.72 7387.68,-182.28 7389.12,-182.28 7389.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 77c5caedd5e34466b71d423dc9003c52&amp;#45;&amp;#45;3a35e7222c3b4ed78ca2c0d2d4203555 --&gt;\n&lt;g id=\"edge1235\" class=\"edge\"&gt;\n&lt;title&gt;77c5caedd5e34466b71d423dc9003c52&amp;#45;&amp;#45;3a35e7222c3b4ed78ca2c0d2d4203555&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7295.87,-183C7298.6,-183 7384.65,-183 7387.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- efa2805134b24218af0c0d4eac57fc86 --&gt;\n&lt;g id=\"node1242\" class=\"node\"&gt;\n&lt;title&gt;efa2805134b24218af0c0d4eac57fc86&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7482.72,-183.72 7481.28,-183.72 7481.28,-182.28 7482.72,-182.28 7482.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3a35e7222c3b4ed78ca2c0d2d4203555&amp;#45;&amp;#45;efa2805134b24218af0c0d4eac57fc86 --&gt;\n&lt;g id=\"edge1236\" class=\"edge\"&gt;\n&lt;title&gt;3a35e7222c3b4ed78ca2c0d2d4203555&amp;#45;&amp;#45;efa2805134b24218af0c0d4eac57fc86&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7389.47,-183C7392.2,-183 7478.25,-183 7480.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 70f6116853e149f48a0fcf4c19c06e37 --&gt;\n&lt;g id=\"node1243\" class=\"node\"&gt;\n&lt;title&gt;70f6116853e149f48a0fcf4c19c06e37&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M7592.4,-211.8C7592.4,-211.8 7558.8,-211.8 7558.8,-211.8 7552.8,-211.8 7546.8,-205.8 7546.8,-199.8 7546.8,-199.8 7546.8,-166.2 7546.8,-166.2 7546.8,-160.2 7552.8,-154.2 7558.8,-154.2 7558.8,-154.2 7592.4,-154.2 7592.4,-154.2 7598.4,-154.2 7604.4,-160.2 7604.4,-166.2 7604.4,-166.2 7604.4,-199.8 7604.4,-199.8 7604.4,-205.8 7598.4,-211.8 7592.4,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"7575.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- efa2805134b24218af0c0d4eac57fc86&amp;#45;&amp;#45;70f6116853e149f48a0fcf4c19c06e37 --&gt;\n&lt;g id=\"edge1237\" class=\"edge\"&gt;\n&lt;title&gt;efa2805134b24218af0c0d4eac57fc86&amp;#45;&amp;#45;70f6116853e149f48a0fcf4c19c06e37&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7483.07,-183C7484.79,-183 7519.68,-183 7545.88,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 70f6116853e149f48a0fcf4c19c06e37&amp;#45;&amp;#45;92bf3ef483f54bf485e07e0ee0bc2e2a --&gt;\n&lt;g id=\"edge1979\" class=\"edge\"&gt;\n&lt;title&gt;70f6116853e149f48a0fcf4c19c06e37&amp;#45;&amp;#45;92bf3ef483f54bf485e07e0ee0bc2e2a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7575.6,-212.65C7575.6,-223.2 7575.6,-233.76 7575.6,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 62eb76160b4c49e29f3bcd51841f5342 --&gt;\n&lt;g id=\"node1244\" class=\"node\"&gt;\n&lt;title&gt;62eb76160b4c49e29f3bcd51841f5342&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"7669.2\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 70f6116853e149f48a0fcf4c19c06e37&amp;#45;&amp;#45;62eb76160b4c49e29f3bcd51841f5342 --&gt;\n&lt;g id=\"edge1238\" class=\"edge\"&gt;\n&lt;title&gt;70f6116853e149f48a0fcf4c19c06e37&amp;#45;&amp;#45;62eb76160b4c49e29f3bcd51841f5342&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7605.08,-183C7625.04,-183 7650.14,-183 7661.76,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 135b7b04f65148619f1052f9032c09f0 --&gt;\n&lt;g id=\"node1245\" class=\"node\"&gt;\n&lt;title&gt;135b7b04f65148619f1052f9032c09f0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7763.52,-183.72 7762.08,-183.72 7762.08,-182.28 7763.52,-182.28 7763.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 62eb76160b4c49e29f3bcd51841f5342&amp;#45;&amp;#45;135b7b04f65148619f1052f9032c09f0 --&gt;\n&lt;g id=\"edge1239\" class=\"edge\"&gt;\n&lt;title&gt;62eb76160b4c49e29f3bcd51841f5342&amp;#45;&amp;#45;135b7b04f65148619f1052f9032c09f0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7676.79,-183C7697.13,-183 7757.84,-183 7761.62,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7a6bfa6356074e8cbdbe802c3556b2e0 --&gt;\n&lt;g id=\"node1246\" class=\"node\"&gt;\n&lt;title&gt;7a6bfa6356074e8cbdbe802c3556b2e0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7915.92,-183.72 7914.48,-183.72 7914.48,-182.28 7915.92,-182.28 7915.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 135b7b04f65148619f1052f9032c09f0&amp;#45;&amp;#45;7a6bfa6356074e8cbdbe802c3556b2e0 --&gt;\n&lt;g id=\"edge1240\" class=\"edge\"&gt;\n&lt;title&gt;135b7b04f65148619f1052f9032c09f0&amp;#45;&amp;#45;7a6bfa6356074e8cbdbe802c3556b2e0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7763.91,-183C7768.39,-183 7909.68,-183 7914.09,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 55eac85230184f738c30a22374eb3f75 --&gt;\n&lt;g id=\"node1247\" class=\"node\"&gt;\n&lt;title&gt;55eac85230184f738c30a22374eb3f75&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8068.32,-183.72 8066.88,-183.72 8066.88,-182.28 8068.32,-182.28 8068.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7a6bfa6356074e8cbdbe802c3556b2e0&amp;#45;&amp;#45;55eac85230184f738c30a22374eb3f75 --&gt;\n&lt;g id=\"edge1241\" class=\"edge\"&gt;\n&lt;title&gt;7a6bfa6356074e8cbdbe802c3556b2e0&amp;#45;&amp;#45;55eac85230184f738c30a22374eb3f75&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7916.31,-183C7920.79,-183 8062.08,-183 8066.49,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8fb00ccf4da14653b97af7a714188d17 --&gt;\n&lt;g id=\"node1248\" class=\"node\"&gt;\n&lt;title&gt;8fb00ccf4da14653b97af7a714188d17&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"8161.2\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 55eac85230184f738c30a22374eb3f75&amp;#45;&amp;#45;8fb00ccf4da14653b97af7a714188d17 --&gt;\n&lt;g id=\"edge1242\" class=\"edge\"&gt;\n&lt;title&gt;55eac85230184f738c30a22374eb3f75&amp;#45;&amp;#45;8fb00ccf4da14653b97af7a714188d17&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8068.67,-183C8070.97,-183 8132.81,-183 8153.52,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0cada488ad3d41c7be54acdc8c6c39ca --&gt;\n&lt;g id=\"node1249\" class=\"node\"&gt;\n&lt;title&gt;0cada488ad3d41c7be54acdc8c6c39ca&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M8271.6,-211.8C8271.6,-211.8 8238,-211.8 8238,-211.8 8232,-211.8 8226,-205.8 8226,-199.8 8226,-199.8 8226,-166.2 8226,-166.2 8226,-160.2 8232,-154.2 8238,-154.2 8238,-154.2 8271.6,-154.2 8271.6,-154.2 8277.6,-154.2 8283.6,-160.2 8283.6,-166.2 8283.6,-166.2 8283.6,-199.8 8283.6,-199.8 8283.6,-205.8 8277.6,-211.8 8271.6,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"8254.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 8fb00ccf4da14653b97af7a714188d17&amp;#45;&amp;#45;0cada488ad3d41c7be54acdc8c6c39ca --&gt;\n&lt;g id=\"edge1243\" class=\"edge\"&gt;\n&lt;title&gt;8fb00ccf4da14653b97af7a714188d17&amp;#45;&amp;#45;0cada488ad3d41c7be54acdc8c6c39ca&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8168.79,-183C8180.44,-183 8205.32,-183 8225.17,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0cada488ad3d41c7be54acdc8c6c39ca&amp;#45;&amp;#45;927bfea9c5984fd493df6102c9415dd8 --&gt;\n&lt;g id=\"edge1980\" class=\"edge\"&gt;\n&lt;title&gt;0cada488ad3d41c7be54acdc8c6c39ca&amp;#45;&amp;#45;927bfea9c5984fd493df6102c9415dd8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8254.8,-212.65C8254.8,-223.2 8254.8,-233.76 8254.8,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 912d29d31b954e8e98ddd5458994df6a --&gt;\n&lt;g id=\"node1250\" class=\"node\"&gt;\n&lt;title&gt;912d29d31b954e8e98ddd5458994df6a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8349.12,-183.72 8347.68,-183.72 8347.68,-182.28 8349.12,-182.28 8349.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0cada488ad3d41c7be54acdc8c6c39ca&amp;#45;&amp;#45;912d29d31b954e8e98ddd5458994df6a --&gt;\n&lt;g id=\"edge1244\" class=\"edge\"&gt;\n&lt;title&gt;0cada488ad3d41c7be54acdc8c6c39ca&amp;#45;&amp;#45;912d29d31b954e8e98ddd5458994df6a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8284.28,-183C8310.33,-183 8345.14,-183 8347.3,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- ec5e3d347db54468840f9f689ee5592c --&gt;\n&lt;g id=\"node1251\" class=\"node\"&gt;\n&lt;title&gt;ec5e3d347db54468840f9f689ee5592c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8442.72,-183.72 8441.28,-183.72 8441.28,-182.28 8442.72,-182.28 8442.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 912d29d31b954e8e98ddd5458994df6a&amp;#45;&amp;#45;ec5e3d347db54468840f9f689ee5592c --&gt;\n&lt;g id=\"edge1245\" class=\"edge\"&gt;\n&lt;title&gt;912d29d31b954e8e98ddd5458994df6a&amp;#45;&amp;#45;ec5e3d347db54468840f9f689ee5592c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8349.47,-183C8352.2,-183 8438.25,-183 8440.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b3f88d300a14498a91d1571429c63e4 --&gt;\n&lt;g id=\"node1252\" class=\"node\"&gt;\n&lt;title&gt;6b3f88d300a14498a91d1571429c63e4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8536.32,-183.72 8534.88,-183.72 8534.88,-182.28 8536.32,-182.28 8536.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ec5e3d347db54468840f9f689ee5592c&amp;#45;&amp;#45;6b3f88d300a14498a91d1571429c63e4 --&gt;\n&lt;g id=\"edge1246\" class=\"edge\"&gt;\n&lt;title&gt;ec5e3d347db54468840f9f689ee5592c&amp;#45;&amp;#45;6b3f88d300a14498a91d1571429c63e4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8443.07,-183C8445.8,-183 8531.85,-183 8534.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93874b23abc84180a9e3c04d4813fda2 --&gt;\n&lt;g id=\"node1253\" class=\"node\"&gt;\n&lt;title&gt;93874b23abc84180a9e3c04d4813fda2&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M8646,-211.8C8646,-211.8 8612.4,-211.8 8612.4,-211.8 8606.4,-211.8 8600.4,-205.8 8600.4,-199.8 8600.4,-199.8 8600.4,-166.2 8600.4,-166.2 8600.4,-160.2 8606.4,-154.2 8612.4,-154.2 8612.4,-154.2 8646,-154.2 8646,-154.2 8652,-154.2 8658,-160.2 8658,-166.2 8658,-166.2 8658,-199.8 8658,-199.8 8658,-205.8 8652,-211.8 8646,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"8629.2\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 6b3f88d300a14498a91d1571429c63e4&amp;#45;&amp;#45;93874b23abc84180a9e3c04d4813fda2 --&gt;\n&lt;g id=\"edge1247\" class=\"edge\"&gt;\n&lt;title&gt;6b3f88d300a14498a91d1571429c63e4&amp;#45;&amp;#45;93874b23abc84180a9e3c04d4813fda2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8536.67,-183C8538.39,-183 8573.28,-183 8599.48,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93874b23abc84180a9e3c04d4813fda2&amp;#45;&amp;#45;1bdfc730baea4929b6fe65b61f7f05e4 --&gt;\n&lt;g id=\"edge1981\" class=\"edge\"&gt;\n&lt;title&gt;93874b23abc84180a9e3c04d4813fda2&amp;#45;&amp;#45;1bdfc730baea4929b6fe65b61f7f05e4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8629.2,-212.65C8629.2,-223.2 8629.2,-233.76 8629.2,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- f5e2a0cd22ae41a3beafd11ec9c4a60c --&gt;\n&lt;g id=\"node1254\" class=\"node\"&gt;\n&lt;title&gt;f5e2a0cd22ae41a3beafd11ec9c4a60c&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M8857.2,-211.8C8857.2,-211.8 8706,-211.8 8706,-211.8 8700,-211.8 8694,-205.8 8694,-199.8 8694,-199.8 8694,-166.2 8694,-166.2 8694,-160.2 8700,-154.2 8706,-154.2 8706,-154.2 8857.2,-154.2 8857.2,-154.2 8863.2,-154.2 8869.2,-160.2 8869.2,-166.2 8869.2,-166.2 8869.2,-199.8 8869.2,-199.8 8869.2,-205.8 8863.2,-211.8 8857.2,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"8781.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 93874b23abc84180a9e3c04d4813fda2&amp;#45;&amp;#45;f5e2a0cd22ae41a3beafd11ec9c4a60c --&gt;\n&lt;g id=\"edge1248\" class=\"edge\"&gt;\n&lt;title&gt;93874b23abc84180a9e3c04d4813fda2&amp;#45;&amp;#45;f5e2a0cd22ae41a3beafd11ec9c4a60c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8658.84,-183C8668.9,-183 8680.79,-183 8693.13,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 748874384f584cbc8382cd061f2e8104 --&gt;\n&lt;g id=\"node1255\" class=\"node\"&gt;\n&lt;title&gt;748874384f584cbc8382cd061f2e8104&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M8950.8,-211.8C8950.8,-211.8 8917.2,-211.8 8917.2,-211.8 8911.2,-211.8 8905.2,-205.8 8905.2,-199.8 8905.2,-199.8 8905.2,-166.2 8905.2,-166.2 8905.2,-160.2 8911.2,-154.2 8917.2,-154.2 8917.2,-154.2 8950.8,-154.2 8950.8,-154.2 8956.8,-154.2 8962.8,-160.2 8962.8,-166.2 8962.8,-166.2 8962.8,-199.8 8962.8,-199.8 8962.8,-205.8 8956.8,-211.8 8950.8,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"8934\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- f5e2a0cd22ae41a3beafd11ec9c4a60c&amp;#45;&amp;#45;748874384f584cbc8382cd061f2e8104 --&gt;\n&lt;g id=\"edge1249\" class=\"edge\"&gt;\n&lt;title&gt;f5e2a0cd22ae41a3beafd11ec9c4a60c&amp;#45;&amp;#45;748874384f584cbc8382cd061f2e8104&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8870.09,-183C8882.37,-183 8894.2,-183 8904.22,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 748874384f584cbc8382cd061f2e8104&amp;#45;&amp;#45;e316eec1fad8448db3012b624ece64aa --&gt;\n&lt;g id=\"edge1982\" class=\"edge\"&gt;\n&lt;title&gt;748874384f584cbc8382cd061f2e8104&amp;#45;&amp;#45;e316eec1fad8448db3012b624ece64aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8934,-212.65C8934,-223.2 8934,-233.76 8934,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3ec0048e49b54173a048f741bcfc00fe --&gt;\n&lt;g id=\"node1256\" class=\"node\"&gt;\n&lt;title&gt;3ec0048e49b54173a048f741bcfc00fe&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9028.32,-183.72 9026.88,-183.72 9026.88,-182.28 9028.32,-182.28 9028.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 748874384f584cbc8382cd061f2e8104&amp;#45;&amp;#45;3ec0048e49b54173a048f741bcfc00fe --&gt;\n&lt;g id=\"edge1250\" class=\"edge\"&gt;\n&lt;title&gt;748874384f584cbc8382cd061f2e8104&amp;#45;&amp;#45;3ec0048e49b54173a048f741bcfc00fe&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8963.48,-183C8989.53,-183 9024.34,-183 9026.5,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 185b7ff772e142a6ae076d89bdf878f7 --&gt;\n&lt;g id=\"node1257\" class=\"node\"&gt;\n&lt;title&gt;185b7ff772e142a6ae076d89bdf878f7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9121.92,-183.72 9120.48,-183.72 9120.48,-182.28 9121.92,-182.28 9121.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3ec0048e49b54173a048f741bcfc00fe&amp;#45;&amp;#45;185b7ff772e142a6ae076d89bdf878f7 --&gt;\n&lt;g id=\"edge1251\" class=\"edge\"&gt;\n&lt;title&gt;3ec0048e49b54173a048f741bcfc00fe&amp;#45;&amp;#45;185b7ff772e142a6ae076d89bdf878f7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9028.67,-183C9031.4,-183 9117.45,-183 9120.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- e89cf18ffb5b412b9cbdc31b8df16554 --&gt;\n&lt;g id=\"node1258\" class=\"node\"&gt;\n&lt;title&gt;e89cf18ffb5b412b9cbdc31b8df16554&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M9231.6,-211.8C9231.6,-211.8 9198,-211.8 9198,-211.8 9192,-211.8 9186,-205.8 9186,-199.8 9186,-199.8 9186,-166.2 9186,-166.2 9186,-160.2 9192,-154.2 9198,-154.2 9198,-154.2 9231.6,-154.2 9231.6,-154.2 9237.6,-154.2 9243.6,-160.2 9243.6,-166.2 9243.6,-166.2 9243.6,-199.8 9243.6,-199.8 9243.6,-205.8 9237.6,-211.8 9231.6,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"9214.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 185b7ff772e142a6ae076d89bdf878f7&amp;#45;&amp;#45;e89cf18ffb5b412b9cbdc31b8df16554 --&gt;\n&lt;g id=\"edge1252\" class=\"edge\"&gt;\n&lt;title&gt;185b7ff772e142a6ae076d89bdf878f7&amp;#45;&amp;#45;e89cf18ffb5b412b9cbdc31b8df16554&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9122.27,-183C9123.99,-183 9158.88,-183 9185.08,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- e89cf18ffb5b412b9cbdc31b8df16554&amp;#45;&amp;#45;0439151d71634190bcf149f53fb12f73 --&gt;\n&lt;g id=\"edge1983\" class=\"edge\"&gt;\n&lt;title&gt;e89cf18ffb5b412b9cbdc31b8df16554&amp;#45;&amp;#45;0439151d71634190bcf149f53fb12f73&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9214.8,-212.65C9214.8,-223.2 9214.8,-233.76 9214.8,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 974a25f983b74a85940d5bd5d5e94b06 --&gt;\n&lt;g id=\"node1259\" class=\"node\"&gt;\n&lt;title&gt;974a25f983b74a85940d5bd5d5e94b06&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"9308.4\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- e89cf18ffb5b412b9cbdc31b8df16554&amp;#45;&amp;#45;974a25f983b74a85940d5bd5d5e94b06 --&gt;\n&lt;g id=\"edge1253\" class=\"edge\"&gt;\n&lt;title&gt;e89cf18ffb5b412b9cbdc31b8df16554&amp;#45;&amp;#45;974a25f983b74a85940d5bd5d5e94b06&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9244.28,-183C9264.24,-183 9289.34,-183 9300.96,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- be1dcb9aafcc4386bee4f629bf4ed5a3 --&gt;\n&lt;g id=\"node1260\" class=\"node\"&gt;\n&lt;title&gt;be1dcb9aafcc4386bee4f629bf4ed5a3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9461.52,-183.72 9460.08,-183.72 9460.08,-182.28 9461.52,-182.28 9461.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 974a25f983b74a85940d5bd5d5e94b06&amp;#45;&amp;#45;be1dcb9aafcc4386bee4f629bf4ed5a3 --&gt;\n&lt;g id=\"edge1254\" class=\"edge\"&gt;\n&lt;title&gt;974a25f983b74a85940d5bd5d5e94b06&amp;#45;&amp;#45;be1dcb9aafcc4386bee4f629bf4ed5a3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9315.86,-183C9344.2,-183 9456.22,-183 9459.72,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- d4424df58d0042dc8c8a0ffe67b39120 --&gt;\n&lt;g id=\"node1261\" class=\"node\"&gt;\n&lt;title&gt;d4424df58d0042dc8c8a0ffe67b39120&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"9613.2\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- be1dcb9aafcc4386bee4f629bf4ed5a3&amp;#45;&amp;#45;d4424df58d0042dc8c8a0ffe67b39120 --&gt;\n&lt;g id=\"edge1255\" class=\"edge\"&gt;\n&lt;title&gt;be1dcb9aafcc4386bee4f629bf4ed5a3&amp;#45;&amp;#45;d4424df58d0042dc8c8a0ffe67b39120&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9461.91,-183C9465.88,-183 9576.97,-183 9605.55,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5633d715b126474daae20eadebaff13d --&gt;\n&lt;g id=\"node1262\" class=\"node\"&gt;\n&lt;title&gt;5633d715b126474daae20eadebaff13d&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M9723.6,-211.8C9723.6,-211.8 9690,-211.8 9690,-211.8 9684,-211.8 9678,-205.8 9678,-199.8 9678,-199.8 9678,-166.2 9678,-166.2 9678,-160.2 9684,-154.2 9690,-154.2 9690,-154.2 9723.6,-154.2 9723.6,-154.2 9729.6,-154.2 9735.6,-160.2 9735.6,-166.2 9735.6,-166.2 9735.6,-199.8 9735.6,-199.8 9735.6,-205.8 9729.6,-211.8 9723.6,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"9706.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d4424df58d0042dc8c8a0ffe67b39120&amp;#45;&amp;#45;5633d715b126474daae20eadebaff13d --&gt;\n&lt;g id=\"edge1256\" class=\"edge\"&gt;\n&lt;title&gt;d4424df58d0042dc8c8a0ffe67b39120&amp;#45;&amp;#45;5633d715b126474daae20eadebaff13d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9620.79,-183C9632.44,-183 9657.32,-183 9677.17,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5633d715b126474daae20eadebaff13d&amp;#45;&amp;#45;645151fa55af4adbbc6cfca9cf1d51ba --&gt;\n&lt;g id=\"edge1984\" class=\"edge\"&gt;\n&lt;title&gt;5633d715b126474daae20eadebaff13d&amp;#45;&amp;#45;645151fa55af4adbbc6cfca9cf1d51ba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9706.8,-212.65C9706.8,-223.2 9706.8,-233.76 9706.8,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7af393b9e05a41ae9783dac5e674a026 --&gt;\n&lt;g id=\"node1263\" class=\"node\"&gt;\n&lt;title&gt;7af393b9e05a41ae9783dac5e674a026&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9801.12,-183.72 9799.68,-183.72 9799.68,-182.28 9801.12,-182.28 9801.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5633d715b126474daae20eadebaff13d&amp;#45;&amp;#45;7af393b9e05a41ae9783dac5e674a026 --&gt;\n&lt;g id=\"edge1257\" class=\"edge\"&gt;\n&lt;title&gt;5633d715b126474daae20eadebaff13d&amp;#45;&amp;#45;7af393b9e05a41ae9783dac5e674a026&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9736.28,-183C9762.33,-183 9797.14,-183 9799.3,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- d9e1fd97e4d34e179f283f067ea0f367 --&gt;\n&lt;g id=\"node1264\" class=\"node\"&gt;\n&lt;title&gt;d9e1fd97e4d34e179f283f067ea0f367&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9894.72,-183.72 9893.28,-183.72 9893.28,-182.28 9894.72,-182.28 9894.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7af393b9e05a41ae9783dac5e674a026&amp;#45;&amp;#45;d9e1fd97e4d34e179f283f067ea0f367 --&gt;\n&lt;g id=\"edge1258\" class=\"edge\"&gt;\n&lt;title&gt;7af393b9e05a41ae9783dac5e674a026&amp;#45;&amp;#45;d9e1fd97e4d34e179f283f067ea0f367&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9801.47,-183C9804.2,-183 9890.25,-183 9892.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- fc6deb008ad142429e61504d33a1c083 --&gt;\n&lt;g id=\"node1265\" class=\"node\"&gt;\n&lt;title&gt;fc6deb008ad142429e61504d33a1c083&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M10004.4,-211.8C10004.4,-211.8 9970.8,-211.8 9970.8,-211.8 9964.8,-211.8 9958.8,-205.8 9958.8,-199.8 9958.8,-199.8 9958.8,-166.2 9958.8,-166.2 9958.8,-160.2 9964.8,-154.2 9970.8,-154.2 9970.8,-154.2 10004.4,-154.2 10004.4,-154.2 10010.4,-154.2 10016.4,-160.2 10016.4,-166.2 10016.4,-166.2 10016.4,-199.8 10016.4,-199.8 10016.4,-205.8 10010.4,-211.8 10004.4,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"9987.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d9e1fd97e4d34e179f283f067ea0f367&amp;#45;&amp;#45;fc6deb008ad142429e61504d33a1c083 --&gt;\n&lt;g id=\"edge1259\" class=\"edge\"&gt;\n&lt;title&gt;d9e1fd97e4d34e179f283f067ea0f367&amp;#45;&amp;#45;fc6deb008ad142429e61504d33a1c083&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9895.07,-183C9896.79,-183 9931.68,-183 9957.88,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- fc6deb008ad142429e61504d33a1c083&amp;#45;&amp;#45;763a19a9ff77456183815c131a709398 --&gt;\n&lt;g id=\"edge1985\" class=\"edge\"&gt;\n&lt;title&gt;fc6deb008ad142429e61504d33a1c083&amp;#45;&amp;#45;763a19a9ff77456183815c131a709398&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9987.6,-212.65C9987.6,-223.2 9987.6,-233.76 9987.6,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5601a335a06745ff86448efb307d6132 --&gt;\n&lt;g id=\"node1266\" class=\"node\"&gt;\n&lt;title&gt;5601a335a06745ff86448efb307d6132&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"10081.2\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- fc6deb008ad142429e61504d33a1c083&amp;#45;&amp;#45;5601a335a06745ff86448efb307d6132 --&gt;\n&lt;g id=\"edge1260\" class=\"edge\"&gt;\n&lt;title&gt;fc6deb008ad142429e61504d33a1c083&amp;#45;&amp;#45;5601a335a06745ff86448efb307d6132&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10017.08,-183C10037.04,-183 10062.14,-183 10073.76,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 726bb8f6c41240a2972a865b562d463e --&gt;\n&lt;g id=\"node1267\" class=\"node\"&gt;\n&lt;title&gt;726bb8f6c41240a2972a865b562d463e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10175.52,-183.72 10174.08,-183.72 10174.08,-182.28 10175.52,-182.28 10175.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5601a335a06745ff86448efb307d6132&amp;#45;&amp;#45;726bb8f6c41240a2972a865b562d463e --&gt;\n&lt;g id=\"edge1261\" class=\"edge\"&gt;\n&lt;title&gt;5601a335a06745ff86448efb307d6132&amp;#45;&amp;#45;726bb8f6c41240a2972a865b562d463e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10088.79,-183C10109.13,-183 10169.84,-183 10173.62,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- a91d9639b5ad433bb4939e298cfb743b --&gt;\n&lt;g id=\"node1268\" class=\"node\"&gt;\n&lt;title&gt;a91d9639b5ad433bb4939e298cfb743b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10327.92,-183.72 10326.48,-183.72 10326.48,-182.28 10327.92,-182.28 10327.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 726bb8f6c41240a2972a865b562d463e&amp;#45;&amp;#45;a91d9639b5ad433bb4939e298cfb743b --&gt;\n&lt;g id=\"edge1262\" class=\"edge\"&gt;\n&lt;title&gt;726bb8f6c41240a2972a865b562d463e&amp;#45;&amp;#45;a91d9639b5ad433bb4939e298cfb743b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10175.91,-183C10180.39,-183 10321.68,-183 10326.09,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 070b1e06d96549999ab3724b3ebdae25 --&gt;\n&lt;g id=\"node1269\" class=\"node\"&gt;\n&lt;title&gt;070b1e06d96549999ab3724b3ebdae25&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10480.32,-183.72 10478.88,-183.72 10478.88,-182.28 10480.32,-182.28 10480.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a91d9639b5ad433bb4939e298cfb743b&amp;#45;&amp;#45;070b1e06d96549999ab3724b3ebdae25 --&gt;\n&lt;g id=\"edge1263\" class=\"edge\"&gt;\n&lt;title&gt;a91d9639b5ad433bb4939e298cfb743b&amp;#45;&amp;#45;070b1e06d96549999ab3724b3ebdae25&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10328.31,-183C10332.79,-183 10474.08,-183 10478.49,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98b07bd09057460b8b2b0db15dc0f65f --&gt;\n&lt;g id=\"node1270\" class=\"node\"&gt;\n&lt;title&gt;98b07bd09057460b8b2b0db15dc0f65f&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"10573.2\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 070b1e06d96549999ab3724b3ebdae25&amp;#45;&amp;#45;98b07bd09057460b8b2b0db15dc0f65f --&gt;\n&lt;g id=\"edge1264\" class=\"edge\"&gt;\n&lt;title&gt;070b1e06d96549999ab3724b3ebdae25&amp;#45;&amp;#45;98b07bd09057460b8b2b0db15dc0f65f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10480.67,-183C10482.97,-183 10544.81,-183 10565.52,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- df674232552d481f933883177cdc2b91 --&gt;\n&lt;g id=\"node1271\" class=\"node\"&gt;\n&lt;title&gt;df674232552d481f933883177cdc2b91&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M10683.6,-211.8C10683.6,-211.8 10650,-211.8 10650,-211.8 10644,-211.8 10638,-205.8 10638,-199.8 10638,-199.8 10638,-166.2 10638,-166.2 10638,-160.2 10644,-154.2 10650,-154.2 10650,-154.2 10683.6,-154.2 10683.6,-154.2 10689.6,-154.2 10695.6,-160.2 10695.6,-166.2 10695.6,-166.2 10695.6,-199.8 10695.6,-199.8 10695.6,-205.8 10689.6,-211.8 10683.6,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"10666.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 98b07bd09057460b8b2b0db15dc0f65f&amp;#45;&amp;#45;df674232552d481f933883177cdc2b91 --&gt;\n&lt;g id=\"edge1265\" class=\"edge\"&gt;\n&lt;title&gt;98b07bd09057460b8b2b0db15dc0f65f&amp;#45;&amp;#45;df674232552d481f933883177cdc2b91&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10580.79,-183C10592.44,-183 10617.32,-183 10637.17,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- df674232552d481f933883177cdc2b91&amp;#45;&amp;#45;b727652443a6478eac179e846c6492f7 --&gt;\n&lt;g id=\"edge1986\" class=\"edge\"&gt;\n&lt;title&gt;df674232552d481f933883177cdc2b91&amp;#45;&amp;#45;b727652443a6478eac179e846c6492f7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10666.8,-212.65C10666.8,-223.2 10666.8,-233.76 10666.8,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 95b984196aac48bea71323382c49e69a --&gt;\n&lt;g id=\"node1272\" class=\"node\"&gt;\n&lt;title&gt;95b984196aac48bea71323382c49e69a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10761.12,-183.72 10759.68,-183.72 10759.68,-182.28 10761.12,-182.28 10761.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- df674232552d481f933883177cdc2b91&amp;#45;&amp;#45;95b984196aac48bea71323382c49e69a --&gt;\n&lt;g id=\"edge1266\" class=\"edge\"&gt;\n&lt;title&gt;df674232552d481f933883177cdc2b91&amp;#45;&amp;#45;95b984196aac48bea71323382c49e69a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10696.28,-183C10722.33,-183 10757.14,-183 10759.3,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 10fd74c1ba8d4491bb2b0596cfc4217e --&gt;\n&lt;g id=\"node1273\" class=\"node\"&gt;\n&lt;title&gt;10fd74c1ba8d4491bb2b0596cfc4217e&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M10870.8,-211.8C10870.8,-211.8 10837.2,-211.8 10837.2,-211.8 10831.2,-211.8 10825.2,-205.8 10825.2,-199.8 10825.2,-199.8 10825.2,-166.2 10825.2,-166.2 10825.2,-160.2 10831.2,-154.2 10837.2,-154.2 10837.2,-154.2 10870.8,-154.2 10870.8,-154.2 10876.8,-154.2 10882.8,-160.2 10882.8,-166.2 10882.8,-166.2 10882.8,-199.8 10882.8,-199.8 10882.8,-205.8 10876.8,-211.8 10870.8,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"10854\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 95b984196aac48bea71323382c49e69a&amp;#45;&amp;#45;10fd74c1ba8d4491bb2b0596cfc4217e --&gt;\n&lt;g id=\"edge1267\" class=\"edge\"&gt;\n&lt;title&gt;95b984196aac48bea71323382c49e69a&amp;#45;&amp;#45;10fd74c1ba8d4491bb2b0596cfc4217e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10761.47,-183C10763.19,-183 10798.08,-183 10824.28,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 10fd74c1ba8d4491bb2b0596cfc4217e&amp;#45;&amp;#45;00250f4e505f4af5a66c5a2f22b52cd2 --&gt;\n&lt;g id=\"edge1987\" class=\"edge\"&gt;\n&lt;title&gt;10fd74c1ba8d4491bb2b0596cfc4217e&amp;#45;&amp;#45;00250f4e505f4af5a66c5a2f22b52cd2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10854,-212.65C10854,-223.2 10854,-233.76 10854,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- a8f972ffa5d642839c3c8a0fb74718f8 --&gt;\n&lt;g id=\"node1274\" class=\"node\"&gt;\n&lt;title&gt;a8f972ffa5d642839c3c8a0fb74718f8&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M11082,-211.8C11082,-211.8 10930.8,-211.8 10930.8,-211.8 10924.8,-211.8 10918.8,-205.8 10918.8,-199.8 10918.8,-199.8 10918.8,-166.2 10918.8,-166.2 10918.8,-160.2 10924.8,-154.2 10930.8,-154.2 10930.8,-154.2 11082,-154.2 11082,-154.2 11088,-154.2 11094,-160.2 11094,-166.2 11094,-166.2 11094,-199.8 11094,-199.8 11094,-205.8 11088,-211.8 11082,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"11006.4\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 10fd74c1ba8d4491bb2b0596cfc4217e&amp;#45;&amp;#45;a8f972ffa5d642839c3c8a0fb74718f8 --&gt;\n&lt;g id=\"edge1268\" class=\"edge\"&gt;\n&lt;title&gt;10fd74c1ba8d4491bb2b0596cfc4217e&amp;#45;&amp;#45;a8f972ffa5d642839c3c8a0fb74718f8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10883.64,-183C10893.7,-183 10905.59,-183 10917.93,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5f113ec52d1d41ae84ed0065496865fa --&gt;\n&lt;g id=\"node1275\" class=\"node\"&gt;\n&lt;title&gt;5f113ec52d1d41ae84ed0065496865fa&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M11175.6,-211.8C11175.6,-211.8 11142,-211.8 11142,-211.8 11136,-211.8 11130,-205.8 11130,-199.8 11130,-199.8 11130,-166.2 11130,-166.2 11130,-160.2 11136,-154.2 11142,-154.2 11142,-154.2 11175.6,-154.2 11175.6,-154.2 11181.6,-154.2 11187.6,-160.2 11187.6,-166.2 11187.6,-166.2 11187.6,-199.8 11187.6,-199.8 11187.6,-205.8 11181.6,-211.8 11175.6,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"11158.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- a8f972ffa5d642839c3c8a0fb74718f8&amp;#45;&amp;#45;5f113ec52d1d41ae84ed0065496865fa --&gt;\n&lt;g id=\"edge1269\" class=\"edge\"&gt;\n&lt;title&gt;a8f972ffa5d642839c3c8a0fb74718f8&amp;#45;&amp;#45;5f113ec52d1d41ae84ed0065496865fa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11094.89,-183C11107.17,-183 11119,-183 11129.02,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5f113ec52d1d41ae84ed0065496865fa&amp;#45;&amp;#45;1c6bf956b89b4870bc42fbbc02b72c90 --&gt;\n&lt;g id=\"edge1988\" class=\"edge\"&gt;\n&lt;title&gt;5f113ec52d1d41ae84ed0065496865fa&amp;#45;&amp;#45;1c6bf956b89b4870bc42fbbc02b72c90&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11158.8,-212.65C11158.8,-223.2 11158.8,-233.76 11158.8,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- eec9c4e2f4e24b368abad6d35a438bc9 --&gt;\n&lt;g id=\"node1276\" class=\"node\"&gt;\n&lt;title&gt;eec9c4e2f4e24b368abad6d35a438bc9&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M11269.2,-211.8C11269.2,-211.8 11235.6,-211.8 11235.6,-211.8 11229.6,-211.8 11223.6,-205.8 11223.6,-199.8 11223.6,-199.8 11223.6,-166.2 11223.6,-166.2 11223.6,-160.2 11229.6,-154.2 11235.6,-154.2 11235.6,-154.2 11269.2,-154.2 11269.2,-154.2 11275.2,-154.2 11281.2,-160.2 11281.2,-166.2 11281.2,-166.2 11281.2,-199.8 11281.2,-199.8 11281.2,-205.8 11275.2,-211.8 11269.2,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"11252.4\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5f113ec52d1d41ae84ed0065496865fa&amp;#45;&amp;#45;eec9c4e2f4e24b368abad6d35a438bc9 --&gt;\n&lt;g id=\"edge1270\" class=\"edge\"&gt;\n&lt;title&gt;5f113ec52d1d41ae84ed0065496865fa&amp;#45;&amp;#45;eec9c4e2f4e24b368abad6d35a438bc9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11188.28,-183C11199.2,-183 11211.67,-183 11222.62,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- eec9c4e2f4e24b368abad6d35a438bc9&amp;#45;&amp;#45;9b8be97d4cc9425fa3c1688b70676551 --&gt;\n&lt;g id=\"edge1989\" class=\"edge\"&gt;\n&lt;title&gt;eec9c4e2f4e24b368abad6d35a438bc9&amp;#45;&amp;#45;9b8be97d4cc9425fa3c1688b70676551&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11252.4,-212.65C11252.4,-223.2 11252.4,-233.76 11252.4,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- f2afa63df5ab499da04bdc783a462ebb --&gt;\n&lt;g id=\"node1277\" class=\"node\"&gt;\n&lt;title&gt;f2afa63df5ab499da04bdc783a462ebb&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"11346\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- eec9c4e2f4e24b368abad6d35a438bc9&amp;#45;&amp;#45;f2afa63df5ab499da04bdc783a462ebb --&gt;\n&lt;g id=\"edge1271\" class=\"edge\"&gt;\n&lt;title&gt;eec9c4e2f4e24b368abad6d35a438bc9&amp;#45;&amp;#45;f2afa63df5ab499da04bdc783a462ebb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11281.88,-183C11301.84,-183 11326.94,-183 11338.56,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- a74c35eff86d416290d5813833db030b --&gt;\n&lt;g id=\"node1278\" class=\"node\"&gt;\n&lt;title&gt;a74c35eff86d416290d5813833db030b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11499.12,-183.72 11497.68,-183.72 11497.68,-182.28 11499.12,-182.28 11499.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f2afa63df5ab499da04bdc783a462ebb&amp;#45;&amp;#45;a74c35eff86d416290d5813833db030b --&gt;\n&lt;g id=\"edge1272\" class=\"edge\"&gt;\n&lt;title&gt;f2afa63df5ab499da04bdc783a462ebb&amp;#45;&amp;#45;a74c35eff86d416290d5813833db030b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11353.46,-183C11381.8,-183 11493.82,-183 11497.32,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4bff5f3018b34cb7859de2a9d7391020 --&gt;\n&lt;g id=\"node1279\" class=\"node\"&gt;\n&lt;title&gt;4bff5f3018b34cb7859de2a9d7391020&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"11650.8\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- a74c35eff86d416290d5813833db030b&amp;#45;&amp;#45;4bff5f3018b34cb7859de2a9d7391020 --&gt;\n&lt;g id=\"edge1273\" class=\"edge\"&gt;\n&lt;title&gt;a74c35eff86d416290d5813833db030b&amp;#45;&amp;#45;4bff5f3018b34cb7859de2a9d7391020&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11499.51,-183C11503.48,-183 11614.57,-183 11643.15,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0373c2dfe4c34c5eaa8586459aff39cc --&gt;\n&lt;g id=\"node1280\" class=\"node\"&gt;\n&lt;title&gt;0373c2dfe4c34c5eaa8586459aff39cc&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M11761.2,-211.8C11761.2,-211.8 11727.6,-211.8 11727.6,-211.8 11721.6,-211.8 11715.6,-205.8 11715.6,-199.8 11715.6,-199.8 11715.6,-166.2 11715.6,-166.2 11715.6,-160.2 11721.6,-154.2 11727.6,-154.2 11727.6,-154.2 11761.2,-154.2 11761.2,-154.2 11767.2,-154.2 11773.2,-160.2 11773.2,-166.2 11773.2,-166.2 11773.2,-199.8 11773.2,-199.8 11773.2,-205.8 11767.2,-211.8 11761.2,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"11744.4\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 4bff5f3018b34cb7859de2a9d7391020&amp;#45;&amp;#45;0373c2dfe4c34c5eaa8586459aff39cc --&gt;\n&lt;g id=\"edge1274\" class=\"edge\"&gt;\n&lt;title&gt;4bff5f3018b34cb7859de2a9d7391020&amp;#45;&amp;#45;0373c2dfe4c34c5eaa8586459aff39cc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11658.39,-183C11670.04,-183 11694.92,-183 11714.77,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0373c2dfe4c34c5eaa8586459aff39cc&amp;#45;&amp;#45;afb873e116184fbc8c09b0e1c4baa9c1 --&gt;\n&lt;g id=\"edge1990\" class=\"edge\"&gt;\n&lt;title&gt;0373c2dfe4c34c5eaa8586459aff39cc&amp;#45;&amp;#45;afb873e116184fbc8c09b0e1c4baa9c1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11744.4,-212.65C11744.4,-223.2 11744.4,-233.76 11744.4,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9433d7e52e00484fa08db0c7037b1f8d --&gt;\n&lt;g id=\"node1281\" class=\"node\"&gt;\n&lt;title&gt;9433d7e52e00484fa08db0c7037b1f8d&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"11838\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0373c2dfe4c34c5eaa8586459aff39cc&amp;#45;&amp;#45;9433d7e52e00484fa08db0c7037b1f8d --&gt;\n&lt;g id=\"edge1275\" class=\"edge\"&gt;\n&lt;title&gt;0373c2dfe4c34c5eaa8586459aff39cc&amp;#45;&amp;#45;9433d7e52e00484fa08db0c7037b1f8d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11773.88,-183C11793.84,-183 11818.94,-183 11830.56,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 53ec526e55704eabaa28d775ed9e3278 --&gt;\n&lt;g id=\"node1282\" class=\"node\"&gt;\n&lt;title&gt;53ec526e55704eabaa28d775ed9e3278&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11991.12,-183.72 11989.68,-183.72 11989.68,-182.28 11991.12,-182.28 11991.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9433d7e52e00484fa08db0c7037b1f8d&amp;#45;&amp;#45;53ec526e55704eabaa28d775ed9e3278 --&gt;\n&lt;g id=\"edge1276\" class=\"edge\"&gt;\n&lt;title&gt;9433d7e52e00484fa08db0c7037b1f8d&amp;#45;&amp;#45;53ec526e55704eabaa28d775ed9e3278&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11845.46,-183C11873.8,-183 11985.82,-183 11989.32,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- f5527d03a7c6402890e62840f022dec8 --&gt;\n&lt;g id=\"node1283\" class=\"node\"&gt;\n&lt;title&gt;f5527d03a7c6402890e62840f022dec8&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"12142.8\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 53ec526e55704eabaa28d775ed9e3278&amp;#45;&amp;#45;f5527d03a7c6402890e62840f022dec8 --&gt;\n&lt;g id=\"edge1277\" class=\"edge\"&gt;\n&lt;title&gt;53ec526e55704eabaa28d775ed9e3278&amp;#45;&amp;#45;f5527d03a7c6402890e62840f022dec8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11991.51,-183C11995.48,-183 12106.57,-183 12135.15,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- ec3b5a1653b3438fa5d455af00be82e1 --&gt;\n&lt;g id=\"node1284\" class=\"node\"&gt;\n&lt;title&gt;ec3b5a1653b3438fa5d455af00be82e1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12237.12,-183.72 12235.68,-183.72 12235.68,-182.28 12237.12,-182.28 12237.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f5527d03a7c6402890e62840f022dec8&amp;#45;&amp;#45;ec3b5a1653b3438fa5d455af00be82e1 --&gt;\n&lt;g id=\"edge1278\" class=\"edge\"&gt;\n&lt;title&gt;f5527d03a7c6402890e62840f022dec8&amp;#45;&amp;#45;ec3b5a1653b3438fa5d455af00be82e1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12150.39,-183C12170.73,-183 12231.44,-183 12235.22,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0f5e49d127e847c6900a9416a94c563d --&gt;\n&lt;g id=\"node1285\" class=\"node\"&gt;\n&lt;title&gt;0f5e49d127e847c6900a9416a94c563d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12389.52,-183.72 12388.08,-183.72 12388.08,-182.28 12389.52,-182.28 12389.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ec3b5a1653b3438fa5d455af00be82e1&amp;#45;&amp;#45;0f5e49d127e847c6900a9416a94c563d --&gt;\n&lt;g id=\"edge1279\" class=\"edge\"&gt;\n&lt;title&gt;ec3b5a1653b3438fa5d455af00be82e1&amp;#45;&amp;#45;0f5e49d127e847c6900a9416a94c563d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12237.51,-183C12241.99,-183 12383.28,-183 12387.69,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 64a70ec1a2ef4534af4b250ecadbccbd --&gt;\n&lt;g id=\"node1286\" class=\"node\"&gt;\n&lt;title&gt;64a70ec1a2ef4534af4b250ecadbccbd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12541.92,-183.72 12540.48,-183.72 12540.48,-182.28 12541.92,-182.28 12541.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0f5e49d127e847c6900a9416a94c563d&amp;#45;&amp;#45;64a70ec1a2ef4534af4b250ecadbccbd --&gt;\n&lt;g id=\"edge1280\" class=\"edge\"&gt;\n&lt;title&gt;0f5e49d127e847c6900a9416a94c563d&amp;#45;&amp;#45;64a70ec1a2ef4534af4b250ecadbccbd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12389.91,-183C12394.39,-183 12535.68,-183 12540.09,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- d14288dcae6a4dd8a74834f7180e0dc0 --&gt;\n&lt;g id=\"node1287\" class=\"node\"&gt;\n&lt;title&gt;d14288dcae6a4dd8a74834f7180e0dc0&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M12721.2,-211.8C12721.2,-211.8 12618,-211.8 12618,-211.8 12612,-211.8 12606,-205.8 12606,-199.8 12606,-199.8 12606,-166.2 12606,-166.2 12606,-160.2 12612,-154.2 12618,-154.2 12618,-154.2 12721.2,-154.2 12721.2,-154.2 12727.2,-154.2 12733.2,-160.2 12733.2,-166.2 12733.2,-166.2 12733.2,-199.8 12733.2,-199.8 12733.2,-205.8 12727.2,-211.8 12721.2,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12669.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b05)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 64a70ec1a2ef4534af4b250ecadbccbd&amp;#45;&amp;#45;d14288dcae6a4dd8a74834f7180e0dc0 --&gt;\n&lt;g id=\"edge1281\" class=\"edge\"&gt;\n&lt;title&gt;64a70ec1a2ef4534af4b250ecadbccbd&amp;#45;&amp;#45;d14288dcae6a4dd8a74834f7180e0dc0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12542.29,-183C12544.17,-183 12574.56,-183 12605.06,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7aaa05de243041be85722b542ed642fd --&gt;\n&lt;g id=\"node1288\" class=\"node\"&gt;\n&lt;title&gt;7aaa05de243041be85722b542ed642fd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12798.72,-183.72 12797.28,-183.72 12797.28,-182.28 12798.72,-182.28 12798.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d14288dcae6a4dd8a74834f7180e0dc0&amp;#45;&amp;#45;7aaa05de243041be85722b542ed642fd --&gt;\n&lt;g id=\"edge1282\" class=\"edge\"&gt;\n&lt;title&gt;d14288dcae6a4dd8a74834f7180e0dc0&amp;#45;&amp;#45;7aaa05de243041be85722b542ed642fd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12734.17,-183C12764.66,-183 12795.04,-183 12796.91,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- c635d65b39ef49f1a522151766a5aa4d --&gt;\n&lt;g id=\"node1289\" class=\"node\"&gt;\n&lt;title&gt;c635d65b39ef49f1a522151766a5aa4d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12892.32,-183.72 12890.88,-183.72 12890.88,-182.28 12892.32,-182.28 12892.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7aaa05de243041be85722b542ed642fd&amp;#45;&amp;#45;c635d65b39ef49f1a522151766a5aa4d --&gt;\n&lt;g id=\"edge1283\" class=\"edge\"&gt;\n&lt;title&gt;7aaa05de243041be85722b542ed642fd&amp;#45;&amp;#45;c635d65b39ef49f1a522151766a5aa4d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12799.07,-183C12801.8,-183 12887.85,-183 12890.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7f29277b776d4016a86784e4c290479f --&gt;\n&lt;g id=\"node1290\" class=\"node\"&gt;\n&lt;title&gt;7f29277b776d4016a86784e4c290479f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12985.92,-183.72 12984.48,-183.72 12984.48,-182.28 12985.92,-182.28 12985.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c635d65b39ef49f1a522151766a5aa4d&amp;#45;&amp;#45;7f29277b776d4016a86784e4c290479f --&gt;\n&lt;g id=\"edge1284\" class=\"edge\"&gt;\n&lt;title&gt;c635d65b39ef49f1a522151766a5aa4d&amp;#45;&amp;#45;7f29277b776d4016a86784e4c290479f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12892.67,-183C12895.4,-183 12981.45,-183 12984.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9ce827e660e14942b68f83665612274d --&gt;\n&lt;g id=\"node1291\" class=\"node\"&gt;\n&lt;title&gt;9ce827e660e14942b68f83665612274d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13079.52,-183.72 13078.08,-183.72 13078.08,-182.28 13079.52,-182.28 13079.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7f29277b776d4016a86784e4c290479f&amp;#45;&amp;#45;9ce827e660e14942b68f83665612274d --&gt;\n&lt;g id=\"edge1285\" class=\"edge\"&gt;\n&lt;title&gt;7f29277b776d4016a86784e4c290479f&amp;#45;&amp;#45;9ce827e660e14942b68f83665612274d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12986.27,-183C12989,-183 13075.05,-183 13077.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1e6fb45a4544485991735b636615899b --&gt;\n&lt;g id=\"node1292\" class=\"node\"&gt;\n&lt;title&gt;1e6fb45a4544485991735b636615899b&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M13189.2,-211.8C13189.2,-211.8 13155.6,-211.8 13155.6,-211.8 13149.6,-211.8 13143.6,-205.8 13143.6,-199.8 13143.6,-199.8 13143.6,-166.2 13143.6,-166.2 13143.6,-160.2 13149.6,-154.2 13155.6,-154.2 13155.6,-154.2 13189.2,-154.2 13189.2,-154.2 13195.2,-154.2 13201.2,-160.2 13201.2,-166.2 13201.2,-166.2 13201.2,-199.8 13201.2,-199.8 13201.2,-205.8 13195.2,-211.8 13189.2,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"13172.4\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 9ce827e660e14942b68f83665612274d&amp;#45;&amp;#45;1e6fb45a4544485991735b636615899b --&gt;\n&lt;g id=\"edge1286\" class=\"edge\"&gt;\n&lt;title&gt;9ce827e660e14942b68f83665612274d&amp;#45;&amp;#45;1e6fb45a4544485991735b636615899b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13079.87,-183C13081.59,-183 13116.48,-183 13142.68,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1e6fb45a4544485991735b636615899b&amp;#45;&amp;#45;45f90264e9a34184bcef7d753b5e6128 --&gt;\n&lt;g id=\"edge1991\" class=\"edge\"&gt;\n&lt;title&gt;1e6fb45a4544485991735b636615899b&amp;#45;&amp;#45;45f90264e9a34184bcef7d753b5e6128&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13172.4,-212.65C13172.4,-223.2 13172.4,-233.76 13172.4,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e3373e045a94cc283698556e1ffad65 --&gt;\n&lt;g id=\"node1293\" class=\"node\"&gt;\n&lt;title&gt;3e3373e045a94cc283698556e1ffad65&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"13266\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1e6fb45a4544485991735b636615899b&amp;#45;&amp;#45;3e3373e045a94cc283698556e1ffad65 --&gt;\n&lt;g id=\"edge1287\" class=\"edge\"&gt;\n&lt;title&gt;1e6fb45a4544485991735b636615899b&amp;#45;&amp;#45;3e3373e045a94cc283698556e1ffad65&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13201.88,-183C13221.84,-183 13246.94,-183 13258.56,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- a66ec6c072604d56baa6ba7590a18477 --&gt;\n&lt;g id=\"node1294\" class=\"node\"&gt;\n&lt;title&gt;a66ec6c072604d56baa6ba7590a18477&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13360.32,-183.72 13358.88,-183.72 13358.88,-182.28 13360.32,-182.28 13360.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e3373e045a94cc283698556e1ffad65&amp;#45;&amp;#45;a66ec6c072604d56baa6ba7590a18477 --&gt;\n&lt;g id=\"edge1288\" class=\"edge\"&gt;\n&lt;title&gt;3e3373e045a94cc283698556e1ffad65&amp;#45;&amp;#45;a66ec6c072604d56baa6ba7590a18477&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13273.59,-183C13293.93,-183 13354.64,-183 13358.42,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- fa7760a43dc3430ebb3c1055e1fd9c50 --&gt;\n&lt;g id=\"node1295\" class=\"node\"&gt;\n&lt;title&gt;fa7760a43dc3430ebb3c1055e1fd9c50&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13506.72,-183.72 13505.28,-183.72 13505.28,-182.28 13506.72,-182.28 13506.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a66ec6c072604d56baa6ba7590a18477&amp;#45;&amp;#45;fa7760a43dc3430ebb3c1055e1fd9c50 --&gt;\n&lt;g id=\"edge1289\" class=\"edge\"&gt;\n&lt;title&gt;a66ec6c072604d56baa6ba7590a18477&amp;#45;&amp;#45;fa7760a43dc3430ebb3c1055e1fd9c50&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13360.7,-183C13365.01,-183 13500.66,-183 13504.9,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1eecb36fc4a248afafdf9ad602a6239e --&gt;\n&lt;g id=\"node1296\" class=\"node\"&gt;\n&lt;title&gt;1eecb36fc4a248afafdf9ad602a6239e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13653.12,-183.72 13651.68,-183.72 13651.68,-182.28 13653.12,-182.28 13653.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fa7760a43dc3430ebb3c1055e1fd9c50&amp;#45;&amp;#45;1eecb36fc4a248afafdf9ad602a6239e --&gt;\n&lt;g id=\"edge1290\" class=\"edge\"&gt;\n&lt;title&gt;fa7760a43dc3430ebb3c1055e1fd9c50&amp;#45;&amp;#45;1eecb36fc4a248afafdf9ad602a6239e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13507.1,-183C13511.41,-183 13647.06,-183 13651.3,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 31734a6cbb7f4ede8d19455984bc2c40 --&gt;\n&lt;g id=\"node1297\" class=\"node\"&gt;\n&lt;title&gt;31734a6cbb7f4ede8d19455984bc2c40&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"13746\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1eecb36fc4a248afafdf9ad602a6239e&amp;#45;&amp;#45;31734a6cbb7f4ede8d19455984bc2c40 --&gt;\n&lt;g id=\"edge1291\" class=\"edge\"&gt;\n&lt;title&gt;1eecb36fc4a248afafdf9ad602a6239e&amp;#45;&amp;#45;31734a6cbb7f4ede8d19455984bc2c40&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13653.47,-183C13655.77,-183 13717.61,-183 13738.32,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 03bcb8e7c6824d2e9994fba7ad286c71 --&gt;\n&lt;g id=\"node1298\" class=\"node\"&gt;\n&lt;title&gt;03bcb8e7c6824d2e9994fba7ad286c71&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M13856.4,-211.8C13856.4,-211.8 13822.8,-211.8 13822.8,-211.8 13816.8,-211.8 13810.8,-205.8 13810.8,-199.8 13810.8,-199.8 13810.8,-166.2 13810.8,-166.2 13810.8,-160.2 13816.8,-154.2 13822.8,-154.2 13822.8,-154.2 13856.4,-154.2 13856.4,-154.2 13862.4,-154.2 13868.4,-160.2 13868.4,-166.2 13868.4,-166.2 13868.4,-199.8 13868.4,-199.8 13868.4,-205.8 13862.4,-211.8 13856.4,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"13839.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 31734a6cbb7f4ede8d19455984bc2c40&amp;#45;&amp;#45;03bcb8e7c6824d2e9994fba7ad286c71 --&gt;\n&lt;g id=\"edge1292\" class=\"edge\"&gt;\n&lt;title&gt;31734a6cbb7f4ede8d19455984bc2c40&amp;#45;&amp;#45;03bcb8e7c6824d2e9994fba7ad286c71&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13753.59,-183C13765.24,-183 13790.12,-183 13809.97,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 03bcb8e7c6824d2e9994fba7ad286c71&amp;#45;&amp;#45;c11a303b3745490ab1377340a6632db1 --&gt;\n&lt;g id=\"edge1992\" class=\"edge\"&gt;\n&lt;title&gt;03bcb8e7c6824d2e9994fba7ad286c71&amp;#45;&amp;#45;c11a303b3745490ab1377340a6632db1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13839.6,-212.65C13839.6,-223.2 13839.6,-233.76 13839.6,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17cc5136b484403cafd2c74b8b5f903c --&gt;\n&lt;g id=\"node1299\" class=\"node\"&gt;\n&lt;title&gt;17cc5136b484403cafd2c74b8b5f903c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13933.92,-183.72 13932.48,-183.72 13932.48,-182.28 13933.92,-182.28 13933.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 03bcb8e7c6824d2e9994fba7ad286c71&amp;#45;&amp;#45;17cc5136b484403cafd2c74b8b5f903c --&gt;\n&lt;g id=\"edge1293\" class=\"edge\"&gt;\n&lt;title&gt;03bcb8e7c6824d2e9994fba7ad286c71&amp;#45;&amp;#45;17cc5136b484403cafd2c74b8b5f903c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13869.08,-183C13895.13,-183 13929.94,-183 13932.1,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- efd496d29f7d4265a5c7bf3dde2976a7 --&gt;\n&lt;g id=\"node1300\" class=\"node\"&gt;\n&lt;title&gt;efd496d29f7d4265a5c7bf3dde2976a7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14027.52,-183.72 14026.08,-183.72 14026.08,-182.28 14027.52,-182.28 14027.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17cc5136b484403cafd2c74b8b5f903c&amp;#45;&amp;#45;efd496d29f7d4265a5c7bf3dde2976a7 --&gt;\n&lt;g id=\"edge1294\" class=\"edge\"&gt;\n&lt;title&gt;17cc5136b484403cafd2c74b8b5f903c&amp;#45;&amp;#45;efd496d29f7d4265a5c7bf3dde2976a7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13934.27,-183C13937,-183 14023.05,-183 14025.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- b02a8a9d446a43f1aa67cf2fb4fbd74a --&gt;\n&lt;g id=\"node1301\" class=\"node\"&gt;\n&lt;title&gt;b02a8a9d446a43f1aa67cf2fb4fbd74a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14121.12,-183.72 14119.68,-183.72 14119.68,-182.28 14121.12,-182.28 14121.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- efd496d29f7d4265a5c7bf3dde2976a7&amp;#45;&amp;#45;b02a8a9d446a43f1aa67cf2fb4fbd74a --&gt;\n&lt;g id=\"edge1295\" class=\"edge\"&gt;\n&lt;title&gt;efd496d29f7d4265a5c7bf3dde2976a7&amp;#45;&amp;#45;b02a8a9d446a43f1aa67cf2fb4fbd74a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14027.87,-183C14030.6,-183 14116.65,-183 14119.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- b796702574384760a20a705ff23401b4 --&gt;\n&lt;g id=\"node1302\" class=\"node\"&gt;\n&lt;title&gt;b796702574384760a20a705ff23401b4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14214.72,-183.72 14213.28,-183.72 14213.28,-182.28 14214.72,-182.28 14214.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b02a8a9d446a43f1aa67cf2fb4fbd74a&amp;#45;&amp;#45;b796702574384760a20a705ff23401b4 --&gt;\n&lt;g id=\"edge1296\" class=\"edge\"&gt;\n&lt;title&gt;b02a8a9d446a43f1aa67cf2fb4fbd74a&amp;#45;&amp;#45;b796702574384760a20a705ff23401b4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14121.47,-183C14124.2,-183 14210.25,-183 14212.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- bd582368a4784e339fb5530da04a165d --&gt;\n&lt;g id=\"node1303\" class=\"node\"&gt;\n&lt;title&gt;bd582368a4784e339fb5530da04a165d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14308.32,-183.72 14306.88,-183.72 14306.88,-182.28 14308.32,-182.28 14308.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b796702574384760a20a705ff23401b4&amp;#45;&amp;#45;bd582368a4784e339fb5530da04a165d --&gt;\n&lt;g id=\"edge1297\" class=\"edge\"&gt;\n&lt;title&gt;b796702574384760a20a705ff23401b4&amp;#45;&amp;#45;bd582368a4784e339fb5530da04a165d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14215.07,-183C14217.8,-183 14303.85,-183 14306.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7bcf61a85904556acfb663545e9d8e4 --&gt;\n&lt;g id=\"node1304\" class=\"node\"&gt;\n&lt;title&gt;e7bcf61a85904556acfb663545e9d8e4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14460.72,-183.72 14459.28,-183.72 14459.28,-182.28 14460.72,-182.28 14460.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bd582368a4784e339fb5530da04a165d&amp;#45;&amp;#45;e7bcf61a85904556acfb663545e9d8e4 --&gt;\n&lt;g id=\"edge1298\" class=\"edge\"&gt;\n&lt;title&gt;bd582368a4784e339fb5530da04a165d&amp;#45;&amp;#45;e7bcf61a85904556acfb663545e9d8e4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14308.71,-183C14313.19,-183 14454.48,-183 14458.89,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9365a41c4264d31a96fddd8db62072e --&gt;\n&lt;g id=\"node1305\" class=\"node\"&gt;\n&lt;title&gt;c9365a41c4264d31a96fddd8db62072e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14613.12,-183.72 14611.68,-183.72 14611.68,-182.28 14613.12,-182.28 14613.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7bcf61a85904556acfb663545e9d8e4&amp;#45;&amp;#45;c9365a41c4264d31a96fddd8db62072e --&gt;\n&lt;g id=\"edge1299\" class=\"edge\"&gt;\n&lt;title&gt;e7bcf61a85904556acfb663545e9d8e4&amp;#45;&amp;#45;c9365a41c4264d31a96fddd8db62072e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14461.11,-183C14465.59,-183 14606.88,-183 14611.29,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2bc20f36c97d4232b5eb83711e7a777d --&gt;\n&lt;g id=\"node1306\" class=\"node\"&gt;\n&lt;title&gt;2bc20f36c97d4232b5eb83711e7a777d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14706.72,-183.72 14705.28,-183.72 14705.28,-182.28 14706.72,-182.28 14706.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9365a41c4264d31a96fddd8db62072e&amp;#45;&amp;#45;2bc20f36c97d4232b5eb83711e7a777d --&gt;\n&lt;g id=\"edge1300\" class=\"edge\"&gt;\n&lt;title&gt;c9365a41c4264d31a96fddd8db62072e&amp;#45;&amp;#45;2bc20f36c97d4232b5eb83711e7a777d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14613.47,-183C14616.2,-183 14702.25,-183 14704.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- fa505cff1f8547fc9136db6db9863b5a --&gt;\n&lt;g id=\"node1307\" class=\"node\"&gt;\n&lt;title&gt;fa505cff1f8547fc9136db6db9863b5a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14800.32,-183.72 14798.88,-183.72 14798.88,-182.28 14800.32,-182.28 14800.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2bc20f36c97d4232b5eb83711e7a777d&amp;#45;&amp;#45;fa505cff1f8547fc9136db6db9863b5a --&gt;\n&lt;g id=\"edge1301\" class=\"edge\"&gt;\n&lt;title&gt;2bc20f36c97d4232b5eb83711e7a777d&amp;#45;&amp;#45;fa505cff1f8547fc9136db6db9863b5a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14707.07,-183C14709.8,-183 14795.85,-183 14798.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- a660ab1c5c884121a0e7e4229376fe24 --&gt;\n&lt;g id=\"node1308\" class=\"node\"&gt;\n&lt;title&gt;a660ab1c5c884121a0e7e4229376fe24&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14893.92,-183.72 14892.48,-183.72 14892.48,-182.28 14893.92,-182.28 14893.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fa505cff1f8547fc9136db6db9863b5a&amp;#45;&amp;#45;a660ab1c5c884121a0e7e4229376fe24 --&gt;\n&lt;g id=\"edge1302\" class=\"edge\"&gt;\n&lt;title&gt;fa505cff1f8547fc9136db6db9863b5a&amp;#45;&amp;#45;a660ab1c5c884121a0e7e4229376fe24&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14800.67,-183C14803.4,-183 14889.45,-183 14892.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- fb4961f4f98d495781a88d4a9a36e739 --&gt;\n&lt;g id=\"node1309\" class=\"node\"&gt;\n&lt;title&gt;fb4961f4f98d495781a88d4a9a36e739&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14987.52,-183.72 14986.08,-183.72 14986.08,-182.28 14987.52,-182.28 14987.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a660ab1c5c884121a0e7e4229376fe24&amp;#45;&amp;#45;fb4961f4f98d495781a88d4a9a36e739 --&gt;\n&lt;g id=\"edge1303\" class=\"edge\"&gt;\n&lt;title&gt;a660ab1c5c884121a0e7e4229376fe24&amp;#45;&amp;#45;fb4961f4f98d495781a88d4a9a36e739&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14894.27,-183C14897,-183 14983.05,-183 14985.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 850b24e2ff8b48c58f7a51a2fc33f6bd --&gt;\n&lt;g id=\"node1310\" class=\"node\"&gt;\n&lt;title&gt;850b24e2ff8b48c58f7a51a2fc33f6bd&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M15097.2,-211.8C15097.2,-211.8 15063.6,-211.8 15063.6,-211.8 15057.6,-211.8 15051.6,-205.8 15051.6,-199.8 15051.6,-199.8 15051.6,-166.2 15051.6,-166.2 15051.6,-160.2 15057.6,-154.2 15063.6,-154.2 15063.6,-154.2 15097.2,-154.2 15097.2,-154.2 15103.2,-154.2 15109.2,-160.2 15109.2,-166.2 15109.2,-166.2 15109.2,-199.8 15109.2,-199.8 15109.2,-205.8 15103.2,-211.8 15097.2,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"15080.4\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- fb4961f4f98d495781a88d4a9a36e739&amp;#45;&amp;#45;850b24e2ff8b48c58f7a51a2fc33f6bd --&gt;\n&lt;g id=\"edge1304\" class=\"edge\"&gt;\n&lt;title&gt;fb4961f4f98d495781a88d4a9a36e739&amp;#45;&amp;#45;850b24e2ff8b48c58f7a51a2fc33f6bd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14987.87,-183C14989.59,-183 15024.48,-183 15050.68,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 850b24e2ff8b48c58f7a51a2fc33f6bd&amp;#45;&amp;#45;b21d8b2a8e5148d6873d98e585cfbfa6 --&gt;\n&lt;g id=\"edge1993\" class=\"edge\"&gt;\n&lt;title&gt;850b24e2ff8b48c58f7a51a2fc33f6bd&amp;#45;&amp;#45;b21d8b2a8e5148d6873d98e585cfbfa6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15080.4,-212.65C15080.4,-223.2 15080.4,-233.76 15080.4,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8ee35f3dc39c40a68a03fb5216edf178 --&gt;\n&lt;g id=\"node1311\" class=\"node\"&gt;\n&lt;title&gt;8ee35f3dc39c40a68a03fb5216edf178&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M15308.4,-211.8C15308.4,-211.8 15157.2,-211.8 15157.2,-211.8 15151.2,-211.8 15145.2,-205.8 15145.2,-199.8 15145.2,-199.8 15145.2,-166.2 15145.2,-166.2 15145.2,-160.2 15151.2,-154.2 15157.2,-154.2 15157.2,-154.2 15308.4,-154.2 15308.4,-154.2 15314.4,-154.2 15320.4,-160.2 15320.4,-166.2 15320.4,-166.2 15320.4,-199.8 15320.4,-199.8 15320.4,-205.8 15314.4,-211.8 15308.4,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"15232.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 850b24e2ff8b48c58f7a51a2fc33f6bd&amp;#45;&amp;#45;8ee35f3dc39c40a68a03fb5216edf178 --&gt;\n&lt;g id=\"edge1305\" class=\"edge\"&gt;\n&lt;title&gt;850b24e2ff8b48c58f7a51a2fc33f6bd&amp;#45;&amp;#45;8ee35f3dc39c40a68a03fb5216edf178&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15110.04,-183C15120.1,-183 15131.99,-183 15144.33,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 43d9d271227643cebc3a1b26092abcd3 --&gt;\n&lt;g id=\"node1312\" class=\"node\"&gt;\n&lt;title&gt;43d9d271227643cebc3a1b26092abcd3&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M15402,-211.8C15402,-211.8 15368.4,-211.8 15368.4,-211.8 15362.4,-211.8 15356.4,-205.8 15356.4,-199.8 15356.4,-199.8 15356.4,-166.2 15356.4,-166.2 15356.4,-160.2 15362.4,-154.2 15368.4,-154.2 15368.4,-154.2 15402,-154.2 15402,-154.2 15408,-154.2 15414,-160.2 15414,-166.2 15414,-166.2 15414,-199.8 15414,-199.8 15414,-205.8 15408,-211.8 15402,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"15385.2\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 8ee35f3dc39c40a68a03fb5216edf178&amp;#45;&amp;#45;43d9d271227643cebc3a1b26092abcd3 --&gt;\n&lt;g id=\"edge1306\" class=\"edge\"&gt;\n&lt;title&gt;8ee35f3dc39c40a68a03fb5216edf178&amp;#45;&amp;#45;43d9d271227643cebc3a1b26092abcd3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15321.29,-183C15333.57,-183 15345.4,-183 15355.42,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 43d9d271227643cebc3a1b26092abcd3&amp;#45;&amp;#45;9b31e55ab7544c3a937c6f6bcb46c085 --&gt;\n&lt;g id=\"edge1994\" class=\"edge\"&gt;\n&lt;title&gt;43d9d271227643cebc3a1b26092abcd3&amp;#45;&amp;#45;9b31e55ab7544c3a937c6f6bcb46c085&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15385.2,-212.65C15385.2,-223.2 15385.2,-233.76 15385.2,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- fe952445df9f4dfca1c881161f2df67e --&gt;\n&lt;g id=\"node1313\" class=\"node\"&gt;\n&lt;title&gt;fe952445df9f4dfca1c881161f2df67e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15479.52,-183.72 15478.08,-183.72 15478.08,-182.28 15479.52,-182.28 15479.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 43d9d271227643cebc3a1b26092abcd3&amp;#45;&amp;#45;fe952445df9f4dfca1c881161f2df67e --&gt;\n&lt;g id=\"edge1307\" class=\"edge\"&gt;\n&lt;title&gt;43d9d271227643cebc3a1b26092abcd3&amp;#45;&amp;#45;fe952445df9f4dfca1c881161f2df67e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15414.68,-183C15440.73,-183 15475.54,-183 15477.7,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 324e4943a4a8463cb4e16d949032aa72 --&gt;\n&lt;g id=\"node1314\" class=\"node\"&gt;\n&lt;title&gt;324e4943a4a8463cb4e16d949032aa72&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15573.12,-183.72 15571.68,-183.72 15571.68,-182.28 15573.12,-182.28 15573.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fe952445df9f4dfca1c881161f2df67e&amp;#45;&amp;#45;324e4943a4a8463cb4e16d949032aa72 --&gt;\n&lt;g id=\"edge1308\" class=\"edge\"&gt;\n&lt;title&gt;fe952445df9f4dfca1c881161f2df67e&amp;#45;&amp;#45;324e4943a4a8463cb4e16d949032aa72&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15479.87,-183C15482.6,-183 15568.65,-183 15571.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5852d9447198461d9881cd2b0c706ac6 --&gt;\n&lt;g id=\"node1315\" class=\"node\"&gt;\n&lt;title&gt;5852d9447198461d9881cd2b0c706ac6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15666.72,-183.72 15665.28,-183.72 15665.28,-182.28 15666.72,-182.28 15666.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 324e4943a4a8463cb4e16d949032aa72&amp;#45;&amp;#45;5852d9447198461d9881cd2b0c706ac6 --&gt;\n&lt;g id=\"edge1309\" class=\"edge\"&gt;\n&lt;title&gt;324e4943a4a8463cb4e16d949032aa72&amp;#45;&amp;#45;5852d9447198461d9881cd2b0c706ac6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15573.47,-183C15576.2,-183 15662.25,-183 15664.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 59d410b06b804596a629764372a43b03 --&gt;\n&lt;g id=\"node1316\" class=\"node\"&gt;\n&lt;title&gt;59d410b06b804596a629764372a43b03&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15760.32,-183.72 15758.88,-183.72 15758.88,-182.28 15760.32,-182.28 15760.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5852d9447198461d9881cd2b0c706ac6&amp;#45;&amp;#45;59d410b06b804596a629764372a43b03 --&gt;\n&lt;g id=\"edge1310\" class=\"edge\"&gt;\n&lt;title&gt;5852d9447198461d9881cd2b0c706ac6&amp;#45;&amp;#45;59d410b06b804596a629764372a43b03&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15667.07,-183C15669.8,-183 15755.85,-183 15758.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- aae9af9b0f334bfcb56416dccb642f75 --&gt;\n&lt;g id=\"node1317\" class=\"node\"&gt;\n&lt;title&gt;aae9af9b0f334bfcb56416dccb642f75&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15853.92,-183.72 15852.48,-183.72 15852.48,-182.28 15853.92,-182.28 15853.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 59d410b06b804596a629764372a43b03&amp;#45;&amp;#45;aae9af9b0f334bfcb56416dccb642f75 --&gt;\n&lt;g id=\"edge1311\" class=\"edge\"&gt;\n&lt;title&gt;59d410b06b804596a629764372a43b03&amp;#45;&amp;#45;aae9af9b0f334bfcb56416dccb642f75&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15760.67,-183C15763.4,-183 15849.45,-183 15852.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e168768a7db404e80ce9d187b68214e --&gt;\n&lt;g id=\"node1318\" class=\"node\"&gt;\n&lt;title&gt;6e168768a7db404e80ce9d187b68214e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15947.52,-183.72 15946.08,-183.72 15946.08,-182.28 15947.52,-182.28 15947.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- aae9af9b0f334bfcb56416dccb642f75&amp;#45;&amp;#45;6e168768a7db404e80ce9d187b68214e --&gt;\n&lt;g id=\"edge1312\" class=\"edge\"&gt;\n&lt;title&gt;aae9af9b0f334bfcb56416dccb642f75&amp;#45;&amp;#45;6e168768a7db404e80ce9d187b68214e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15854.27,-183C15857,-183 15943.05,-183 15945.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 267ea81b46484a1a84088f2b0652f1a4 --&gt;\n&lt;g id=\"node1319\" class=\"node\"&gt;\n&lt;title&gt;267ea81b46484a1a84088f2b0652f1a4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16041.12,-183.72 16039.68,-183.72 16039.68,-182.28 16041.12,-182.28 16041.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e168768a7db404e80ce9d187b68214e&amp;#45;&amp;#45;267ea81b46484a1a84088f2b0652f1a4 --&gt;\n&lt;g id=\"edge1313\" class=\"edge\"&gt;\n&lt;title&gt;6e168768a7db404e80ce9d187b68214e&amp;#45;&amp;#45;267ea81b46484a1a84088f2b0652f1a4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15947.87,-183C15950.6,-183 16036.65,-183 16039.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 33d5cc10e8a44f879515a8f4fa30079e --&gt;\n&lt;g id=\"node1320\" class=\"node\"&gt;\n&lt;title&gt;33d5cc10e8a44f879515a8f4fa30079e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16193.52,-183.72 16192.08,-183.72 16192.08,-182.28 16193.52,-182.28 16193.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 267ea81b46484a1a84088f2b0652f1a4&amp;#45;&amp;#45;33d5cc10e8a44f879515a8f4fa30079e --&gt;\n&lt;g id=\"edge1314\" class=\"edge\"&gt;\n&lt;title&gt;267ea81b46484a1a84088f2b0652f1a4&amp;#45;&amp;#45;33d5cc10e8a44f879515a8f4fa30079e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16041.51,-183C16045.99,-183 16187.28,-183 16191.69,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- f671f5f87a7344c58d21630d3955858f --&gt;\n&lt;g id=\"node1321\" class=\"node\"&gt;\n&lt;title&gt;f671f5f87a7344c58d21630d3955858f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16345.92,-183.72 16344.48,-183.72 16344.48,-182.28 16345.92,-182.28 16345.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 33d5cc10e8a44f879515a8f4fa30079e&amp;#45;&amp;#45;f671f5f87a7344c58d21630d3955858f --&gt;\n&lt;g id=\"edge1315\" class=\"edge\"&gt;\n&lt;title&gt;33d5cc10e8a44f879515a8f4fa30079e&amp;#45;&amp;#45;f671f5f87a7344c58d21630d3955858f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16193.91,-183C16198.39,-183 16339.68,-183 16344.09,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52228ec6c1244c0d833796f2cb1e7dc1 --&gt;\n&lt;g id=\"node1322\" class=\"node\"&gt;\n&lt;title&gt;52228ec6c1244c0d833796f2cb1e7dc1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16439.52,-183.72 16438.08,-183.72 16438.08,-182.28 16439.52,-182.28 16439.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f671f5f87a7344c58d21630d3955858f&amp;#45;&amp;#45;52228ec6c1244c0d833796f2cb1e7dc1 --&gt;\n&lt;g id=\"edge1316\" class=\"edge\"&gt;\n&lt;title&gt;f671f5f87a7344c58d21630d3955858f&amp;#45;&amp;#45;52228ec6c1244c0d833796f2cb1e7dc1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16346.27,-183C16349,-183 16435.05,-183 16437.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- f955ad670186497aae671403b80bd3f7 --&gt;\n&lt;g id=\"node1323\" class=\"node\"&gt;\n&lt;title&gt;f955ad670186497aae671403b80bd3f7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16533.12,-183.72 16531.68,-183.72 16531.68,-182.28 16533.12,-182.28 16533.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52228ec6c1244c0d833796f2cb1e7dc1&amp;#45;&amp;#45;f955ad670186497aae671403b80bd3f7 --&gt;\n&lt;g id=\"edge1317\" class=\"edge\"&gt;\n&lt;title&gt;52228ec6c1244c0d833796f2cb1e7dc1&amp;#45;&amp;#45;f955ad670186497aae671403b80bd3f7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16439.87,-183C16442.6,-183 16528.65,-183 16531.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 78023bef73304067be3bde803e1bc815 --&gt;\n&lt;g id=\"node1324\" class=\"node\"&gt;\n&lt;title&gt;78023bef73304067be3bde803e1bc815&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16626.72,-183.72 16625.28,-183.72 16625.28,-182.28 16626.72,-182.28 16626.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f955ad670186497aae671403b80bd3f7&amp;#45;&amp;#45;78023bef73304067be3bde803e1bc815 --&gt;\n&lt;g id=\"edge1318\" class=\"edge\"&gt;\n&lt;title&gt;f955ad670186497aae671403b80bd3f7&amp;#45;&amp;#45;78023bef73304067be3bde803e1bc815&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16533.47,-183C16536.2,-183 16622.25,-183 16624.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- ede044d08bec48d7b3e824efcdaa53c6 --&gt;\n&lt;g id=\"node1325\" class=\"node\"&gt;\n&lt;title&gt;ede044d08bec48d7b3e824efcdaa53c6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16720.32,-183.72 16718.88,-183.72 16718.88,-182.28 16720.32,-182.28 16720.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 78023bef73304067be3bde803e1bc815&amp;#45;&amp;#45;ede044d08bec48d7b3e824efcdaa53c6 --&gt;\n&lt;g id=\"edge1319\" class=\"edge\"&gt;\n&lt;title&gt;78023bef73304067be3bde803e1bc815&amp;#45;&amp;#45;ede044d08bec48d7b3e824efcdaa53c6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16627.07,-183C16629.8,-183 16715.85,-183 16718.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b2e1c6c22bf4964b95843b637ac3fac --&gt;\n&lt;g id=\"node1326\" class=\"node\"&gt;\n&lt;title&gt;6b2e1c6c22bf4964b95843b637ac3fac&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16813.92,-183.72 16812.48,-183.72 16812.48,-182.28 16813.92,-182.28 16813.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ede044d08bec48d7b3e824efcdaa53c6&amp;#45;&amp;#45;6b2e1c6c22bf4964b95843b637ac3fac --&gt;\n&lt;g id=\"edge1320\" class=\"edge\"&gt;\n&lt;title&gt;ede044d08bec48d7b3e824efcdaa53c6&amp;#45;&amp;#45;6b2e1c6c22bf4964b95843b637ac3fac&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16720.67,-183C16723.4,-183 16809.45,-183 16812.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 29ded4336d134646b412b21936e80cbe --&gt;\n&lt;g id=\"node1327\" class=\"node\"&gt;\n&lt;title&gt;29ded4336d134646b412b21936e80cbe&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M16923.6,-211.8C16923.6,-211.8 16890,-211.8 16890,-211.8 16884,-211.8 16878,-205.8 16878,-199.8 16878,-199.8 16878,-166.2 16878,-166.2 16878,-160.2 16884,-154.2 16890,-154.2 16890,-154.2 16923.6,-154.2 16923.6,-154.2 16929.6,-154.2 16935.6,-160.2 16935.6,-166.2 16935.6,-166.2 16935.6,-199.8 16935.6,-199.8 16935.6,-205.8 16929.6,-211.8 16923.6,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"16906.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 6b2e1c6c22bf4964b95843b637ac3fac&amp;#45;&amp;#45;29ded4336d134646b412b21936e80cbe --&gt;\n&lt;g id=\"edge1321\" class=\"edge\"&gt;\n&lt;title&gt;6b2e1c6c22bf4964b95843b637ac3fac&amp;#45;&amp;#45;29ded4336d134646b412b21936e80cbe&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16814.27,-183C16815.99,-183 16850.88,-183 16877.08,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 29ded4336d134646b412b21936e80cbe&amp;#45;&amp;#45;91adf42e24c744619d0f9aef294cfe60 --&gt;\n&lt;g id=\"edge1995\" class=\"edge\"&gt;\n&lt;title&gt;29ded4336d134646b412b21936e80cbe&amp;#45;&amp;#45;91adf42e24c744619d0f9aef294cfe60&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16906.8,-212.65C16906.8,-223.2 16906.8,-233.76 16906.8,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- ce3f04a43bef4f3f9891ccc683b9fb74 --&gt;\n&lt;g id=\"node1328\" class=\"node\"&gt;\n&lt;title&gt;ce3f04a43bef4f3f9891ccc683b9fb74&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M17134.8,-211.8C17134.8,-211.8 16983.6,-211.8 16983.6,-211.8 16977.6,-211.8 16971.6,-205.8 16971.6,-199.8 16971.6,-199.8 16971.6,-166.2 16971.6,-166.2 16971.6,-160.2 16977.6,-154.2 16983.6,-154.2 16983.6,-154.2 17134.8,-154.2 17134.8,-154.2 17140.8,-154.2 17146.8,-160.2 17146.8,-166.2 17146.8,-166.2 17146.8,-199.8 17146.8,-199.8 17146.8,-205.8 17140.8,-211.8 17134.8,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"17059.2\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 29ded4336d134646b412b21936e80cbe&amp;#45;&amp;#45;ce3f04a43bef4f3f9891ccc683b9fb74 --&gt;\n&lt;g id=\"edge1322\" class=\"edge\"&gt;\n&lt;title&gt;29ded4336d134646b412b21936e80cbe&amp;#45;&amp;#45;ce3f04a43bef4f3f9891ccc683b9fb74&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16936.44,-183C16946.5,-183 16958.39,-183 16970.73,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2ca68ff1f0f945cf9ed3a9d7c90b773c --&gt;\n&lt;g id=\"node1329\" class=\"node\"&gt;\n&lt;title&gt;2ca68ff1f0f945cf9ed3a9d7c90b773c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M17228.4,-211.8C17228.4,-211.8 17194.8,-211.8 17194.8,-211.8 17188.8,-211.8 17182.8,-205.8 17182.8,-199.8 17182.8,-199.8 17182.8,-166.2 17182.8,-166.2 17182.8,-160.2 17188.8,-154.2 17194.8,-154.2 17194.8,-154.2 17228.4,-154.2 17228.4,-154.2 17234.4,-154.2 17240.4,-160.2 17240.4,-166.2 17240.4,-166.2 17240.4,-199.8 17240.4,-199.8 17240.4,-205.8 17234.4,-211.8 17228.4,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"17211.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- ce3f04a43bef4f3f9891ccc683b9fb74&amp;#45;&amp;#45;2ca68ff1f0f945cf9ed3a9d7c90b773c --&gt;\n&lt;g id=\"edge1323\" class=\"edge\"&gt;\n&lt;title&gt;ce3f04a43bef4f3f9891ccc683b9fb74&amp;#45;&amp;#45;2ca68ff1f0f945cf9ed3a9d7c90b773c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17147.69,-183C17159.97,-183 17171.8,-183 17181.82,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2ca68ff1f0f945cf9ed3a9d7c90b773c&amp;#45;&amp;#45;aa6ab42a897f4b64a43b8253b2fe2a6b --&gt;\n&lt;g id=\"edge1996\" class=\"edge\"&gt;\n&lt;title&gt;2ca68ff1f0f945cf9ed3a9d7c90b773c&amp;#45;&amp;#45;aa6ab42a897f4b64a43b8253b2fe2a6b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17211.6,-212.65C17211.6,-223.2 17211.6,-233.76 17211.6,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- d677dbad153a4b658f196a5f9cb2acf5 --&gt;\n&lt;g id=\"node1330\" class=\"node\"&gt;\n&lt;title&gt;d677dbad153a4b658f196a5f9cb2acf5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17305.92,-183.72 17304.48,-183.72 17304.48,-182.28 17305.92,-182.28 17305.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2ca68ff1f0f945cf9ed3a9d7c90b773c&amp;#45;&amp;#45;d677dbad153a4b658f196a5f9cb2acf5 --&gt;\n&lt;g id=\"edge1324\" class=\"edge\"&gt;\n&lt;title&gt;2ca68ff1f0f945cf9ed3a9d7c90b773c&amp;#45;&amp;#45;d677dbad153a4b658f196a5f9cb2acf5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17241.08,-183C17267.13,-183 17301.94,-183 17304.1,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5547c9f8d99e4dd18427a17e27bc92e2 --&gt;\n&lt;g id=\"node1331\" class=\"node\"&gt;\n&lt;title&gt;5547c9f8d99e4dd18427a17e27bc92e2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17399.52,-183.72 17398.08,-183.72 17398.08,-182.28 17399.52,-182.28 17399.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d677dbad153a4b658f196a5f9cb2acf5&amp;#45;&amp;#45;5547c9f8d99e4dd18427a17e27bc92e2 --&gt;\n&lt;g id=\"edge1325\" class=\"edge\"&gt;\n&lt;title&gt;d677dbad153a4b658f196a5f9cb2acf5&amp;#45;&amp;#45;5547c9f8d99e4dd18427a17e27bc92e2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17306.27,-183C17309,-183 17395.05,-183 17397.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44ec12da11bf479c840541c6bb10243c --&gt;\n&lt;g id=\"node1332\" class=\"node\"&gt;\n&lt;title&gt;44ec12da11bf479c840541c6bb10243c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17493.12,-183.72 17491.68,-183.72 17491.68,-182.28 17493.12,-182.28 17493.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5547c9f8d99e4dd18427a17e27bc92e2&amp;#45;&amp;#45;44ec12da11bf479c840541c6bb10243c --&gt;\n&lt;g id=\"edge1326\" class=\"edge\"&gt;\n&lt;title&gt;5547c9f8d99e4dd18427a17e27bc92e2&amp;#45;&amp;#45;44ec12da11bf479c840541c6bb10243c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17399.87,-183C17402.6,-183 17488.65,-183 17491.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- da606e497f1344ee9f0c06eaac74614c --&gt;\n&lt;g id=\"node1333\" class=\"node\"&gt;\n&lt;title&gt;da606e497f1344ee9f0c06eaac74614c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17586.72,-183.72 17585.28,-183.72 17585.28,-182.28 17586.72,-182.28 17586.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44ec12da11bf479c840541c6bb10243c&amp;#45;&amp;#45;da606e497f1344ee9f0c06eaac74614c --&gt;\n&lt;g id=\"edge1327\" class=\"edge\"&gt;\n&lt;title&gt;44ec12da11bf479c840541c6bb10243c&amp;#45;&amp;#45;da606e497f1344ee9f0c06eaac74614c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17493.47,-183C17496.2,-183 17582.25,-183 17584.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- a3173a6f2658428da210dee66db2a5d6 --&gt;\n&lt;g id=\"node1334\" class=\"node\"&gt;\n&lt;title&gt;a3173a6f2658428da210dee66db2a5d6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17680.32,-183.72 17678.88,-183.72 17678.88,-182.28 17680.32,-182.28 17680.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da606e497f1344ee9f0c06eaac74614c&amp;#45;&amp;#45;a3173a6f2658428da210dee66db2a5d6 --&gt;\n&lt;g id=\"edge1328\" class=\"edge\"&gt;\n&lt;title&gt;da606e497f1344ee9f0c06eaac74614c&amp;#45;&amp;#45;a3173a6f2658428da210dee66db2a5d6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17587.07,-183C17589.8,-183 17675.85,-183 17678.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 659fb2d7ec7f41eaa963d12b8e45eb69 --&gt;\n&lt;g id=\"node1335\" class=\"node\"&gt;\n&lt;title&gt;659fb2d7ec7f41eaa963d12b8e45eb69&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17773.92,-183.72 17772.48,-183.72 17772.48,-182.28 17773.92,-182.28 17773.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a3173a6f2658428da210dee66db2a5d6&amp;#45;&amp;#45;659fb2d7ec7f41eaa963d12b8e45eb69 --&gt;\n&lt;g id=\"edge1329\" class=\"edge\"&gt;\n&lt;title&gt;a3173a6f2658428da210dee66db2a5d6&amp;#45;&amp;#45;659fb2d7ec7f41eaa963d12b8e45eb69&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17680.67,-183C17683.4,-183 17769.45,-183 17772.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a7930e3262240eb818f5f0ad7b70cc7 --&gt;\n&lt;g id=\"node1336\" class=\"node\"&gt;\n&lt;title&gt;9a7930e3262240eb818f5f0ad7b70cc7&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M17883.6,-211.8C17883.6,-211.8 17850,-211.8 17850,-211.8 17844,-211.8 17838,-205.8 17838,-199.8 17838,-199.8 17838,-166.2 17838,-166.2 17838,-160.2 17844,-154.2 17850,-154.2 17850,-154.2 17883.6,-154.2 17883.6,-154.2 17889.6,-154.2 17895.6,-160.2 17895.6,-166.2 17895.6,-166.2 17895.6,-199.8 17895.6,-199.8 17895.6,-205.8 17889.6,-211.8 17883.6,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"17866.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 659fb2d7ec7f41eaa963d12b8e45eb69&amp;#45;&amp;#45;9a7930e3262240eb818f5f0ad7b70cc7 --&gt;\n&lt;g id=\"edge1330\" class=\"edge\"&gt;\n&lt;title&gt;659fb2d7ec7f41eaa963d12b8e45eb69&amp;#45;&amp;#45;9a7930e3262240eb818f5f0ad7b70cc7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17774.27,-183C17775.99,-183 17810.88,-183 17837.08,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a7930e3262240eb818f5f0ad7b70cc7&amp;#45;&amp;#45;65c80ce91f35488c925227d482a49e08 --&gt;\n&lt;g id=\"edge1997\" class=\"edge\"&gt;\n&lt;title&gt;9a7930e3262240eb818f5f0ad7b70cc7&amp;#45;&amp;#45;65c80ce91f35488c925227d482a49e08&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17866.8,-212.65C17866.8,-223.2 17866.8,-233.76 17866.8,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6bfdb09cd4a14d0ebf43e008d6ca3897 --&gt;\n&lt;g id=\"node1337\" class=\"node\"&gt;\n&lt;title&gt;6bfdb09cd4a14d0ebf43e008d6ca3897&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"17960.4\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a7930e3262240eb818f5f0ad7b70cc7&amp;#45;&amp;#45;6bfdb09cd4a14d0ebf43e008d6ca3897 --&gt;\n&lt;g id=\"edge1331\" class=\"edge\"&gt;\n&lt;title&gt;9a7930e3262240eb818f5f0ad7b70cc7&amp;#45;&amp;#45;6bfdb09cd4a14d0ebf43e008d6ca3897&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17896.28,-183C17916.24,-183 17941.34,-183 17952.96,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- c06612261f11474697b6b264b3448ffb --&gt;\n&lt;g id=\"node1338\" class=\"node\"&gt;\n&lt;title&gt;c06612261f11474697b6b264b3448ffb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18113.52,-183.72 18112.08,-183.72 18112.08,-182.28 18113.52,-182.28 18113.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6bfdb09cd4a14d0ebf43e008d6ca3897&amp;#45;&amp;#45;c06612261f11474697b6b264b3448ffb --&gt;\n&lt;g id=\"edge1332\" class=\"edge\"&gt;\n&lt;title&gt;6bfdb09cd4a14d0ebf43e008d6ca3897&amp;#45;&amp;#45;c06612261f11474697b6b264b3448ffb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17967.86,-183C17996.2,-183 18108.22,-183 18111.72,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a018cd842c44904a40f8213669033fc --&gt;\n&lt;g id=\"node1339\" class=\"node\"&gt;\n&lt;title&gt;0a018cd842c44904a40f8213669033fc&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"18265.2\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- c06612261f11474697b6b264b3448ffb&amp;#45;&amp;#45;0a018cd842c44904a40f8213669033fc --&gt;\n&lt;g id=\"edge1333\" class=\"edge\"&gt;\n&lt;title&gt;c06612261f11474697b6b264b3448ffb&amp;#45;&amp;#45;0a018cd842c44904a40f8213669033fc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18113.91,-183C18117.88,-183 18228.97,-183 18257.55,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8f6c0ba0256f4841b901bdc91909acdf --&gt;\n&lt;g id=\"node1340\" class=\"node\"&gt;\n&lt;title&gt;8f6c0ba0256f4841b901bdc91909acdf&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M18375.6,-211.8C18375.6,-211.8 18342,-211.8 18342,-211.8 18336,-211.8 18330,-205.8 18330,-199.8 18330,-199.8 18330,-166.2 18330,-166.2 18330,-160.2 18336,-154.2 18342,-154.2 18342,-154.2 18375.6,-154.2 18375.6,-154.2 18381.6,-154.2 18387.6,-160.2 18387.6,-166.2 18387.6,-166.2 18387.6,-199.8 18387.6,-199.8 18387.6,-205.8 18381.6,-211.8 18375.6,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"18358.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 0a018cd842c44904a40f8213669033fc&amp;#45;&amp;#45;8f6c0ba0256f4841b901bdc91909acdf --&gt;\n&lt;g id=\"edge1334\" class=\"edge\"&gt;\n&lt;title&gt;0a018cd842c44904a40f8213669033fc&amp;#45;&amp;#45;8f6c0ba0256f4841b901bdc91909acdf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18272.79,-183C18284.44,-183 18309.32,-183 18329.17,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8f6c0ba0256f4841b901bdc91909acdf&amp;#45;&amp;#45;fbbcb8bc5e12414e9f80359c84cd76ba --&gt;\n&lt;g id=\"edge1998\" class=\"edge\"&gt;\n&lt;title&gt;8f6c0ba0256f4841b901bdc91909acdf&amp;#45;&amp;#45;fbbcb8bc5e12414e9f80359c84cd76ba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18358.8,-212.65C18358.8,-223.2 18358.8,-233.76 18358.8,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 57b7796807854f6b87d3b6a807b623d7 --&gt;\n&lt;g id=\"node1341\" class=\"node\"&gt;\n&lt;title&gt;57b7796807854f6b87d3b6a807b623d7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18453.12,-183.72 18451.68,-183.72 18451.68,-182.28 18453.12,-182.28 18453.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8f6c0ba0256f4841b901bdc91909acdf&amp;#45;&amp;#45;57b7796807854f6b87d3b6a807b623d7 --&gt;\n&lt;g id=\"edge1335\" class=\"edge\"&gt;\n&lt;title&gt;8f6c0ba0256f4841b901bdc91909acdf&amp;#45;&amp;#45;57b7796807854f6b87d3b6a807b623d7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18388.28,-183C18414.33,-183 18449.14,-183 18451.3,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- cad7efbe085f43f09f1bc3ad036f9d5a --&gt;\n&lt;g id=\"node1342\" class=\"node\"&gt;\n&lt;title&gt;cad7efbe085f43f09f1bc3ad036f9d5a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18546.72,-183.72 18545.28,-183.72 18545.28,-182.28 18546.72,-182.28 18546.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 57b7796807854f6b87d3b6a807b623d7&amp;#45;&amp;#45;cad7efbe085f43f09f1bc3ad036f9d5a --&gt;\n&lt;g id=\"edge1336\" class=\"edge\"&gt;\n&lt;title&gt;57b7796807854f6b87d3b6a807b623d7&amp;#45;&amp;#45;cad7efbe085f43f09f1bc3ad036f9d5a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18453.47,-183C18456.2,-183 18542.25,-183 18544.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 234cf9162962469e8b3ff24d9574f4d9 --&gt;\n&lt;g id=\"node1343\" class=\"node\"&gt;\n&lt;title&gt;234cf9162962469e8b3ff24d9574f4d9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18640.32,-183.72 18638.88,-183.72 18638.88,-182.28 18640.32,-182.28 18640.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cad7efbe085f43f09f1bc3ad036f9d5a&amp;#45;&amp;#45;234cf9162962469e8b3ff24d9574f4d9 --&gt;\n&lt;g id=\"edge1337\" class=\"edge\"&gt;\n&lt;title&gt;cad7efbe085f43f09f1bc3ad036f9d5a&amp;#45;&amp;#45;234cf9162962469e8b3ff24d9574f4d9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18547.07,-183C18549.8,-183 18635.85,-183 18638.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8cc6c30e58ca45feb5680a89ed29063b --&gt;\n&lt;g id=\"node1344\" class=\"node\"&gt;\n&lt;title&gt;8cc6c30e58ca45feb5680a89ed29063b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18733.92,-183.72 18732.48,-183.72 18732.48,-182.28 18733.92,-182.28 18733.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 234cf9162962469e8b3ff24d9574f4d9&amp;#45;&amp;#45;8cc6c30e58ca45feb5680a89ed29063b --&gt;\n&lt;g id=\"edge1338\" class=\"edge\"&gt;\n&lt;title&gt;234cf9162962469e8b3ff24d9574f4d9&amp;#45;&amp;#45;8cc6c30e58ca45feb5680a89ed29063b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18640.67,-183C18643.4,-183 18729.45,-183 18732.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- b2983bf9153d4e78b37d28233931d65f --&gt;\n&lt;g id=\"node1345\" class=\"node\"&gt;\n&lt;title&gt;b2983bf9153d4e78b37d28233931d65f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18827.52,-183.72 18826.08,-183.72 18826.08,-182.28 18827.52,-182.28 18827.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8cc6c30e58ca45feb5680a89ed29063b&amp;#45;&amp;#45;b2983bf9153d4e78b37d28233931d65f --&gt;\n&lt;g id=\"edge1339\" class=\"edge\"&gt;\n&lt;title&gt;8cc6c30e58ca45feb5680a89ed29063b&amp;#45;&amp;#45;b2983bf9153d4e78b37d28233931d65f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18734.27,-183C18737,-183 18823.05,-183 18825.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98f8b787e62d46898034ab87804acb58 --&gt;\n&lt;g id=\"node1346\" class=\"node\"&gt;\n&lt;title&gt;98f8b787e62d46898034ab87804acb58&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18921.12,-183.72 18919.68,-183.72 18919.68,-182.28 18921.12,-182.28 18921.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b2983bf9153d4e78b37d28233931d65f&amp;#45;&amp;#45;98f8b787e62d46898034ab87804acb58 --&gt;\n&lt;g id=\"edge1340\" class=\"edge\"&gt;\n&lt;title&gt;b2983bf9153d4e78b37d28233931d65f&amp;#45;&amp;#45;98f8b787e62d46898034ab87804acb58&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18827.87,-183C18830.6,-183 18916.65,-183 18919.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5121e40d0e8348009ec42f2c830d734a --&gt;\n&lt;g id=\"node1347\" class=\"node\"&gt;\n&lt;title&gt;5121e40d0e8348009ec42f2c830d734a&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M19030.8,-211.8C19030.8,-211.8 18997.2,-211.8 18997.2,-211.8 18991.2,-211.8 18985.2,-205.8 18985.2,-199.8 18985.2,-199.8 18985.2,-166.2 18985.2,-166.2 18985.2,-160.2 18991.2,-154.2 18997.2,-154.2 18997.2,-154.2 19030.8,-154.2 19030.8,-154.2 19036.8,-154.2 19042.8,-160.2 19042.8,-166.2 19042.8,-166.2 19042.8,-199.8 19042.8,-199.8 19042.8,-205.8 19036.8,-211.8 19030.8,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"19014\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 98f8b787e62d46898034ab87804acb58&amp;#45;&amp;#45;5121e40d0e8348009ec42f2c830d734a --&gt;\n&lt;g id=\"edge1341\" class=\"edge\"&gt;\n&lt;title&gt;98f8b787e62d46898034ab87804acb58&amp;#45;&amp;#45;5121e40d0e8348009ec42f2c830d734a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18921.47,-183C18923.19,-183 18958.08,-183 18984.28,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5121e40d0e8348009ec42f2c830d734a&amp;#45;&amp;#45;61175703b6d54fedaedeba9028ca2ee1 --&gt;\n&lt;g id=\"edge1999\" class=\"edge\"&gt;\n&lt;title&gt;5121e40d0e8348009ec42f2c830d734a&amp;#45;&amp;#45;61175703b6d54fedaedeba9028ca2ee1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19014,-212.65C19014,-223.2 19014,-233.76 19014,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 57db94aee0b94dd4a9f35bc72cc23060 --&gt;\n&lt;g id=\"node1348\" class=\"node\"&gt;\n&lt;title&gt;57db94aee0b94dd4a9f35bc72cc23060&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"19107.6\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5121e40d0e8348009ec42f2c830d734a&amp;#45;&amp;#45;57db94aee0b94dd4a9f35bc72cc23060 --&gt;\n&lt;g id=\"edge1342\" class=\"edge\"&gt;\n&lt;title&gt;5121e40d0e8348009ec42f2c830d734a&amp;#45;&amp;#45;57db94aee0b94dd4a9f35bc72cc23060&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19043.48,-183C19063.44,-183 19088.54,-183 19100.16,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 245742db07dd435c8b6a19be598be73e --&gt;\n&lt;g id=\"node1349\" class=\"node\"&gt;\n&lt;title&gt;245742db07dd435c8b6a19be598be73e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19201.92,-183.72 19200.48,-183.72 19200.48,-182.28 19201.92,-182.28 19201.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 57db94aee0b94dd4a9f35bc72cc23060&amp;#45;&amp;#45;245742db07dd435c8b6a19be598be73e --&gt;\n&lt;g id=\"edge1343\" class=\"edge\"&gt;\n&lt;title&gt;57db94aee0b94dd4a9f35bc72cc23060&amp;#45;&amp;#45;245742db07dd435c8b6a19be598be73e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19115.19,-183C19135.53,-183 19196.24,-183 19200.02,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 77cac90d5f9e4d86aadd8eaac5c5273f --&gt;\n&lt;g id=\"node1350\" class=\"node\"&gt;\n&lt;title&gt;77cac90d5f9e4d86aadd8eaac5c5273f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19354.32,-183.72 19352.88,-183.72 19352.88,-182.28 19354.32,-182.28 19354.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 245742db07dd435c8b6a19be598be73e&amp;#45;&amp;#45;77cac90d5f9e4d86aadd8eaac5c5273f --&gt;\n&lt;g id=\"edge1344\" class=\"edge\"&gt;\n&lt;title&gt;245742db07dd435c8b6a19be598be73e&amp;#45;&amp;#45;77cac90d5f9e4d86aadd8eaac5c5273f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19202.31,-183C19206.79,-183 19348.08,-183 19352.49,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- e3767c93dba84824843083e3afe97980 --&gt;\n&lt;g id=\"node1351\" class=\"node\"&gt;\n&lt;title&gt;e3767c93dba84824843083e3afe97980&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19506.72,-183.72 19505.28,-183.72 19505.28,-182.28 19506.72,-182.28 19506.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 77cac90d5f9e4d86aadd8eaac5c5273f&amp;#45;&amp;#45;e3767c93dba84824843083e3afe97980 --&gt;\n&lt;g id=\"edge1345\" class=\"edge\"&gt;\n&lt;title&gt;77cac90d5f9e4d86aadd8eaac5c5273f&amp;#45;&amp;#45;e3767c93dba84824843083e3afe97980&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19354.71,-183C19359.19,-183 19500.48,-183 19504.89,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2840b83c7637461ab607e396a24abb9e --&gt;\n&lt;g id=\"node1352\" class=\"node\"&gt;\n&lt;title&gt;2840b83c7637461ab607e396a24abb9e&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"19599.6\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- e3767c93dba84824843083e3afe97980&amp;#45;&amp;#45;2840b83c7637461ab607e396a24abb9e --&gt;\n&lt;g id=\"edge1346\" class=\"edge\"&gt;\n&lt;title&gt;e3767c93dba84824843083e3afe97980&amp;#45;&amp;#45;2840b83c7637461ab607e396a24abb9e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19507.07,-183C19509.37,-183 19571.21,-183 19591.92,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7096e4f6d4944ad58d47fdfebcc283c3 --&gt;\n&lt;g id=\"node1353\" class=\"node\"&gt;\n&lt;title&gt;7096e4f6d4944ad58d47fdfebcc283c3&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M19710,-211.8C19710,-211.8 19676.4,-211.8 19676.4,-211.8 19670.4,-211.8 19664.4,-205.8 19664.4,-199.8 19664.4,-199.8 19664.4,-166.2 19664.4,-166.2 19664.4,-160.2 19670.4,-154.2 19676.4,-154.2 19676.4,-154.2 19710,-154.2 19710,-154.2 19716,-154.2 19722,-160.2 19722,-166.2 19722,-166.2 19722,-199.8 19722,-199.8 19722,-205.8 19716,-211.8 19710,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"19693.2\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2840b83c7637461ab607e396a24abb9e&amp;#45;&amp;#45;7096e4f6d4944ad58d47fdfebcc283c3 --&gt;\n&lt;g id=\"edge1347\" class=\"edge\"&gt;\n&lt;title&gt;2840b83c7637461ab607e396a24abb9e&amp;#45;&amp;#45;7096e4f6d4944ad58d47fdfebcc283c3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19607.19,-183C19618.84,-183 19643.72,-183 19663.57,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7096e4f6d4944ad58d47fdfebcc283c3&amp;#45;&amp;#45;5804c4bb4ade4d5ca463e160dc7d375c --&gt;\n&lt;g id=\"edge2000\" class=\"edge\"&gt;\n&lt;title&gt;7096e4f6d4944ad58d47fdfebcc283c3&amp;#45;&amp;#45;5804c4bb4ade4d5ca463e160dc7d375c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19693.2,-212.65C19693.2,-223.2 19693.2,-233.76 19693.2,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- c8767f224a0049308b9932fde9a35aca --&gt;\n&lt;g id=\"node1354\" class=\"node\"&gt;\n&lt;title&gt;c8767f224a0049308b9932fde9a35aca&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19787.52,-183.72 19786.08,-183.72 19786.08,-182.28 19787.52,-182.28 19787.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7096e4f6d4944ad58d47fdfebcc283c3&amp;#45;&amp;#45;c8767f224a0049308b9932fde9a35aca --&gt;\n&lt;g id=\"edge1348\" class=\"edge\"&gt;\n&lt;title&gt;7096e4f6d4944ad58d47fdfebcc283c3&amp;#45;&amp;#45;c8767f224a0049308b9932fde9a35aca&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19722.68,-183C19748.73,-183 19783.54,-183 19785.7,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8a4987b621e847bd8fd60fe9cea275fd --&gt;\n&lt;g id=\"node1355\" class=\"node\"&gt;\n&lt;title&gt;8a4987b621e847bd8fd60fe9cea275fd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19881.12,-183.72 19879.68,-183.72 19879.68,-182.28 19881.12,-182.28 19881.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c8767f224a0049308b9932fde9a35aca&amp;#45;&amp;#45;8a4987b621e847bd8fd60fe9cea275fd --&gt;\n&lt;g id=\"edge1349\" class=\"edge\"&gt;\n&lt;title&gt;c8767f224a0049308b9932fde9a35aca&amp;#45;&amp;#45;8a4987b621e847bd8fd60fe9cea275fd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19787.87,-183C19790.6,-183 19876.65,-183 19879.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 469de735539d4ab5b44ddffde91b5f21 --&gt;\n&lt;g id=\"node1356\" class=\"node\"&gt;\n&lt;title&gt;469de735539d4ab5b44ddffde91b5f21&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19974.72,-183.72 19973.28,-183.72 19973.28,-182.28 19974.72,-182.28 19974.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8a4987b621e847bd8fd60fe9cea275fd&amp;#45;&amp;#45;469de735539d4ab5b44ddffde91b5f21 --&gt;\n&lt;g id=\"edge1350\" class=\"edge\"&gt;\n&lt;title&gt;8a4987b621e847bd8fd60fe9cea275fd&amp;#45;&amp;#45;469de735539d4ab5b44ddffde91b5f21&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19881.47,-183C19884.2,-183 19970.25,-183 19972.94,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5dc992b1cc9d43f2b1cae5e22d6af0f4 --&gt;\n&lt;g id=\"node1357\" class=\"node\"&gt;\n&lt;title&gt;5dc992b1cc9d43f2b1cae5e22d6af0f4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20068.32,-183.72 20066.88,-183.72 20066.88,-182.28 20068.32,-182.28 20068.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 469de735539d4ab5b44ddffde91b5f21&amp;#45;&amp;#45;5dc992b1cc9d43f2b1cae5e22d6af0f4 --&gt;\n&lt;g id=\"edge1351\" class=\"edge\"&gt;\n&lt;title&gt;469de735539d4ab5b44ddffde91b5f21&amp;#45;&amp;#45;5dc992b1cc9d43f2b1cae5e22d6af0f4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19975.07,-183C19977.8,-183 20063.85,-183 20066.54,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- bf14f9f29f984416914cf8cf99bb9143 --&gt;\n&lt;g id=\"node1358\" class=\"node\"&gt;\n&lt;title&gt;bf14f9f29f984416914cf8cf99bb9143&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20161.92,-183.72 20160.48,-183.72 20160.48,-182.28 20161.92,-182.28 20161.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5dc992b1cc9d43f2b1cae5e22d6af0f4&amp;#45;&amp;#45;bf14f9f29f984416914cf8cf99bb9143 --&gt;\n&lt;g id=\"edge1352\" class=\"edge\"&gt;\n&lt;title&gt;5dc992b1cc9d43f2b1cae5e22d6af0f4&amp;#45;&amp;#45;bf14f9f29f984416914cf8cf99bb9143&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20068.67,-183C20071.4,-183 20157.45,-183 20160.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1baeeb0d362949629407d0410e3ba047 --&gt;\n&lt;g id=\"node1359\" class=\"node\"&gt;\n&lt;title&gt;1baeeb0d362949629407d0410e3ba047&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M20271.6,-211.8C20271.6,-211.8 20238,-211.8 20238,-211.8 20232,-211.8 20226,-205.8 20226,-199.8 20226,-199.8 20226,-166.2 20226,-166.2 20226,-160.2 20232,-154.2 20238,-154.2 20238,-154.2 20271.6,-154.2 20271.6,-154.2 20277.6,-154.2 20283.6,-160.2 20283.6,-166.2 20283.6,-166.2 20283.6,-199.8 20283.6,-199.8 20283.6,-205.8 20277.6,-211.8 20271.6,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"20254.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- bf14f9f29f984416914cf8cf99bb9143&amp;#45;&amp;#45;1baeeb0d362949629407d0410e3ba047 --&gt;\n&lt;g id=\"edge1353\" class=\"edge\"&gt;\n&lt;title&gt;bf14f9f29f984416914cf8cf99bb9143&amp;#45;&amp;#45;1baeeb0d362949629407d0410e3ba047&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20162.27,-183C20163.99,-183 20198.88,-183 20225.08,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1baeeb0d362949629407d0410e3ba047&amp;#45;&amp;#45;98c4cf8f6a93422ca174f9dce05f99c3 --&gt;\n&lt;g id=\"edge2001\" class=\"edge\"&gt;\n&lt;title&gt;1baeeb0d362949629407d0410e3ba047&amp;#45;&amp;#45;98c4cf8f6a93422ca174f9dce05f99c3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20254.8,-212.65C20254.8,-223.2 20254.8,-233.76 20254.8,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d338323df8543958bc0db312a43fa07 --&gt;\n&lt;g id=\"node1360\" class=\"node\"&gt;\n&lt;title&gt;0d338323df8543958bc0db312a43fa07&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"20348.4\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1baeeb0d362949629407d0410e3ba047&amp;#45;&amp;#45;0d338323df8543958bc0db312a43fa07 --&gt;\n&lt;g id=\"edge1354\" class=\"edge\"&gt;\n&lt;title&gt;1baeeb0d362949629407d0410e3ba047&amp;#45;&amp;#45;0d338323df8543958bc0db312a43fa07&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20284.28,-183C20304.24,-183 20329.34,-183 20340.96,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 29dbfb44544a443c805b5998b185b8b8 --&gt;\n&lt;g id=\"node1361\" class=\"node\"&gt;\n&lt;title&gt;29dbfb44544a443c805b5998b185b8b8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20442.72,-183.72 20441.28,-183.72 20441.28,-182.28 20442.72,-182.28 20442.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d338323df8543958bc0db312a43fa07&amp;#45;&amp;#45;29dbfb44544a443c805b5998b185b8b8 --&gt;\n&lt;g id=\"edge1355\" class=\"edge\"&gt;\n&lt;title&gt;0d338323df8543958bc0db312a43fa07&amp;#45;&amp;#45;29dbfb44544a443c805b5998b185b8b8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20355.99,-183C20376.33,-183 20437.04,-183 20440.82,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- fd816a92512746b8bd0e24bb6ad431f8 --&gt;\n&lt;g id=\"node1362\" class=\"node\"&gt;\n&lt;title&gt;fd816a92512746b8bd0e24bb6ad431f8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20595.12,-183.72 20593.68,-183.72 20593.68,-182.28 20595.12,-182.28 20595.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 29dbfb44544a443c805b5998b185b8b8&amp;#45;&amp;#45;fd816a92512746b8bd0e24bb6ad431f8 --&gt;\n&lt;g id=\"edge1356\" class=\"edge\"&gt;\n&lt;title&gt;29dbfb44544a443c805b5998b185b8b8&amp;#45;&amp;#45;fd816a92512746b8bd0e24bb6ad431f8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20443.11,-183C20447.59,-183 20588.88,-183 20593.29,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0f5866fa73fa4099ba472d9cbef443ab --&gt;\n&lt;g id=\"node1363\" class=\"node\"&gt;\n&lt;title&gt;0f5866fa73fa4099ba472d9cbef443ab&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20747.52,-183.72 20746.08,-183.72 20746.08,-182.28 20747.52,-182.28 20747.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fd816a92512746b8bd0e24bb6ad431f8&amp;#45;&amp;#45;0f5866fa73fa4099ba472d9cbef443ab --&gt;\n&lt;g id=\"edge1357\" class=\"edge\"&gt;\n&lt;title&gt;fd816a92512746b8bd0e24bb6ad431f8&amp;#45;&amp;#45;0f5866fa73fa4099ba472d9cbef443ab&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20595.51,-183C20599.99,-183 20741.28,-183 20745.69,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- b4b3fc8dd8714713902b48683ec3bbbc --&gt;\n&lt;g id=\"node1364\" class=\"node\"&gt;\n&lt;title&gt;b4b3fc8dd8714713902b48683ec3bbbc&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"20840.4\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0f5866fa73fa4099ba472d9cbef443ab&amp;#45;&amp;#45;b4b3fc8dd8714713902b48683ec3bbbc --&gt;\n&lt;g id=\"edge1358\" class=\"edge\"&gt;\n&lt;title&gt;0f5866fa73fa4099ba472d9cbef443ab&amp;#45;&amp;#45;b4b3fc8dd8714713902b48683ec3bbbc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20747.87,-183C20750.17,-183 20812.01,-183 20832.72,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 63522d4d61274ff791b3f4ccfd8aaf04 --&gt;\n&lt;g id=\"node1365\" class=\"node\"&gt;\n&lt;title&gt;63522d4d61274ff791b3f4ccfd8aaf04&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M20950.8,-211.8C20950.8,-211.8 20917.2,-211.8 20917.2,-211.8 20911.2,-211.8 20905.2,-205.8 20905.2,-199.8 20905.2,-199.8 20905.2,-166.2 20905.2,-166.2 20905.2,-160.2 20911.2,-154.2 20917.2,-154.2 20917.2,-154.2 20950.8,-154.2 20950.8,-154.2 20956.8,-154.2 20962.8,-160.2 20962.8,-166.2 20962.8,-166.2 20962.8,-199.8 20962.8,-199.8 20962.8,-205.8 20956.8,-211.8 20950.8,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"20934\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- b4b3fc8dd8714713902b48683ec3bbbc&amp;#45;&amp;#45;63522d4d61274ff791b3f4ccfd8aaf04 --&gt;\n&lt;g id=\"edge1359\" class=\"edge\"&gt;\n&lt;title&gt;b4b3fc8dd8714713902b48683ec3bbbc&amp;#45;&amp;#45;63522d4d61274ff791b3f4ccfd8aaf04&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20847.99,-183C20859.64,-183 20884.52,-183 20904.37,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 63522d4d61274ff791b3f4ccfd8aaf04&amp;#45;&amp;#45;5151d9b1e5e0490089720c637b4de7fd --&gt;\n&lt;g id=\"edge2002\" class=\"edge\"&gt;\n&lt;title&gt;63522d4d61274ff791b3f4ccfd8aaf04&amp;#45;&amp;#45;5151d9b1e5e0490089720c637b4de7fd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20934,-212.65C20934,-223.2 20934,-233.76 20934,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 058ccd71d13748e48e565b0242d1b34f --&gt;\n&lt;g id=\"node1366\" class=\"node\"&gt;\n&lt;title&gt;058ccd71d13748e48e565b0242d1b34f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21028.32,-183.72 21026.88,-183.72 21026.88,-182.28 21028.32,-182.28 21028.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 63522d4d61274ff791b3f4ccfd8aaf04&amp;#45;&amp;#45;058ccd71d13748e48e565b0242d1b34f --&gt;\n&lt;g id=\"edge1360\" class=\"edge\"&gt;\n&lt;title&gt;63522d4d61274ff791b3f4ccfd8aaf04&amp;#45;&amp;#45;058ccd71d13748e48e565b0242d1b34f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20963.48,-183C20989.53,-183 21024.34,-183 21026.5,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- d0a8ba44c79f4e0796ea321f4ab8a47b --&gt;\n&lt;g id=\"node1367\" class=\"node\"&gt;\n&lt;title&gt;d0a8ba44c79f4e0796ea321f4ab8a47b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21121.92,-183.72 21120.48,-183.72 21120.48,-182.28 21121.92,-182.28 21121.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 058ccd71d13748e48e565b0242d1b34f&amp;#45;&amp;#45;d0a8ba44c79f4e0796ea321f4ab8a47b --&gt;\n&lt;g id=\"edge1361\" class=\"edge\"&gt;\n&lt;title&gt;058ccd71d13748e48e565b0242d1b34f&amp;#45;&amp;#45;d0a8ba44c79f4e0796ea321f4ab8a47b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21028.67,-183C21031.4,-183 21117.45,-183 21120.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- dfcacac7125340069d6869fd82e71e4e --&gt;\n&lt;g id=\"node1368\" class=\"node\"&gt;\n&lt;title&gt;dfcacac7125340069d6869fd82e71e4e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21215.52,-183.72 21214.08,-183.72 21214.08,-182.28 21215.52,-182.28 21215.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d0a8ba44c79f4e0796ea321f4ab8a47b&amp;#45;&amp;#45;dfcacac7125340069d6869fd82e71e4e --&gt;\n&lt;g id=\"edge1362\" class=\"edge\"&gt;\n&lt;title&gt;d0a8ba44c79f4e0796ea321f4ab8a47b&amp;#45;&amp;#45;dfcacac7125340069d6869fd82e71e4e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21122.27,-183C21125,-183 21211.05,-183 21213.74,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 889dd93738984e7b8ec54222752a8faf --&gt;\n&lt;g id=\"node1369\" class=\"node\"&gt;\n&lt;title&gt;889dd93738984e7b8ec54222752a8faf&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M21325.2,-211.8C21325.2,-211.8 21291.6,-211.8 21291.6,-211.8 21285.6,-211.8 21279.6,-205.8 21279.6,-199.8 21279.6,-199.8 21279.6,-166.2 21279.6,-166.2 21279.6,-160.2 21285.6,-154.2 21291.6,-154.2 21291.6,-154.2 21325.2,-154.2 21325.2,-154.2 21331.2,-154.2 21337.2,-160.2 21337.2,-166.2 21337.2,-166.2 21337.2,-199.8 21337.2,-199.8 21337.2,-205.8 21331.2,-211.8 21325.2,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"21308.4\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- dfcacac7125340069d6869fd82e71e4e&amp;#45;&amp;#45;889dd93738984e7b8ec54222752a8faf --&gt;\n&lt;g id=\"edge1363\" class=\"edge\"&gt;\n&lt;title&gt;dfcacac7125340069d6869fd82e71e4e&amp;#45;&amp;#45;889dd93738984e7b8ec54222752a8faf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21215.87,-183C21217.59,-183 21252.48,-183 21278.68,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 889dd93738984e7b8ec54222752a8faf&amp;#45;&amp;#45;c0338f370c7249c682558bfd41222484 --&gt;\n&lt;g id=\"edge2003\" class=\"edge\"&gt;\n&lt;title&gt;889dd93738984e7b8ec54222752a8faf&amp;#45;&amp;#45;c0338f370c7249c682558bfd41222484&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21308.4,-212.65C21308.4,-223.2 21308.4,-233.76 21308.4,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5c526b72e0a04eb983c59d593b9cecf9 --&gt;\n&lt;g id=\"node1370\" class=\"node\"&gt;\n&lt;title&gt;5c526b72e0a04eb983c59d593b9cecf9&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M21536.4,-211.8C21536.4,-211.8 21385.2,-211.8 21385.2,-211.8 21379.2,-211.8 21373.2,-205.8 21373.2,-199.8 21373.2,-199.8 21373.2,-166.2 21373.2,-166.2 21373.2,-160.2 21379.2,-154.2 21385.2,-154.2 21385.2,-154.2 21536.4,-154.2 21536.4,-154.2 21542.4,-154.2 21548.4,-160.2 21548.4,-166.2 21548.4,-166.2 21548.4,-199.8 21548.4,-199.8 21548.4,-205.8 21542.4,-211.8 21536.4,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"21460.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 889dd93738984e7b8ec54222752a8faf&amp;#45;&amp;#45;5c526b72e0a04eb983c59d593b9cecf9 --&gt;\n&lt;g id=\"edge1364\" class=\"edge\"&gt;\n&lt;title&gt;889dd93738984e7b8ec54222752a8faf&amp;#45;&amp;#45;5c526b72e0a04eb983c59d593b9cecf9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21338.04,-183C21348.1,-183 21359.99,-183 21372.33,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- ecb60dcc528d49e29879f83453d03e47 --&gt;\n&lt;g id=\"node1371\" class=\"node\"&gt;\n&lt;title&gt;ecb60dcc528d49e29879f83453d03e47&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M21630,-211.8C21630,-211.8 21596.4,-211.8 21596.4,-211.8 21590.4,-211.8 21584.4,-205.8 21584.4,-199.8 21584.4,-199.8 21584.4,-166.2 21584.4,-166.2 21584.4,-160.2 21590.4,-154.2 21596.4,-154.2 21596.4,-154.2 21630,-154.2 21630,-154.2 21636,-154.2 21642,-160.2 21642,-166.2 21642,-166.2 21642,-199.8 21642,-199.8 21642,-205.8 21636,-211.8 21630,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"21613.2\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5c526b72e0a04eb983c59d593b9cecf9&amp;#45;&amp;#45;ecb60dcc528d49e29879f83453d03e47 --&gt;\n&lt;g id=\"edge1365\" class=\"edge\"&gt;\n&lt;title&gt;5c526b72e0a04eb983c59d593b9cecf9&amp;#45;&amp;#45;ecb60dcc528d49e29879f83453d03e47&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21549.29,-183C21561.57,-183 21573.4,-183 21583.42,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- ecb60dcc528d49e29879f83453d03e47&amp;#45;&amp;#45;dcbd4b3db7a94d22ac0fbbfeea92c615 --&gt;\n&lt;g id=\"edge2004\" class=\"edge\"&gt;\n&lt;title&gt;ecb60dcc528d49e29879f83453d03e47&amp;#45;&amp;#45;dcbd4b3db7a94d22ac0fbbfeea92c615&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21613.2,-212.65C21613.2,-223.2 21613.2,-233.76 21613.2,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- d992543d4ea5433c82f4744f727f0ad3 --&gt;\n&lt;g id=\"node1372\" class=\"node\"&gt;\n&lt;title&gt;d992543d4ea5433c82f4744f727f0ad3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21707.52,-183.72 21706.08,-183.72 21706.08,-182.28 21707.52,-182.28 21707.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ecb60dcc528d49e29879f83453d03e47&amp;#45;&amp;#45;d992543d4ea5433c82f4744f727f0ad3 --&gt;\n&lt;g id=\"edge1366\" class=\"edge\"&gt;\n&lt;title&gt;ecb60dcc528d49e29879f83453d03e47&amp;#45;&amp;#45;d992543d4ea5433c82f4744f727f0ad3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21642.68,-183C21668.73,-183 21703.54,-183 21705.7,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 81cf4794695946fc97086769dc8781aa --&gt;\n&lt;g id=\"node1373\" class=\"node\"&gt;\n&lt;title&gt;81cf4794695946fc97086769dc8781aa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21801.12,-183.72 21799.68,-183.72 21799.68,-182.28 21801.12,-182.28 21801.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d992543d4ea5433c82f4744f727f0ad3&amp;#45;&amp;#45;81cf4794695946fc97086769dc8781aa --&gt;\n&lt;g id=\"edge1367\" class=\"edge\"&gt;\n&lt;title&gt;d992543d4ea5433c82f4744f727f0ad3&amp;#45;&amp;#45;81cf4794695946fc97086769dc8781aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21707.87,-183C21710.6,-183 21796.65,-183 21799.34,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- e1835bea04fd4c95a2f5f0eeea05fb20 --&gt;\n&lt;g id=\"node1374\" class=\"node\"&gt;\n&lt;title&gt;e1835bea04fd4c95a2f5f0eeea05fb20&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M21910.8,-211.8C21910.8,-211.8 21877.2,-211.8 21877.2,-211.8 21871.2,-211.8 21865.2,-205.8 21865.2,-199.8 21865.2,-199.8 21865.2,-166.2 21865.2,-166.2 21865.2,-160.2 21871.2,-154.2 21877.2,-154.2 21877.2,-154.2 21910.8,-154.2 21910.8,-154.2 21916.8,-154.2 21922.8,-160.2 21922.8,-166.2 21922.8,-166.2 21922.8,-199.8 21922.8,-199.8 21922.8,-205.8 21916.8,-211.8 21910.8,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"21894\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 81cf4794695946fc97086769dc8781aa&amp;#45;&amp;#45;e1835bea04fd4c95a2f5f0eeea05fb20 --&gt;\n&lt;g id=\"edge1368\" class=\"edge\"&gt;\n&lt;title&gt;81cf4794695946fc97086769dc8781aa&amp;#45;&amp;#45;e1835bea04fd4c95a2f5f0eeea05fb20&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21801.47,-183C21803.19,-183 21838.08,-183 21864.28,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- e1835bea04fd4c95a2f5f0eeea05fb20&amp;#45;&amp;#45;110fce9c839a44609700dc0571eb8ea7 --&gt;\n&lt;g id=\"edge2005\" class=\"edge\"&gt;\n&lt;title&gt;e1835bea04fd4c95a2f5f0eeea05fb20&amp;#45;&amp;#45;110fce9c839a44609700dc0571eb8ea7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21894,-212.65C21894,-223.2 21894,-233.76 21894,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4550d277328d4c34ad206a80e58a4e36 --&gt;\n&lt;g id=\"node1375\" class=\"node\"&gt;\n&lt;title&gt;4550d277328d4c34ad206a80e58a4e36&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"21987.6\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- e1835bea04fd4c95a2f5f0eeea05fb20&amp;#45;&amp;#45;4550d277328d4c34ad206a80e58a4e36 --&gt;\n&lt;g id=\"edge1369\" class=\"edge\"&gt;\n&lt;title&gt;e1835bea04fd4c95a2f5f0eeea05fb20&amp;#45;&amp;#45;4550d277328d4c34ad206a80e58a4e36&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21923.48,-183C21943.44,-183 21968.54,-183 21980.16,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8fd90f61f854857875e692c03c3cf71 --&gt;\n&lt;g id=\"node1376\" class=\"node\"&gt;\n&lt;title&gt;f8fd90f61f854857875e692c03c3cf71&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22140.72,-183.72 22139.28,-183.72 22139.28,-182.28 22140.72,-182.28 22140.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4550d277328d4c34ad206a80e58a4e36&amp;#45;&amp;#45;f8fd90f61f854857875e692c03c3cf71 --&gt;\n&lt;g id=\"edge1370\" class=\"edge\"&gt;\n&lt;title&gt;4550d277328d4c34ad206a80e58a4e36&amp;#45;&amp;#45;f8fd90f61f854857875e692c03c3cf71&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21995.06,-183C22023.4,-183 22135.42,-183 22138.92,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- ee58ec4b9be740dcb09ef5d85209c3d3 --&gt;\n&lt;g id=\"node1377\" class=\"node\"&gt;\n&lt;title&gt;ee58ec4b9be740dcb09ef5d85209c3d3&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"22292.4\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8fd90f61f854857875e692c03c3cf71&amp;#45;&amp;#45;ee58ec4b9be740dcb09ef5d85209c3d3 --&gt;\n&lt;g id=\"edge1371\" class=\"edge\"&gt;\n&lt;title&gt;f8fd90f61f854857875e692c03c3cf71&amp;#45;&amp;#45;ee58ec4b9be740dcb09ef5d85209c3d3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22141.11,-183C22145.08,-183 22256.17,-183 22284.75,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 581f8166fb4241a89c3422859825480c --&gt;\n&lt;g id=\"node1378\" class=\"node\"&gt;\n&lt;title&gt;581f8166fb4241a89c3422859825480c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M22402.8,-211.8C22402.8,-211.8 22369.2,-211.8 22369.2,-211.8 22363.2,-211.8 22357.2,-205.8 22357.2,-199.8 22357.2,-199.8 22357.2,-166.2 22357.2,-166.2 22357.2,-160.2 22363.2,-154.2 22369.2,-154.2 22369.2,-154.2 22402.8,-154.2 22402.8,-154.2 22408.8,-154.2 22414.8,-160.2 22414.8,-166.2 22414.8,-166.2 22414.8,-199.8 22414.8,-199.8 22414.8,-205.8 22408.8,-211.8 22402.8,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"22386\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- ee58ec4b9be740dcb09ef5d85209c3d3&amp;#45;&amp;#45;581f8166fb4241a89c3422859825480c --&gt;\n&lt;g id=\"edge1372\" class=\"edge\"&gt;\n&lt;title&gt;ee58ec4b9be740dcb09ef5d85209c3d3&amp;#45;&amp;#45;581f8166fb4241a89c3422859825480c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22299.99,-183C22311.64,-183 22336.52,-183 22356.37,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 581f8166fb4241a89c3422859825480c&amp;#45;&amp;#45;896c844f6f4a496c85ec7e5e05697fe5 --&gt;\n&lt;g id=\"edge2006\" class=\"edge\"&gt;\n&lt;title&gt;581f8166fb4241a89c3422859825480c&amp;#45;&amp;#45;896c844f6f4a496c85ec7e5e05697fe5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22386,-212.65C22386,-223.2 22386,-233.76 22386,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7cc2448f38d64c0090bf4680d901ab69 --&gt;\n&lt;g id=\"node1379\" class=\"node\"&gt;\n&lt;title&gt;7cc2448f38d64c0090bf4680d901ab69&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22480.32,-183.72 22478.88,-183.72 22478.88,-182.28 22480.32,-182.28 22480.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 581f8166fb4241a89c3422859825480c&amp;#45;&amp;#45;7cc2448f38d64c0090bf4680d901ab69 --&gt;\n&lt;g id=\"edge1373\" class=\"edge\"&gt;\n&lt;title&gt;581f8166fb4241a89c3422859825480c&amp;#45;&amp;#45;7cc2448f38d64c0090bf4680d901ab69&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22415.48,-183C22441.53,-183 22476.34,-183 22478.5,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd11478dd0134543bf3f7126e5231e95 --&gt;\n&lt;g id=\"node1380\" class=\"node\"&gt;\n&lt;title&gt;dd11478dd0134543bf3f7126e5231e95&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22573.92,-183.72 22572.48,-183.72 22572.48,-182.28 22573.92,-182.28 22573.92,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7cc2448f38d64c0090bf4680d901ab69&amp;#45;&amp;#45;dd11478dd0134543bf3f7126e5231e95 --&gt;\n&lt;g id=\"edge1374\" class=\"edge\"&gt;\n&lt;title&gt;7cc2448f38d64c0090bf4680d901ab69&amp;#45;&amp;#45;dd11478dd0134543bf3f7126e5231e95&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22480.67,-183C22483.4,-183 22569.45,-183 22572.14,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6066d79b54714f3c863ac9e99173a895 --&gt;\n&lt;g id=\"node1381\" class=\"node\"&gt;\n&lt;title&gt;6066d79b54714f3c863ac9e99173a895&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M22683.6,-211.8C22683.6,-211.8 22650,-211.8 22650,-211.8 22644,-211.8 22638,-205.8 22638,-199.8 22638,-199.8 22638,-166.2 22638,-166.2 22638,-160.2 22644,-154.2 22650,-154.2 22650,-154.2 22683.6,-154.2 22683.6,-154.2 22689.6,-154.2 22695.6,-160.2 22695.6,-166.2 22695.6,-166.2 22695.6,-199.8 22695.6,-199.8 22695.6,-205.8 22689.6,-211.8 22683.6,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"22666.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- dd11478dd0134543bf3f7126e5231e95&amp;#45;&amp;#45;6066d79b54714f3c863ac9e99173a895 --&gt;\n&lt;g id=\"edge1375\" class=\"edge\"&gt;\n&lt;title&gt;dd11478dd0134543bf3f7126e5231e95&amp;#45;&amp;#45;6066d79b54714f3c863ac9e99173a895&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22574.27,-183C22575.99,-183 22610.88,-183 22637.08,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6066d79b54714f3c863ac9e99173a895&amp;#45;&amp;#45;9e428438cb4341bca48d9e47b8026e8b --&gt;\n&lt;g id=\"edge2007\" class=\"edge\"&gt;\n&lt;title&gt;6066d79b54714f3c863ac9e99173a895&amp;#45;&amp;#45;9e428438cb4341bca48d9e47b8026e8b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22666.8,-212.65C22666.8,-223.2 22666.8,-233.76 22666.8,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- b86498cee2b948d7a28c998a81c0c0ff --&gt;\n&lt;g id=\"node1382\" class=\"node\"&gt;\n&lt;title&gt;b86498cee2b948d7a28c998a81c0c0ff&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"22760.4\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6066d79b54714f3c863ac9e99173a895&amp;#45;&amp;#45;b86498cee2b948d7a28c998a81c0c0ff --&gt;\n&lt;g id=\"edge1376\" class=\"edge\"&gt;\n&lt;title&gt;6066d79b54714f3c863ac9e99173a895&amp;#45;&amp;#45;b86498cee2b948d7a28c998a81c0c0ff&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22696.28,-183C22716.24,-183 22741.34,-183 22752.96,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 396cd05c760848d888ce55fde458d7f9 --&gt;\n&lt;g id=\"node1383\" class=\"node\"&gt;\n&lt;title&gt;396cd05c760848d888ce55fde458d7f9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22854.72,-183.72 22853.28,-183.72 22853.28,-182.28 22854.72,-182.28 22854.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b86498cee2b948d7a28c998a81c0c0ff&amp;#45;&amp;#45;396cd05c760848d888ce55fde458d7f9 --&gt;\n&lt;g id=\"edge1377\" class=\"edge\"&gt;\n&lt;title&gt;b86498cee2b948d7a28c998a81c0c0ff&amp;#45;&amp;#45;396cd05c760848d888ce55fde458d7f9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22767.99,-183C22788.33,-183 22849.04,-183 22852.82,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- a933d2d187c44457a5d085daa4f17039 --&gt;\n&lt;g id=\"node1384\" class=\"node\"&gt;\n&lt;title&gt;a933d2d187c44457a5d085daa4f17039&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23007.12,-183.72 23005.68,-183.72 23005.68,-182.28 23007.12,-182.28 23007.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 396cd05c760848d888ce55fde458d7f9&amp;#45;&amp;#45;a933d2d187c44457a5d085daa4f17039 --&gt;\n&lt;g id=\"edge1378\" class=\"edge\"&gt;\n&lt;title&gt;396cd05c760848d888ce55fde458d7f9&amp;#45;&amp;#45;a933d2d187c44457a5d085daa4f17039&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22855.11,-183C22859.59,-183 23000.88,-183 23005.29,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d0e467de93149dbb65895414304dbc3 --&gt;\n&lt;g id=\"node1385\" class=\"node\"&gt;\n&lt;title&gt;7d0e467de93149dbb65895414304dbc3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23159.52,-183.72 23158.08,-183.72 23158.08,-182.28 23159.52,-182.28 23159.52,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a933d2d187c44457a5d085daa4f17039&amp;#45;&amp;#45;7d0e467de93149dbb65895414304dbc3 --&gt;\n&lt;g id=\"edge1379\" class=\"edge\"&gt;\n&lt;title&gt;a933d2d187c44457a5d085daa4f17039&amp;#45;&amp;#45;7d0e467de93149dbb65895414304dbc3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23007.51,-183C23011.99,-183 23153.28,-183 23157.69,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 84f02f749ef94488b9185a19b68ef57f --&gt;\n&lt;g id=\"node1386\" class=\"node\"&gt;\n&lt;title&gt;84f02f749ef94488b9185a19b68ef57f&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"23252.4\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d0e467de93149dbb65895414304dbc3&amp;#45;&amp;#45;84f02f749ef94488b9185a19b68ef57f --&gt;\n&lt;g id=\"edge1380\" class=\"edge\"&gt;\n&lt;title&gt;7d0e467de93149dbb65895414304dbc3&amp;#45;&amp;#45;84f02f749ef94488b9185a19b68ef57f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23159.87,-183C23162.17,-183 23224.01,-183 23244.72,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- f12801eb012145b2a04c457e82689381 --&gt;\n&lt;g id=\"node1387\" class=\"node\"&gt;\n&lt;title&gt;f12801eb012145b2a04c457e82689381&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M23362.8,-211.8C23362.8,-211.8 23329.2,-211.8 23329.2,-211.8 23323.2,-211.8 23317.2,-205.8 23317.2,-199.8 23317.2,-199.8 23317.2,-166.2 23317.2,-166.2 23317.2,-160.2 23323.2,-154.2 23329.2,-154.2 23329.2,-154.2 23362.8,-154.2 23362.8,-154.2 23368.8,-154.2 23374.8,-160.2 23374.8,-166.2 23374.8,-166.2 23374.8,-199.8 23374.8,-199.8 23374.8,-205.8 23368.8,-211.8 23362.8,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"23346\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 84f02f749ef94488b9185a19b68ef57f&amp;#45;&amp;#45;f12801eb012145b2a04c457e82689381 --&gt;\n&lt;g id=\"edge1381\" class=\"edge\"&gt;\n&lt;title&gt;84f02f749ef94488b9185a19b68ef57f&amp;#45;&amp;#45;f12801eb012145b2a04c457e82689381&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23259.99,-183C23271.64,-183 23296.52,-183 23316.37,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- f12801eb012145b2a04c457e82689381&amp;#45;&amp;#45;50987187e0a74cefa10d98cad87cf7ff --&gt;\n&lt;g id=\"edge2008\" class=\"edge\"&gt;\n&lt;title&gt;f12801eb012145b2a04c457e82689381&amp;#45;&amp;#45;50987187e0a74cefa10d98cad87cf7ff&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23346,-212.65C23346,-223.2 23346,-233.76 23346,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 888a2136ea934132a5e3f3ff2d39deee --&gt;\n&lt;g id=\"node1388\" class=\"node\"&gt;\n&lt;title&gt;888a2136ea934132a5e3f3ff2d39deee&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23440.32,-183.72 23438.88,-183.72 23438.88,-182.28 23440.32,-182.28 23440.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f12801eb012145b2a04c457e82689381&amp;#45;&amp;#45;888a2136ea934132a5e3f3ff2d39deee --&gt;\n&lt;g id=\"edge1382\" class=\"edge\"&gt;\n&lt;title&gt;f12801eb012145b2a04c457e82689381&amp;#45;&amp;#45;888a2136ea934132a5e3f3ff2d39deee&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23375.48,-183C23401.53,-183 23436.34,-183 23438.5,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 503e89895a0a4ce19d8fa38da1128dfd --&gt;\n&lt;g id=\"node1389\" class=\"node\"&gt;\n&lt;title&gt;503e89895a0a4ce19d8fa38da1128dfd&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M23550,-211.8C23550,-211.8 23516.4,-211.8 23516.4,-211.8 23510.4,-211.8 23504.4,-205.8 23504.4,-199.8 23504.4,-199.8 23504.4,-166.2 23504.4,-166.2 23504.4,-160.2 23510.4,-154.2 23516.4,-154.2 23516.4,-154.2 23550,-154.2 23550,-154.2 23556,-154.2 23562,-160.2 23562,-166.2 23562,-166.2 23562,-199.8 23562,-199.8 23562,-205.8 23556,-211.8 23550,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"23533.2\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 888a2136ea934132a5e3f3ff2d39deee&amp;#45;&amp;#45;503e89895a0a4ce19d8fa38da1128dfd --&gt;\n&lt;g id=\"edge1383\" class=\"edge\"&gt;\n&lt;title&gt;888a2136ea934132a5e3f3ff2d39deee&amp;#45;&amp;#45;503e89895a0a4ce19d8fa38da1128dfd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23440.67,-183C23442.39,-183 23477.28,-183 23503.48,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 503e89895a0a4ce19d8fa38da1128dfd&amp;#45;&amp;#45;78378fee6b5c485a99fc98f6802b3a9a --&gt;\n&lt;g id=\"edge2009\" class=\"edge\"&gt;\n&lt;title&gt;503e89895a0a4ce19d8fa38da1128dfd&amp;#45;&amp;#45;78378fee6b5c485a99fc98f6802b3a9a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23533.2,-212.65C23533.2,-223.2 23533.2,-233.76 23533.2,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- dcf29f14ba06456284bdfc55b4c7f4b2 --&gt;\n&lt;g id=\"node1390\" class=\"node\"&gt;\n&lt;title&gt;dcf29f14ba06456284bdfc55b4c7f4b2&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M23761.2,-211.8C23761.2,-211.8 23610,-211.8 23610,-211.8 23604,-211.8 23598,-205.8 23598,-199.8 23598,-199.8 23598,-166.2 23598,-166.2 23598,-160.2 23604,-154.2 23610,-154.2 23610,-154.2 23761.2,-154.2 23761.2,-154.2 23767.2,-154.2 23773.2,-160.2 23773.2,-166.2 23773.2,-166.2 23773.2,-199.8 23773.2,-199.8 23773.2,-205.8 23767.2,-211.8 23761.2,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"23685.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 503e89895a0a4ce19d8fa38da1128dfd&amp;#45;&amp;#45;dcf29f14ba06456284bdfc55b4c7f4b2 --&gt;\n&lt;g id=\"edge1384\" class=\"edge\"&gt;\n&lt;title&gt;503e89895a0a4ce19d8fa38da1128dfd&amp;#45;&amp;#45;dcf29f14ba06456284bdfc55b4c7f4b2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23562.84,-183C23572.9,-183 23584.79,-183 23597.13,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2deace53b0b54a479d937e84751b1a26 --&gt;\n&lt;g id=\"node1391\" class=\"node\"&gt;\n&lt;title&gt;2deace53b0b54a479d937e84751b1a26&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M23854.8,-211.8C23854.8,-211.8 23821.2,-211.8 23821.2,-211.8 23815.2,-211.8 23809.2,-205.8 23809.2,-199.8 23809.2,-199.8 23809.2,-166.2 23809.2,-166.2 23809.2,-160.2 23815.2,-154.2 23821.2,-154.2 23821.2,-154.2 23854.8,-154.2 23854.8,-154.2 23860.8,-154.2 23866.8,-160.2 23866.8,-166.2 23866.8,-166.2 23866.8,-199.8 23866.8,-199.8 23866.8,-205.8 23860.8,-211.8 23854.8,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"23838\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- dcf29f14ba06456284bdfc55b4c7f4b2&amp;#45;&amp;#45;2deace53b0b54a479d937e84751b1a26 --&gt;\n&lt;g id=\"edge1385\" class=\"edge\"&gt;\n&lt;title&gt;dcf29f14ba06456284bdfc55b4c7f4b2&amp;#45;&amp;#45;2deace53b0b54a479d937e84751b1a26&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23774.09,-183C23786.37,-183 23798.2,-183 23808.22,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2deace53b0b54a479d937e84751b1a26&amp;#45;&amp;#45;aa82ecd590fe4817931c7ebeb548a453 --&gt;\n&lt;g id=\"edge2010\" class=\"edge\"&gt;\n&lt;title&gt;2deace53b0b54a479d937e84751b1a26&amp;#45;&amp;#45;aa82ecd590fe4817931c7ebeb548a453&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23838,-212.65C23838,-223.2 23838,-233.76 23838,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98d29b4aadbd4127b87ab67f43dd425d --&gt;\n&lt;g id=\"node1392\" class=\"node\"&gt;\n&lt;title&gt;98d29b4aadbd4127b87ab67f43dd425d&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M23948.4,-211.8C23948.4,-211.8 23914.8,-211.8 23914.8,-211.8 23908.8,-211.8 23902.8,-205.8 23902.8,-199.8 23902.8,-199.8 23902.8,-166.2 23902.8,-166.2 23902.8,-160.2 23908.8,-154.2 23914.8,-154.2 23914.8,-154.2 23948.4,-154.2 23948.4,-154.2 23954.4,-154.2 23960.4,-160.2 23960.4,-166.2 23960.4,-166.2 23960.4,-199.8 23960.4,-199.8 23960.4,-205.8 23954.4,-211.8 23948.4,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"23931.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2deace53b0b54a479d937e84751b1a26&amp;#45;&amp;#45;98d29b4aadbd4127b87ab67f43dd425d --&gt;\n&lt;g id=\"edge1386\" class=\"edge\"&gt;\n&lt;title&gt;2deace53b0b54a479d937e84751b1a26&amp;#45;&amp;#45;98d29b4aadbd4127b87ab67f43dd425d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23867.48,-183C23878.4,-183 23890.87,-183 23901.82,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98d29b4aadbd4127b87ab67f43dd425d&amp;#45;&amp;#45;d508789fd2024ef8be4fdafc1fc4f3a2 --&gt;\n&lt;g id=\"edge2011\" class=\"edge\"&gt;\n&lt;title&gt;98d29b4aadbd4127b87ab67f43dd425d&amp;#45;&amp;#45;d508789fd2024ef8be4fdafc1fc4f3a2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23931.6,-212.65C23931.6,-223.2 23931.6,-233.76 23931.6,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8925194854e144999298327f7f53336e --&gt;\n&lt;g id=\"node1393\" class=\"node\"&gt;\n&lt;title&gt;8925194854e144999298327f7f53336e&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"24025.2\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98d29b4aadbd4127b87ab67f43dd425d&amp;#45;&amp;#45;8925194854e144999298327f7f53336e --&gt;\n&lt;g id=\"edge1387\" class=\"edge\"&gt;\n&lt;title&gt;98d29b4aadbd4127b87ab67f43dd425d&amp;#45;&amp;#45;8925194854e144999298327f7f53336e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23961.08,-183C23981.04,-183 24006.14,-183 24017.76,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- df8636709f154a3783b3b2b1abdf72bb --&gt;\n&lt;g id=\"node1394\" class=\"node\"&gt;\n&lt;title&gt;df8636709f154a3783b3b2b1abdf72bb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24178.32,-183.72 24176.88,-183.72 24176.88,-182.28 24178.32,-182.28 24178.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8925194854e144999298327f7f53336e&amp;#45;&amp;#45;df8636709f154a3783b3b2b1abdf72bb --&gt;\n&lt;g id=\"edge1388\" class=\"edge\"&gt;\n&lt;title&gt;8925194854e144999298327f7f53336e&amp;#45;&amp;#45;df8636709f154a3783b3b2b1abdf72bb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24032.66,-183C24061,-183 24173.02,-183 24176.52,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- cc94c4004a724e9b93de3bbacc54497c --&gt;\n&lt;g id=\"node1395\" class=\"node\"&gt;\n&lt;title&gt;cc94c4004a724e9b93de3bbacc54497c&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"24330\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- df8636709f154a3783b3b2b1abdf72bb&amp;#45;&amp;#45;cc94c4004a724e9b93de3bbacc54497c --&gt;\n&lt;g id=\"edge1389\" class=\"edge\"&gt;\n&lt;title&gt;df8636709f154a3783b3b2b1abdf72bb&amp;#45;&amp;#45;cc94c4004a724e9b93de3bbacc54497c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24178.71,-183C24182.68,-183 24293.77,-183 24322.35,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- af2a0291e26f4856b340bc10948e95d5 --&gt;\n&lt;g id=\"node1396\" class=\"node\"&gt;\n&lt;title&gt;af2a0291e26f4856b340bc10948e95d5&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M24440.4,-211.8C24440.4,-211.8 24406.8,-211.8 24406.8,-211.8 24400.8,-211.8 24394.8,-205.8 24394.8,-199.8 24394.8,-199.8 24394.8,-166.2 24394.8,-166.2 24394.8,-160.2 24400.8,-154.2 24406.8,-154.2 24406.8,-154.2 24440.4,-154.2 24440.4,-154.2 24446.4,-154.2 24452.4,-160.2 24452.4,-166.2 24452.4,-166.2 24452.4,-199.8 24452.4,-199.8 24452.4,-205.8 24446.4,-211.8 24440.4,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"24423.6\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- cc94c4004a724e9b93de3bbacc54497c&amp;#45;&amp;#45;af2a0291e26f4856b340bc10948e95d5 --&gt;\n&lt;g id=\"edge1390\" class=\"edge\"&gt;\n&lt;title&gt;cc94c4004a724e9b93de3bbacc54497c&amp;#45;&amp;#45;af2a0291e26f4856b340bc10948e95d5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24337.59,-183C24349.24,-183 24374.12,-183 24393.97,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- af2a0291e26f4856b340bc10948e95d5&amp;#45;&amp;#45;4d188fa8462b497dac5ef0125bed14b1 --&gt;\n&lt;g id=\"edge2012\" class=\"edge\"&gt;\n&lt;title&gt;af2a0291e26f4856b340bc10948e95d5&amp;#45;&amp;#45;4d188fa8462b497dac5ef0125bed14b1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24423.6,-212.65C24423.6,-223.2 24423.6,-233.76 24423.6,-244.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8de83b5b232944f092e8e1fb6b5fd060 --&gt;\n&lt;g id=\"node1397\" class=\"node\"&gt;\n&lt;title&gt;8de83b5b232944f092e8e1fb6b5fd060&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"24517.2\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- af2a0291e26f4856b340bc10948e95d5&amp;#45;&amp;#45;8de83b5b232944f092e8e1fb6b5fd060 --&gt;\n&lt;g id=\"edge1391\" class=\"edge\"&gt;\n&lt;title&gt;af2a0291e26f4856b340bc10948e95d5&amp;#45;&amp;#45;8de83b5b232944f092e8e1fb6b5fd060&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24453.08,-183C24473.04,-183 24498.14,-183 24509.76,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 27764c8cd07441448dc89b2c8551787a --&gt;\n&lt;g id=\"node1398\" class=\"node\"&gt;\n&lt;title&gt;27764c8cd07441448dc89b2c8551787a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24670.32,-183.72 24668.88,-183.72 24668.88,-182.28 24670.32,-182.28 24670.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8de83b5b232944f092e8e1fb6b5fd060&amp;#45;&amp;#45;27764c8cd07441448dc89b2c8551787a --&gt;\n&lt;g id=\"edge1392\" class=\"edge\"&gt;\n&lt;title&gt;8de83b5b232944f092e8e1fb6b5fd060&amp;#45;&amp;#45;27764c8cd07441448dc89b2c8551787a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24524.66,-183C24553,-183 24665.02,-183 24668.52,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0585b51aa4bc4a5cbd9e59b38da6f09f --&gt;\n&lt;g id=\"node1399\" class=\"node\"&gt;\n&lt;title&gt;0585b51aa4bc4a5cbd9e59b38da6f09f&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"24822\" cy=\"-183\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 27764c8cd07441448dc89b2c8551787a&amp;#45;&amp;#45;0585b51aa4bc4a5cbd9e59b38da6f09f --&gt;\n&lt;g id=\"edge1393\" class=\"edge\"&gt;\n&lt;title&gt;27764c8cd07441448dc89b2c8551787a&amp;#45;&amp;#45;0585b51aa4bc4a5cbd9e59b38da6f09f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24670.71,-183C24674.68,-183 24785.77,-183 24814.35,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d99806d6c0c493c8672a87be19b0973 --&gt;\n&lt;g id=\"node1400\" class=\"node\"&gt;\n&lt;title&gt;7d99806d6c0c493c8672a87be19b0973&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24916.32,-183.72 24914.88,-183.72 24914.88,-182.28 24916.32,-182.28 24916.32,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0585b51aa4bc4a5cbd9e59b38da6f09f&amp;#45;&amp;#45;7d99806d6c0c493c8672a87be19b0973 --&gt;\n&lt;g id=\"edge1394\" class=\"edge\"&gt;\n&lt;title&gt;0585b51aa4bc4a5cbd9e59b38da6f09f&amp;#45;&amp;#45;7d99806d6c0c493c8672a87be19b0973&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24829.59,-183C24849.93,-183 24910.64,-183 24914.42,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- fd561d4fcd1a4bdd9f6429f330a3db8f --&gt;\n&lt;g id=\"node1401\" class=\"node\"&gt;\n&lt;title&gt;fd561d4fcd1a4bdd9f6429f330a3db8f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25068.72,-183.72 25067.28,-183.72 25067.28,-182.28 25068.72,-182.28 25068.72,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d99806d6c0c493c8672a87be19b0973&amp;#45;&amp;#45;fd561d4fcd1a4bdd9f6429f330a3db8f --&gt;\n&lt;g id=\"edge1395\" class=\"edge\"&gt;\n&lt;title&gt;7d99806d6c0c493c8672a87be19b0973&amp;#45;&amp;#45;fd561d4fcd1a4bdd9f6429f330a3db8f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24916.71,-183C24921.19,-183 25062.48,-183 25066.89,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8496a409ca7445b097f32b61de18db3d --&gt;\n&lt;g id=\"node1402\" class=\"node\"&gt;\n&lt;title&gt;8496a409ca7445b097f32b61de18db3d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25221.12,-183.72 25219.68,-183.72 25219.68,-182.28 25221.12,-182.28 25221.12,-183.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fd561d4fcd1a4bdd9f6429f330a3db8f&amp;#45;&amp;#45;8496a409ca7445b097f32b61de18db3d --&gt;\n&lt;g id=\"edge1396\" class=\"edge\"&gt;\n&lt;title&gt;fd561d4fcd1a4bdd9f6429f330a3db8f&amp;#45;&amp;#45;8496a409ca7445b097f32b61de18db3d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25069.11,-183C25073.59,-183 25214.88,-183 25219.29,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- b9a5151bc81b4d6d8299e0731c667daa --&gt;\n&lt;g id=\"node1403\" class=\"node\"&gt;\n&lt;title&gt;b9a5151bc81b4d6d8299e0731c667daa&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M25400.4,-211.8C25400.4,-211.8 25297.2,-211.8 25297.2,-211.8 25291.2,-211.8 25285.2,-205.8 25285.2,-199.8 25285.2,-199.8 25285.2,-166.2 25285.2,-166.2 25285.2,-160.2 25291.2,-154.2 25297.2,-154.2 25297.2,-154.2 25400.4,-154.2 25400.4,-154.2 25406.4,-154.2 25412.4,-160.2 25412.4,-166.2 25412.4,-166.2 25412.4,-199.8 25412.4,-199.8 25412.4,-205.8 25406.4,-211.8 25400.4,-211.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"25348.8\" y=\"-177.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b15)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 8496a409ca7445b097f32b61de18db3d&amp;#45;&amp;#45;b9a5151bc81b4d6d8299e0731c667daa --&gt;\n&lt;g id=\"edge1397\" class=\"edge\"&gt;\n&lt;title&gt;8496a409ca7445b097f32b61de18db3d&amp;#45;&amp;#45;b9a5151bc81b4d6d8299e0731c667daa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25221.49,-183C25223.37,-183 25253.76,-183 25284.26,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- b9a5151bc81b4d6d8299e0731c667daa&amp;#45;&amp;#45;3de6c296398442a2b9bbcf08fbdb5d80 --&gt;\n&lt;g id=\"edge1398\" class=\"edge\"&gt;\n&lt;title&gt;b9a5151bc81b4d6d8299e0731c667daa&amp;#45;&amp;#45;3de6c296398442a2b9bbcf08fbdb5d80&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25413.2,-183C25425.7,-183 25438.15,-183 25448.52,-183\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93d6870fb6194899bd408557f81b6712 --&gt;\n&lt;g id=\"node1638\" class=\"node\"&gt;\n&lt;title&gt;93d6870fb6194899bd408557f81b6712&lt;/title&gt;\n&lt;/g&gt;\n&lt;!-- 3de6c296398442a2b9bbcf08fbdb5d80&amp;#45;&amp;#45;93d6870fb6194899bd408557f81b6712 --&gt;\n&lt;!-- 9a32bf14909f4b429aa8b9de68e74a49 --&gt;\n&lt;g id=\"node1406\" class=\"node\"&gt;\n&lt;title&gt;9a32bf14909f4b429aa8b9de68e74a49&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"119.52,-114.72 118.08,-114.72 118.08,-113.28 119.52,-113.28 119.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d1a5c722dd36408aab3e1bb7f9a34d16&amp;#45;&amp;#45;9a32bf14909f4b429aa8b9de68e74a49 --&gt;\n&lt;g id=\"edge1399\" class=\"edge\"&gt;\n&lt;title&gt;d1a5c722dd36408aab3e1bb7f9a34d16&amp;#45;&amp;#45;9a32bf14909f4b429aa8b9de68e74a49&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M53.97,-114C79.67,-114 115.48,-114 117.69,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2b8eeba143c348efbc2431a0c6576458 --&gt;\n&lt;g id=\"node1639\" class=\"node\"&gt;\n&lt;title&gt;2b8eeba143c348efbc2431a0c6576458&lt;/title&gt;\n&lt;text text-anchor=\"middle\" x=\"27\" y=\"-62.88\" font-family=\"JetBrains Mono\" font-size=\"15.00\"&gt;7&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d1a5c722dd36408aab3e1bb7f9a34d16&amp;#45;&amp;#45;2b8eeba143c348efbc2431a0c6576458 --&gt;\n&lt;!-- a34de34c2821423dbf1579e5c681cff7 --&gt;\n&lt;g id=\"node1407\" class=\"node\"&gt;\n&lt;title&gt;a34de34c2821423dbf1579e5c681cff7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"213.12,-114.72 211.68,-114.72 211.68,-113.28 213.12,-113.28 213.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9a32bf14909f4b429aa8b9de68e74a49&amp;#45;&amp;#45;a34de34c2821423dbf1579e5c681cff7 --&gt;\n&lt;g id=\"edge1400\" class=\"edge\"&gt;\n&lt;title&gt;9a32bf14909f4b429aa8b9de68e74a49&amp;#45;&amp;#45;a34de34c2821423dbf1579e5c681cff7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M119.87,-114C122.6,-114 208.65,-114 211.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- a8275639126542c6b845eae5468ee9a3 --&gt;\n&lt;g id=\"node1408\" class=\"node\"&gt;\n&lt;title&gt;a8275639126542c6b845eae5468ee9a3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"306.72,-114.72 305.28,-114.72 305.28,-113.28 306.72,-113.28 306.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a34de34c2821423dbf1579e5c681cff7&amp;#45;&amp;#45;a8275639126542c6b845eae5468ee9a3 --&gt;\n&lt;g id=\"edge1401\" class=\"edge\"&gt;\n&lt;title&gt;a34de34c2821423dbf1579e5c681cff7&amp;#45;&amp;#45;a8275639126542c6b845eae5468ee9a3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M213.47,-114C216.2,-114 302.25,-114 304.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- b8d74b8e7b9e41feafb78e48ad0b1d8b --&gt;\n&lt;g id=\"node1409\" class=\"node\"&gt;\n&lt;title&gt;b8d74b8e7b9e41feafb78e48ad0b1d8b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"400.32,-114.72 398.88,-114.72 398.88,-113.28 400.32,-113.28 400.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a8275639126542c6b845eae5468ee9a3&amp;#45;&amp;#45;b8d74b8e7b9e41feafb78e48ad0b1d8b --&gt;\n&lt;g id=\"edge1402\" class=\"edge\"&gt;\n&lt;title&gt;a8275639126542c6b845eae5468ee9a3&amp;#45;&amp;#45;b8d74b8e7b9e41feafb78e48ad0b1d8b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M307.07,-114C309.8,-114 395.85,-114 398.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b5b566014da4dffa44bfd2825a6dd2e --&gt;\n&lt;g id=\"node1410\" class=\"node\"&gt;\n&lt;title&gt;6b5b566014da4dffa44bfd2825a6dd2e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"493.92,-114.72 492.48,-114.72 492.48,-113.28 493.92,-113.28 493.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b8d74b8e7b9e41feafb78e48ad0b1d8b&amp;#45;&amp;#45;6b5b566014da4dffa44bfd2825a6dd2e --&gt;\n&lt;g id=\"edge1403\" class=\"edge\"&gt;\n&lt;title&gt;b8d74b8e7b9e41feafb78e48ad0b1d8b&amp;#45;&amp;#45;6b5b566014da4dffa44bfd2825a6dd2e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M400.67,-114C403.4,-114 489.45,-114 492.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- b788f8cf9edd40d993e5a85e1944ee9b --&gt;\n&lt;g id=\"node1411\" class=\"node\"&gt;\n&lt;title&gt;b788f8cf9edd40d993e5a85e1944ee9b&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M603.6,-142.8C603.6,-142.8 570,-142.8 570,-142.8 564,-142.8 558,-136.8 558,-130.8 558,-130.8 558,-97.2 558,-97.2 558,-91.2 564,-85.2 570,-85.2 570,-85.2 603.6,-85.2 603.6,-85.2 609.6,-85.2 615.6,-91.2 615.6,-97.2 615.6,-97.2 615.6,-130.8 615.6,-130.8 615.6,-136.8 609.6,-142.8 603.6,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"586.8\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 6b5b566014da4dffa44bfd2825a6dd2e&amp;#45;&amp;#45;b788f8cf9edd40d993e5a85e1944ee9b --&gt;\n&lt;g id=\"edge1404\" class=\"edge\"&gt;\n&lt;title&gt;6b5b566014da4dffa44bfd2825a6dd2e&amp;#45;&amp;#45;b788f8cf9edd40d993e5a85e1944ee9b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M494.27,-114C495.99,-114 530.88,-114 557.08,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- b788f8cf9edd40d993e5a85e1944ee9b&amp;#45;&amp;#45;b05a2c67e2ed4f83970ce8af637fa3c8 --&gt;\n&lt;g id=\"edge2013\" class=\"edge\"&gt;\n&lt;title&gt;b788f8cf9edd40d993e5a85e1944ee9b&amp;#45;&amp;#45;b05a2c67e2ed4f83970ce8af637fa3c8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M586.8,-143.65C586.8,-154.2 586.8,-164.76 586.8,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9b0aeae922f94e91a442ffb84017d3ba --&gt;\n&lt;g id=\"node1412\" class=\"node\"&gt;\n&lt;title&gt;9b0aeae922f94e91a442ffb84017d3ba&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"680.4\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- b788f8cf9edd40d993e5a85e1944ee9b&amp;#45;&amp;#45;9b0aeae922f94e91a442ffb84017d3ba --&gt;\n&lt;g id=\"edge1405\" class=\"edge\"&gt;\n&lt;title&gt;b788f8cf9edd40d993e5a85e1944ee9b&amp;#45;&amp;#45;9b0aeae922f94e91a442ffb84017d3ba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M616.28,-114C636.24,-114 661.34,-114 672.96,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- b003aa422c3b44d994446bf6e21ea4ac --&gt;\n&lt;g id=\"node1413\" class=\"node\"&gt;\n&lt;title&gt;b003aa422c3b44d994446bf6e21ea4ac&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"827.52,-114.72 826.08,-114.72 826.08,-113.28 827.52,-113.28 827.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9b0aeae922f94e91a442ffb84017d3ba&amp;#45;&amp;#45;b003aa422c3b44d994446bf6e21ea4ac --&gt;\n&lt;g id=\"edge1406\" class=\"edge\"&gt;\n&lt;title&gt;9b0aeae922f94e91a442ffb84017d3ba&amp;#45;&amp;#45;b003aa422c3b44d994446bf6e21ea4ac&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M687.98,-114C715.79,-114 822.4,-114 825.72,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 506bb15c03c24962b22ed25ee7cec69a --&gt;\n&lt;g id=\"node1414\" class=\"node\"&gt;\n&lt;title&gt;506bb15c03c24962b22ed25ee7cec69a&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"973.2\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- b003aa422c3b44d994446bf6e21ea4ac&amp;#45;&amp;#45;506bb15c03c24962b22ed25ee7cec69a --&gt;\n&lt;g id=\"edge1407\" class=\"edge\"&gt;\n&lt;title&gt;b003aa422c3b44d994446bf6e21ea4ac&amp;#45;&amp;#45;506bb15c03c24962b22ed25ee7cec69a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M827.9,-114C831.71,-114 938.38,-114 965.81,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c14e3e86226496d835c0a6c28b914ee --&gt;\n&lt;g id=\"node1415\" class=\"node\"&gt;\n&lt;title&gt;7c14e3e86226496d835c0a6c28b914ee&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M1083.6,-142.8C1083.6,-142.8 1050,-142.8 1050,-142.8 1044,-142.8 1038,-136.8 1038,-130.8 1038,-130.8 1038,-97.2 1038,-97.2 1038,-91.2 1044,-85.2 1050,-85.2 1050,-85.2 1083.6,-85.2 1083.6,-85.2 1089.6,-85.2 1095.6,-91.2 1095.6,-97.2 1095.6,-97.2 1095.6,-130.8 1095.6,-130.8 1095.6,-136.8 1089.6,-142.8 1083.6,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"1066.8\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 506bb15c03c24962b22ed25ee7cec69a&amp;#45;&amp;#45;7c14e3e86226496d835c0a6c28b914ee --&gt;\n&lt;g id=\"edge1408\" class=\"edge\"&gt;\n&lt;title&gt;506bb15c03c24962b22ed25ee7cec69a&amp;#45;&amp;#45;7c14e3e86226496d835c0a6c28b914ee&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M980.79,-114C992.44,-114 1017.32,-114 1037.17,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c14e3e86226496d835c0a6c28b914ee&amp;#45;&amp;#45;3a6087116b5045e4a8b41ae9b0ada326 --&gt;\n&lt;g id=\"edge2014\" class=\"edge\"&gt;\n&lt;title&gt;7c14e3e86226496d835c0a6c28b914ee&amp;#45;&amp;#45;3a6087116b5045e4a8b41ae9b0ada326&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1066.8,-143.65C1066.8,-154.2 1066.8,-164.76 1066.8,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- ffe9c45a05ea44d98049bdb60f69769f --&gt;\n&lt;g id=\"node1416\" class=\"node\"&gt;\n&lt;title&gt;ffe9c45a05ea44d98049bdb60f69769f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1161.12,-114.72 1159.68,-114.72 1159.68,-113.28 1161.12,-113.28 1161.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c14e3e86226496d835c0a6c28b914ee&amp;#45;&amp;#45;ffe9c45a05ea44d98049bdb60f69769f --&gt;\n&lt;g id=\"edge1409\" class=\"edge\"&gt;\n&lt;title&gt;7c14e3e86226496d835c0a6c28b914ee&amp;#45;&amp;#45;ffe9c45a05ea44d98049bdb60f69769f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1096.28,-114C1122.33,-114 1157.14,-114 1159.3,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2613616643264db989bccc27694a442a --&gt;\n&lt;g id=\"node1417\" class=\"node\"&gt;\n&lt;title&gt;2613616643264db989bccc27694a442a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1254.72,-114.72 1253.28,-114.72 1253.28,-113.28 1254.72,-113.28 1254.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ffe9c45a05ea44d98049bdb60f69769f&amp;#45;&amp;#45;2613616643264db989bccc27694a442a --&gt;\n&lt;g id=\"edge1410\" class=\"edge\"&gt;\n&lt;title&gt;ffe9c45a05ea44d98049bdb60f69769f&amp;#45;&amp;#45;2613616643264db989bccc27694a442a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1161.47,-114C1164.2,-114 1250.25,-114 1252.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- e5ea6267e92643c796fda6f2b42426ae --&gt;\n&lt;g id=\"node1418\" class=\"node\"&gt;\n&lt;title&gt;e5ea6267e92643c796fda6f2b42426ae&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1348.32,-114.72 1346.88,-114.72 1346.88,-113.28 1348.32,-113.28 1348.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2613616643264db989bccc27694a442a&amp;#45;&amp;#45;e5ea6267e92643c796fda6f2b42426ae --&gt;\n&lt;g id=\"edge1411\" class=\"edge\"&gt;\n&lt;title&gt;2613616643264db989bccc27694a442a&amp;#45;&amp;#45;e5ea6267e92643c796fda6f2b42426ae&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1255.07,-114C1257.8,-114 1343.85,-114 1346.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 50914bbda21d42dca4b56e9990051763 --&gt;\n&lt;g id=\"node1419\" class=\"node\"&gt;\n&lt;title&gt;50914bbda21d42dca4b56e9990051763&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1441.92,-114.72 1440.48,-114.72 1440.48,-113.28 1441.92,-113.28 1441.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e5ea6267e92643c796fda6f2b42426ae&amp;#45;&amp;#45;50914bbda21d42dca4b56e9990051763 --&gt;\n&lt;g id=\"edge1412\" class=\"edge\"&gt;\n&lt;title&gt;e5ea6267e92643c796fda6f2b42426ae&amp;#45;&amp;#45;50914bbda21d42dca4b56e9990051763&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1348.67,-114C1351.4,-114 1437.45,-114 1440.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ecdf55e8c7ed46bfbeb6e7bd27904e91 --&gt;\n&lt;g id=\"node1420\" class=\"node\"&gt;\n&lt;title&gt;ecdf55e8c7ed46bfbeb6e7bd27904e91&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1535.52,-114.72 1534.08,-114.72 1534.08,-113.28 1535.52,-113.28 1535.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 50914bbda21d42dca4b56e9990051763&amp;#45;&amp;#45;ecdf55e8c7ed46bfbeb6e7bd27904e91 --&gt;\n&lt;g id=\"edge1413\" class=\"edge\"&gt;\n&lt;title&gt;50914bbda21d42dca4b56e9990051763&amp;#45;&amp;#45;ecdf55e8c7ed46bfbeb6e7bd27904e91&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1442.27,-114C1445,-114 1531.05,-114 1533.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- adc9c352cc904849994600743b3b9782 --&gt;\n&lt;g id=\"node1421\" class=\"node\"&gt;\n&lt;title&gt;adc9c352cc904849994600743b3b9782&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1629.12,-114.72 1627.68,-114.72 1627.68,-113.28 1629.12,-113.28 1629.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ecdf55e8c7ed46bfbeb6e7bd27904e91&amp;#45;&amp;#45;adc9c352cc904849994600743b3b9782 --&gt;\n&lt;g id=\"edge1414\" class=\"edge\"&gt;\n&lt;title&gt;ecdf55e8c7ed46bfbeb6e7bd27904e91&amp;#45;&amp;#45;adc9c352cc904849994600743b3b9782&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1535.87,-114C1538.6,-114 1624.65,-114 1627.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8f7cc1c1d51409e9d288249a9a1105d --&gt;\n&lt;g id=\"node1422\" class=\"node\"&gt;\n&lt;title&gt;f8f7cc1c1d51409e9d288249a9a1105d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1781.52,-114.72 1780.08,-114.72 1780.08,-113.28 1781.52,-113.28 1781.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- adc9c352cc904849994600743b3b9782&amp;#45;&amp;#45;f8f7cc1c1d51409e9d288249a9a1105d --&gt;\n&lt;g id=\"edge1415\" class=\"edge\"&gt;\n&lt;title&gt;adc9c352cc904849994600743b3b9782&amp;#45;&amp;#45;f8f7cc1c1d51409e9d288249a9a1105d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1629.51,-114C1633.99,-114 1775.28,-114 1779.69,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d6fe2b3e2f44fbf98d5abbbaea70669 --&gt;\n&lt;g id=\"node1423\" class=\"node\"&gt;\n&lt;title&gt;7d6fe2b3e2f44fbf98d5abbbaea70669&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1933.92,-114.72 1932.48,-114.72 1932.48,-113.28 1933.92,-113.28 1933.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8f7cc1c1d51409e9d288249a9a1105d&amp;#45;&amp;#45;7d6fe2b3e2f44fbf98d5abbbaea70669 --&gt;\n&lt;g id=\"edge1416\" class=\"edge\"&gt;\n&lt;title&gt;f8f7cc1c1d51409e9d288249a9a1105d&amp;#45;&amp;#45;7d6fe2b3e2f44fbf98d5abbbaea70669&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1781.91,-114C1786.39,-114 1927.68,-114 1932.09,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ac34ce87059b4bc0864e87a1c04cd9b1 --&gt;\n&lt;g id=\"node1424\" class=\"node\"&gt;\n&lt;title&gt;ac34ce87059b4bc0864e87a1c04cd9b1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2027.52,-114.72 2026.08,-114.72 2026.08,-113.28 2027.52,-113.28 2027.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d6fe2b3e2f44fbf98d5abbbaea70669&amp;#45;&amp;#45;ac34ce87059b4bc0864e87a1c04cd9b1 --&gt;\n&lt;g id=\"edge1417\" class=\"edge\"&gt;\n&lt;title&gt;7d6fe2b3e2f44fbf98d5abbbaea70669&amp;#45;&amp;#45;ac34ce87059b4bc0864e87a1c04cd9b1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1934.27,-114C1937,-114 2023.05,-114 2025.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3dc72141bbe24bd09e5a416c7f7d6b0e --&gt;\n&lt;g id=\"node1425\" class=\"node\"&gt;\n&lt;title&gt;3dc72141bbe24bd09e5a416c7f7d6b0e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2121.12,-114.72 2119.68,-114.72 2119.68,-113.28 2121.12,-113.28 2121.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ac34ce87059b4bc0864e87a1c04cd9b1&amp;#45;&amp;#45;3dc72141bbe24bd09e5a416c7f7d6b0e --&gt;\n&lt;g id=\"edge1418\" class=\"edge\"&gt;\n&lt;title&gt;ac34ce87059b4bc0864e87a1c04cd9b1&amp;#45;&amp;#45;3dc72141bbe24bd09e5a416c7f7d6b0e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2027.87,-114C2030.6,-114 2116.65,-114 2119.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7bfc36b684a940b4ab707a29e4461757 --&gt;\n&lt;g id=\"node1426\" class=\"node\"&gt;\n&lt;title&gt;7bfc36b684a940b4ab707a29e4461757&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2214.72,-114.72 2213.28,-114.72 2213.28,-113.28 2214.72,-113.28 2214.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3dc72141bbe24bd09e5a416c7f7d6b0e&amp;#45;&amp;#45;7bfc36b684a940b4ab707a29e4461757 --&gt;\n&lt;g id=\"edge1419\" class=\"edge\"&gt;\n&lt;title&gt;3dc72141bbe24bd09e5a416c7f7d6b0e&amp;#45;&amp;#45;7bfc36b684a940b4ab707a29e4461757&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2121.47,-114C2124.2,-114 2210.25,-114 2212.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2bee3ad690f141009d52df3e503edd28 --&gt;\n&lt;g id=\"node1427\" class=\"node\"&gt;\n&lt;title&gt;2bee3ad690f141009d52df3e503edd28&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2308.32,-114.72 2306.88,-114.72 2306.88,-113.28 2308.32,-113.28 2308.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7bfc36b684a940b4ab707a29e4461757&amp;#45;&amp;#45;2bee3ad690f141009d52df3e503edd28 --&gt;\n&lt;g id=\"edge1420\" class=\"edge\"&gt;\n&lt;title&gt;7bfc36b684a940b4ab707a29e4461757&amp;#45;&amp;#45;2bee3ad690f141009d52df3e503edd28&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2215.07,-114C2217.8,-114 2303.85,-114 2306.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ec1790ebd9b94cf99cfb49dbfa699205 --&gt;\n&lt;g id=\"node1428\" class=\"node\"&gt;\n&lt;title&gt;ec1790ebd9b94cf99cfb49dbfa699205&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2401.92,-114.72 2400.48,-114.72 2400.48,-113.28 2401.92,-113.28 2401.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2bee3ad690f141009d52df3e503edd28&amp;#45;&amp;#45;ec1790ebd9b94cf99cfb49dbfa699205 --&gt;\n&lt;g id=\"edge1421\" class=\"edge\"&gt;\n&lt;title&gt;2bee3ad690f141009d52df3e503edd28&amp;#45;&amp;#45;ec1790ebd9b94cf99cfb49dbfa699205&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2308.67,-114C2311.4,-114 2397.45,-114 2400.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7a931392659446a8d58622ed9f3bc26 --&gt;\n&lt;g id=\"node1429\" class=\"node\"&gt;\n&lt;title&gt;e7a931392659446a8d58622ed9f3bc26&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2554.32,-114.72 2552.88,-114.72 2552.88,-113.28 2554.32,-113.28 2554.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ec1790ebd9b94cf99cfb49dbfa699205&amp;#45;&amp;#45;e7a931392659446a8d58622ed9f3bc26 --&gt;\n&lt;g id=\"edge1422\" class=\"edge\"&gt;\n&lt;title&gt;ec1790ebd9b94cf99cfb49dbfa699205&amp;#45;&amp;#45;e7a931392659446a8d58622ed9f3bc26&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2402.31,-114C2406.79,-114 2548.08,-114 2552.49,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- a72e4bbad0874e3e83d2966857858dfb --&gt;\n&lt;g id=\"node1430\" class=\"node\"&gt;\n&lt;title&gt;a72e4bbad0874e3e83d2966857858dfb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2706.72,-114.72 2705.28,-114.72 2705.28,-113.28 2706.72,-113.28 2706.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7a931392659446a8d58622ed9f3bc26&amp;#45;&amp;#45;a72e4bbad0874e3e83d2966857858dfb --&gt;\n&lt;g id=\"edge1423\" class=\"edge\"&gt;\n&lt;title&gt;e7a931392659446a8d58622ed9f3bc26&amp;#45;&amp;#45;a72e4bbad0874e3e83d2966857858dfb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2554.71,-114C2559.19,-114 2700.48,-114 2704.89,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd2cb3e207e2421e9a51362ad905aca3 --&gt;\n&lt;g id=\"node1431\" class=\"node\"&gt;\n&lt;title&gt;dd2cb3e207e2421e9a51362ad905aca3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2800.32,-114.72 2798.88,-114.72 2798.88,-113.28 2800.32,-113.28 2800.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a72e4bbad0874e3e83d2966857858dfb&amp;#45;&amp;#45;dd2cb3e207e2421e9a51362ad905aca3 --&gt;\n&lt;g id=\"edge1424\" class=\"edge\"&gt;\n&lt;title&gt;a72e4bbad0874e3e83d2966857858dfb&amp;#45;&amp;#45;dd2cb3e207e2421e9a51362ad905aca3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2707.07,-114C2709.8,-114 2795.85,-114 2798.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 38ed4a5a2871470594a0b642307d48a0 --&gt;\n&lt;g id=\"node1432\" class=\"node\"&gt;\n&lt;title&gt;38ed4a5a2871470594a0b642307d48a0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2893.92,-114.72 2892.48,-114.72 2892.48,-113.28 2893.92,-113.28 2893.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dd2cb3e207e2421e9a51362ad905aca3&amp;#45;&amp;#45;38ed4a5a2871470594a0b642307d48a0 --&gt;\n&lt;g id=\"edge1425\" class=\"edge\"&gt;\n&lt;title&gt;dd2cb3e207e2421e9a51362ad905aca3&amp;#45;&amp;#45;38ed4a5a2871470594a0b642307d48a0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2800.67,-114C2803.4,-114 2889.45,-114 2892.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 51b03d0656694bd1ab1ee2f6b9946543 --&gt;\n&lt;g id=\"node1433\" class=\"node\"&gt;\n&lt;title&gt;51b03d0656694bd1ab1ee2f6b9946543&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2987.52,-114.72 2986.08,-114.72 2986.08,-113.28 2987.52,-113.28 2987.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 38ed4a5a2871470594a0b642307d48a0&amp;#45;&amp;#45;51b03d0656694bd1ab1ee2f6b9946543 --&gt;\n&lt;g id=\"edge1426\" class=\"edge\"&gt;\n&lt;title&gt;38ed4a5a2871470594a0b642307d48a0&amp;#45;&amp;#45;51b03d0656694bd1ab1ee2f6b9946543&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2894.27,-114C2897,-114 2983.05,-114 2985.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0576bcb1daa64b87b963c00d763bc080 --&gt;\n&lt;g id=\"node1434\" class=\"node\"&gt;\n&lt;title&gt;0576bcb1daa64b87b963c00d763bc080&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3081.12,-114.72 3079.68,-114.72 3079.68,-113.28 3081.12,-113.28 3081.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 51b03d0656694bd1ab1ee2f6b9946543&amp;#45;&amp;#45;0576bcb1daa64b87b963c00d763bc080 --&gt;\n&lt;g id=\"edge1427\" class=\"edge\"&gt;\n&lt;title&gt;51b03d0656694bd1ab1ee2f6b9946543&amp;#45;&amp;#45;0576bcb1daa64b87b963c00d763bc080&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2987.87,-114C2990.6,-114 3076.65,-114 3079.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 14939aef8c5042a08f4737db75faf248 --&gt;\n&lt;g id=\"node1435\" class=\"node\"&gt;\n&lt;title&gt;14939aef8c5042a08f4737db75faf248&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3174.72,-114.72 3173.28,-114.72 3173.28,-113.28 3174.72,-113.28 3174.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0576bcb1daa64b87b963c00d763bc080&amp;#45;&amp;#45;14939aef8c5042a08f4737db75faf248 --&gt;\n&lt;g id=\"edge1428\" class=\"edge\"&gt;\n&lt;title&gt;0576bcb1daa64b87b963c00d763bc080&amp;#45;&amp;#45;14939aef8c5042a08f4737db75faf248&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3081.47,-114C3084.2,-114 3170.25,-114 3172.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- f6ce41ecc8ad49fba232e702ee9b97f4 --&gt;\n&lt;g id=\"node1436\" class=\"node\"&gt;\n&lt;title&gt;f6ce41ecc8ad49fba232e702ee9b97f4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3268.32,-114.72 3266.88,-114.72 3266.88,-113.28 3268.32,-113.28 3268.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 14939aef8c5042a08f4737db75faf248&amp;#45;&amp;#45;f6ce41ecc8ad49fba232e702ee9b97f4 --&gt;\n&lt;g id=\"edge1429\" class=\"edge\"&gt;\n&lt;title&gt;14939aef8c5042a08f4737db75faf248&amp;#45;&amp;#45;f6ce41ecc8ad49fba232e702ee9b97f4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3175.07,-114C3177.8,-114 3263.85,-114 3266.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- da2fd197c4b245509c085b19799a742c --&gt;\n&lt;g id=\"node1437\" class=\"node\"&gt;\n&lt;title&gt;da2fd197c4b245509c085b19799a742c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3361.92,-114.72 3360.48,-114.72 3360.48,-113.28 3361.92,-113.28 3361.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f6ce41ecc8ad49fba232e702ee9b97f4&amp;#45;&amp;#45;da2fd197c4b245509c085b19799a742c --&gt;\n&lt;g id=\"edge1430\" class=\"edge\"&gt;\n&lt;title&gt;f6ce41ecc8ad49fba232e702ee9b97f4&amp;#45;&amp;#45;da2fd197c4b245509c085b19799a742c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3268.67,-114C3271.4,-114 3357.45,-114 3360.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 60f9710aaa814483bb90dc1f7e1feb1e --&gt;\n&lt;g id=\"node1438\" class=\"node\"&gt;\n&lt;title&gt;60f9710aaa814483bb90dc1f7e1feb1e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3514.32,-114.72 3512.88,-114.72 3512.88,-113.28 3514.32,-113.28 3514.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da2fd197c4b245509c085b19799a742c&amp;#45;&amp;#45;60f9710aaa814483bb90dc1f7e1feb1e --&gt;\n&lt;g id=\"edge1431\" class=\"edge\"&gt;\n&lt;title&gt;da2fd197c4b245509c085b19799a742c&amp;#45;&amp;#45;60f9710aaa814483bb90dc1f7e1feb1e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3362.31,-114C3366.79,-114 3508.08,-114 3512.49,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 86c5196db09446f4828504ca74edf8f5 --&gt;\n&lt;g id=\"node1439\" class=\"node\"&gt;\n&lt;title&gt;86c5196db09446f4828504ca74edf8f5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3666.72,-114.72 3665.28,-114.72 3665.28,-113.28 3666.72,-113.28 3666.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 60f9710aaa814483bb90dc1f7e1feb1e&amp;#45;&amp;#45;86c5196db09446f4828504ca74edf8f5 --&gt;\n&lt;g id=\"edge1432\" class=\"edge\"&gt;\n&lt;title&gt;60f9710aaa814483bb90dc1f7e1feb1e&amp;#45;&amp;#45;86c5196db09446f4828504ca74edf8f5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3514.71,-114C3519.19,-114 3660.48,-114 3664.89,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ff33ac98b5f14aa3a97db92b190e4d22 --&gt;\n&lt;g id=\"node1440\" class=\"node\"&gt;\n&lt;title&gt;ff33ac98b5f14aa3a97db92b190e4d22&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3760.32,-114.72 3758.88,-114.72 3758.88,-113.28 3760.32,-113.28 3760.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 86c5196db09446f4828504ca74edf8f5&amp;#45;&amp;#45;ff33ac98b5f14aa3a97db92b190e4d22 --&gt;\n&lt;g id=\"edge1433\" class=\"edge\"&gt;\n&lt;title&gt;86c5196db09446f4828504ca74edf8f5&amp;#45;&amp;#45;ff33ac98b5f14aa3a97db92b190e4d22&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3667.07,-114C3669.8,-114 3755.85,-114 3758.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 27db750393a746d3906e4bf7bc6fa6d4 --&gt;\n&lt;g id=\"node1441\" class=\"node\"&gt;\n&lt;title&gt;27db750393a746d3906e4bf7bc6fa6d4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3853.92,-114.72 3852.48,-114.72 3852.48,-113.28 3853.92,-113.28 3853.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ff33ac98b5f14aa3a97db92b190e4d22&amp;#45;&amp;#45;27db750393a746d3906e4bf7bc6fa6d4 --&gt;\n&lt;g id=\"edge1434\" class=\"edge\"&gt;\n&lt;title&gt;ff33ac98b5f14aa3a97db92b190e4d22&amp;#45;&amp;#45;27db750393a746d3906e4bf7bc6fa6d4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3760.67,-114C3763.4,-114 3849.45,-114 3852.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 07592089c03b4cc990ac725c89d46ad8 --&gt;\n&lt;g id=\"node1442\" class=\"node\"&gt;\n&lt;title&gt;07592089c03b4cc990ac725c89d46ad8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3947.52,-114.72 3946.08,-114.72 3946.08,-113.28 3947.52,-113.28 3947.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 27db750393a746d3906e4bf7bc6fa6d4&amp;#45;&amp;#45;07592089c03b4cc990ac725c89d46ad8 --&gt;\n&lt;g id=\"edge1435\" class=\"edge\"&gt;\n&lt;title&gt;27db750393a746d3906e4bf7bc6fa6d4&amp;#45;&amp;#45;07592089c03b4cc990ac725c89d46ad8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3854.27,-114C3857,-114 3943.05,-114 3945.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ab19737b99264f9dba3d89caa2ff3c5f --&gt;\n&lt;g id=\"node1443\" class=\"node\"&gt;\n&lt;title&gt;ab19737b99264f9dba3d89caa2ff3c5f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4041.12,-114.72 4039.68,-114.72 4039.68,-113.28 4041.12,-113.28 4041.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 07592089c03b4cc990ac725c89d46ad8&amp;#45;&amp;#45;ab19737b99264f9dba3d89caa2ff3c5f --&gt;\n&lt;g id=\"edge1436\" class=\"edge\"&gt;\n&lt;title&gt;07592089c03b4cc990ac725c89d46ad8&amp;#45;&amp;#45;ab19737b99264f9dba3d89caa2ff3c5f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3947.87,-114C3950.6,-114 4036.65,-114 4039.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8b966f7b82054d10a7186bf16dc7c898 --&gt;\n&lt;g id=\"node1444\" class=\"node\"&gt;\n&lt;title&gt;8b966f7b82054d10a7186bf16dc7c898&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4134.72,-114.72 4133.28,-114.72 4133.28,-113.28 4134.72,-113.28 4134.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ab19737b99264f9dba3d89caa2ff3c5f&amp;#45;&amp;#45;8b966f7b82054d10a7186bf16dc7c898 --&gt;\n&lt;g id=\"edge1437\" class=\"edge\"&gt;\n&lt;title&gt;ab19737b99264f9dba3d89caa2ff3c5f&amp;#45;&amp;#45;8b966f7b82054d10a7186bf16dc7c898&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4041.47,-114C4044.2,-114 4130.25,-114 4132.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0e6d030e8715472e81d1a5bfd31f66ce --&gt;\n&lt;g id=\"node1445\" class=\"node\"&gt;\n&lt;title&gt;0e6d030e8715472e81d1a5bfd31f66ce&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4228.32,-114.72 4226.88,-114.72 4226.88,-113.28 4228.32,-113.28 4228.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8b966f7b82054d10a7186bf16dc7c898&amp;#45;&amp;#45;0e6d030e8715472e81d1a5bfd31f66ce --&gt;\n&lt;g id=\"edge1438\" class=\"edge\"&gt;\n&lt;title&gt;8b966f7b82054d10a7186bf16dc7c898&amp;#45;&amp;#45;0e6d030e8715472e81d1a5bfd31f66ce&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4135.07,-114C4137.8,-114 4223.85,-114 4226.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4eab1550e25e4f949e7ad92dbbd28996 --&gt;\n&lt;g id=\"node1446\" class=\"node\"&gt;\n&lt;title&gt;4eab1550e25e4f949e7ad92dbbd28996&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4380.72,-114.72 4379.28,-114.72 4379.28,-113.28 4380.72,-113.28 4380.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0e6d030e8715472e81d1a5bfd31f66ce&amp;#45;&amp;#45;4eab1550e25e4f949e7ad92dbbd28996 --&gt;\n&lt;g id=\"edge1439\" class=\"edge\"&gt;\n&lt;title&gt;0e6d030e8715472e81d1a5bfd31f66ce&amp;#45;&amp;#45;4eab1550e25e4f949e7ad92dbbd28996&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4228.71,-114C4233.19,-114 4374.48,-114 4378.89,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1aa9c31db61243c2a2430476be4ffff3 --&gt;\n&lt;g id=\"node1447\" class=\"node\"&gt;\n&lt;title&gt;1aa9c31db61243c2a2430476be4ffff3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4533.12,-114.72 4531.68,-114.72 4531.68,-113.28 4533.12,-113.28 4533.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4eab1550e25e4f949e7ad92dbbd28996&amp;#45;&amp;#45;1aa9c31db61243c2a2430476be4ffff3 --&gt;\n&lt;g id=\"edge1440\" class=\"edge\"&gt;\n&lt;title&gt;4eab1550e25e4f949e7ad92dbbd28996&amp;#45;&amp;#45;1aa9c31db61243c2a2430476be4ffff3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4381.11,-114C4385.59,-114 4526.88,-114 4531.29,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 912450a8787b4a2b9a3a5e4f28ff0bc4 --&gt;\n&lt;g id=\"node1448\" class=\"node\"&gt;\n&lt;title&gt;912450a8787b4a2b9a3a5e4f28ff0bc4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4626.72,-114.72 4625.28,-114.72 4625.28,-113.28 4626.72,-113.28 4626.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1aa9c31db61243c2a2430476be4ffff3&amp;#45;&amp;#45;912450a8787b4a2b9a3a5e4f28ff0bc4 --&gt;\n&lt;g id=\"edge1441\" class=\"edge\"&gt;\n&lt;title&gt;1aa9c31db61243c2a2430476be4ffff3&amp;#45;&amp;#45;912450a8787b4a2b9a3a5e4f28ff0bc4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4533.47,-114C4536.2,-114 4622.25,-114 4624.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- abb1c3682f5e405d8cc515ed4df20adb --&gt;\n&lt;g id=\"node1449\" class=\"node\"&gt;\n&lt;title&gt;abb1c3682f5e405d8cc515ed4df20adb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4720.32,-114.72 4718.88,-114.72 4718.88,-113.28 4720.32,-113.28 4720.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 912450a8787b4a2b9a3a5e4f28ff0bc4&amp;#45;&amp;#45;abb1c3682f5e405d8cc515ed4df20adb --&gt;\n&lt;g id=\"edge1442\" class=\"edge\"&gt;\n&lt;title&gt;912450a8787b4a2b9a3a5e4f28ff0bc4&amp;#45;&amp;#45;abb1c3682f5e405d8cc515ed4df20adb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4627.07,-114C4629.8,-114 4715.85,-114 4718.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d984b1cd0e94cec9d182a2244b3e9e9 --&gt;\n&lt;g id=\"node1450\" class=\"node\"&gt;\n&lt;title&gt;4d984b1cd0e94cec9d182a2244b3e9e9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4813.92,-114.72 4812.48,-114.72 4812.48,-113.28 4813.92,-113.28 4813.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- abb1c3682f5e405d8cc515ed4df20adb&amp;#45;&amp;#45;4d984b1cd0e94cec9d182a2244b3e9e9 --&gt;\n&lt;g id=\"edge1443\" class=\"edge\"&gt;\n&lt;title&gt;abb1c3682f5e405d8cc515ed4df20adb&amp;#45;&amp;#45;4d984b1cd0e94cec9d182a2244b3e9e9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4720.67,-114C4723.4,-114 4809.45,-114 4812.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 31f760ae776b4165a11ff72ae2a1ef25 --&gt;\n&lt;g id=\"node1451\" class=\"node\"&gt;\n&lt;title&gt;31f760ae776b4165a11ff72ae2a1ef25&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4907.52,-114.72 4906.08,-114.72 4906.08,-113.28 4907.52,-113.28 4907.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d984b1cd0e94cec9d182a2244b3e9e9&amp;#45;&amp;#45;31f760ae776b4165a11ff72ae2a1ef25 --&gt;\n&lt;g id=\"edge1444\" class=\"edge\"&gt;\n&lt;title&gt;4d984b1cd0e94cec9d182a2244b3e9e9&amp;#45;&amp;#45;31f760ae776b4165a11ff72ae2a1ef25&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4814.27,-114C4817,-114 4903.05,-114 4905.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- eda4a807c27549ad89ef9b2ae6449fee --&gt;\n&lt;g id=\"node1452\" class=\"node\"&gt;\n&lt;title&gt;eda4a807c27549ad89ef9b2ae6449fee&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5001.12,-114.72 4999.68,-114.72 4999.68,-113.28 5001.12,-113.28 5001.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 31f760ae776b4165a11ff72ae2a1ef25&amp;#45;&amp;#45;eda4a807c27549ad89ef9b2ae6449fee --&gt;\n&lt;g id=\"edge1445\" class=\"edge\"&gt;\n&lt;title&gt;31f760ae776b4165a11ff72ae2a1ef25&amp;#45;&amp;#45;eda4a807c27549ad89ef9b2ae6449fee&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4907.87,-114C4910.6,-114 4996.65,-114 4999.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2ae8892fe1d84d8da07b03aad6f9ae4e --&gt;\n&lt;g id=\"node1453\" class=\"node\"&gt;\n&lt;title&gt;2ae8892fe1d84d8da07b03aad6f9ae4e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5094.72,-114.72 5093.28,-114.72 5093.28,-113.28 5094.72,-113.28 5094.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- eda4a807c27549ad89ef9b2ae6449fee&amp;#45;&amp;#45;2ae8892fe1d84d8da07b03aad6f9ae4e --&gt;\n&lt;g id=\"edge1446\" class=\"edge\"&gt;\n&lt;title&gt;eda4a807c27549ad89ef9b2ae6449fee&amp;#45;&amp;#45;2ae8892fe1d84d8da07b03aad6f9ae4e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5001.47,-114C5004.2,-114 5090.25,-114 5092.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- af5fc3b08e0949b78e7a8dadf2c59ec7 --&gt;\n&lt;g id=\"node1454\" class=\"node\"&gt;\n&lt;title&gt;af5fc3b08e0949b78e7a8dadf2c59ec7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5188.32,-114.72 5186.88,-114.72 5186.88,-113.28 5188.32,-113.28 5188.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2ae8892fe1d84d8da07b03aad6f9ae4e&amp;#45;&amp;#45;af5fc3b08e0949b78e7a8dadf2c59ec7 --&gt;\n&lt;g id=\"edge1447\" class=\"edge\"&gt;\n&lt;title&gt;2ae8892fe1d84d8da07b03aad6f9ae4e&amp;#45;&amp;#45;af5fc3b08e0949b78e7a8dadf2c59ec7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5095.07,-114C5097.8,-114 5183.85,-114 5186.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 152a3e73e4b64a18a5f8f2c097331e73 --&gt;\n&lt;g id=\"node1455\" class=\"node\"&gt;\n&lt;title&gt;152a3e73e4b64a18a5f8f2c097331e73&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M5298,-142.8C5298,-142.8 5264.4,-142.8 5264.4,-142.8 5258.4,-142.8 5252.4,-136.8 5252.4,-130.8 5252.4,-130.8 5252.4,-97.2 5252.4,-97.2 5252.4,-91.2 5258.4,-85.2 5264.4,-85.2 5264.4,-85.2 5298,-85.2 5298,-85.2 5304,-85.2 5310,-91.2 5310,-97.2 5310,-97.2 5310,-130.8 5310,-130.8 5310,-136.8 5304,-142.8 5298,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"5281.2\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- af5fc3b08e0949b78e7a8dadf2c59ec7&amp;#45;&amp;#45;152a3e73e4b64a18a5f8f2c097331e73 --&gt;\n&lt;g id=\"edge1448\" class=\"edge\"&gt;\n&lt;title&gt;af5fc3b08e0949b78e7a8dadf2c59ec7&amp;#45;&amp;#45;152a3e73e4b64a18a5f8f2c097331e73&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5188.67,-114C5190.39,-114 5225.28,-114 5251.48,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 152a3e73e4b64a18a5f8f2c097331e73&amp;#45;&amp;#45;9a6facb148ab4568bf118352093cab95 --&gt;\n&lt;g id=\"edge2015\" class=\"edge\"&gt;\n&lt;title&gt;152a3e73e4b64a18a5f8f2c097331e73&amp;#45;&amp;#45;9a6facb148ab4568bf118352093cab95&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5281.2,-143.65C5281.2,-154.2 5281.2,-164.76 5281.2,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 519d2563ce364af78693ae6f4353776f --&gt;\n&lt;g id=\"node1456\" class=\"node\"&gt;\n&lt;title&gt;519d2563ce364af78693ae6f4353776f&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M5509.2,-142.8C5509.2,-142.8 5358,-142.8 5358,-142.8 5352,-142.8 5346,-136.8 5346,-130.8 5346,-130.8 5346,-97.2 5346,-97.2 5346,-91.2 5352,-85.2 5358,-85.2 5358,-85.2 5509.2,-85.2 5509.2,-85.2 5515.2,-85.2 5521.2,-91.2 5521.2,-97.2 5521.2,-97.2 5521.2,-130.8 5521.2,-130.8 5521.2,-136.8 5515.2,-142.8 5509.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"5433.6\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 152a3e73e4b64a18a5f8f2c097331e73&amp;#45;&amp;#45;519d2563ce364af78693ae6f4353776f --&gt;\n&lt;g id=\"edge1449\" class=\"edge\"&gt;\n&lt;title&gt;152a3e73e4b64a18a5f8f2c097331e73&amp;#45;&amp;#45;519d2563ce364af78693ae6f4353776f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5310.84,-114C5320.9,-114 5332.79,-114 5345.13,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3ae368927e894b9baeae454e097ddec4 --&gt;\n&lt;g id=\"node1457\" class=\"node\"&gt;\n&lt;title&gt;3ae368927e894b9baeae454e097ddec4&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M5602.8,-142.8C5602.8,-142.8 5569.2,-142.8 5569.2,-142.8 5563.2,-142.8 5557.2,-136.8 5557.2,-130.8 5557.2,-130.8 5557.2,-97.2 5557.2,-97.2 5557.2,-91.2 5563.2,-85.2 5569.2,-85.2 5569.2,-85.2 5602.8,-85.2 5602.8,-85.2 5608.8,-85.2 5614.8,-91.2 5614.8,-97.2 5614.8,-97.2 5614.8,-130.8 5614.8,-130.8 5614.8,-136.8 5608.8,-142.8 5602.8,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"5586\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 519d2563ce364af78693ae6f4353776f&amp;#45;&amp;#45;3ae368927e894b9baeae454e097ddec4 --&gt;\n&lt;g id=\"edge1450\" class=\"edge\"&gt;\n&lt;title&gt;519d2563ce364af78693ae6f4353776f&amp;#45;&amp;#45;3ae368927e894b9baeae454e097ddec4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5522.09,-114C5534.37,-114 5546.2,-114 5556.22,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3ae368927e894b9baeae454e097ddec4&amp;#45;&amp;#45;4ff4608df42b49ca9ffedaba3525b699 --&gt;\n&lt;g id=\"edge2016\" class=\"edge\"&gt;\n&lt;title&gt;3ae368927e894b9baeae454e097ddec4&amp;#45;&amp;#45;4ff4608df42b49ca9ffedaba3525b699&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5586,-143.65C5586,-154.2 5586,-164.76 5586,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 274292de1ef9400b94f8c8ec47ebdfb6 --&gt;\n&lt;g id=\"node1458\" class=\"node\"&gt;\n&lt;title&gt;274292de1ef9400b94f8c8ec47ebdfb6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5680.32,-114.72 5678.88,-114.72 5678.88,-113.28 5680.32,-113.28 5680.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3ae368927e894b9baeae454e097ddec4&amp;#45;&amp;#45;274292de1ef9400b94f8c8ec47ebdfb6 --&gt;\n&lt;g id=\"edge1451\" class=\"edge\"&gt;\n&lt;title&gt;3ae368927e894b9baeae454e097ddec4&amp;#45;&amp;#45;274292de1ef9400b94f8c8ec47ebdfb6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5615.48,-114C5641.53,-114 5676.34,-114 5678.5,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- b24c0237459345169b95d5713fff9f9e --&gt;\n&lt;g id=\"node1459\" class=\"node\"&gt;\n&lt;title&gt;b24c0237459345169b95d5713fff9f9e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5773.92,-114.72 5772.48,-114.72 5772.48,-113.28 5773.92,-113.28 5773.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 274292de1ef9400b94f8c8ec47ebdfb6&amp;#45;&amp;#45;b24c0237459345169b95d5713fff9f9e --&gt;\n&lt;g id=\"edge1452\" class=\"edge\"&gt;\n&lt;title&gt;274292de1ef9400b94f8c8ec47ebdfb6&amp;#45;&amp;#45;b24c0237459345169b95d5713fff9f9e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5680.67,-114C5683.4,-114 5769.45,-114 5772.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- d21aac396aba4b2495cc7f5bbf0971f5 --&gt;\n&lt;g id=\"node1460\" class=\"node\"&gt;\n&lt;title&gt;d21aac396aba4b2495cc7f5bbf0971f5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5867.52,-114.72 5866.08,-114.72 5866.08,-113.28 5867.52,-113.28 5867.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b24c0237459345169b95d5713fff9f9e&amp;#45;&amp;#45;d21aac396aba4b2495cc7f5bbf0971f5 --&gt;\n&lt;g id=\"edge1453\" class=\"edge\"&gt;\n&lt;title&gt;b24c0237459345169b95d5713fff9f9e&amp;#45;&amp;#45;d21aac396aba4b2495cc7f5bbf0971f5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5774.27,-114C5777,-114 5863.05,-114 5865.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- c04c35be98e841388dfaa361d63e71dc --&gt;\n&lt;g id=\"node1461\" class=\"node\"&gt;\n&lt;title&gt;c04c35be98e841388dfaa361d63e71dc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5961.12,-114.72 5959.68,-114.72 5959.68,-113.28 5961.12,-113.28 5961.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d21aac396aba4b2495cc7f5bbf0971f5&amp;#45;&amp;#45;c04c35be98e841388dfaa361d63e71dc --&gt;\n&lt;g id=\"edge1454\" class=\"edge\"&gt;\n&lt;title&gt;d21aac396aba4b2495cc7f5bbf0971f5&amp;#45;&amp;#45;c04c35be98e841388dfaa361d63e71dc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5867.87,-114C5870.6,-114 5956.65,-114 5959.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2bd087ccae014b11a24d52baa9c86dba --&gt;\n&lt;g id=\"node1462\" class=\"node\"&gt;\n&lt;title&gt;2bd087ccae014b11a24d52baa9c86dba&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6054.72,-114.72 6053.28,-114.72 6053.28,-113.28 6054.72,-113.28 6054.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c04c35be98e841388dfaa361d63e71dc&amp;#45;&amp;#45;2bd087ccae014b11a24d52baa9c86dba --&gt;\n&lt;g id=\"edge1455\" class=\"edge\"&gt;\n&lt;title&gt;c04c35be98e841388dfaa361d63e71dc&amp;#45;&amp;#45;2bd087ccae014b11a24d52baa9c86dba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5961.47,-114C5964.2,-114 6050.25,-114 6052.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44fa164417e1429db7370091cc2fba06 --&gt;\n&lt;g id=\"node1463\" class=\"node\"&gt;\n&lt;title&gt;44fa164417e1429db7370091cc2fba06&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6148.32,-114.72 6146.88,-114.72 6146.88,-113.28 6148.32,-113.28 6148.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2bd087ccae014b11a24d52baa9c86dba&amp;#45;&amp;#45;44fa164417e1429db7370091cc2fba06 --&gt;\n&lt;g id=\"edge1456\" class=\"edge\"&gt;\n&lt;title&gt;2bd087ccae014b11a24d52baa9c86dba&amp;#45;&amp;#45;44fa164417e1429db7370091cc2fba06&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6055.07,-114C6057.8,-114 6143.85,-114 6146.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 463ba9a17781408fb865d97c59995901 --&gt;\n&lt;g id=\"node1464\" class=\"node\"&gt;\n&lt;title&gt;463ba9a17781408fb865d97c59995901&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6241.92,-114.72 6240.48,-114.72 6240.48,-113.28 6241.92,-113.28 6241.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44fa164417e1429db7370091cc2fba06&amp;#45;&amp;#45;463ba9a17781408fb865d97c59995901 --&gt;\n&lt;g id=\"edge1457\" class=\"edge\"&gt;\n&lt;title&gt;44fa164417e1429db7370091cc2fba06&amp;#45;&amp;#45;463ba9a17781408fb865d97c59995901&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6148.67,-114C6151.4,-114 6237.45,-114 6240.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- e1a5cae6531145e1904bc657fc877942 --&gt;\n&lt;g id=\"node1465\" class=\"node\"&gt;\n&lt;title&gt;e1a5cae6531145e1904bc657fc877942&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6335.52,-114.72 6334.08,-114.72 6334.08,-113.28 6335.52,-113.28 6335.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 463ba9a17781408fb865d97c59995901&amp;#45;&amp;#45;e1a5cae6531145e1904bc657fc877942 --&gt;\n&lt;g id=\"edge1458\" class=\"edge\"&gt;\n&lt;title&gt;463ba9a17781408fb865d97c59995901&amp;#45;&amp;#45;e1a5cae6531145e1904bc657fc877942&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6242.27,-114C6245,-114 6331.05,-114 6333.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7058813af9c4021a8b9c7151f3ceb0a --&gt;\n&lt;g id=\"node1466\" class=\"node\"&gt;\n&lt;title&gt;e7058813af9c4021a8b9c7151f3ceb0a&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M6445.2,-142.8C6445.2,-142.8 6411.6,-142.8 6411.6,-142.8 6405.6,-142.8 6399.6,-136.8 6399.6,-130.8 6399.6,-130.8 6399.6,-97.2 6399.6,-97.2 6399.6,-91.2 6405.6,-85.2 6411.6,-85.2 6411.6,-85.2 6445.2,-85.2 6445.2,-85.2 6451.2,-85.2 6457.2,-91.2 6457.2,-97.2 6457.2,-97.2 6457.2,-130.8 6457.2,-130.8 6457.2,-136.8 6451.2,-142.8 6445.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"6428.4\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- e1a5cae6531145e1904bc657fc877942&amp;#45;&amp;#45;e7058813af9c4021a8b9c7151f3ceb0a --&gt;\n&lt;g id=\"edge1459\" class=\"edge\"&gt;\n&lt;title&gt;e1a5cae6531145e1904bc657fc877942&amp;#45;&amp;#45;e7058813af9c4021a8b9c7151f3ceb0a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6335.87,-114C6337.59,-114 6372.48,-114 6398.68,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7058813af9c4021a8b9c7151f3ceb0a&amp;#45;&amp;#45;1ebea61b766e4fa08f692e05836d90d8 --&gt;\n&lt;g id=\"edge2017\" class=\"edge\"&gt;\n&lt;title&gt;e7058813af9c4021a8b9c7151f3ceb0a&amp;#45;&amp;#45;1ebea61b766e4fa08f692e05836d90d8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6428.4,-143.65C6428.4,-154.2 6428.4,-164.76 6428.4,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2177919b1ac6446085e6bcafba7aabd3 --&gt;\n&lt;g id=\"node1467\" class=\"node\"&gt;\n&lt;title&gt;2177919b1ac6446085e6bcafba7aabd3&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"6522\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- e7058813af9c4021a8b9c7151f3ceb0a&amp;#45;&amp;#45;2177919b1ac6446085e6bcafba7aabd3 --&gt;\n&lt;g id=\"edge1460\" class=\"edge\"&gt;\n&lt;title&gt;e7058813af9c4021a8b9c7151f3ceb0a&amp;#45;&amp;#45;2177919b1ac6446085e6bcafba7aabd3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6457.88,-114C6477.84,-114 6502.94,-114 6514.56,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- e684929638634739b1779bf33ef93252 --&gt;\n&lt;g id=\"node1468\" class=\"node\"&gt;\n&lt;title&gt;e684929638634739b1779bf33ef93252&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6675.12,-114.72 6673.68,-114.72 6673.68,-113.28 6675.12,-113.28 6675.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2177919b1ac6446085e6bcafba7aabd3&amp;#45;&amp;#45;e684929638634739b1779bf33ef93252 --&gt;\n&lt;g id=\"edge1461\" class=\"edge\"&gt;\n&lt;title&gt;2177919b1ac6446085e6bcafba7aabd3&amp;#45;&amp;#45;e684929638634739b1779bf33ef93252&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6529.46,-114C6557.8,-114 6669.82,-114 6673.32,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- cc7bf931f6f54667ba873541415b2a03 --&gt;\n&lt;g id=\"node1469\" class=\"node\"&gt;\n&lt;title&gt;cc7bf931f6f54667ba873541415b2a03&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"6826.8\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- e684929638634739b1779bf33ef93252&amp;#45;&amp;#45;cc7bf931f6f54667ba873541415b2a03 --&gt;\n&lt;g id=\"edge1462\" class=\"edge\"&gt;\n&lt;title&gt;e684929638634739b1779bf33ef93252&amp;#45;&amp;#45;cc7bf931f6f54667ba873541415b2a03&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6675.51,-114C6679.48,-114 6790.57,-114 6819.15,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9ba1039bf6c4720b130edf358b2b342 --&gt;\n&lt;g id=\"node1470\" class=\"node\"&gt;\n&lt;title&gt;c9ba1039bf6c4720b130edf358b2b342&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M6937.2,-142.8C6937.2,-142.8 6903.6,-142.8 6903.6,-142.8 6897.6,-142.8 6891.6,-136.8 6891.6,-130.8 6891.6,-130.8 6891.6,-97.2 6891.6,-97.2 6891.6,-91.2 6897.6,-85.2 6903.6,-85.2 6903.6,-85.2 6937.2,-85.2 6937.2,-85.2 6943.2,-85.2 6949.2,-91.2 6949.2,-97.2 6949.2,-97.2 6949.2,-130.8 6949.2,-130.8 6949.2,-136.8 6943.2,-142.8 6937.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"6920.4\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- cc7bf931f6f54667ba873541415b2a03&amp;#45;&amp;#45;c9ba1039bf6c4720b130edf358b2b342 --&gt;\n&lt;g id=\"edge1463\" class=\"edge\"&gt;\n&lt;title&gt;cc7bf931f6f54667ba873541415b2a03&amp;#45;&amp;#45;c9ba1039bf6c4720b130edf358b2b342&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6834.39,-114C6846.04,-114 6870.92,-114 6890.77,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9ba1039bf6c4720b130edf358b2b342&amp;#45;&amp;#45;65164beb5b194944b301e0e9ca205bde --&gt;\n&lt;g id=\"edge2018\" class=\"edge\"&gt;\n&lt;title&gt;c9ba1039bf6c4720b130edf358b2b342&amp;#45;&amp;#45;65164beb5b194944b301e0e9ca205bde&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6920.4,-143.65C6920.4,-154.2 6920.4,-164.76 6920.4,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 835983d45c4e451992aac15dd4eaa9d2 --&gt;\n&lt;g id=\"node1471\" class=\"node\"&gt;\n&lt;title&gt;835983d45c4e451992aac15dd4eaa9d2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7014.72,-114.72 7013.28,-114.72 7013.28,-113.28 7014.72,-113.28 7014.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9ba1039bf6c4720b130edf358b2b342&amp;#45;&amp;#45;835983d45c4e451992aac15dd4eaa9d2 --&gt;\n&lt;g id=\"edge1464\" class=\"edge\"&gt;\n&lt;title&gt;c9ba1039bf6c4720b130edf358b2b342&amp;#45;&amp;#45;835983d45c4e451992aac15dd4eaa9d2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6949.88,-114C6975.93,-114 7010.74,-114 7012.9,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 26576fe84dbe43e0bb98974d7665d1fd --&gt;\n&lt;g id=\"node1472\" class=\"node\"&gt;\n&lt;title&gt;26576fe84dbe43e0bb98974d7665d1fd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7108.32,-114.72 7106.88,-114.72 7106.88,-113.28 7108.32,-113.28 7108.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 835983d45c4e451992aac15dd4eaa9d2&amp;#45;&amp;#45;26576fe84dbe43e0bb98974d7665d1fd --&gt;\n&lt;g id=\"edge1465\" class=\"edge\"&gt;\n&lt;title&gt;835983d45c4e451992aac15dd4eaa9d2&amp;#45;&amp;#45;26576fe84dbe43e0bb98974d7665d1fd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7015.07,-114C7017.8,-114 7103.85,-114 7106.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8dc05ba4b52f4e62854ba500372a6d5f --&gt;\n&lt;g id=\"node1473\" class=\"node\"&gt;\n&lt;title&gt;8dc05ba4b52f4e62854ba500372a6d5f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7201.92,-114.72 7200.48,-114.72 7200.48,-113.28 7201.92,-113.28 7201.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 26576fe84dbe43e0bb98974d7665d1fd&amp;#45;&amp;#45;8dc05ba4b52f4e62854ba500372a6d5f --&gt;\n&lt;g id=\"edge1466\" class=\"edge\"&gt;\n&lt;title&gt;26576fe84dbe43e0bb98974d7665d1fd&amp;#45;&amp;#45;8dc05ba4b52f4e62854ba500372a6d5f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7108.67,-114C7111.4,-114 7197.45,-114 7200.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7ba46eeba9c34922bf926c5a0c5f17f1 --&gt;\n&lt;g id=\"node1474\" class=\"node\"&gt;\n&lt;title&gt;7ba46eeba9c34922bf926c5a0c5f17f1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7295.52,-114.72 7294.08,-114.72 7294.08,-113.28 7295.52,-113.28 7295.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8dc05ba4b52f4e62854ba500372a6d5f&amp;#45;&amp;#45;7ba46eeba9c34922bf926c5a0c5f17f1 --&gt;\n&lt;g id=\"edge1467\" class=\"edge\"&gt;\n&lt;title&gt;8dc05ba4b52f4e62854ba500372a6d5f&amp;#45;&amp;#45;7ba46eeba9c34922bf926c5a0c5f17f1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7202.27,-114C7205,-114 7291.05,-114 7293.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1156ba56806645c4ba8a82dac0fb5e0e --&gt;\n&lt;g id=\"node1475\" class=\"node\"&gt;\n&lt;title&gt;1156ba56806645c4ba8a82dac0fb5e0e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7389.12,-114.72 7387.68,-114.72 7387.68,-113.28 7389.12,-113.28 7389.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7ba46eeba9c34922bf926c5a0c5f17f1&amp;#45;&amp;#45;1156ba56806645c4ba8a82dac0fb5e0e --&gt;\n&lt;g id=\"edge1468\" class=\"edge\"&gt;\n&lt;title&gt;7ba46eeba9c34922bf926c5a0c5f17f1&amp;#45;&amp;#45;1156ba56806645c4ba8a82dac0fb5e0e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7295.87,-114C7298.6,-114 7384.65,-114 7387.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- a6202702c1e44aab87139971fcd7f8b8 --&gt;\n&lt;g id=\"node1476\" class=\"node\"&gt;\n&lt;title&gt;a6202702c1e44aab87139971fcd7f8b8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7482.72,-114.72 7481.28,-114.72 7481.28,-113.28 7482.72,-113.28 7482.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1156ba56806645c4ba8a82dac0fb5e0e&amp;#45;&amp;#45;a6202702c1e44aab87139971fcd7f8b8 --&gt;\n&lt;g id=\"edge1469\" class=\"edge\"&gt;\n&lt;title&gt;1156ba56806645c4ba8a82dac0fb5e0e&amp;#45;&amp;#45;a6202702c1e44aab87139971fcd7f8b8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7389.47,-114C7392.2,-114 7478.25,-114 7480.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 66586f6f0b554bad9befe92688478a1b --&gt;\n&lt;g id=\"node1477\" class=\"node\"&gt;\n&lt;title&gt;66586f6f0b554bad9befe92688478a1b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7576.32,-114.72 7574.88,-114.72 7574.88,-113.28 7576.32,-113.28 7576.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a6202702c1e44aab87139971fcd7f8b8&amp;#45;&amp;#45;66586f6f0b554bad9befe92688478a1b --&gt;\n&lt;g id=\"edge1470\" class=\"edge\"&gt;\n&lt;title&gt;a6202702c1e44aab87139971fcd7f8b8&amp;#45;&amp;#45;66586f6f0b554bad9befe92688478a1b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7483.07,-114C7485.8,-114 7571.85,-114 7574.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 48bbc55d62764186b2131fd8b97d9a72 --&gt;\n&lt;g id=\"node1478\" class=\"node\"&gt;\n&lt;title&gt;48bbc55d62764186b2131fd8b97d9a72&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M7686,-142.8C7686,-142.8 7652.4,-142.8 7652.4,-142.8 7646.4,-142.8 7640.4,-136.8 7640.4,-130.8 7640.4,-130.8 7640.4,-97.2 7640.4,-97.2 7640.4,-91.2 7646.4,-85.2 7652.4,-85.2 7652.4,-85.2 7686,-85.2 7686,-85.2 7692,-85.2 7698,-91.2 7698,-97.2 7698,-97.2 7698,-130.8 7698,-130.8 7698,-136.8 7692,-142.8 7686,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"7669.2\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 66586f6f0b554bad9befe92688478a1b&amp;#45;&amp;#45;48bbc55d62764186b2131fd8b97d9a72 --&gt;\n&lt;g id=\"edge1471\" class=\"edge\"&gt;\n&lt;title&gt;66586f6f0b554bad9befe92688478a1b&amp;#45;&amp;#45;48bbc55d62764186b2131fd8b97d9a72&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7576.67,-114C7578.39,-114 7613.28,-114 7639.48,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 48bbc55d62764186b2131fd8b97d9a72&amp;#45;&amp;#45;62eb76160b4c49e29f3bcd51841f5342 --&gt;\n&lt;g id=\"edge2019\" class=\"edge\"&gt;\n&lt;title&gt;48bbc55d62764186b2131fd8b97d9a72&amp;#45;&amp;#45;62eb76160b4c49e29f3bcd51841f5342&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7669.2,-143.65C7669.2,-154.2 7669.2,-164.76 7669.2,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8519436465a04d4aadc6ef25d0cc1e20 --&gt;\n&lt;g id=\"node1479\" class=\"node\"&gt;\n&lt;title&gt;8519436465a04d4aadc6ef25d0cc1e20&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"7762.8\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 48bbc55d62764186b2131fd8b97d9a72&amp;#45;&amp;#45;8519436465a04d4aadc6ef25d0cc1e20 --&gt;\n&lt;g id=\"edge1472\" class=\"edge\"&gt;\n&lt;title&gt;48bbc55d62764186b2131fd8b97d9a72&amp;#45;&amp;#45;8519436465a04d4aadc6ef25d0cc1e20&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7698.68,-114C7718.64,-114 7743.74,-114 7755.36,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0e296cca8bc747049c2d3302b3df9154 --&gt;\n&lt;g id=\"node1480\" class=\"node\"&gt;\n&lt;title&gt;0e296cca8bc747049c2d3302b3df9154&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7915.92,-114.72 7914.48,-114.72 7914.48,-113.28 7915.92,-113.28 7915.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8519436465a04d4aadc6ef25d0cc1e20&amp;#45;&amp;#45;0e296cca8bc747049c2d3302b3df9154 --&gt;\n&lt;g id=\"edge1473\" class=\"edge\"&gt;\n&lt;title&gt;8519436465a04d4aadc6ef25d0cc1e20&amp;#45;&amp;#45;0e296cca8bc747049c2d3302b3df9154&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7770.26,-114C7798.6,-114 7910.62,-114 7914.12,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6bdfcce7bdab4688b64f96e430691315 --&gt;\n&lt;g id=\"node1481\" class=\"node\"&gt;\n&lt;title&gt;6bdfcce7bdab4688b64f96e430691315&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"8067.6\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0e296cca8bc747049c2d3302b3df9154&amp;#45;&amp;#45;6bdfcce7bdab4688b64f96e430691315 --&gt;\n&lt;g id=\"edge1474\" class=\"edge\"&gt;\n&lt;title&gt;0e296cca8bc747049c2d3302b3df9154&amp;#45;&amp;#45;6bdfcce7bdab4688b64f96e430691315&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7916.31,-114C7920.28,-114 8031.37,-114 8059.95,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 41559d7691c14ab3971ebc55de541941 --&gt;\n&lt;g id=\"node1482\" class=\"node\"&gt;\n&lt;title&gt;41559d7691c14ab3971ebc55de541941&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M8178,-142.8C8178,-142.8 8144.4,-142.8 8144.4,-142.8 8138.4,-142.8 8132.4,-136.8 8132.4,-130.8 8132.4,-130.8 8132.4,-97.2 8132.4,-97.2 8132.4,-91.2 8138.4,-85.2 8144.4,-85.2 8144.4,-85.2 8178,-85.2 8178,-85.2 8184,-85.2 8190,-91.2 8190,-97.2 8190,-97.2 8190,-130.8 8190,-130.8 8190,-136.8 8184,-142.8 8178,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"8161.2\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 6bdfcce7bdab4688b64f96e430691315&amp;#45;&amp;#45;41559d7691c14ab3971ebc55de541941 --&gt;\n&lt;g id=\"edge1475\" class=\"edge\"&gt;\n&lt;title&gt;6bdfcce7bdab4688b64f96e430691315&amp;#45;&amp;#45;41559d7691c14ab3971ebc55de541941&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8075.19,-114C8086.84,-114 8111.72,-114 8131.57,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 41559d7691c14ab3971ebc55de541941&amp;#45;&amp;#45;8fb00ccf4da14653b97af7a714188d17 --&gt;\n&lt;g id=\"edge2020\" class=\"edge\"&gt;\n&lt;title&gt;41559d7691c14ab3971ebc55de541941&amp;#45;&amp;#45;8fb00ccf4da14653b97af7a714188d17&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8161.2,-143.65C8161.2,-154.2 8161.2,-164.76 8161.2,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1fae347d220447e18c5be891566cc266 --&gt;\n&lt;g id=\"node1483\" class=\"node\"&gt;\n&lt;title&gt;1fae347d220447e18c5be891566cc266&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8255.52,-114.72 8254.08,-114.72 8254.08,-113.28 8255.52,-113.28 8255.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 41559d7691c14ab3971ebc55de541941&amp;#45;&amp;#45;1fae347d220447e18c5be891566cc266 --&gt;\n&lt;g id=\"edge1476\" class=\"edge\"&gt;\n&lt;title&gt;41559d7691c14ab3971ebc55de541941&amp;#45;&amp;#45;1fae347d220447e18c5be891566cc266&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8190.68,-114C8216.73,-114 8251.54,-114 8253.7,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3dd066fc5639432caab7658010b7443e --&gt;\n&lt;g id=\"node1484\" class=\"node\"&gt;\n&lt;title&gt;3dd066fc5639432caab7658010b7443e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8349.12,-114.72 8347.68,-114.72 8347.68,-113.28 8349.12,-113.28 8349.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1fae347d220447e18c5be891566cc266&amp;#45;&amp;#45;3dd066fc5639432caab7658010b7443e --&gt;\n&lt;g id=\"edge1477\" class=\"edge\"&gt;\n&lt;title&gt;1fae347d220447e18c5be891566cc266&amp;#45;&amp;#45;3dd066fc5639432caab7658010b7443e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8255.87,-114C8258.6,-114 8344.65,-114 8347.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2ac03152b53f45a082d5d71e7cd188f5 --&gt;\n&lt;g id=\"node1485\" class=\"node\"&gt;\n&lt;title&gt;2ac03152b53f45a082d5d71e7cd188f5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8442.72,-114.72 8441.28,-114.72 8441.28,-113.28 8442.72,-113.28 8442.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3dd066fc5639432caab7658010b7443e&amp;#45;&amp;#45;2ac03152b53f45a082d5d71e7cd188f5 --&gt;\n&lt;g id=\"edge1478\" class=\"edge\"&gt;\n&lt;title&gt;3dd066fc5639432caab7658010b7443e&amp;#45;&amp;#45;2ac03152b53f45a082d5d71e7cd188f5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8349.47,-114C8352.2,-114 8438.25,-114 8440.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- b5477fd1993b4d5699740be33f1c08a6 --&gt;\n&lt;g id=\"node1486\" class=\"node\"&gt;\n&lt;title&gt;b5477fd1993b4d5699740be33f1c08a6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8536.32,-114.72 8534.88,-114.72 8534.88,-113.28 8536.32,-113.28 8536.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2ac03152b53f45a082d5d71e7cd188f5&amp;#45;&amp;#45;b5477fd1993b4d5699740be33f1c08a6 --&gt;\n&lt;g id=\"edge1479\" class=\"edge\"&gt;\n&lt;title&gt;2ac03152b53f45a082d5d71e7cd188f5&amp;#45;&amp;#45;b5477fd1993b4d5699740be33f1c08a6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8443.07,-114C8445.8,-114 8531.85,-114 8534.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ebc738eb36724961ad53c7e4a90f40e5 --&gt;\n&lt;g id=\"node1487\" class=\"node\"&gt;\n&lt;title&gt;ebc738eb36724961ad53c7e4a90f40e5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8629.92,-114.72 8628.48,-114.72 8628.48,-113.28 8629.92,-113.28 8629.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b5477fd1993b4d5699740be33f1c08a6&amp;#45;&amp;#45;ebc738eb36724961ad53c7e4a90f40e5 --&gt;\n&lt;g id=\"edge1480\" class=\"edge\"&gt;\n&lt;title&gt;b5477fd1993b4d5699740be33f1c08a6&amp;#45;&amp;#45;ebc738eb36724961ad53c7e4a90f40e5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8536.67,-114C8539.4,-114 8625.45,-114 8628.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6cdd497e28a2441a8d849f78173e42ad --&gt;\n&lt;g id=\"node1488\" class=\"node\"&gt;\n&lt;title&gt;6cdd497e28a2441a8d849f78173e42ad&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8782.32,-114.72 8780.88,-114.72 8780.88,-113.28 8782.32,-113.28 8782.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ebc738eb36724961ad53c7e4a90f40e5&amp;#45;&amp;#45;6cdd497e28a2441a8d849f78173e42ad --&gt;\n&lt;g id=\"edge1481\" class=\"edge\"&gt;\n&lt;title&gt;ebc738eb36724961ad53c7e4a90f40e5&amp;#45;&amp;#45;6cdd497e28a2441a8d849f78173e42ad&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8630.31,-114C8634.79,-114 8776.08,-114 8780.49,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- b01d0586b0eb4294be49203ea781b70c --&gt;\n&lt;g id=\"node1489\" class=\"node\"&gt;\n&lt;title&gt;b01d0586b0eb4294be49203ea781b70c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8934.72,-114.72 8933.28,-114.72 8933.28,-113.28 8934.72,-113.28 8934.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6cdd497e28a2441a8d849f78173e42ad&amp;#45;&amp;#45;b01d0586b0eb4294be49203ea781b70c --&gt;\n&lt;g id=\"edge1482\" class=\"edge\"&gt;\n&lt;title&gt;6cdd497e28a2441a8d849f78173e42ad&amp;#45;&amp;#45;b01d0586b0eb4294be49203ea781b70c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8782.71,-114C8787.19,-114 8928.48,-114 8932.89,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- fde3034bdb2048d082f04ff5332735c6 --&gt;\n&lt;g id=\"node1490\" class=\"node\"&gt;\n&lt;title&gt;fde3034bdb2048d082f04ff5332735c6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9028.32,-114.72 9026.88,-114.72 9026.88,-113.28 9028.32,-113.28 9028.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b01d0586b0eb4294be49203ea781b70c&amp;#45;&amp;#45;fde3034bdb2048d082f04ff5332735c6 --&gt;\n&lt;g id=\"edge1483\" class=\"edge\"&gt;\n&lt;title&gt;b01d0586b0eb4294be49203ea781b70c&amp;#45;&amp;#45;fde3034bdb2048d082f04ff5332735c6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8935.07,-114C8937.8,-114 9023.85,-114 9026.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- f9b856b0feeb4270a7420dfd17c5fe82 --&gt;\n&lt;g id=\"node1491\" class=\"node\"&gt;\n&lt;title&gt;f9b856b0feeb4270a7420dfd17c5fe82&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9121.92,-114.72 9120.48,-114.72 9120.48,-113.28 9121.92,-113.28 9121.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fde3034bdb2048d082f04ff5332735c6&amp;#45;&amp;#45;f9b856b0feeb4270a7420dfd17c5fe82 --&gt;\n&lt;g id=\"edge1484\" class=\"edge\"&gt;\n&lt;title&gt;fde3034bdb2048d082f04ff5332735c6&amp;#45;&amp;#45;f9b856b0feeb4270a7420dfd17c5fe82&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9028.67,-114C9031.4,-114 9117.45,-114 9120.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- e8d3a752f0164d21937bc0f55029ef52 --&gt;\n&lt;g id=\"node1492\" class=\"node\"&gt;\n&lt;title&gt;e8d3a752f0164d21937bc0f55029ef52&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9215.52,-114.72 9214.08,-114.72 9214.08,-113.28 9215.52,-113.28 9215.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f9b856b0feeb4270a7420dfd17c5fe82&amp;#45;&amp;#45;e8d3a752f0164d21937bc0f55029ef52 --&gt;\n&lt;g id=\"edge1485\" class=\"edge\"&gt;\n&lt;title&gt;f9b856b0feeb4270a7420dfd17c5fe82&amp;#45;&amp;#45;e8d3a752f0164d21937bc0f55029ef52&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9122.27,-114C9125,-114 9211.05,-114 9213.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- d702eee6829a45909a73038fcf657b51 --&gt;\n&lt;g id=\"node1493\" class=\"node\"&gt;\n&lt;title&gt;d702eee6829a45909a73038fcf657b51&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M9325.2,-142.8C9325.2,-142.8 9291.6,-142.8 9291.6,-142.8 9285.6,-142.8 9279.6,-136.8 9279.6,-130.8 9279.6,-130.8 9279.6,-97.2 9279.6,-97.2 9279.6,-91.2 9285.6,-85.2 9291.6,-85.2 9291.6,-85.2 9325.2,-85.2 9325.2,-85.2 9331.2,-85.2 9337.2,-91.2 9337.2,-97.2 9337.2,-97.2 9337.2,-130.8 9337.2,-130.8 9337.2,-136.8 9331.2,-142.8 9325.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"9308.4\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- e8d3a752f0164d21937bc0f55029ef52&amp;#45;&amp;#45;d702eee6829a45909a73038fcf657b51 --&gt;\n&lt;g id=\"edge1486\" class=\"edge\"&gt;\n&lt;title&gt;e8d3a752f0164d21937bc0f55029ef52&amp;#45;&amp;#45;d702eee6829a45909a73038fcf657b51&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9215.87,-114C9217.59,-114 9252.48,-114 9278.68,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- d702eee6829a45909a73038fcf657b51&amp;#45;&amp;#45;974a25f983b74a85940d5bd5d5e94b06 --&gt;\n&lt;g id=\"edge2021\" class=\"edge\"&gt;\n&lt;title&gt;d702eee6829a45909a73038fcf657b51&amp;#45;&amp;#45;974a25f983b74a85940d5bd5d5e94b06&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9308.4,-143.65C9308.4,-154.2 9308.4,-164.76 9308.4,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 05d14dd3c826418898178d15d3aec3b6 --&gt;\n&lt;g id=\"node1494\" class=\"node\"&gt;\n&lt;title&gt;05d14dd3c826418898178d15d3aec3b6&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M9536.4,-142.8C9536.4,-142.8 9385.2,-142.8 9385.2,-142.8 9379.2,-142.8 9373.2,-136.8 9373.2,-130.8 9373.2,-130.8 9373.2,-97.2 9373.2,-97.2 9373.2,-91.2 9379.2,-85.2 9385.2,-85.2 9385.2,-85.2 9536.4,-85.2 9536.4,-85.2 9542.4,-85.2 9548.4,-91.2 9548.4,-97.2 9548.4,-97.2 9548.4,-130.8 9548.4,-130.8 9548.4,-136.8 9542.4,-142.8 9536.4,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"9460.8\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d702eee6829a45909a73038fcf657b51&amp;#45;&amp;#45;05d14dd3c826418898178d15d3aec3b6 --&gt;\n&lt;g id=\"edge1487\" class=\"edge\"&gt;\n&lt;title&gt;d702eee6829a45909a73038fcf657b51&amp;#45;&amp;#45;05d14dd3c826418898178d15d3aec3b6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9338.04,-114C9348.1,-114 9359.99,-114 9372.33,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5682a0b17be545e390b5864c19fb45b0 --&gt;\n&lt;g id=\"node1495\" class=\"node\"&gt;\n&lt;title&gt;5682a0b17be545e390b5864c19fb45b0&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M9630,-142.8C9630,-142.8 9596.4,-142.8 9596.4,-142.8 9590.4,-142.8 9584.4,-136.8 9584.4,-130.8 9584.4,-130.8 9584.4,-97.2 9584.4,-97.2 9584.4,-91.2 9590.4,-85.2 9596.4,-85.2 9596.4,-85.2 9630,-85.2 9630,-85.2 9636,-85.2 9642,-91.2 9642,-97.2 9642,-97.2 9642,-130.8 9642,-130.8 9642,-136.8 9636,-142.8 9630,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"9613.2\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 05d14dd3c826418898178d15d3aec3b6&amp;#45;&amp;#45;5682a0b17be545e390b5864c19fb45b0 --&gt;\n&lt;g id=\"edge1488\" class=\"edge\"&gt;\n&lt;title&gt;05d14dd3c826418898178d15d3aec3b6&amp;#45;&amp;#45;5682a0b17be545e390b5864c19fb45b0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9549.29,-114C9561.57,-114 9573.4,-114 9583.42,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5682a0b17be545e390b5864c19fb45b0&amp;#45;&amp;#45;d4424df58d0042dc8c8a0ffe67b39120 --&gt;\n&lt;g id=\"edge2022\" class=\"edge\"&gt;\n&lt;title&gt;5682a0b17be545e390b5864c19fb45b0&amp;#45;&amp;#45;d4424df58d0042dc8c8a0ffe67b39120&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9613.2,-143.65C9613.2,-154.2 9613.2,-164.76 9613.2,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9378f7f4b8894752a811eb6af3c78b1c --&gt;\n&lt;g id=\"node1496\" class=\"node\"&gt;\n&lt;title&gt;9378f7f4b8894752a811eb6af3c78b1c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9707.52,-114.72 9706.08,-114.72 9706.08,-113.28 9707.52,-113.28 9707.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5682a0b17be545e390b5864c19fb45b0&amp;#45;&amp;#45;9378f7f4b8894752a811eb6af3c78b1c --&gt;\n&lt;g id=\"edge1489\" class=\"edge\"&gt;\n&lt;title&gt;5682a0b17be545e390b5864c19fb45b0&amp;#45;&amp;#45;9378f7f4b8894752a811eb6af3c78b1c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9642.68,-114C9668.73,-114 9703.54,-114 9705.7,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- cdd90cd6892f4ab0af94b0b2b2139848 --&gt;\n&lt;g id=\"node1497\" class=\"node\"&gt;\n&lt;title&gt;cdd90cd6892f4ab0af94b0b2b2139848&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9801.12,-114.72 9799.68,-114.72 9799.68,-113.28 9801.12,-113.28 9801.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9378f7f4b8894752a811eb6af3c78b1c&amp;#45;&amp;#45;cdd90cd6892f4ab0af94b0b2b2139848 --&gt;\n&lt;g id=\"edge1490\" class=\"edge\"&gt;\n&lt;title&gt;9378f7f4b8894752a811eb6af3c78b1c&amp;#45;&amp;#45;cdd90cd6892f4ab0af94b0b2b2139848&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9707.87,-114C9710.6,-114 9796.65,-114 9799.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3080ac578ddf490987cac7fbc8bf5b8d --&gt;\n&lt;g id=\"node1498\" class=\"node\"&gt;\n&lt;title&gt;3080ac578ddf490987cac7fbc8bf5b8d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9894.72,-114.72 9893.28,-114.72 9893.28,-113.28 9894.72,-113.28 9894.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cdd90cd6892f4ab0af94b0b2b2139848&amp;#45;&amp;#45;3080ac578ddf490987cac7fbc8bf5b8d --&gt;\n&lt;g id=\"edge1491\" class=\"edge\"&gt;\n&lt;title&gt;cdd90cd6892f4ab0af94b0b2b2139848&amp;#45;&amp;#45;3080ac578ddf490987cac7fbc8bf5b8d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9801.47,-114C9804.2,-114 9890.25,-114 9892.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- c38ee33c20634a99a2c426c6c05d2e5a --&gt;\n&lt;g id=\"node1499\" class=\"node\"&gt;\n&lt;title&gt;c38ee33c20634a99a2c426c6c05d2e5a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9988.32,-114.72 9986.88,-114.72 9986.88,-113.28 9988.32,-113.28 9988.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3080ac578ddf490987cac7fbc8bf5b8d&amp;#45;&amp;#45;c38ee33c20634a99a2c426c6c05d2e5a --&gt;\n&lt;g id=\"edge1492\" class=\"edge\"&gt;\n&lt;title&gt;3080ac578ddf490987cac7fbc8bf5b8d&amp;#45;&amp;#45;c38ee33c20634a99a2c426c6c05d2e5a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9895.07,-114C9897.8,-114 9983.85,-114 9986.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 94cd73fe4afe4a298d07d43c7e8aa0d6 --&gt;\n&lt;g id=\"node1500\" class=\"node\"&gt;\n&lt;title&gt;94cd73fe4afe4a298d07d43c7e8aa0d6&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M10098,-142.8C10098,-142.8 10064.4,-142.8 10064.4,-142.8 10058.4,-142.8 10052.4,-136.8 10052.4,-130.8 10052.4,-130.8 10052.4,-97.2 10052.4,-97.2 10052.4,-91.2 10058.4,-85.2 10064.4,-85.2 10064.4,-85.2 10098,-85.2 10098,-85.2 10104,-85.2 10110,-91.2 10110,-97.2 10110,-97.2 10110,-130.8 10110,-130.8 10110,-136.8 10104,-142.8 10098,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"10081.2\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- c38ee33c20634a99a2c426c6c05d2e5a&amp;#45;&amp;#45;94cd73fe4afe4a298d07d43c7e8aa0d6 --&gt;\n&lt;g id=\"edge1493\" class=\"edge\"&gt;\n&lt;title&gt;c38ee33c20634a99a2c426c6c05d2e5a&amp;#45;&amp;#45;94cd73fe4afe4a298d07d43c7e8aa0d6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9988.67,-114C9990.39,-114 10025.28,-114 10051.48,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 94cd73fe4afe4a298d07d43c7e8aa0d6&amp;#45;&amp;#45;5601a335a06745ff86448efb307d6132 --&gt;\n&lt;g id=\"edge2023\" class=\"edge\"&gt;\n&lt;title&gt;94cd73fe4afe4a298d07d43c7e8aa0d6&amp;#45;&amp;#45;5601a335a06745ff86448efb307d6132&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10081.2,-143.65C10081.2,-154.2 10081.2,-164.76 10081.2,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 96580d1dfbfa448f917553da3c587116 --&gt;\n&lt;g id=\"node1501\" class=\"node\"&gt;\n&lt;title&gt;96580d1dfbfa448f917553da3c587116&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"10174.8\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 94cd73fe4afe4a298d07d43c7e8aa0d6&amp;#45;&amp;#45;96580d1dfbfa448f917553da3c587116 --&gt;\n&lt;g id=\"edge1494\" class=\"edge\"&gt;\n&lt;title&gt;94cd73fe4afe4a298d07d43c7e8aa0d6&amp;#45;&amp;#45;96580d1dfbfa448f917553da3c587116&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10110.68,-114C10130.64,-114 10155.74,-114 10167.36,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- a139108341d643a884cfa9e9bd299960 --&gt;\n&lt;g id=\"node1502\" class=\"node\"&gt;\n&lt;title&gt;a139108341d643a884cfa9e9bd299960&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10327.92,-114.72 10326.48,-114.72 10326.48,-113.28 10327.92,-113.28 10327.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 96580d1dfbfa448f917553da3c587116&amp;#45;&amp;#45;a139108341d643a884cfa9e9bd299960 --&gt;\n&lt;g id=\"edge1495\" class=\"edge\"&gt;\n&lt;title&gt;96580d1dfbfa448f917553da3c587116&amp;#45;&amp;#45;a139108341d643a884cfa9e9bd299960&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10182.26,-114C10210.6,-114 10322.62,-114 10326.12,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- e06cea31c806461c8618ec382573bedd --&gt;\n&lt;g id=\"node1503\" class=\"node\"&gt;\n&lt;title&gt;e06cea31c806461c8618ec382573bedd&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"10479.6\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- a139108341d643a884cfa9e9bd299960&amp;#45;&amp;#45;e06cea31c806461c8618ec382573bedd --&gt;\n&lt;g id=\"edge1496\" class=\"edge\"&gt;\n&lt;title&gt;a139108341d643a884cfa9e9bd299960&amp;#45;&amp;#45;e06cea31c806461c8618ec382573bedd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10328.31,-114C10332.28,-114 10443.37,-114 10471.95,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 42e4ef089a9b47f4b7c287b80f3b83a1 --&gt;\n&lt;g id=\"node1504\" class=\"node\"&gt;\n&lt;title&gt;42e4ef089a9b47f4b7c287b80f3b83a1&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M10590,-142.8C10590,-142.8 10556.4,-142.8 10556.4,-142.8 10550.4,-142.8 10544.4,-136.8 10544.4,-130.8 10544.4,-130.8 10544.4,-97.2 10544.4,-97.2 10544.4,-91.2 10550.4,-85.2 10556.4,-85.2 10556.4,-85.2 10590,-85.2 10590,-85.2 10596,-85.2 10602,-91.2 10602,-97.2 10602,-97.2 10602,-130.8 10602,-130.8 10602,-136.8 10596,-142.8 10590,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"10573.2\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- e06cea31c806461c8618ec382573bedd&amp;#45;&amp;#45;42e4ef089a9b47f4b7c287b80f3b83a1 --&gt;\n&lt;g id=\"edge1497\" class=\"edge\"&gt;\n&lt;title&gt;e06cea31c806461c8618ec382573bedd&amp;#45;&amp;#45;42e4ef089a9b47f4b7c287b80f3b83a1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10487.19,-114C10498.84,-114 10523.72,-114 10543.57,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 42e4ef089a9b47f4b7c287b80f3b83a1&amp;#45;&amp;#45;98b07bd09057460b8b2b0db15dc0f65f --&gt;\n&lt;g id=\"edge2024\" class=\"edge\"&gt;\n&lt;title&gt;42e4ef089a9b47f4b7c287b80f3b83a1&amp;#45;&amp;#45;98b07bd09057460b8b2b0db15dc0f65f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10573.2,-143.65C10573.2,-154.2 10573.2,-164.76 10573.2,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5c37d3f82c97493e8102be8616a698d3 --&gt;\n&lt;g id=\"node1505\" class=\"node\"&gt;\n&lt;title&gt;5c37d3f82c97493e8102be8616a698d3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10667.52,-114.72 10666.08,-114.72 10666.08,-113.28 10667.52,-113.28 10667.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 42e4ef089a9b47f4b7c287b80f3b83a1&amp;#45;&amp;#45;5c37d3f82c97493e8102be8616a698d3 --&gt;\n&lt;g id=\"edge1498\" class=\"edge\"&gt;\n&lt;title&gt;42e4ef089a9b47f4b7c287b80f3b83a1&amp;#45;&amp;#45;5c37d3f82c97493e8102be8616a698d3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10602.68,-114C10628.73,-114 10663.54,-114 10665.7,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 863c24317980435bb00892b210242c9e --&gt;\n&lt;g id=\"node1506\" class=\"node\"&gt;\n&lt;title&gt;863c24317980435bb00892b210242c9e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10761.12,-114.72 10759.68,-114.72 10759.68,-113.28 10761.12,-113.28 10761.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5c37d3f82c97493e8102be8616a698d3&amp;#45;&amp;#45;863c24317980435bb00892b210242c9e --&gt;\n&lt;g id=\"edge1499\" class=\"edge\"&gt;\n&lt;title&gt;5c37d3f82c97493e8102be8616a698d3&amp;#45;&amp;#45;863c24317980435bb00892b210242c9e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10667.87,-114C10670.6,-114 10756.65,-114 10759.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- a02e46d0cb7b4bbb96900b187a69ef71 --&gt;\n&lt;g id=\"node1507\" class=\"node\"&gt;\n&lt;title&gt;a02e46d0cb7b4bbb96900b187a69ef71&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10854.72,-114.72 10853.28,-114.72 10853.28,-113.28 10854.72,-113.28 10854.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 863c24317980435bb00892b210242c9e&amp;#45;&amp;#45;a02e46d0cb7b4bbb96900b187a69ef71 --&gt;\n&lt;g id=\"edge1500\" class=\"edge\"&gt;\n&lt;title&gt;863c24317980435bb00892b210242c9e&amp;#45;&amp;#45;a02e46d0cb7b4bbb96900b187a69ef71&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10761.47,-114C10764.2,-114 10850.25,-114 10852.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6bc107150fb544d1803f3c2870d22107 --&gt;\n&lt;g id=\"node1508\" class=\"node\"&gt;\n&lt;title&gt;6bc107150fb544d1803f3c2870d22107&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11007.12,-114.72 11005.68,-114.72 11005.68,-113.28 11007.12,-113.28 11007.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a02e46d0cb7b4bbb96900b187a69ef71&amp;#45;&amp;#45;6bc107150fb544d1803f3c2870d22107 --&gt;\n&lt;g id=\"edge1501\" class=\"edge\"&gt;\n&lt;title&gt;a02e46d0cb7b4bbb96900b187a69ef71&amp;#45;&amp;#45;6bc107150fb544d1803f3c2870d22107&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10855.11,-114C10859.59,-114 11000.88,-114 11005.29,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ffbd05c0bb094121a4165eba1063b518 --&gt;\n&lt;g id=\"node1509\" class=\"node\"&gt;\n&lt;title&gt;ffbd05c0bb094121a4165eba1063b518&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11159.52,-114.72 11158.08,-114.72 11158.08,-113.28 11159.52,-113.28 11159.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6bc107150fb544d1803f3c2870d22107&amp;#45;&amp;#45;ffbd05c0bb094121a4165eba1063b518 --&gt;\n&lt;g id=\"edge1502\" class=\"edge\"&gt;\n&lt;title&gt;6bc107150fb544d1803f3c2870d22107&amp;#45;&amp;#45;ffbd05c0bb094121a4165eba1063b518&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11007.51,-114C11011.99,-114 11153.28,-114 11157.69,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- c30adfcf7a1f41e9a1fcdc82caada440 --&gt;\n&lt;g id=\"node1510\" class=\"node\"&gt;\n&lt;title&gt;c30adfcf7a1f41e9a1fcdc82caada440&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11253.12,-114.72 11251.68,-114.72 11251.68,-113.28 11253.12,-113.28 11253.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ffbd05c0bb094121a4165eba1063b518&amp;#45;&amp;#45;c30adfcf7a1f41e9a1fcdc82caada440 --&gt;\n&lt;g id=\"edge1503\" class=\"edge\"&gt;\n&lt;title&gt;ffbd05c0bb094121a4165eba1063b518&amp;#45;&amp;#45;c30adfcf7a1f41e9a1fcdc82caada440&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11159.87,-114C11162.6,-114 11248.65,-114 11251.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3e1de7bbf1d48aab4c2cd87064a9068 --&gt;\n&lt;g id=\"node1511\" class=\"node\"&gt;\n&lt;title&gt;c3e1de7bbf1d48aab4c2cd87064a9068&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M11362.8,-142.8C11362.8,-142.8 11329.2,-142.8 11329.2,-142.8 11323.2,-142.8 11317.2,-136.8 11317.2,-130.8 11317.2,-130.8 11317.2,-97.2 11317.2,-97.2 11317.2,-91.2 11323.2,-85.2 11329.2,-85.2 11329.2,-85.2 11362.8,-85.2 11362.8,-85.2 11368.8,-85.2 11374.8,-91.2 11374.8,-97.2 11374.8,-97.2 11374.8,-130.8 11374.8,-130.8 11374.8,-136.8 11368.8,-142.8 11362.8,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"11346\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- c30adfcf7a1f41e9a1fcdc82caada440&amp;#45;&amp;#45;c3e1de7bbf1d48aab4c2cd87064a9068 --&gt;\n&lt;g id=\"edge1504\" class=\"edge\"&gt;\n&lt;title&gt;c30adfcf7a1f41e9a1fcdc82caada440&amp;#45;&amp;#45;c3e1de7bbf1d48aab4c2cd87064a9068&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11253.47,-114C11255.19,-114 11290.08,-114 11316.28,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- c3e1de7bbf1d48aab4c2cd87064a9068&amp;#45;&amp;#45;f2afa63df5ab499da04bdc783a462ebb --&gt;\n&lt;g id=\"edge2025\" class=\"edge\"&gt;\n&lt;title&gt;c3e1de7bbf1d48aab4c2cd87064a9068&amp;#45;&amp;#45;f2afa63df5ab499da04bdc783a462ebb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11346,-143.65C11346,-154.2 11346,-164.76 11346,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- d23668177bd44f24b40706538a96a751 --&gt;\n&lt;g id=\"node1512\" class=\"node\"&gt;\n&lt;title&gt;d23668177bd44f24b40706538a96a751&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M11574,-142.8C11574,-142.8 11422.8,-142.8 11422.8,-142.8 11416.8,-142.8 11410.8,-136.8 11410.8,-130.8 11410.8,-130.8 11410.8,-97.2 11410.8,-97.2 11410.8,-91.2 11416.8,-85.2 11422.8,-85.2 11422.8,-85.2 11574,-85.2 11574,-85.2 11580,-85.2 11586,-91.2 11586,-97.2 11586,-97.2 11586,-130.8 11586,-130.8 11586,-136.8 11580,-142.8 11574,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"11498.4\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- c3e1de7bbf1d48aab4c2cd87064a9068&amp;#45;&amp;#45;d23668177bd44f24b40706538a96a751 --&gt;\n&lt;g id=\"edge1505\" class=\"edge\"&gt;\n&lt;title&gt;c3e1de7bbf1d48aab4c2cd87064a9068&amp;#45;&amp;#45;d23668177bd44f24b40706538a96a751&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11375.64,-114C11385.7,-114 11397.59,-114 11409.93,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e84ffd828fc4e72a9a4027569d251c6 --&gt;\n&lt;g id=\"node1513\" class=\"node\"&gt;\n&lt;title&gt;6e84ffd828fc4e72a9a4027569d251c6&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M11667.6,-142.8C11667.6,-142.8 11634,-142.8 11634,-142.8 11628,-142.8 11622,-136.8 11622,-130.8 11622,-130.8 11622,-97.2 11622,-97.2 11622,-91.2 11628,-85.2 11634,-85.2 11634,-85.2 11667.6,-85.2 11667.6,-85.2 11673.6,-85.2 11679.6,-91.2 11679.6,-97.2 11679.6,-97.2 11679.6,-130.8 11679.6,-130.8 11679.6,-136.8 11673.6,-142.8 11667.6,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"11650.8\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d23668177bd44f24b40706538a96a751&amp;#45;&amp;#45;6e84ffd828fc4e72a9a4027569d251c6 --&gt;\n&lt;g id=\"edge1506\" class=\"edge\"&gt;\n&lt;title&gt;d23668177bd44f24b40706538a96a751&amp;#45;&amp;#45;6e84ffd828fc4e72a9a4027569d251c6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11586.89,-114C11599.17,-114 11611,-114 11621.02,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e84ffd828fc4e72a9a4027569d251c6&amp;#45;&amp;#45;4bff5f3018b34cb7859de2a9d7391020 --&gt;\n&lt;g id=\"edge2026\" class=\"edge\"&gt;\n&lt;title&gt;6e84ffd828fc4e72a9a4027569d251c6&amp;#45;&amp;#45;4bff5f3018b34cb7859de2a9d7391020&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11650.8,-143.65C11650.8,-154.2 11650.8,-164.76 11650.8,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2157490883c94eb389ff0c0299f23490 --&gt;\n&lt;g id=\"node1514\" class=\"node\"&gt;\n&lt;title&gt;2157490883c94eb389ff0c0299f23490&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11745.12,-114.72 11743.68,-114.72 11743.68,-113.28 11745.12,-113.28 11745.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e84ffd828fc4e72a9a4027569d251c6&amp;#45;&amp;#45;2157490883c94eb389ff0c0299f23490 --&gt;\n&lt;g id=\"edge1507\" class=\"edge\"&gt;\n&lt;title&gt;6e84ffd828fc4e72a9a4027569d251c6&amp;#45;&amp;#45;2157490883c94eb389ff0c0299f23490&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11680.28,-114C11706.33,-114 11741.14,-114 11743.3,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f91e970244f4fedabe1ca55f029c753 --&gt;\n&lt;g id=\"node1515\" class=\"node\"&gt;\n&lt;title&gt;6f91e970244f4fedabe1ca55f029c753&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M11854.8,-142.8C11854.8,-142.8 11821.2,-142.8 11821.2,-142.8 11815.2,-142.8 11809.2,-136.8 11809.2,-130.8 11809.2,-130.8 11809.2,-97.2 11809.2,-97.2 11809.2,-91.2 11815.2,-85.2 11821.2,-85.2 11821.2,-85.2 11854.8,-85.2 11854.8,-85.2 11860.8,-85.2 11866.8,-91.2 11866.8,-97.2 11866.8,-97.2 11866.8,-130.8 11866.8,-130.8 11866.8,-136.8 11860.8,-142.8 11854.8,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"11838\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2157490883c94eb389ff0c0299f23490&amp;#45;&amp;#45;6f91e970244f4fedabe1ca55f029c753 --&gt;\n&lt;g id=\"edge1508\" class=\"edge\"&gt;\n&lt;title&gt;2157490883c94eb389ff0c0299f23490&amp;#45;&amp;#45;6f91e970244f4fedabe1ca55f029c753&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11745.47,-114C11747.19,-114 11782.08,-114 11808.28,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f91e970244f4fedabe1ca55f029c753&amp;#45;&amp;#45;9433d7e52e00484fa08db0c7037b1f8d --&gt;\n&lt;g id=\"edge2027\" class=\"edge\"&gt;\n&lt;title&gt;6f91e970244f4fedabe1ca55f029c753&amp;#45;&amp;#45;9433d7e52e00484fa08db0c7037b1f8d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11838,-143.65C11838,-154.2 11838,-164.76 11838,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2c5212db29814d3c82e17e79bd7111e3 --&gt;\n&lt;g id=\"node1516\" class=\"node\"&gt;\n&lt;title&gt;2c5212db29814d3c82e17e79bd7111e3&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M12066,-142.8C12066,-142.8 11914.8,-142.8 11914.8,-142.8 11908.8,-142.8 11902.8,-136.8 11902.8,-130.8 11902.8,-130.8 11902.8,-97.2 11902.8,-97.2 11902.8,-91.2 11908.8,-85.2 11914.8,-85.2 11914.8,-85.2 12066,-85.2 12066,-85.2 12072,-85.2 12078,-91.2 12078,-97.2 12078,-97.2 12078,-130.8 12078,-130.8 12078,-136.8 12072,-142.8 12066,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"11990.4\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 6f91e970244f4fedabe1ca55f029c753&amp;#45;&amp;#45;2c5212db29814d3c82e17e79bd7111e3 --&gt;\n&lt;g id=\"edge1509\" class=\"edge\"&gt;\n&lt;title&gt;6f91e970244f4fedabe1ca55f029c753&amp;#45;&amp;#45;2c5212db29814d3c82e17e79bd7111e3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11867.64,-114C11877.7,-114 11889.59,-114 11901.93,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 18950439d9034f578a0e895e0641aef9 --&gt;\n&lt;g id=\"node1517\" class=\"node\"&gt;\n&lt;title&gt;18950439d9034f578a0e895e0641aef9&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M12159.6,-142.8C12159.6,-142.8 12126,-142.8 12126,-142.8 12120,-142.8 12114,-136.8 12114,-130.8 12114,-130.8 12114,-97.2 12114,-97.2 12114,-91.2 12120,-85.2 12126,-85.2 12126,-85.2 12159.6,-85.2 12159.6,-85.2 12165.6,-85.2 12171.6,-91.2 12171.6,-97.2 12171.6,-97.2 12171.6,-130.8 12171.6,-130.8 12171.6,-136.8 12165.6,-142.8 12159.6,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12142.8\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2c5212db29814d3c82e17e79bd7111e3&amp;#45;&amp;#45;18950439d9034f578a0e895e0641aef9 --&gt;\n&lt;g id=\"edge1510\" class=\"edge\"&gt;\n&lt;title&gt;2c5212db29814d3c82e17e79bd7111e3&amp;#45;&amp;#45;18950439d9034f578a0e895e0641aef9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12078.89,-114C12091.17,-114 12103,-114 12113.02,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 18950439d9034f578a0e895e0641aef9&amp;#45;&amp;#45;f5527d03a7c6402890e62840f022dec8 --&gt;\n&lt;g id=\"edge2028\" class=\"edge\"&gt;\n&lt;title&gt;18950439d9034f578a0e895e0641aef9&amp;#45;&amp;#45;f5527d03a7c6402890e62840f022dec8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12142.8,-143.65C12142.8,-154.2 12142.8,-164.76 12142.8,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e63cc073f5d4559a12881c5d1a90403 --&gt;\n&lt;g id=\"node1518\" class=\"node\"&gt;\n&lt;title&gt;9e63cc073f5d4559a12881c5d1a90403&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"12236.4\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 18950439d9034f578a0e895e0641aef9&amp;#45;&amp;#45;9e63cc073f5d4559a12881c5d1a90403 --&gt;\n&lt;g id=\"edge1511\" class=\"edge\"&gt;\n&lt;title&gt;18950439d9034f578a0e895e0641aef9&amp;#45;&amp;#45;9e63cc073f5d4559a12881c5d1a90403&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12172.28,-114C12192.24,-114 12217.34,-114 12228.96,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d37af52017c43faa7897bac178613e9 --&gt;\n&lt;g id=\"node1519\" class=\"node\"&gt;\n&lt;title&gt;6d37af52017c43faa7897bac178613e9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12389.52,-114.72 12388.08,-114.72 12388.08,-113.28 12389.52,-113.28 12389.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e63cc073f5d4559a12881c5d1a90403&amp;#45;&amp;#45;6d37af52017c43faa7897bac178613e9 --&gt;\n&lt;g id=\"edge1512\" class=\"edge\"&gt;\n&lt;title&gt;9e63cc073f5d4559a12881c5d1a90403&amp;#45;&amp;#45;6d37af52017c43faa7897bac178613e9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12243.86,-114C12272.2,-114 12384.22,-114 12387.72,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6aec09791e304b91a71ef9edaaa50673 --&gt;\n&lt;g id=\"node1520\" class=\"node\"&gt;\n&lt;title&gt;6aec09791e304b91a71ef9edaaa50673&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"12541.2\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d37af52017c43faa7897bac178613e9&amp;#45;&amp;#45;6aec09791e304b91a71ef9edaaa50673 --&gt;\n&lt;g id=\"edge1513\" class=\"edge\"&gt;\n&lt;title&gt;6d37af52017c43faa7897bac178613e9&amp;#45;&amp;#45;6aec09791e304b91a71ef9edaaa50673&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12389.91,-114C12393.88,-114 12504.97,-114 12533.55,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c779ab671d2430c91e5eee64b3b0633 --&gt;\n&lt;g id=\"node1521\" class=\"node\"&gt;\n&lt;title&gt;7c779ab671d2430c91e5eee64b3b0633&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M12721.2,-142.8C12721.2,-142.8 12618,-142.8 12618,-142.8 12612,-142.8 12606,-136.8 12606,-130.8 12606,-130.8 12606,-97.2 12606,-97.2 12606,-91.2 12612,-85.2 12618,-85.2 12618,-85.2 12721.2,-85.2 12721.2,-85.2 12727.2,-85.2 12733.2,-91.2 12733.2,-97.2 12733.2,-97.2 12733.2,-130.8 12733.2,-130.8 12733.2,-136.8 12727.2,-142.8 12721.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12669.6\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b06)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 6aec09791e304b91a71ef9edaaa50673&amp;#45;&amp;#45;7c779ab671d2430c91e5eee64b3b0633 --&gt;\n&lt;g id=\"edge1514\" class=\"edge\"&gt;\n&lt;title&gt;6aec09791e304b91a71ef9edaaa50673&amp;#45;&amp;#45;7c779ab671d2430c91e5eee64b3b0633&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12548.64,-114C12559.46,-114 12582.34,-114 12605.25,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- d3751b40c0db4ab0a25d4883e7a350ec --&gt;\n&lt;g id=\"node1522\" class=\"node\"&gt;\n&lt;title&gt;d3751b40c0db4ab0a25d4883e7a350ec&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12798.72,-114.72 12797.28,-114.72 12797.28,-113.28 12798.72,-113.28 12798.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c779ab671d2430c91e5eee64b3b0633&amp;#45;&amp;#45;d3751b40c0db4ab0a25d4883e7a350ec --&gt;\n&lt;g id=\"edge1515\" class=\"edge\"&gt;\n&lt;title&gt;7c779ab671d2430c91e5eee64b3b0633&amp;#45;&amp;#45;d3751b40c0db4ab0a25d4883e7a350ec&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12734.17,-114C12764.66,-114 12795.04,-114 12796.91,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 46970ae1ad154e1c84605ff92e2847e2 --&gt;\n&lt;g id=\"node1523\" class=\"node\"&gt;\n&lt;title&gt;46970ae1ad154e1c84605ff92e2847e2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12892.32,-114.72 12890.88,-114.72 12890.88,-113.28 12892.32,-113.28 12892.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d3751b40c0db4ab0a25d4883e7a350ec&amp;#45;&amp;#45;46970ae1ad154e1c84605ff92e2847e2 --&gt;\n&lt;g id=\"edge1516\" class=\"edge\"&gt;\n&lt;title&gt;d3751b40c0db4ab0a25d4883e7a350ec&amp;#45;&amp;#45;46970ae1ad154e1c84605ff92e2847e2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12799.07,-114C12801.8,-114 12887.85,-114 12890.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4e6084cc19cf4c28be5a534e780c72ea --&gt;\n&lt;g id=\"node1524\" class=\"node\"&gt;\n&lt;title&gt;4e6084cc19cf4c28be5a534e780c72ea&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12985.92,-114.72 12984.48,-114.72 12984.48,-113.28 12985.92,-113.28 12985.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 46970ae1ad154e1c84605ff92e2847e2&amp;#45;&amp;#45;4e6084cc19cf4c28be5a534e780c72ea --&gt;\n&lt;g id=\"edge1517\" class=\"edge\"&gt;\n&lt;title&gt;46970ae1ad154e1c84605ff92e2847e2&amp;#45;&amp;#45;4e6084cc19cf4c28be5a534e780c72ea&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12892.67,-114C12895.4,-114 12981.45,-114 12984.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 672c0c5fa61246339f3272644f3fca1a --&gt;\n&lt;g id=\"node1525\" class=\"node\"&gt;\n&lt;title&gt;672c0c5fa61246339f3272644f3fca1a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13079.52,-114.72 13078.08,-114.72 13078.08,-113.28 13079.52,-113.28 13079.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4e6084cc19cf4c28be5a534e780c72ea&amp;#45;&amp;#45;672c0c5fa61246339f3272644f3fca1a --&gt;\n&lt;g id=\"edge1518\" class=\"edge\"&gt;\n&lt;title&gt;4e6084cc19cf4c28be5a534e780c72ea&amp;#45;&amp;#45;672c0c5fa61246339f3272644f3fca1a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12986.27,-114C12989,-114 13075.05,-114 13077.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- f4532c9648f947b78d8665636c94ec55 --&gt;\n&lt;g id=\"node1526\" class=\"node\"&gt;\n&lt;title&gt;f4532c9648f947b78d8665636c94ec55&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13173.12,-114.72 13171.68,-114.72 13171.68,-113.28 13173.12,-113.28 13173.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 672c0c5fa61246339f3272644f3fca1a&amp;#45;&amp;#45;f4532c9648f947b78d8665636c94ec55 --&gt;\n&lt;g id=\"edge1519\" class=\"edge\"&gt;\n&lt;title&gt;672c0c5fa61246339f3272644f3fca1a&amp;#45;&amp;#45;f4532c9648f947b78d8665636c94ec55&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13079.87,-114C13082.6,-114 13168.65,-114 13171.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 67dc1f0738e247e385bdf07f8a1fe3b8 --&gt;\n&lt;g id=\"node1527\" class=\"node\"&gt;\n&lt;title&gt;67dc1f0738e247e385bdf07f8a1fe3b8&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M13282.8,-142.8C13282.8,-142.8 13249.2,-142.8 13249.2,-142.8 13243.2,-142.8 13237.2,-136.8 13237.2,-130.8 13237.2,-130.8 13237.2,-97.2 13237.2,-97.2 13237.2,-91.2 13243.2,-85.2 13249.2,-85.2 13249.2,-85.2 13282.8,-85.2 13282.8,-85.2 13288.8,-85.2 13294.8,-91.2 13294.8,-97.2 13294.8,-97.2 13294.8,-130.8 13294.8,-130.8 13294.8,-136.8 13288.8,-142.8 13282.8,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"13266\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- f4532c9648f947b78d8665636c94ec55&amp;#45;&amp;#45;67dc1f0738e247e385bdf07f8a1fe3b8 --&gt;\n&lt;g id=\"edge1520\" class=\"edge\"&gt;\n&lt;title&gt;f4532c9648f947b78d8665636c94ec55&amp;#45;&amp;#45;67dc1f0738e247e385bdf07f8a1fe3b8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13173.47,-114C13175.19,-114 13210.08,-114 13236.28,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 67dc1f0738e247e385bdf07f8a1fe3b8&amp;#45;&amp;#45;3e3373e045a94cc283698556e1ffad65 --&gt;\n&lt;g id=\"edge2029\" class=\"edge\"&gt;\n&lt;title&gt;67dc1f0738e247e385bdf07f8a1fe3b8&amp;#45;&amp;#45;3e3373e045a94cc283698556e1ffad65&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13266,-143.65C13266,-154.2 13266,-164.76 13266,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 66cc98e92f334148908ccafb7335facd --&gt;\n&lt;g id=\"node1528\" class=\"node\"&gt;\n&lt;title&gt;66cc98e92f334148908ccafb7335facd&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"13359.6\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 67dc1f0738e247e385bdf07f8a1fe3b8&amp;#45;&amp;#45;66cc98e92f334148908ccafb7335facd --&gt;\n&lt;g id=\"edge1521\" class=\"edge\"&gt;\n&lt;title&gt;67dc1f0738e247e385bdf07f8a1fe3b8&amp;#45;&amp;#45;66cc98e92f334148908ccafb7335facd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13295.48,-114C13315.44,-114 13340.54,-114 13352.16,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- aabbe17b082d4f7ab29f9162456e91ad --&gt;\n&lt;g id=\"node1529\" class=\"node\"&gt;\n&lt;title&gt;aabbe17b082d4f7ab29f9162456e91ad&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13506.72,-114.72 13505.28,-114.72 13505.28,-113.28 13506.72,-113.28 13506.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 66cc98e92f334148908ccafb7335facd&amp;#45;&amp;#45;aabbe17b082d4f7ab29f9162456e91ad --&gt;\n&lt;g id=\"edge1522\" class=\"edge\"&gt;\n&lt;title&gt;66cc98e92f334148908ccafb7335facd&amp;#45;&amp;#45;aabbe17b082d4f7ab29f9162456e91ad&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13367.18,-114C13394.99,-114 13501.6,-114 13504.92,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- cb19981f10ad424f9f64d7defb2f1bfa --&gt;\n&lt;g id=\"node1530\" class=\"node\"&gt;\n&lt;title&gt;cb19981f10ad424f9f64d7defb2f1bfa&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"13652.4\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- aabbe17b082d4f7ab29f9162456e91ad&amp;#45;&amp;#45;cb19981f10ad424f9f64d7defb2f1bfa --&gt;\n&lt;g id=\"edge1523\" class=\"edge\"&gt;\n&lt;title&gt;aabbe17b082d4f7ab29f9162456e91ad&amp;#45;&amp;#45;cb19981f10ad424f9f64d7defb2f1bfa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13507.1,-114C13510.91,-114 13617.58,-114 13645.01,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 170d6688dc4647fe8f0cfce846539369 --&gt;\n&lt;g id=\"node1531\" class=\"node\"&gt;\n&lt;title&gt;170d6688dc4647fe8f0cfce846539369&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M13762.8,-142.8C13762.8,-142.8 13729.2,-142.8 13729.2,-142.8 13723.2,-142.8 13717.2,-136.8 13717.2,-130.8 13717.2,-130.8 13717.2,-97.2 13717.2,-97.2 13717.2,-91.2 13723.2,-85.2 13729.2,-85.2 13729.2,-85.2 13762.8,-85.2 13762.8,-85.2 13768.8,-85.2 13774.8,-91.2 13774.8,-97.2 13774.8,-97.2 13774.8,-130.8 13774.8,-130.8 13774.8,-136.8 13768.8,-142.8 13762.8,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"13746\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- cb19981f10ad424f9f64d7defb2f1bfa&amp;#45;&amp;#45;170d6688dc4647fe8f0cfce846539369 --&gt;\n&lt;g id=\"edge1524\" class=\"edge\"&gt;\n&lt;title&gt;cb19981f10ad424f9f64d7defb2f1bfa&amp;#45;&amp;#45;170d6688dc4647fe8f0cfce846539369&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13659.99,-114C13671.64,-114 13696.52,-114 13716.37,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 170d6688dc4647fe8f0cfce846539369&amp;#45;&amp;#45;31734a6cbb7f4ede8d19455984bc2c40 --&gt;\n&lt;g id=\"edge2030\" class=\"edge\"&gt;\n&lt;title&gt;170d6688dc4647fe8f0cfce846539369&amp;#45;&amp;#45;31734a6cbb7f4ede8d19455984bc2c40&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13746,-143.65C13746,-154.2 13746,-164.76 13746,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- b6025fd1d1984bb5a1de54c612255fb9 --&gt;\n&lt;g id=\"node1532\" class=\"node\"&gt;\n&lt;title&gt;b6025fd1d1984bb5a1de54c612255fb9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13840.32,-114.72 13838.88,-114.72 13838.88,-113.28 13840.32,-113.28 13840.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 170d6688dc4647fe8f0cfce846539369&amp;#45;&amp;#45;b6025fd1d1984bb5a1de54c612255fb9 --&gt;\n&lt;g id=\"edge1525\" class=\"edge\"&gt;\n&lt;title&gt;170d6688dc4647fe8f0cfce846539369&amp;#45;&amp;#45;b6025fd1d1984bb5a1de54c612255fb9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13775.48,-114C13801.53,-114 13836.34,-114 13838.5,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 23f76e7ae28a4029b21abe2159adba86 --&gt;\n&lt;g id=\"node1533\" class=\"node\"&gt;\n&lt;title&gt;23f76e7ae28a4029b21abe2159adba86&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13933.92,-114.72 13932.48,-114.72 13932.48,-113.28 13933.92,-113.28 13933.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b6025fd1d1984bb5a1de54c612255fb9&amp;#45;&amp;#45;23f76e7ae28a4029b21abe2159adba86 --&gt;\n&lt;g id=\"edge1526\" class=\"edge\"&gt;\n&lt;title&gt;b6025fd1d1984bb5a1de54c612255fb9&amp;#45;&amp;#45;23f76e7ae28a4029b21abe2159adba86&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13840.67,-114C13843.4,-114 13929.45,-114 13932.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c23b395d42d420b8be6197724749319 --&gt;\n&lt;g id=\"node1534\" class=\"node\"&gt;\n&lt;title&gt;0c23b395d42d420b8be6197724749319&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14027.52,-114.72 14026.08,-114.72 14026.08,-113.28 14027.52,-113.28 14027.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 23f76e7ae28a4029b21abe2159adba86&amp;#45;&amp;#45;0c23b395d42d420b8be6197724749319 --&gt;\n&lt;g id=\"edge1527\" class=\"edge\"&gt;\n&lt;title&gt;23f76e7ae28a4029b21abe2159adba86&amp;#45;&amp;#45;0c23b395d42d420b8be6197724749319&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13934.27,-114C13937,-114 14023.05,-114 14025.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- a04b414141c84852a4e63a249902ab43 --&gt;\n&lt;g id=\"node1535\" class=\"node\"&gt;\n&lt;title&gt;a04b414141c84852a4e63a249902ab43&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14121.12,-114.72 14119.68,-114.72 14119.68,-113.28 14121.12,-113.28 14121.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c23b395d42d420b8be6197724749319&amp;#45;&amp;#45;a04b414141c84852a4e63a249902ab43 --&gt;\n&lt;g id=\"edge1528\" class=\"edge\"&gt;\n&lt;title&gt;0c23b395d42d420b8be6197724749319&amp;#45;&amp;#45;a04b414141c84852a4e63a249902ab43&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14027.87,-114C14030.6,-114 14116.65,-114 14119.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93acae0b159c49f1b7ccd8961343d46e --&gt;\n&lt;g id=\"node1536\" class=\"node\"&gt;\n&lt;title&gt;93acae0b159c49f1b7ccd8961343d46e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14214.72,-114.72 14213.28,-114.72 14213.28,-113.28 14214.72,-113.28 14214.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a04b414141c84852a4e63a249902ab43&amp;#45;&amp;#45;93acae0b159c49f1b7ccd8961343d46e --&gt;\n&lt;g id=\"edge1529\" class=\"edge\"&gt;\n&lt;title&gt;a04b414141c84852a4e63a249902ab43&amp;#45;&amp;#45;93acae0b159c49f1b7ccd8961343d46e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14121.47,-114C14124.2,-114 14210.25,-114 14212.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- a600e270f18d4925ad0a61ec1e481f44 --&gt;\n&lt;g id=\"node1537\" class=\"node\"&gt;\n&lt;title&gt;a600e270f18d4925ad0a61ec1e481f44&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14308.32,-114.72 14306.88,-114.72 14306.88,-113.28 14308.32,-113.28 14308.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93acae0b159c49f1b7ccd8961343d46e&amp;#45;&amp;#45;a600e270f18d4925ad0a61ec1e481f44 --&gt;\n&lt;g id=\"edge1530\" class=\"edge\"&gt;\n&lt;title&gt;93acae0b159c49f1b7ccd8961343d46e&amp;#45;&amp;#45;a600e270f18d4925ad0a61ec1e481f44&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14215.07,-114C14217.8,-114 14303.85,-114 14306.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- dcf5115dba334f2b9409a27e9d02399e --&gt;\n&lt;g id=\"node1538\" class=\"node\"&gt;\n&lt;title&gt;dcf5115dba334f2b9409a27e9d02399e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14460.72,-114.72 14459.28,-114.72 14459.28,-113.28 14460.72,-113.28 14460.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a600e270f18d4925ad0a61ec1e481f44&amp;#45;&amp;#45;dcf5115dba334f2b9409a27e9d02399e --&gt;\n&lt;g id=\"edge1531\" class=\"edge\"&gt;\n&lt;title&gt;a600e270f18d4925ad0a61ec1e481f44&amp;#45;&amp;#45;dcf5115dba334f2b9409a27e9d02399e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14308.71,-114C14313.19,-114 14454.48,-114 14458.89,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- c63b29d4231140f1b1c0cf24e66a5493 --&gt;\n&lt;g id=\"node1539\" class=\"node\"&gt;\n&lt;title&gt;c63b29d4231140f1b1c0cf24e66a5493&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14613.12,-114.72 14611.68,-114.72 14611.68,-113.28 14613.12,-113.28 14613.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dcf5115dba334f2b9409a27e9d02399e&amp;#45;&amp;#45;c63b29d4231140f1b1c0cf24e66a5493 --&gt;\n&lt;g id=\"edge1532\" class=\"edge\"&gt;\n&lt;title&gt;dcf5115dba334f2b9409a27e9d02399e&amp;#45;&amp;#45;c63b29d4231140f1b1c0cf24e66a5493&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14461.11,-114C14465.59,-114 14606.88,-114 14611.29,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5ee3b9c69f7b4e12a85a631945e32148 --&gt;\n&lt;g id=\"node1540\" class=\"node\"&gt;\n&lt;title&gt;5ee3b9c69f7b4e12a85a631945e32148&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14706.72,-114.72 14705.28,-114.72 14705.28,-113.28 14706.72,-113.28 14706.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c63b29d4231140f1b1c0cf24e66a5493&amp;#45;&amp;#45;5ee3b9c69f7b4e12a85a631945e32148 --&gt;\n&lt;g id=\"edge1533\" class=\"edge\"&gt;\n&lt;title&gt;c63b29d4231140f1b1c0cf24e66a5493&amp;#45;&amp;#45;5ee3b9c69f7b4e12a85a631945e32148&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14613.47,-114C14616.2,-114 14702.25,-114 14704.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8a46d03620fc4385beceae2420515335 --&gt;\n&lt;g id=\"node1541\" class=\"node\"&gt;\n&lt;title&gt;8a46d03620fc4385beceae2420515335&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14800.32,-114.72 14798.88,-114.72 14798.88,-113.28 14800.32,-113.28 14800.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5ee3b9c69f7b4e12a85a631945e32148&amp;#45;&amp;#45;8a46d03620fc4385beceae2420515335 --&gt;\n&lt;g id=\"edge1534\" class=\"edge\"&gt;\n&lt;title&gt;5ee3b9c69f7b4e12a85a631945e32148&amp;#45;&amp;#45;8a46d03620fc4385beceae2420515335&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14707.07,-114C14709.8,-114 14795.85,-114 14798.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1eb7dac782d54b45810da15a20a5a402 --&gt;\n&lt;g id=\"node1542\" class=\"node\"&gt;\n&lt;title&gt;1eb7dac782d54b45810da15a20a5a402&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14893.92,-114.72 14892.48,-114.72 14892.48,-113.28 14893.92,-113.28 14893.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8a46d03620fc4385beceae2420515335&amp;#45;&amp;#45;1eb7dac782d54b45810da15a20a5a402 --&gt;\n&lt;g id=\"edge1535\" class=\"edge\"&gt;\n&lt;title&gt;8a46d03620fc4385beceae2420515335&amp;#45;&amp;#45;1eb7dac782d54b45810da15a20a5a402&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14800.67,-114C14803.4,-114 14889.45,-114 14892.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9438fe7267fc4e0fb65455bf6ca3a0ee --&gt;\n&lt;g id=\"node1543\" class=\"node\"&gt;\n&lt;title&gt;9438fe7267fc4e0fb65455bf6ca3a0ee&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14987.52,-114.72 14986.08,-114.72 14986.08,-113.28 14987.52,-113.28 14987.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1eb7dac782d54b45810da15a20a5a402&amp;#45;&amp;#45;9438fe7267fc4e0fb65455bf6ca3a0ee --&gt;\n&lt;g id=\"edge1536\" class=\"edge\"&gt;\n&lt;title&gt;1eb7dac782d54b45810da15a20a5a402&amp;#45;&amp;#45;9438fe7267fc4e0fb65455bf6ca3a0ee&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14894.27,-114C14897,-114 14983.05,-114 14985.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9ffb416205fb430f898bc67c87ff77d2 --&gt;\n&lt;g id=\"node1544\" class=\"node\"&gt;\n&lt;title&gt;9ffb416205fb430f898bc67c87ff77d2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15081.12,-114.72 15079.68,-114.72 15079.68,-113.28 15081.12,-113.28 15081.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9438fe7267fc4e0fb65455bf6ca3a0ee&amp;#45;&amp;#45;9ffb416205fb430f898bc67c87ff77d2 --&gt;\n&lt;g id=\"edge1537\" class=\"edge\"&gt;\n&lt;title&gt;9438fe7267fc4e0fb65455bf6ca3a0ee&amp;#45;&amp;#45;9ffb416205fb430f898bc67c87ff77d2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14987.87,-114C14990.6,-114 15076.65,-114 15079.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ffa0025283246bd916d68de205c6876 --&gt;\n&lt;g id=\"node1545\" class=\"node\"&gt;\n&lt;title&gt;0ffa0025283246bd916d68de205c6876&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15233.52,-114.72 15232.08,-114.72 15232.08,-113.28 15233.52,-113.28 15233.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9ffb416205fb430f898bc67c87ff77d2&amp;#45;&amp;#45;0ffa0025283246bd916d68de205c6876 --&gt;\n&lt;g id=\"edge1538\" class=\"edge\"&gt;\n&lt;title&gt;9ffb416205fb430f898bc67c87ff77d2&amp;#45;&amp;#45;0ffa0025283246bd916d68de205c6876&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15081.51,-114C15085.99,-114 15227.28,-114 15231.69,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- bec4e4cbc840481b88973a50213c05c4 --&gt;\n&lt;g id=\"node1546\" class=\"node\"&gt;\n&lt;title&gt;bec4e4cbc840481b88973a50213c05c4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15385.92,-114.72 15384.48,-114.72 15384.48,-113.28 15385.92,-113.28 15385.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ffa0025283246bd916d68de205c6876&amp;#45;&amp;#45;bec4e4cbc840481b88973a50213c05c4 --&gt;\n&lt;g id=\"edge1539\" class=\"edge\"&gt;\n&lt;title&gt;0ffa0025283246bd916d68de205c6876&amp;#45;&amp;#45;bec4e4cbc840481b88973a50213c05c4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15233.91,-114C15238.39,-114 15379.68,-114 15384.09,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8ad2a4ce00fb4e5bba38bed33de16b55 --&gt;\n&lt;g id=\"node1547\" class=\"node\"&gt;\n&lt;title&gt;8ad2a4ce00fb4e5bba38bed33de16b55&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15479.52,-114.72 15478.08,-114.72 15478.08,-113.28 15479.52,-113.28 15479.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bec4e4cbc840481b88973a50213c05c4&amp;#45;&amp;#45;8ad2a4ce00fb4e5bba38bed33de16b55 --&gt;\n&lt;g id=\"edge1540\" class=\"edge\"&gt;\n&lt;title&gt;bec4e4cbc840481b88973a50213c05c4&amp;#45;&amp;#45;8ad2a4ce00fb4e5bba38bed33de16b55&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15386.27,-114C15389,-114 15475.05,-114 15477.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 060a6f6262c1426296e94a0bf0ec9cd5 --&gt;\n&lt;g id=\"node1548\" class=\"node\"&gt;\n&lt;title&gt;060a6f6262c1426296e94a0bf0ec9cd5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15573.12,-114.72 15571.68,-114.72 15571.68,-113.28 15573.12,-113.28 15573.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8ad2a4ce00fb4e5bba38bed33de16b55&amp;#45;&amp;#45;060a6f6262c1426296e94a0bf0ec9cd5 --&gt;\n&lt;g id=\"edge1541\" class=\"edge\"&gt;\n&lt;title&gt;8ad2a4ce00fb4e5bba38bed33de16b55&amp;#45;&amp;#45;060a6f6262c1426296e94a0bf0ec9cd5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15479.87,-114C15482.6,-114 15568.65,-114 15571.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 90c8ff4f376f419bb3a53012872b4ccd --&gt;\n&lt;g id=\"node1549\" class=\"node\"&gt;\n&lt;title&gt;90c8ff4f376f419bb3a53012872b4ccd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15666.72,-114.72 15665.28,-114.72 15665.28,-113.28 15666.72,-113.28 15666.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 060a6f6262c1426296e94a0bf0ec9cd5&amp;#45;&amp;#45;90c8ff4f376f419bb3a53012872b4ccd --&gt;\n&lt;g id=\"edge1542\" class=\"edge\"&gt;\n&lt;title&gt;060a6f6262c1426296e94a0bf0ec9cd5&amp;#45;&amp;#45;90c8ff4f376f419bb3a53012872b4ccd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15573.47,-114C15576.2,-114 15662.25,-114 15664.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9230705e6d1459ebeefa35a1147949b --&gt;\n&lt;g id=\"node1550\" class=\"node\"&gt;\n&lt;title&gt;c9230705e6d1459ebeefa35a1147949b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15760.32,-114.72 15758.88,-114.72 15758.88,-113.28 15760.32,-113.28 15760.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 90c8ff4f376f419bb3a53012872b4ccd&amp;#45;&amp;#45;c9230705e6d1459ebeefa35a1147949b --&gt;\n&lt;g id=\"edge1543\" class=\"edge\"&gt;\n&lt;title&gt;90c8ff4f376f419bb3a53012872b4ccd&amp;#45;&amp;#45;c9230705e6d1459ebeefa35a1147949b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15667.07,-114C15669.8,-114 15755.85,-114 15758.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 026143b5b0684eb6a8fbe3516904debb --&gt;\n&lt;g id=\"node1551\" class=\"node\"&gt;\n&lt;title&gt;026143b5b0684eb6a8fbe3516904debb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15853.92,-114.72 15852.48,-114.72 15852.48,-113.28 15853.92,-113.28 15853.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9230705e6d1459ebeefa35a1147949b&amp;#45;&amp;#45;026143b5b0684eb6a8fbe3516904debb --&gt;\n&lt;g id=\"edge1544\" class=\"edge\"&gt;\n&lt;title&gt;c9230705e6d1459ebeefa35a1147949b&amp;#45;&amp;#45;026143b5b0684eb6a8fbe3516904debb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15760.67,-114C15763.4,-114 15849.45,-114 15852.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 07fb2ad17e3f4b64a081a466d821dd8d --&gt;\n&lt;g id=\"node1552\" class=\"node\"&gt;\n&lt;title&gt;07fb2ad17e3f4b64a081a466d821dd8d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15947.52,-114.72 15946.08,-114.72 15946.08,-113.28 15947.52,-113.28 15947.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 026143b5b0684eb6a8fbe3516904debb&amp;#45;&amp;#45;07fb2ad17e3f4b64a081a466d821dd8d --&gt;\n&lt;g id=\"edge1545\" class=\"edge\"&gt;\n&lt;title&gt;026143b5b0684eb6a8fbe3516904debb&amp;#45;&amp;#45;07fb2ad17e3f4b64a081a466d821dd8d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15854.27,-114C15857,-114 15943.05,-114 15945.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8112da7288fd4841a5b236d1b2f451f1 --&gt;\n&lt;g id=\"node1553\" class=\"node\"&gt;\n&lt;title&gt;8112da7288fd4841a5b236d1b2f451f1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16041.12,-114.72 16039.68,-114.72 16039.68,-113.28 16041.12,-113.28 16041.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 07fb2ad17e3f4b64a081a466d821dd8d&amp;#45;&amp;#45;8112da7288fd4841a5b236d1b2f451f1 --&gt;\n&lt;g id=\"edge1546\" class=\"edge\"&gt;\n&lt;title&gt;07fb2ad17e3f4b64a081a466d821dd8d&amp;#45;&amp;#45;8112da7288fd4841a5b236d1b2f451f1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15947.87,-114C15950.6,-114 16036.65,-114 16039.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 734b070cbbd6444fa1de689653e8e823 --&gt;\n&lt;g id=\"node1554\" class=\"node\"&gt;\n&lt;title&gt;734b070cbbd6444fa1de689653e8e823&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16193.52,-114.72 16192.08,-114.72 16192.08,-113.28 16193.52,-113.28 16193.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8112da7288fd4841a5b236d1b2f451f1&amp;#45;&amp;#45;734b070cbbd6444fa1de689653e8e823 --&gt;\n&lt;g id=\"edge1547\" class=\"edge\"&gt;\n&lt;title&gt;8112da7288fd4841a5b236d1b2f451f1&amp;#45;&amp;#45;734b070cbbd6444fa1de689653e8e823&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16041.51,-114C16045.99,-114 16187.28,-114 16191.69,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7171e5e9fd8f4842ba7229aadfda7c7c --&gt;\n&lt;g id=\"node1555\" class=\"node\"&gt;\n&lt;title&gt;7171e5e9fd8f4842ba7229aadfda7c7c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16345.92,-114.72 16344.48,-114.72 16344.48,-113.28 16345.92,-113.28 16345.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 734b070cbbd6444fa1de689653e8e823&amp;#45;&amp;#45;7171e5e9fd8f4842ba7229aadfda7c7c --&gt;\n&lt;g id=\"edge1548\" class=\"edge\"&gt;\n&lt;title&gt;734b070cbbd6444fa1de689653e8e823&amp;#45;&amp;#45;7171e5e9fd8f4842ba7229aadfda7c7c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16193.91,-114C16198.39,-114 16339.68,-114 16344.09,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- b95de5a242e54c6e99c91b7233908fa4 --&gt;\n&lt;g id=\"node1556\" class=\"node\"&gt;\n&lt;title&gt;b95de5a242e54c6e99c91b7233908fa4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16439.52,-114.72 16438.08,-114.72 16438.08,-113.28 16439.52,-113.28 16439.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7171e5e9fd8f4842ba7229aadfda7c7c&amp;#45;&amp;#45;b95de5a242e54c6e99c91b7233908fa4 --&gt;\n&lt;g id=\"edge1549\" class=\"edge\"&gt;\n&lt;title&gt;7171e5e9fd8f4842ba7229aadfda7c7c&amp;#45;&amp;#45;b95de5a242e54c6e99c91b7233908fa4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16346.27,-114C16349,-114 16435.05,-114 16437.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 50ea8782cd9e4887a485b4363813f9da --&gt;\n&lt;g id=\"node1557\" class=\"node\"&gt;\n&lt;title&gt;50ea8782cd9e4887a485b4363813f9da&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16533.12,-114.72 16531.68,-114.72 16531.68,-113.28 16533.12,-113.28 16533.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b95de5a242e54c6e99c91b7233908fa4&amp;#45;&amp;#45;50ea8782cd9e4887a485b4363813f9da --&gt;\n&lt;g id=\"edge1550\" class=\"edge\"&gt;\n&lt;title&gt;b95de5a242e54c6e99c91b7233908fa4&amp;#45;&amp;#45;50ea8782cd9e4887a485b4363813f9da&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16439.87,-114C16442.6,-114 16528.65,-114 16531.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 95bf3081d3e64c60b5b57c0309245e06 --&gt;\n&lt;g id=\"node1558\" class=\"node\"&gt;\n&lt;title&gt;95bf3081d3e64c60b5b57c0309245e06&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16626.72,-114.72 16625.28,-114.72 16625.28,-113.28 16626.72,-113.28 16626.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 50ea8782cd9e4887a485b4363813f9da&amp;#45;&amp;#45;95bf3081d3e64c60b5b57c0309245e06 --&gt;\n&lt;g id=\"edge1551\" class=\"edge\"&gt;\n&lt;title&gt;50ea8782cd9e4887a485b4363813f9da&amp;#45;&amp;#45;95bf3081d3e64c60b5b57c0309245e06&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16533.47,-114C16536.2,-114 16622.25,-114 16624.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ebd76d82785f475d85a1f63b915c45cf --&gt;\n&lt;g id=\"node1559\" class=\"node\"&gt;\n&lt;title&gt;ebd76d82785f475d85a1f63b915c45cf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16720.32,-114.72 16718.88,-114.72 16718.88,-113.28 16720.32,-113.28 16720.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 95bf3081d3e64c60b5b57c0309245e06&amp;#45;&amp;#45;ebd76d82785f475d85a1f63b915c45cf --&gt;\n&lt;g id=\"edge1552\" class=\"edge\"&gt;\n&lt;title&gt;95bf3081d3e64c60b5b57c0309245e06&amp;#45;&amp;#45;ebd76d82785f475d85a1f63b915c45cf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16627.07,-114C16629.8,-114 16715.85,-114 16718.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- f1390009e5c444768829924784132b29 --&gt;\n&lt;g id=\"node1560\" class=\"node\"&gt;\n&lt;title&gt;f1390009e5c444768829924784132b29&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16813.92,-114.72 16812.48,-114.72 16812.48,-113.28 16813.92,-113.28 16813.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ebd76d82785f475d85a1f63b915c45cf&amp;#45;&amp;#45;f1390009e5c444768829924784132b29 --&gt;\n&lt;g id=\"edge1553\" class=\"edge\"&gt;\n&lt;title&gt;ebd76d82785f475d85a1f63b915c45cf&amp;#45;&amp;#45;f1390009e5c444768829924784132b29&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16720.67,-114C16723.4,-114 16809.45,-114 16812.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- f040b89514b145cb9b35b824c7c9d08a --&gt;\n&lt;g id=\"node1561\" class=\"node\"&gt;\n&lt;title&gt;f040b89514b145cb9b35b824c7c9d08a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16907.52,-114.72 16906.08,-114.72 16906.08,-113.28 16907.52,-113.28 16907.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f1390009e5c444768829924784132b29&amp;#45;&amp;#45;f040b89514b145cb9b35b824c7c9d08a --&gt;\n&lt;g id=\"edge1554\" class=\"edge\"&gt;\n&lt;title&gt;f1390009e5c444768829924784132b29&amp;#45;&amp;#45;f040b89514b145cb9b35b824c7c9d08a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16814.27,-114C16817,-114 16903.05,-114 16905.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5c2e6af2047b47679dd7571af08e9c69 --&gt;\n&lt;g id=\"node1562\" class=\"node\"&gt;\n&lt;title&gt;5c2e6af2047b47679dd7571af08e9c69&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17059.92,-114.72 17058.48,-114.72 17058.48,-113.28 17059.92,-113.28 17059.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f040b89514b145cb9b35b824c7c9d08a&amp;#45;&amp;#45;5c2e6af2047b47679dd7571af08e9c69 --&gt;\n&lt;g id=\"edge1555\" class=\"edge\"&gt;\n&lt;title&gt;f040b89514b145cb9b35b824c7c9d08a&amp;#45;&amp;#45;5c2e6af2047b47679dd7571af08e9c69&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16907.91,-114C16912.39,-114 17053.68,-114 17058.09,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- b41231fc24ac4ae484dbf75219bb7328 --&gt;\n&lt;g id=\"node1563\" class=\"node\"&gt;\n&lt;title&gt;b41231fc24ac4ae484dbf75219bb7328&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17212.32,-114.72 17210.88,-114.72 17210.88,-113.28 17212.32,-113.28 17212.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5c2e6af2047b47679dd7571af08e9c69&amp;#45;&amp;#45;b41231fc24ac4ae484dbf75219bb7328 --&gt;\n&lt;g id=\"edge1556\" class=\"edge\"&gt;\n&lt;title&gt;5c2e6af2047b47679dd7571af08e9c69&amp;#45;&amp;#45;b41231fc24ac4ae484dbf75219bb7328&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17060.31,-114C17064.79,-114 17206.08,-114 17210.49,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c1b14b4e0004de997c0ee90c5bd759f --&gt;\n&lt;g id=\"node1564\" class=\"node\"&gt;\n&lt;title&gt;0c1b14b4e0004de997c0ee90c5bd759f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17305.92,-114.72 17304.48,-114.72 17304.48,-113.28 17305.92,-113.28 17305.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b41231fc24ac4ae484dbf75219bb7328&amp;#45;&amp;#45;0c1b14b4e0004de997c0ee90c5bd759f --&gt;\n&lt;g id=\"edge1557\" class=\"edge\"&gt;\n&lt;title&gt;b41231fc24ac4ae484dbf75219bb7328&amp;#45;&amp;#45;0c1b14b4e0004de997c0ee90c5bd759f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17212.67,-114C17215.4,-114 17301.45,-114 17304.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ade2f6671b174fb5986e40160a6676b2 --&gt;\n&lt;g id=\"node1565\" class=\"node\"&gt;\n&lt;title&gt;ade2f6671b174fb5986e40160a6676b2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17399.52,-114.72 17398.08,-114.72 17398.08,-113.28 17399.52,-113.28 17399.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0c1b14b4e0004de997c0ee90c5bd759f&amp;#45;&amp;#45;ade2f6671b174fb5986e40160a6676b2 --&gt;\n&lt;g id=\"edge1558\" class=\"edge\"&gt;\n&lt;title&gt;0c1b14b4e0004de997c0ee90c5bd759f&amp;#45;&amp;#45;ade2f6671b174fb5986e40160a6676b2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17306.27,-114C17309,-114 17395.05,-114 17397.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 94a450cc3f534fcba6d05881d79891ff --&gt;\n&lt;g id=\"node1566\" class=\"node\"&gt;\n&lt;title&gt;94a450cc3f534fcba6d05881d79891ff&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17493.12,-114.72 17491.68,-114.72 17491.68,-113.28 17493.12,-113.28 17493.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ade2f6671b174fb5986e40160a6676b2&amp;#45;&amp;#45;94a450cc3f534fcba6d05881d79891ff --&gt;\n&lt;g id=\"edge1559\" class=\"edge\"&gt;\n&lt;title&gt;ade2f6671b174fb5986e40160a6676b2&amp;#45;&amp;#45;94a450cc3f534fcba6d05881d79891ff&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17399.87,-114C17402.6,-114 17488.65,-114 17491.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1b4f666dea17447b9f1cd8589cf0c654 --&gt;\n&lt;g id=\"node1567\" class=\"node\"&gt;\n&lt;title&gt;1b4f666dea17447b9f1cd8589cf0c654&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17586.72,-114.72 17585.28,-114.72 17585.28,-113.28 17586.72,-113.28 17586.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 94a450cc3f534fcba6d05881d79891ff&amp;#45;&amp;#45;1b4f666dea17447b9f1cd8589cf0c654 --&gt;\n&lt;g id=\"edge1560\" class=\"edge\"&gt;\n&lt;title&gt;94a450cc3f534fcba6d05881d79891ff&amp;#45;&amp;#45;1b4f666dea17447b9f1cd8589cf0c654&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17493.47,-114C17496.2,-114 17582.25,-114 17584.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- a706edbbda38404389791ec314ff9d58 --&gt;\n&lt;g id=\"node1568\" class=\"node\"&gt;\n&lt;title&gt;a706edbbda38404389791ec314ff9d58&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17680.32,-114.72 17678.88,-114.72 17678.88,-113.28 17680.32,-113.28 17680.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1b4f666dea17447b9f1cd8589cf0c654&amp;#45;&amp;#45;a706edbbda38404389791ec314ff9d58 --&gt;\n&lt;g id=\"edge1561\" class=\"edge\"&gt;\n&lt;title&gt;1b4f666dea17447b9f1cd8589cf0c654&amp;#45;&amp;#45;a706edbbda38404389791ec314ff9d58&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17587.07,-114C17589.8,-114 17675.85,-114 17678.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- a1a9d2f773714b5bb57c9de1af3b2fe3 --&gt;\n&lt;g id=\"node1569\" class=\"node\"&gt;\n&lt;title&gt;a1a9d2f773714b5bb57c9de1af3b2fe3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17773.92,-114.72 17772.48,-114.72 17772.48,-113.28 17773.92,-113.28 17773.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a706edbbda38404389791ec314ff9d58&amp;#45;&amp;#45;a1a9d2f773714b5bb57c9de1af3b2fe3 --&gt;\n&lt;g id=\"edge1562\" class=\"edge\"&gt;\n&lt;title&gt;a706edbbda38404389791ec314ff9d58&amp;#45;&amp;#45;a1a9d2f773714b5bb57c9de1af3b2fe3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17680.67,-114C17683.4,-114 17769.45,-114 17772.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- db4e0925f608495d8715ce8b9b054736 --&gt;\n&lt;g id=\"node1570\" class=\"node\"&gt;\n&lt;title&gt;db4e0925f608495d8715ce8b9b054736&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17867.52,-114.72 17866.08,-114.72 17866.08,-113.28 17867.52,-113.28 17867.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a1a9d2f773714b5bb57c9de1af3b2fe3&amp;#45;&amp;#45;db4e0925f608495d8715ce8b9b054736 --&gt;\n&lt;g id=\"edge1563\" class=\"edge\"&gt;\n&lt;title&gt;a1a9d2f773714b5bb57c9de1af3b2fe3&amp;#45;&amp;#45;db4e0925f608495d8715ce8b9b054736&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17774.27,-114C17777,-114 17863.05,-114 17865.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3c22aee40b764302aef846f5dce52bf5 --&gt;\n&lt;g id=\"node1571\" class=\"node\"&gt;\n&lt;title&gt;3c22aee40b764302aef846f5dce52bf5&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M17977.2,-142.8C17977.2,-142.8 17943.6,-142.8 17943.6,-142.8 17937.6,-142.8 17931.6,-136.8 17931.6,-130.8 17931.6,-130.8 17931.6,-97.2 17931.6,-97.2 17931.6,-91.2 17937.6,-85.2 17943.6,-85.2 17943.6,-85.2 17977.2,-85.2 17977.2,-85.2 17983.2,-85.2 17989.2,-91.2 17989.2,-97.2 17989.2,-97.2 17989.2,-130.8 17989.2,-130.8 17989.2,-136.8 17983.2,-142.8 17977.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"17960.4\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- db4e0925f608495d8715ce8b9b054736&amp;#45;&amp;#45;3c22aee40b764302aef846f5dce52bf5 --&gt;\n&lt;g id=\"edge1564\" class=\"edge\"&gt;\n&lt;title&gt;db4e0925f608495d8715ce8b9b054736&amp;#45;&amp;#45;3c22aee40b764302aef846f5dce52bf5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17867.87,-114C17869.59,-114 17904.48,-114 17930.68,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3c22aee40b764302aef846f5dce52bf5&amp;#45;&amp;#45;6bfdb09cd4a14d0ebf43e008d6ca3897 --&gt;\n&lt;g id=\"edge2031\" class=\"edge\"&gt;\n&lt;title&gt;3c22aee40b764302aef846f5dce52bf5&amp;#45;&amp;#45;6bfdb09cd4a14d0ebf43e008d6ca3897&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17960.4,-143.65C17960.4,-154.2 17960.4,-164.76 17960.4,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0d4e20e1d33a48509396ebcb03407bfa --&gt;\n&lt;g id=\"node1572\" class=\"node\"&gt;\n&lt;title&gt;0d4e20e1d33a48509396ebcb03407bfa&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M18188.4,-142.8C18188.4,-142.8 18037.2,-142.8 18037.2,-142.8 18031.2,-142.8 18025.2,-136.8 18025.2,-130.8 18025.2,-130.8 18025.2,-97.2 18025.2,-97.2 18025.2,-91.2 18031.2,-85.2 18037.2,-85.2 18037.2,-85.2 18188.4,-85.2 18188.4,-85.2 18194.4,-85.2 18200.4,-91.2 18200.4,-97.2 18200.4,-97.2 18200.4,-130.8 18200.4,-130.8 18200.4,-136.8 18194.4,-142.8 18188.4,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"18112.8\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 3c22aee40b764302aef846f5dce52bf5&amp;#45;&amp;#45;0d4e20e1d33a48509396ebcb03407bfa --&gt;\n&lt;g id=\"edge1565\" class=\"edge\"&gt;\n&lt;title&gt;3c22aee40b764302aef846f5dce52bf5&amp;#45;&amp;#45;0d4e20e1d33a48509396ebcb03407bfa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17990.04,-114C18000.1,-114 18011.99,-114 18024.33,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 506a821c2fd6431ab08ab667de6d48aa --&gt;\n&lt;g id=\"node1573\" class=\"node\"&gt;\n&lt;title&gt;506a821c2fd6431ab08ab667de6d48aa&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M18282,-142.8C18282,-142.8 18248.4,-142.8 18248.4,-142.8 18242.4,-142.8 18236.4,-136.8 18236.4,-130.8 18236.4,-130.8 18236.4,-97.2 18236.4,-97.2 18236.4,-91.2 18242.4,-85.2 18248.4,-85.2 18248.4,-85.2 18282,-85.2 18282,-85.2 18288,-85.2 18294,-91.2 18294,-97.2 18294,-97.2 18294,-130.8 18294,-130.8 18294,-136.8 18288,-142.8 18282,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"18265.2\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 0d4e20e1d33a48509396ebcb03407bfa&amp;#45;&amp;#45;506a821c2fd6431ab08ab667de6d48aa --&gt;\n&lt;g id=\"edge1566\" class=\"edge\"&gt;\n&lt;title&gt;0d4e20e1d33a48509396ebcb03407bfa&amp;#45;&amp;#45;506a821c2fd6431ab08ab667de6d48aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18201.29,-114C18213.57,-114 18225.4,-114 18235.42,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 506a821c2fd6431ab08ab667de6d48aa&amp;#45;&amp;#45;0a018cd842c44904a40f8213669033fc --&gt;\n&lt;g id=\"edge2032\" class=\"edge\"&gt;\n&lt;title&gt;506a821c2fd6431ab08ab667de6d48aa&amp;#45;&amp;#45;0a018cd842c44904a40f8213669033fc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18265.2,-143.65C18265.2,-154.2 18265.2,-164.76 18265.2,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2c80a9537c504b58bb5433188d3242df --&gt;\n&lt;g id=\"node1574\" class=\"node\"&gt;\n&lt;title&gt;2c80a9537c504b58bb5433188d3242df&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18359.52,-114.72 18358.08,-114.72 18358.08,-113.28 18359.52,-113.28 18359.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 506a821c2fd6431ab08ab667de6d48aa&amp;#45;&amp;#45;2c80a9537c504b58bb5433188d3242df --&gt;\n&lt;g id=\"edge1567\" class=\"edge\"&gt;\n&lt;title&gt;506a821c2fd6431ab08ab667de6d48aa&amp;#45;&amp;#45;2c80a9537c504b58bb5433188d3242df&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18294.68,-114C18320.73,-114 18355.54,-114 18357.7,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- faa3bd4d57c1493f8cb5504ad87802f4 --&gt;\n&lt;g id=\"node1575\" class=\"node\"&gt;\n&lt;title&gt;faa3bd4d57c1493f8cb5504ad87802f4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18453.12,-114.72 18451.68,-114.72 18451.68,-113.28 18453.12,-113.28 18453.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2c80a9537c504b58bb5433188d3242df&amp;#45;&amp;#45;faa3bd4d57c1493f8cb5504ad87802f4 --&gt;\n&lt;g id=\"edge1568\" class=\"edge\"&gt;\n&lt;title&gt;2c80a9537c504b58bb5433188d3242df&amp;#45;&amp;#45;faa3bd4d57c1493f8cb5504ad87802f4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18359.87,-114C18362.6,-114 18448.65,-114 18451.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1ebf1b7227754fb280872022f4f2d3b7 --&gt;\n&lt;g id=\"node1576\" class=\"node\"&gt;\n&lt;title&gt;1ebf1b7227754fb280872022f4f2d3b7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18546.72,-114.72 18545.28,-114.72 18545.28,-113.28 18546.72,-113.28 18546.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- faa3bd4d57c1493f8cb5504ad87802f4&amp;#45;&amp;#45;1ebf1b7227754fb280872022f4f2d3b7 --&gt;\n&lt;g id=\"edge1569\" class=\"edge\"&gt;\n&lt;title&gt;faa3bd4d57c1493f8cb5504ad87802f4&amp;#45;&amp;#45;1ebf1b7227754fb280872022f4f2d3b7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18453.47,-114C18456.2,-114 18542.25,-114 18544.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d5ecdeda828495dabd268be9b43bb98 --&gt;\n&lt;g id=\"node1577\" class=\"node\"&gt;\n&lt;title&gt;7d5ecdeda828495dabd268be9b43bb98&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18640.32,-114.72 18638.88,-114.72 18638.88,-113.28 18640.32,-113.28 18640.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1ebf1b7227754fb280872022f4f2d3b7&amp;#45;&amp;#45;7d5ecdeda828495dabd268be9b43bb98 --&gt;\n&lt;g id=\"edge1570\" class=\"edge\"&gt;\n&lt;title&gt;1ebf1b7227754fb280872022f4f2d3b7&amp;#45;&amp;#45;7d5ecdeda828495dabd268be9b43bb98&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18547.07,-114C18549.8,-114 18635.85,-114 18638.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44a2a09858814ef5986aea53098aebb3 --&gt;\n&lt;g id=\"node1578\" class=\"node\"&gt;\n&lt;title&gt;44a2a09858814ef5986aea53098aebb3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18733.92,-114.72 18732.48,-114.72 18732.48,-113.28 18733.92,-113.28 18733.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d5ecdeda828495dabd268be9b43bb98&amp;#45;&amp;#45;44a2a09858814ef5986aea53098aebb3 --&gt;\n&lt;g id=\"edge1571\" class=\"edge\"&gt;\n&lt;title&gt;7d5ecdeda828495dabd268be9b43bb98&amp;#45;&amp;#45;44a2a09858814ef5986aea53098aebb3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18640.67,-114C18643.4,-114 18729.45,-114 18732.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 18b93ec513cb446a90d21afc1c069ab7 --&gt;\n&lt;g id=\"node1579\" class=\"node\"&gt;\n&lt;title&gt;18b93ec513cb446a90d21afc1c069ab7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18827.52,-114.72 18826.08,-114.72 18826.08,-113.28 18827.52,-113.28 18827.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 44a2a09858814ef5986aea53098aebb3&amp;#45;&amp;#45;18b93ec513cb446a90d21afc1c069ab7 --&gt;\n&lt;g id=\"edge1572\" class=\"edge\"&gt;\n&lt;title&gt;44a2a09858814ef5986aea53098aebb3&amp;#45;&amp;#45;18b93ec513cb446a90d21afc1c069ab7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18734.27,-114C18737,-114 18823.05,-114 18825.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- fc2615cea9e14c03a3fb2636c916931f --&gt;\n&lt;g id=\"node1580\" class=\"node\"&gt;\n&lt;title&gt;fc2615cea9e14c03a3fb2636c916931f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18921.12,-114.72 18919.68,-114.72 18919.68,-113.28 18921.12,-113.28 18921.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 18b93ec513cb446a90d21afc1c069ab7&amp;#45;&amp;#45;fc2615cea9e14c03a3fb2636c916931f --&gt;\n&lt;g id=\"edge1573\" class=\"edge\"&gt;\n&lt;title&gt;18b93ec513cb446a90d21afc1c069ab7&amp;#45;&amp;#45;fc2615cea9e14c03a3fb2636c916931f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18827.87,-114C18830.6,-114 18916.65,-114 18919.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 438c396b4c27496ab5060f15cc7e8e24 --&gt;\n&lt;g id=\"node1581\" class=\"node\"&gt;\n&lt;title&gt;438c396b4c27496ab5060f15cc7e8e24&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19014.72,-114.72 19013.28,-114.72 19013.28,-113.28 19014.72,-113.28 19014.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fc2615cea9e14c03a3fb2636c916931f&amp;#45;&amp;#45;438c396b4c27496ab5060f15cc7e8e24 --&gt;\n&lt;g id=\"edge1574\" class=\"edge\"&gt;\n&lt;title&gt;fc2615cea9e14c03a3fb2636c916931f&amp;#45;&amp;#45;438c396b4c27496ab5060f15cc7e8e24&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18921.47,-114C18924.2,-114 19010.25,-114 19012.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52d84d09de694a8cb144c1fee818dd87 --&gt;\n&lt;g id=\"node1582\" class=\"node\"&gt;\n&lt;title&gt;52d84d09de694a8cb144c1fee818dd87&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M19124.4,-142.8C19124.4,-142.8 19090.8,-142.8 19090.8,-142.8 19084.8,-142.8 19078.8,-136.8 19078.8,-130.8 19078.8,-130.8 19078.8,-97.2 19078.8,-97.2 19078.8,-91.2 19084.8,-85.2 19090.8,-85.2 19090.8,-85.2 19124.4,-85.2 19124.4,-85.2 19130.4,-85.2 19136.4,-91.2 19136.4,-97.2 19136.4,-97.2 19136.4,-130.8 19136.4,-130.8 19136.4,-136.8 19130.4,-142.8 19124.4,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"19107.6\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 438c396b4c27496ab5060f15cc7e8e24&amp;#45;&amp;#45;52d84d09de694a8cb144c1fee818dd87 --&gt;\n&lt;g id=\"edge1575\" class=\"edge\"&gt;\n&lt;title&gt;438c396b4c27496ab5060f15cc7e8e24&amp;#45;&amp;#45;52d84d09de694a8cb144c1fee818dd87&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19015.07,-114C19016.79,-114 19051.68,-114 19077.88,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52d84d09de694a8cb144c1fee818dd87&amp;#45;&amp;#45;57db94aee0b94dd4a9f35bc72cc23060 --&gt;\n&lt;g id=\"edge2033\" class=\"edge\"&gt;\n&lt;title&gt;52d84d09de694a8cb144c1fee818dd87&amp;#45;&amp;#45;57db94aee0b94dd4a9f35bc72cc23060&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19107.6,-143.65C19107.6,-154.2 19107.6,-164.76 19107.6,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8a8284a1dbd64ebab0cad67aca43be98 --&gt;\n&lt;g id=\"node1583\" class=\"node\"&gt;\n&lt;title&gt;8a8284a1dbd64ebab0cad67aca43be98&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"19201.2\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52d84d09de694a8cb144c1fee818dd87&amp;#45;&amp;#45;8a8284a1dbd64ebab0cad67aca43be98 --&gt;\n&lt;g id=\"edge1576\" class=\"edge\"&gt;\n&lt;title&gt;52d84d09de694a8cb144c1fee818dd87&amp;#45;&amp;#45;8a8284a1dbd64ebab0cad67aca43be98&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19137.08,-114C19157.04,-114 19182.14,-114 19193.76,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- cd1cb658048246dea74e52fa7a0d7af7 --&gt;\n&lt;g id=\"node1584\" class=\"node\"&gt;\n&lt;title&gt;cd1cb658048246dea74e52fa7a0d7af7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19354.32,-114.72 19352.88,-114.72 19352.88,-113.28 19354.32,-113.28 19354.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8a8284a1dbd64ebab0cad67aca43be98&amp;#45;&amp;#45;cd1cb658048246dea74e52fa7a0d7af7 --&gt;\n&lt;g id=\"edge1577\" class=\"edge\"&gt;\n&lt;title&gt;8a8284a1dbd64ebab0cad67aca43be98&amp;#45;&amp;#45;cd1cb658048246dea74e52fa7a0d7af7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19208.66,-114C19237,-114 19349.02,-114 19352.52,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- d0da8f72a88c46a79a294c11190fb084 --&gt;\n&lt;g id=\"node1585\" class=\"node\"&gt;\n&lt;title&gt;d0da8f72a88c46a79a294c11190fb084&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"19506\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- cd1cb658048246dea74e52fa7a0d7af7&amp;#45;&amp;#45;d0da8f72a88c46a79a294c11190fb084 --&gt;\n&lt;g id=\"edge1578\" class=\"edge\"&gt;\n&lt;title&gt;cd1cb658048246dea74e52fa7a0d7af7&amp;#45;&amp;#45;d0da8f72a88c46a79a294c11190fb084&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19354.71,-114C19358.68,-114 19469.77,-114 19498.35,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- d30b245b157448aea138745c1ea90e8c --&gt;\n&lt;g id=\"node1586\" class=\"node\"&gt;\n&lt;title&gt;d30b245b157448aea138745c1ea90e8c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M19616.4,-142.8C19616.4,-142.8 19582.8,-142.8 19582.8,-142.8 19576.8,-142.8 19570.8,-136.8 19570.8,-130.8 19570.8,-130.8 19570.8,-97.2 19570.8,-97.2 19570.8,-91.2 19576.8,-85.2 19582.8,-85.2 19582.8,-85.2 19616.4,-85.2 19616.4,-85.2 19622.4,-85.2 19628.4,-91.2 19628.4,-97.2 19628.4,-97.2 19628.4,-130.8 19628.4,-130.8 19628.4,-136.8 19622.4,-142.8 19616.4,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"19599.6\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d0da8f72a88c46a79a294c11190fb084&amp;#45;&amp;#45;d30b245b157448aea138745c1ea90e8c --&gt;\n&lt;g id=\"edge1579\" class=\"edge\"&gt;\n&lt;title&gt;d0da8f72a88c46a79a294c11190fb084&amp;#45;&amp;#45;d30b245b157448aea138745c1ea90e8c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19513.59,-114C19525.24,-114 19550.12,-114 19569.97,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- d30b245b157448aea138745c1ea90e8c&amp;#45;&amp;#45;2840b83c7637461ab607e396a24abb9e --&gt;\n&lt;g id=\"edge2034\" class=\"edge\"&gt;\n&lt;title&gt;d30b245b157448aea138745c1ea90e8c&amp;#45;&amp;#45;2840b83c7637461ab607e396a24abb9e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19599.6,-143.65C19599.6,-154.2 19599.6,-164.76 19599.6,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 15ca2f6d876349ac93223d4f3f8a67ed --&gt;\n&lt;g id=\"node1587\" class=\"node\"&gt;\n&lt;title&gt;15ca2f6d876349ac93223d4f3f8a67ed&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19693.92,-114.72 19692.48,-114.72 19692.48,-113.28 19693.92,-113.28 19693.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d30b245b157448aea138745c1ea90e8c&amp;#45;&amp;#45;15ca2f6d876349ac93223d4f3f8a67ed --&gt;\n&lt;g id=\"edge1580\" class=\"edge\"&gt;\n&lt;title&gt;d30b245b157448aea138745c1ea90e8c&amp;#45;&amp;#45;15ca2f6d876349ac93223d4f3f8a67ed&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19629.08,-114C19655.13,-114 19689.94,-114 19692.1,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d74f1466bb44d5b867da4127dc8a73c --&gt;\n&lt;g id=\"node1588\" class=\"node\"&gt;\n&lt;title&gt;4d74f1466bb44d5b867da4127dc8a73c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19787.52,-114.72 19786.08,-114.72 19786.08,-113.28 19787.52,-113.28 19787.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 15ca2f6d876349ac93223d4f3f8a67ed&amp;#45;&amp;#45;4d74f1466bb44d5b867da4127dc8a73c --&gt;\n&lt;g id=\"edge1581\" class=\"edge\"&gt;\n&lt;title&gt;15ca2f6d876349ac93223d4f3f8a67ed&amp;#45;&amp;#45;4d74f1466bb44d5b867da4127dc8a73c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19694.27,-114C19697,-114 19783.05,-114 19785.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98646046b06d4bfda5d692bf64f9341a --&gt;\n&lt;g id=\"node1589\" class=\"node\"&gt;\n&lt;title&gt;98646046b06d4bfda5d692bf64f9341a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19881.12,-114.72 19879.68,-114.72 19879.68,-113.28 19881.12,-113.28 19881.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d74f1466bb44d5b867da4127dc8a73c&amp;#45;&amp;#45;98646046b06d4bfda5d692bf64f9341a --&gt;\n&lt;g id=\"edge1582\" class=\"edge\"&gt;\n&lt;title&gt;4d74f1466bb44d5b867da4127dc8a73c&amp;#45;&amp;#45;98646046b06d4bfda5d692bf64f9341a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19787.87,-114C19790.6,-114 19876.65,-114 19879.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- e9dfa7cd3a7f4583987a12df26877b4c --&gt;\n&lt;g id=\"node1590\" class=\"node\"&gt;\n&lt;title&gt;e9dfa7cd3a7f4583987a12df26877b4c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19974.72,-114.72 19973.28,-114.72 19973.28,-113.28 19974.72,-113.28 19974.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 98646046b06d4bfda5d692bf64f9341a&amp;#45;&amp;#45;e9dfa7cd3a7f4583987a12df26877b4c --&gt;\n&lt;g id=\"edge1583\" class=\"edge\"&gt;\n&lt;title&gt;98646046b06d4bfda5d692bf64f9341a&amp;#45;&amp;#45;e9dfa7cd3a7f4583987a12df26877b4c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19881.47,-114C19884.2,-114 19970.25,-114 19972.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 80c123574d3541e4a33e3d1b53b05de9 --&gt;\n&lt;g id=\"node1591\" class=\"node\"&gt;\n&lt;title&gt;80c123574d3541e4a33e3d1b53b05de9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20068.32,-114.72 20066.88,-114.72 20066.88,-113.28 20068.32,-113.28 20068.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e9dfa7cd3a7f4583987a12df26877b4c&amp;#45;&amp;#45;80c123574d3541e4a33e3d1b53b05de9 --&gt;\n&lt;g id=\"edge1584\" class=\"edge\"&gt;\n&lt;title&gt;e9dfa7cd3a7f4583987a12df26877b4c&amp;#45;&amp;#45;80c123574d3541e4a33e3d1b53b05de9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19975.07,-114C19977.8,-114 20063.85,-114 20066.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7158aeb1c02c4970b01a6bbdd63401e2 --&gt;\n&lt;g id=\"node1592\" class=\"node\"&gt;\n&lt;title&gt;7158aeb1c02c4970b01a6bbdd63401e2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20161.92,-114.72 20160.48,-114.72 20160.48,-113.28 20161.92,-113.28 20161.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 80c123574d3541e4a33e3d1b53b05de9&amp;#45;&amp;#45;7158aeb1c02c4970b01a6bbdd63401e2 --&gt;\n&lt;g id=\"edge1585\" class=\"edge\"&gt;\n&lt;title&gt;80c123574d3541e4a33e3d1b53b05de9&amp;#45;&amp;#45;7158aeb1c02c4970b01a6bbdd63401e2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20068.67,-114C20071.4,-114 20157.45,-114 20160.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2ca8836c3bff42b19d5773c20834a999 --&gt;\n&lt;g id=\"node1593\" class=\"node\"&gt;\n&lt;title&gt;2ca8836c3bff42b19d5773c20834a999&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20255.52,-114.72 20254.08,-114.72 20254.08,-113.28 20255.52,-113.28 20255.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7158aeb1c02c4970b01a6bbdd63401e2&amp;#45;&amp;#45;2ca8836c3bff42b19d5773c20834a999 --&gt;\n&lt;g id=\"edge1586\" class=\"edge\"&gt;\n&lt;title&gt;7158aeb1c02c4970b01a6bbdd63401e2&amp;#45;&amp;#45;2ca8836c3bff42b19d5773c20834a999&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20162.27,-114C20165,-114 20251.05,-114 20253.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- d1cd31d7bb5948959aa9efc2c3e2ef96 --&gt;\n&lt;g id=\"node1594\" class=\"node\"&gt;\n&lt;title&gt;d1cd31d7bb5948959aa9efc2c3e2ef96&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M20365.2,-142.8C20365.2,-142.8 20331.6,-142.8 20331.6,-142.8 20325.6,-142.8 20319.6,-136.8 20319.6,-130.8 20319.6,-130.8 20319.6,-97.2 20319.6,-97.2 20319.6,-91.2 20325.6,-85.2 20331.6,-85.2 20331.6,-85.2 20365.2,-85.2 20365.2,-85.2 20371.2,-85.2 20377.2,-91.2 20377.2,-97.2 20377.2,-97.2 20377.2,-130.8 20377.2,-130.8 20377.2,-136.8 20371.2,-142.8 20365.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"20348.4\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2ca8836c3bff42b19d5773c20834a999&amp;#45;&amp;#45;d1cd31d7bb5948959aa9efc2c3e2ef96 --&gt;\n&lt;g id=\"edge1587\" class=\"edge\"&gt;\n&lt;title&gt;2ca8836c3bff42b19d5773c20834a999&amp;#45;&amp;#45;d1cd31d7bb5948959aa9efc2c3e2ef96&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20255.87,-114C20257.59,-114 20292.48,-114 20318.68,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- d1cd31d7bb5948959aa9efc2c3e2ef96&amp;#45;&amp;#45;0d338323df8543958bc0db312a43fa07 --&gt;\n&lt;g id=\"edge2035\" class=\"edge\"&gt;\n&lt;title&gt;d1cd31d7bb5948959aa9efc2c3e2ef96&amp;#45;&amp;#45;0d338323df8543958bc0db312a43fa07&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20348.4,-143.65C20348.4,-154.2 20348.4,-164.76 20348.4,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 891e52357e5f4a08b29ad22a5f73b5b0 --&gt;\n&lt;g id=\"node1595\" class=\"node\"&gt;\n&lt;title&gt;891e52357e5f4a08b29ad22a5f73b5b0&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"20442\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- d1cd31d7bb5948959aa9efc2c3e2ef96&amp;#45;&amp;#45;891e52357e5f4a08b29ad22a5f73b5b0 --&gt;\n&lt;g id=\"edge1588\" class=\"edge\"&gt;\n&lt;title&gt;d1cd31d7bb5948959aa9efc2c3e2ef96&amp;#45;&amp;#45;891e52357e5f4a08b29ad22a5f73b5b0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20377.88,-114C20397.84,-114 20422.94,-114 20434.56,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- cf413b5894a64b9e9010c1cb198095aa --&gt;\n&lt;g id=\"node1596\" class=\"node\"&gt;\n&lt;title&gt;cf413b5894a64b9e9010c1cb198095aa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20595.12,-114.72 20593.68,-114.72 20593.68,-113.28 20595.12,-113.28 20595.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 891e52357e5f4a08b29ad22a5f73b5b0&amp;#45;&amp;#45;cf413b5894a64b9e9010c1cb198095aa --&gt;\n&lt;g id=\"edge1589\" class=\"edge\"&gt;\n&lt;title&gt;891e52357e5f4a08b29ad22a5f73b5b0&amp;#45;&amp;#45;cf413b5894a64b9e9010c1cb198095aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20449.46,-114C20477.8,-114 20589.82,-114 20593.32,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 90212b0515c34200af13486a7fa548f7 --&gt;\n&lt;g id=\"node1597\" class=\"node\"&gt;\n&lt;title&gt;90212b0515c34200af13486a7fa548f7&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"20746.8\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- cf413b5894a64b9e9010c1cb198095aa&amp;#45;&amp;#45;90212b0515c34200af13486a7fa548f7 --&gt;\n&lt;g id=\"edge1590\" class=\"edge\"&gt;\n&lt;title&gt;cf413b5894a64b9e9010c1cb198095aa&amp;#45;&amp;#45;90212b0515c34200af13486a7fa548f7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20595.51,-114C20599.48,-114 20710.57,-114 20739.15,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 116af55ce3914ca79e8b3b48f71f8638 --&gt;\n&lt;g id=\"node1598\" class=\"node\"&gt;\n&lt;title&gt;116af55ce3914ca79e8b3b48f71f8638&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M20857.2,-142.8C20857.2,-142.8 20823.6,-142.8 20823.6,-142.8 20817.6,-142.8 20811.6,-136.8 20811.6,-130.8 20811.6,-130.8 20811.6,-97.2 20811.6,-97.2 20811.6,-91.2 20817.6,-85.2 20823.6,-85.2 20823.6,-85.2 20857.2,-85.2 20857.2,-85.2 20863.2,-85.2 20869.2,-91.2 20869.2,-97.2 20869.2,-97.2 20869.2,-130.8 20869.2,-130.8 20869.2,-136.8 20863.2,-142.8 20857.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"20840.4\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 90212b0515c34200af13486a7fa548f7&amp;#45;&amp;#45;116af55ce3914ca79e8b3b48f71f8638 --&gt;\n&lt;g id=\"edge1591\" class=\"edge\"&gt;\n&lt;title&gt;90212b0515c34200af13486a7fa548f7&amp;#45;&amp;#45;116af55ce3914ca79e8b3b48f71f8638&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20754.39,-114C20766.04,-114 20790.92,-114 20810.77,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 116af55ce3914ca79e8b3b48f71f8638&amp;#45;&amp;#45;b4b3fc8dd8714713902b48683ec3bbbc --&gt;\n&lt;g id=\"edge2036\" class=\"edge\"&gt;\n&lt;title&gt;116af55ce3914ca79e8b3b48f71f8638&amp;#45;&amp;#45;b4b3fc8dd8714713902b48683ec3bbbc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20840.4,-143.65C20840.4,-154.2 20840.4,-164.76 20840.4,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7e69e299cfd0495da946f69a94d49f0a --&gt;\n&lt;g id=\"node1599\" class=\"node\"&gt;\n&lt;title&gt;7e69e299cfd0495da946f69a94d49f0a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20934.72,-114.72 20933.28,-114.72 20933.28,-113.28 20934.72,-113.28 20934.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 116af55ce3914ca79e8b3b48f71f8638&amp;#45;&amp;#45;7e69e299cfd0495da946f69a94d49f0a --&gt;\n&lt;g id=\"edge1592\" class=\"edge\"&gt;\n&lt;title&gt;116af55ce3914ca79e8b3b48f71f8638&amp;#45;&amp;#45;7e69e299cfd0495da946f69a94d49f0a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20869.88,-114C20895.93,-114 20930.74,-114 20932.9,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3865483b9d8d436cb00572e39566ed8d --&gt;\n&lt;g id=\"node1600\" class=\"node\"&gt;\n&lt;title&gt;3865483b9d8d436cb00572e39566ed8d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21028.32,-114.72 21026.88,-114.72 21026.88,-113.28 21028.32,-113.28 21028.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7e69e299cfd0495da946f69a94d49f0a&amp;#45;&amp;#45;3865483b9d8d436cb00572e39566ed8d --&gt;\n&lt;g id=\"edge1593\" class=\"edge\"&gt;\n&lt;title&gt;7e69e299cfd0495da946f69a94d49f0a&amp;#45;&amp;#45;3865483b9d8d436cb00572e39566ed8d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20935.07,-114C20937.8,-114 21023.85,-114 21026.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- c6bf3818a18c41f9b1b8ca801069c3aa --&gt;\n&lt;g id=\"node1601\" class=\"node\"&gt;\n&lt;title&gt;c6bf3818a18c41f9b1b8ca801069c3aa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21121.92,-114.72 21120.48,-114.72 21120.48,-113.28 21121.92,-113.28 21121.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3865483b9d8d436cb00572e39566ed8d&amp;#45;&amp;#45;c6bf3818a18c41f9b1b8ca801069c3aa --&gt;\n&lt;g id=\"edge1594\" class=\"edge\"&gt;\n&lt;title&gt;3865483b9d8d436cb00572e39566ed8d&amp;#45;&amp;#45;c6bf3818a18c41f9b1b8ca801069c3aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21028.67,-114C21031.4,-114 21117.45,-114 21120.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 907dffd58b30420fa9dede4407a5803c --&gt;\n&lt;g id=\"node1602\" class=\"node\"&gt;\n&lt;title&gt;907dffd58b30420fa9dede4407a5803c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21215.52,-114.72 21214.08,-114.72 21214.08,-113.28 21215.52,-113.28 21215.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c6bf3818a18c41f9b1b8ca801069c3aa&amp;#45;&amp;#45;907dffd58b30420fa9dede4407a5803c --&gt;\n&lt;g id=\"edge1595\" class=\"edge\"&gt;\n&lt;title&gt;c6bf3818a18c41f9b1b8ca801069c3aa&amp;#45;&amp;#45;907dffd58b30420fa9dede4407a5803c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21122.27,-114C21125,-114 21211.05,-114 21213.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- f6bb4937365341f6a206f3078a7e9926 --&gt;\n&lt;g id=\"node1603\" class=\"node\"&gt;\n&lt;title&gt;f6bb4937365341f6a206f3078a7e9926&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21309.12,-114.72 21307.68,-114.72 21307.68,-113.28 21309.12,-113.28 21309.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 907dffd58b30420fa9dede4407a5803c&amp;#45;&amp;#45;f6bb4937365341f6a206f3078a7e9926 --&gt;\n&lt;g id=\"edge1596\" class=\"edge\"&gt;\n&lt;title&gt;907dffd58b30420fa9dede4407a5803c&amp;#45;&amp;#45;f6bb4937365341f6a206f3078a7e9926&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21215.87,-114C21218.6,-114 21304.65,-114 21307.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4d60dd3907a425989569870b8b0a476 --&gt;\n&lt;g id=\"node1604\" class=\"node\"&gt;\n&lt;title&gt;e4d60dd3907a425989569870b8b0a476&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21461.52,-114.72 21460.08,-114.72 21460.08,-113.28 21461.52,-113.28 21461.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f6bb4937365341f6a206f3078a7e9926&amp;#45;&amp;#45;e4d60dd3907a425989569870b8b0a476 --&gt;\n&lt;g id=\"edge1597\" class=\"edge\"&gt;\n&lt;title&gt;f6bb4937365341f6a206f3078a7e9926&amp;#45;&amp;#45;e4d60dd3907a425989569870b8b0a476&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21309.51,-114C21313.99,-114 21455.28,-114 21459.69,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8f07b32dcff14b55b94c99e01eeb41cd --&gt;\n&lt;g id=\"node1605\" class=\"node\"&gt;\n&lt;title&gt;8f07b32dcff14b55b94c99e01eeb41cd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21613.92,-114.72 21612.48,-114.72 21612.48,-113.28 21613.92,-113.28 21613.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4d60dd3907a425989569870b8b0a476&amp;#45;&amp;#45;8f07b32dcff14b55b94c99e01eeb41cd --&gt;\n&lt;g id=\"edge1598\" class=\"edge\"&gt;\n&lt;title&gt;e4d60dd3907a425989569870b8b0a476&amp;#45;&amp;#45;8f07b32dcff14b55b94c99e01eeb41cd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21461.91,-114C21466.39,-114 21607.68,-114 21612.09,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d3589dca0a1456f92c5112bc4906319 --&gt;\n&lt;g id=\"node1606\" class=\"node\"&gt;\n&lt;title&gt;6d3589dca0a1456f92c5112bc4906319&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21707.52,-114.72 21706.08,-114.72 21706.08,-113.28 21707.52,-113.28 21707.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8f07b32dcff14b55b94c99e01eeb41cd&amp;#45;&amp;#45;6d3589dca0a1456f92c5112bc4906319 --&gt;\n&lt;g id=\"edge1599\" class=\"edge\"&gt;\n&lt;title&gt;8f07b32dcff14b55b94c99e01eeb41cd&amp;#45;&amp;#45;6d3589dca0a1456f92c5112bc4906319&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21614.27,-114C21617,-114 21703.05,-114 21705.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1fd5e356b03647dc88adef16b087a075 --&gt;\n&lt;g id=\"node1607\" class=\"node\"&gt;\n&lt;title&gt;1fd5e356b03647dc88adef16b087a075&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21801.12,-114.72 21799.68,-114.72 21799.68,-113.28 21801.12,-113.28 21801.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d3589dca0a1456f92c5112bc4906319&amp;#45;&amp;#45;1fd5e356b03647dc88adef16b087a075 --&gt;\n&lt;g id=\"edge1600\" class=\"edge\"&gt;\n&lt;title&gt;6d3589dca0a1456f92c5112bc4906319&amp;#45;&amp;#45;1fd5e356b03647dc88adef16b087a075&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21707.87,-114C21710.6,-114 21796.65,-114 21799.34,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6969128faa22427f9ef3619568236b09 --&gt;\n&lt;g id=\"node1608\" class=\"node\"&gt;\n&lt;title&gt;6969128faa22427f9ef3619568236b09&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21894.72,-114.72 21893.28,-114.72 21893.28,-113.28 21894.72,-113.28 21894.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1fd5e356b03647dc88adef16b087a075&amp;#45;&amp;#45;6969128faa22427f9ef3619568236b09 --&gt;\n&lt;g id=\"edge1601\" class=\"edge\"&gt;\n&lt;title&gt;1fd5e356b03647dc88adef16b087a075&amp;#45;&amp;#45;6969128faa22427f9ef3619568236b09&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21801.47,-114C21804.2,-114 21890.25,-114 21892.94,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4a0c2ca608994eab966bf4ce07be8253 --&gt;\n&lt;g id=\"node1609\" class=\"node\"&gt;\n&lt;title&gt;4a0c2ca608994eab966bf4ce07be8253&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M22004.4,-142.8C22004.4,-142.8 21970.8,-142.8 21970.8,-142.8 21964.8,-142.8 21958.8,-136.8 21958.8,-130.8 21958.8,-130.8 21958.8,-97.2 21958.8,-97.2 21958.8,-91.2 21964.8,-85.2 21970.8,-85.2 21970.8,-85.2 22004.4,-85.2 22004.4,-85.2 22010.4,-85.2 22016.4,-91.2 22016.4,-97.2 22016.4,-97.2 22016.4,-130.8 22016.4,-130.8 22016.4,-136.8 22010.4,-142.8 22004.4,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"21987.6\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 6969128faa22427f9ef3619568236b09&amp;#45;&amp;#45;4a0c2ca608994eab966bf4ce07be8253 --&gt;\n&lt;g id=\"edge1602\" class=\"edge\"&gt;\n&lt;title&gt;6969128faa22427f9ef3619568236b09&amp;#45;&amp;#45;4a0c2ca608994eab966bf4ce07be8253&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21895.07,-114C21896.79,-114 21931.68,-114 21957.88,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4a0c2ca608994eab966bf4ce07be8253&amp;#45;&amp;#45;4550d277328d4c34ad206a80e58a4e36 --&gt;\n&lt;g id=\"edge2037\" class=\"edge\"&gt;\n&lt;title&gt;4a0c2ca608994eab966bf4ce07be8253&amp;#45;&amp;#45;4550d277328d4c34ad206a80e58a4e36&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21987.6,-143.65C21987.6,-154.2 21987.6,-164.76 21987.6,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- f4dd07f73b054aeba883aae45dec24ed --&gt;\n&lt;g id=\"node1610\" class=\"node\"&gt;\n&lt;title&gt;f4dd07f73b054aeba883aae45dec24ed&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M22215.6,-142.8C22215.6,-142.8 22064.4,-142.8 22064.4,-142.8 22058.4,-142.8 22052.4,-136.8 22052.4,-130.8 22052.4,-130.8 22052.4,-97.2 22052.4,-97.2 22052.4,-91.2 22058.4,-85.2 22064.4,-85.2 22064.4,-85.2 22215.6,-85.2 22215.6,-85.2 22221.6,-85.2 22227.6,-91.2 22227.6,-97.2 22227.6,-97.2 22227.6,-130.8 22227.6,-130.8 22227.6,-136.8 22221.6,-142.8 22215.6,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"22140\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 4a0c2ca608994eab966bf4ce07be8253&amp;#45;&amp;#45;f4dd07f73b054aeba883aae45dec24ed --&gt;\n&lt;g id=\"edge1603\" class=\"edge\"&gt;\n&lt;title&gt;4a0c2ca608994eab966bf4ce07be8253&amp;#45;&amp;#45;f4dd07f73b054aeba883aae45dec24ed&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22017.24,-114C22027.3,-114 22039.19,-114 22051.53,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52468b1b947940f1bd0e4ec707a9968c --&gt;\n&lt;g id=\"node1611\" class=\"node\"&gt;\n&lt;title&gt;52468b1b947940f1bd0e4ec707a9968c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M22309.2,-142.8C22309.2,-142.8 22275.6,-142.8 22275.6,-142.8 22269.6,-142.8 22263.6,-136.8 22263.6,-130.8 22263.6,-130.8 22263.6,-97.2 22263.6,-97.2 22263.6,-91.2 22269.6,-85.2 22275.6,-85.2 22275.6,-85.2 22309.2,-85.2 22309.2,-85.2 22315.2,-85.2 22321.2,-91.2 22321.2,-97.2 22321.2,-97.2 22321.2,-130.8 22321.2,-130.8 22321.2,-136.8 22315.2,-142.8 22309.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"22292.4\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- f4dd07f73b054aeba883aae45dec24ed&amp;#45;&amp;#45;52468b1b947940f1bd0e4ec707a9968c --&gt;\n&lt;g id=\"edge1604\" class=\"edge\"&gt;\n&lt;title&gt;f4dd07f73b054aeba883aae45dec24ed&amp;#45;&amp;#45;52468b1b947940f1bd0e4ec707a9968c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22228.49,-114C22240.77,-114 22252.6,-114 22262.62,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52468b1b947940f1bd0e4ec707a9968c&amp;#45;&amp;#45;ee58ec4b9be740dcb09ef5d85209c3d3 --&gt;\n&lt;g id=\"edge2038\" class=\"edge\"&gt;\n&lt;title&gt;52468b1b947940f1bd0e4ec707a9968c&amp;#45;&amp;#45;ee58ec4b9be740dcb09ef5d85209c3d3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22292.4,-143.65C22292.4,-154.2 22292.4,-164.76 22292.4,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- ab3f9c495f604436a06fd49a7c6bb4b2 --&gt;\n&lt;g id=\"node1612\" class=\"node\"&gt;\n&lt;title&gt;ab3f9c495f604436a06fd49a7c6bb4b2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22386.72,-114.72 22385.28,-114.72 22385.28,-113.28 22386.72,-113.28 22386.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52468b1b947940f1bd0e4ec707a9968c&amp;#45;&amp;#45;ab3f9c495f604436a06fd49a7c6bb4b2 --&gt;\n&lt;g id=\"edge1605\" class=\"edge\"&gt;\n&lt;title&gt;52468b1b947940f1bd0e4ec707a9968c&amp;#45;&amp;#45;ab3f9c495f604436a06fd49a7c6bb4b2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22321.88,-114C22347.93,-114 22382.74,-114 22384.9,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 88aeb3b02fe44204b7584659f6975081 --&gt;\n&lt;g id=\"node1613\" class=\"node\"&gt;\n&lt;title&gt;88aeb3b02fe44204b7584659f6975081&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22480.32,-114.72 22478.88,-114.72 22478.88,-113.28 22480.32,-113.28 22480.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ab3f9c495f604436a06fd49a7c6bb4b2&amp;#45;&amp;#45;88aeb3b02fe44204b7584659f6975081 --&gt;\n&lt;g id=\"edge1606\" class=\"edge\"&gt;\n&lt;title&gt;ab3f9c495f604436a06fd49a7c6bb4b2&amp;#45;&amp;#45;88aeb3b02fe44204b7584659f6975081&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22387.07,-114C22389.8,-114 22475.85,-114 22478.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- e68af9db894648f7892d6f1ad06719e9 --&gt;\n&lt;g id=\"node1614\" class=\"node\"&gt;\n&lt;title&gt;e68af9db894648f7892d6f1ad06719e9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22573.92,-114.72 22572.48,-114.72 22572.48,-113.28 22573.92,-113.28 22573.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 88aeb3b02fe44204b7584659f6975081&amp;#45;&amp;#45;e68af9db894648f7892d6f1ad06719e9 --&gt;\n&lt;g id=\"edge1607\" class=\"edge\"&gt;\n&lt;title&gt;88aeb3b02fe44204b7584659f6975081&amp;#45;&amp;#45;e68af9db894648f7892d6f1ad06719e9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22480.67,-114C22483.4,-114 22569.45,-114 22572.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4d8cfd8c4a204392b581231c5cb895e6 --&gt;\n&lt;g id=\"node1615\" class=\"node\"&gt;\n&lt;title&gt;4d8cfd8c4a204392b581231c5cb895e6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22667.52,-114.72 22666.08,-114.72 22666.08,-113.28 22667.52,-113.28 22667.52,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e68af9db894648f7892d6f1ad06719e9&amp;#45;&amp;#45;4d8cfd8c4a204392b581231c5cb895e6 --&gt;\n&lt;g id=\"edge1608\" class=\"edge\"&gt;\n&lt;title&gt;e68af9db894648f7892d6f1ad06719e9&amp;#45;&amp;#45;4d8cfd8c4a204392b581231c5cb895e6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22574.27,-114C22577,-114 22663.05,-114 22665.74,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 763228185ef14c2e823757ef912bee07 --&gt;\n&lt;g id=\"node1616\" class=\"node\"&gt;\n&lt;title&gt;763228185ef14c2e823757ef912bee07&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M22777.2,-142.8C22777.2,-142.8 22743.6,-142.8 22743.6,-142.8 22737.6,-142.8 22731.6,-136.8 22731.6,-130.8 22731.6,-130.8 22731.6,-97.2 22731.6,-97.2 22731.6,-91.2 22737.6,-85.2 22743.6,-85.2 22743.6,-85.2 22777.2,-85.2 22777.2,-85.2 22783.2,-85.2 22789.2,-91.2 22789.2,-97.2 22789.2,-97.2 22789.2,-130.8 22789.2,-130.8 22789.2,-136.8 22783.2,-142.8 22777.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"22760.4\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 4d8cfd8c4a204392b581231c5cb895e6&amp;#45;&amp;#45;763228185ef14c2e823757ef912bee07 --&gt;\n&lt;g id=\"edge1609\" class=\"edge\"&gt;\n&lt;title&gt;4d8cfd8c4a204392b581231c5cb895e6&amp;#45;&amp;#45;763228185ef14c2e823757ef912bee07&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22667.87,-114C22669.59,-114 22704.48,-114 22730.68,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 763228185ef14c2e823757ef912bee07&amp;#45;&amp;#45;b86498cee2b948d7a28c998a81c0c0ff --&gt;\n&lt;g id=\"edge2039\" class=\"edge\"&gt;\n&lt;title&gt;763228185ef14c2e823757ef912bee07&amp;#45;&amp;#45;b86498cee2b948d7a28c998a81c0c0ff&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22760.4,-143.65C22760.4,-154.2 22760.4,-164.76 22760.4,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- e71b3d9418b04246ae942944d7477927 --&gt;\n&lt;g id=\"node1617\" class=\"node\"&gt;\n&lt;title&gt;e71b3d9418b04246ae942944d7477927&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"22854\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 763228185ef14c2e823757ef912bee07&amp;#45;&amp;#45;e71b3d9418b04246ae942944d7477927 --&gt;\n&lt;g id=\"edge1610\" class=\"edge\"&gt;\n&lt;title&gt;763228185ef14c2e823757ef912bee07&amp;#45;&amp;#45;e71b3d9418b04246ae942944d7477927&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22789.88,-114C22809.84,-114 22834.94,-114 22846.56,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6a2adc3875bc421f8f52fbd85931f4ec --&gt;\n&lt;g id=\"node1618\" class=\"node\"&gt;\n&lt;title&gt;6a2adc3875bc421f8f52fbd85931f4ec&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23007.12,-114.72 23005.68,-114.72 23005.68,-113.28 23007.12,-113.28 23007.12,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e71b3d9418b04246ae942944d7477927&amp;#45;&amp;#45;6a2adc3875bc421f8f52fbd85931f4ec --&gt;\n&lt;g id=\"edge1611\" class=\"edge\"&gt;\n&lt;title&gt;e71b3d9418b04246ae942944d7477927&amp;#45;&amp;#45;6a2adc3875bc421f8f52fbd85931f4ec&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22861.46,-114C22889.8,-114 23001.82,-114 23005.32,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5f7ee32ddb624d249ed982a690345702 --&gt;\n&lt;g id=\"node1619\" class=\"node\"&gt;\n&lt;title&gt;5f7ee32ddb624d249ed982a690345702&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"23158.8\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6a2adc3875bc421f8f52fbd85931f4ec&amp;#45;&amp;#45;5f7ee32ddb624d249ed982a690345702 --&gt;\n&lt;g id=\"edge1612\" class=\"edge\"&gt;\n&lt;title&gt;6a2adc3875bc421f8f52fbd85931f4ec&amp;#45;&amp;#45;5f7ee32ddb624d249ed982a690345702&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23007.51,-114C23011.48,-114 23122.57,-114 23151.15,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ed707e40a5cb41d0b3d4d14d3c79054c --&gt;\n&lt;g id=\"node1620\" class=\"node\"&gt;\n&lt;title&gt;ed707e40a5cb41d0b3d4d14d3c79054c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M23269.2,-142.8C23269.2,-142.8 23235.6,-142.8 23235.6,-142.8 23229.6,-142.8 23223.6,-136.8 23223.6,-130.8 23223.6,-130.8 23223.6,-97.2 23223.6,-97.2 23223.6,-91.2 23229.6,-85.2 23235.6,-85.2 23235.6,-85.2 23269.2,-85.2 23269.2,-85.2 23275.2,-85.2 23281.2,-91.2 23281.2,-97.2 23281.2,-97.2 23281.2,-130.8 23281.2,-130.8 23281.2,-136.8 23275.2,-142.8 23269.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"23252.4\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5f7ee32ddb624d249ed982a690345702&amp;#45;&amp;#45;ed707e40a5cb41d0b3d4d14d3c79054c --&gt;\n&lt;g id=\"edge1613\" class=\"edge\"&gt;\n&lt;title&gt;5f7ee32ddb624d249ed982a690345702&amp;#45;&amp;#45;ed707e40a5cb41d0b3d4d14d3c79054c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23166.39,-114C23178.04,-114 23202.92,-114 23222.77,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ed707e40a5cb41d0b3d4d14d3c79054c&amp;#45;&amp;#45;84f02f749ef94488b9185a19b68ef57f --&gt;\n&lt;g id=\"edge2040\" class=\"edge\"&gt;\n&lt;title&gt;ed707e40a5cb41d0b3d4d14d3c79054c&amp;#45;&amp;#45;84f02f749ef94488b9185a19b68ef57f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23252.4,-143.65C23252.4,-154.2 23252.4,-164.76 23252.4,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8789f5185e5740f7a2eb2019f94c42be --&gt;\n&lt;g id=\"node1621\" class=\"node\"&gt;\n&lt;title&gt;8789f5185e5740f7a2eb2019f94c42be&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23346.72,-114.72 23345.28,-114.72 23345.28,-113.28 23346.72,-113.28 23346.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ed707e40a5cb41d0b3d4d14d3c79054c&amp;#45;&amp;#45;8789f5185e5740f7a2eb2019f94c42be --&gt;\n&lt;g id=\"edge1614\" class=\"edge\"&gt;\n&lt;title&gt;ed707e40a5cb41d0b3d4d14d3c79054c&amp;#45;&amp;#45;8789f5185e5740f7a2eb2019f94c42be&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23281.88,-114C23307.93,-114 23342.74,-114 23344.9,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- e24403102f66414e8e4c819f787f3d04 --&gt;\n&lt;g id=\"node1622\" class=\"node\"&gt;\n&lt;title&gt;e24403102f66414e8e4c819f787f3d04&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23440.32,-114.72 23438.88,-114.72 23438.88,-113.28 23440.32,-113.28 23440.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8789f5185e5740f7a2eb2019f94c42be&amp;#45;&amp;#45;e24403102f66414e8e4c819f787f3d04 --&gt;\n&lt;g id=\"edge1615\" class=\"edge\"&gt;\n&lt;title&gt;8789f5185e5740f7a2eb2019f94c42be&amp;#45;&amp;#45;e24403102f66414e8e4c819f787f3d04&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23347.07,-114C23349.8,-114 23435.85,-114 23438.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b8fdf2385cf4cbf8ebf8546e2b7690e --&gt;\n&lt;g id=\"node1623\" class=\"node\"&gt;\n&lt;title&gt;6b8fdf2385cf4cbf8ebf8546e2b7690e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23533.92,-114.72 23532.48,-114.72 23532.48,-113.28 23533.92,-113.28 23533.92,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e24403102f66414e8e4c819f787f3d04&amp;#45;&amp;#45;6b8fdf2385cf4cbf8ebf8546e2b7690e --&gt;\n&lt;g id=\"edge1616\" class=\"edge\"&gt;\n&lt;title&gt;e24403102f66414e8e4c819f787f3d04&amp;#45;&amp;#45;6b8fdf2385cf4cbf8ebf8546e2b7690e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23440.67,-114C23443.4,-114 23529.45,-114 23532.14,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3c4e7091d58248d3ad3845ce0e455519 --&gt;\n&lt;g id=\"node1624\" class=\"node\"&gt;\n&lt;title&gt;3c4e7091d58248d3ad3845ce0e455519&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23686.32,-114.72 23684.88,-114.72 23684.88,-113.28 23686.32,-113.28 23686.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b8fdf2385cf4cbf8ebf8546e2b7690e&amp;#45;&amp;#45;3c4e7091d58248d3ad3845ce0e455519 --&gt;\n&lt;g id=\"edge1617\" class=\"edge\"&gt;\n&lt;title&gt;6b8fdf2385cf4cbf8ebf8546e2b7690e&amp;#45;&amp;#45;3c4e7091d58248d3ad3845ce0e455519&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23534.31,-114C23538.79,-114 23680.08,-114 23684.49,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- a21985b6f81e43e9ab5386fe0cde4629 --&gt;\n&lt;g id=\"node1625\" class=\"node\"&gt;\n&lt;title&gt;a21985b6f81e43e9ab5386fe0cde4629&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23838.72,-114.72 23837.28,-114.72 23837.28,-113.28 23838.72,-113.28 23838.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3c4e7091d58248d3ad3845ce0e455519&amp;#45;&amp;#45;a21985b6f81e43e9ab5386fe0cde4629 --&gt;\n&lt;g id=\"edge1618\" class=\"edge\"&gt;\n&lt;title&gt;3c4e7091d58248d3ad3845ce0e455519&amp;#45;&amp;#45;a21985b6f81e43e9ab5386fe0cde4629&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23686.71,-114C23691.19,-114 23832.48,-114 23836.89,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 64c1db6495a746389035dc2646f610e0 --&gt;\n&lt;g id=\"node1626\" class=\"node\"&gt;\n&lt;title&gt;64c1db6495a746389035dc2646f610e0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23932.32,-114.72 23930.88,-114.72 23930.88,-113.28 23932.32,-113.28 23932.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a21985b6f81e43e9ab5386fe0cde4629&amp;#45;&amp;#45;64c1db6495a746389035dc2646f610e0 --&gt;\n&lt;g id=\"edge1619\" class=\"edge\"&gt;\n&lt;title&gt;a21985b6f81e43e9ab5386fe0cde4629&amp;#45;&amp;#45;64c1db6495a746389035dc2646f610e0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23839.07,-114C23841.8,-114 23927.85,-114 23930.54,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9819d42bc2f40e0aa2440f53cfbf601 --&gt;\n&lt;g id=\"node1627\" class=\"node\"&gt;\n&lt;title&gt;c9819d42bc2f40e0aa2440f53cfbf601&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M24042,-142.8C24042,-142.8 24008.4,-142.8 24008.4,-142.8 24002.4,-142.8 23996.4,-136.8 23996.4,-130.8 23996.4,-130.8 23996.4,-97.2 23996.4,-97.2 23996.4,-91.2 24002.4,-85.2 24008.4,-85.2 24008.4,-85.2 24042,-85.2 24042,-85.2 24048,-85.2 24054,-91.2 24054,-97.2 24054,-97.2 24054,-130.8 24054,-130.8 24054,-136.8 24048,-142.8 24042,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"24025.2\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 64c1db6495a746389035dc2646f610e0&amp;#45;&amp;#45;c9819d42bc2f40e0aa2440f53cfbf601 --&gt;\n&lt;g id=\"edge1620\" class=\"edge\"&gt;\n&lt;title&gt;64c1db6495a746389035dc2646f610e0&amp;#45;&amp;#45;c9819d42bc2f40e0aa2440f53cfbf601&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23932.67,-114C23934.39,-114 23969.28,-114 23995.48,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- c9819d42bc2f40e0aa2440f53cfbf601&amp;#45;&amp;#45;8925194854e144999298327f7f53336e --&gt;\n&lt;g id=\"edge2041\" class=\"edge\"&gt;\n&lt;title&gt;c9819d42bc2f40e0aa2440f53cfbf601&amp;#45;&amp;#45;8925194854e144999298327f7f53336e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24025.2,-143.65C24025.2,-154.2 24025.2,-164.76 24025.2,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2fff336b529a45b4991d470216d4239c --&gt;\n&lt;g id=\"node1628\" class=\"node\"&gt;\n&lt;title&gt;2fff336b529a45b4991d470216d4239c&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M24253.2,-142.8C24253.2,-142.8 24102,-142.8 24102,-142.8 24096,-142.8 24090,-136.8 24090,-130.8 24090,-130.8 24090,-97.2 24090,-97.2 24090,-91.2 24096,-85.2 24102,-85.2 24102,-85.2 24253.2,-85.2 24253.2,-85.2 24259.2,-85.2 24265.2,-91.2 24265.2,-97.2 24265.2,-97.2 24265.2,-130.8 24265.2,-130.8 24265.2,-136.8 24259.2,-142.8 24253.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"24177.6\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- c9819d42bc2f40e0aa2440f53cfbf601&amp;#45;&amp;#45;2fff336b529a45b4991d470216d4239c --&gt;\n&lt;g id=\"edge1621\" class=\"edge\"&gt;\n&lt;title&gt;c9819d42bc2f40e0aa2440f53cfbf601&amp;#45;&amp;#45;2fff336b529a45b4991d470216d4239c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24054.84,-114C24064.9,-114 24076.79,-114 24089.13,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- da578213efe84fbe8c8cfc37f2957c1e --&gt;\n&lt;g id=\"node1629\" class=\"node\"&gt;\n&lt;title&gt;da578213efe84fbe8c8cfc37f2957c1e&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M24346.8,-142.8C24346.8,-142.8 24313.2,-142.8 24313.2,-142.8 24307.2,-142.8 24301.2,-136.8 24301.2,-130.8 24301.2,-130.8 24301.2,-97.2 24301.2,-97.2 24301.2,-91.2 24307.2,-85.2 24313.2,-85.2 24313.2,-85.2 24346.8,-85.2 24346.8,-85.2 24352.8,-85.2 24358.8,-91.2 24358.8,-97.2 24358.8,-97.2 24358.8,-130.8 24358.8,-130.8 24358.8,-136.8 24352.8,-142.8 24346.8,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"24330\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2fff336b529a45b4991d470216d4239c&amp;#45;&amp;#45;da578213efe84fbe8c8cfc37f2957c1e --&gt;\n&lt;g id=\"edge1622\" class=\"edge\"&gt;\n&lt;title&gt;2fff336b529a45b4991d470216d4239c&amp;#45;&amp;#45;da578213efe84fbe8c8cfc37f2957c1e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24266.09,-114C24278.37,-114 24290.2,-114 24300.22,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- da578213efe84fbe8c8cfc37f2957c1e&amp;#45;&amp;#45;cc94c4004a724e9b93de3bbacc54497c --&gt;\n&lt;g id=\"edge2042\" class=\"edge\"&gt;\n&lt;title&gt;da578213efe84fbe8c8cfc37f2957c1e&amp;#45;&amp;#45;cc94c4004a724e9b93de3bbacc54497c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24330,-143.65C24330,-154.2 24330,-164.76 24330,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- a051492117da4ba9a9303c895c35212a --&gt;\n&lt;g id=\"node1630\" class=\"node\"&gt;\n&lt;title&gt;a051492117da4ba9a9303c895c35212a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24424.32,-114.72 24422.88,-114.72 24422.88,-113.28 24424.32,-113.28 24424.32,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da578213efe84fbe8c8cfc37f2957c1e&amp;#45;&amp;#45;a051492117da4ba9a9303c895c35212a --&gt;\n&lt;g id=\"edge1623\" class=\"edge\"&gt;\n&lt;title&gt;da578213efe84fbe8c8cfc37f2957c1e&amp;#45;&amp;#45;a051492117da4ba9a9303c895c35212a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24359.48,-114C24385.53,-114 24420.34,-114 24422.5,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ef2953632f184d08834a2ec4dd77d6fb --&gt;\n&lt;g id=\"node1631\" class=\"node\"&gt;\n&lt;title&gt;ef2953632f184d08834a2ec4dd77d6fb&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M24534,-142.8C24534,-142.8 24500.4,-142.8 24500.4,-142.8 24494.4,-142.8 24488.4,-136.8 24488.4,-130.8 24488.4,-130.8 24488.4,-97.2 24488.4,-97.2 24488.4,-91.2 24494.4,-85.2 24500.4,-85.2 24500.4,-85.2 24534,-85.2 24534,-85.2 24540,-85.2 24546,-91.2 24546,-97.2 24546,-97.2 24546,-130.8 24546,-130.8 24546,-136.8 24540,-142.8 24534,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"24517.2\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- a051492117da4ba9a9303c895c35212a&amp;#45;&amp;#45;ef2953632f184d08834a2ec4dd77d6fb --&gt;\n&lt;g id=\"edge1624\" class=\"edge\"&gt;\n&lt;title&gt;a051492117da4ba9a9303c895c35212a&amp;#45;&amp;#45;ef2953632f184d08834a2ec4dd77d6fb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24424.67,-114C24426.39,-114 24461.28,-114 24487.48,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- ef2953632f184d08834a2ec4dd77d6fb&amp;#45;&amp;#45;8de83b5b232944f092e8e1fb6b5fd060 --&gt;\n&lt;g id=\"edge2043\" class=\"edge\"&gt;\n&lt;title&gt;ef2953632f184d08834a2ec4dd77d6fb&amp;#45;&amp;#45;8de83b5b232944f092e8e1fb6b5fd060&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24517.2,-143.65C24517.2,-154.2 24517.2,-164.76 24517.2,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 181353c6d21c401e846224642fa68421 --&gt;\n&lt;g id=\"node1632\" class=\"node\"&gt;\n&lt;title&gt;181353c6d21c401e846224642fa68421&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M24745.2,-142.8C24745.2,-142.8 24594,-142.8 24594,-142.8 24588,-142.8 24582,-136.8 24582,-130.8 24582,-130.8 24582,-97.2 24582,-97.2 24582,-91.2 24588,-85.2 24594,-85.2 24594,-85.2 24745.2,-85.2 24745.2,-85.2 24751.2,-85.2 24757.2,-91.2 24757.2,-97.2 24757.2,-97.2 24757.2,-130.8 24757.2,-130.8 24757.2,-136.8 24751.2,-142.8 24745.2,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"24669.6\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- ef2953632f184d08834a2ec4dd77d6fb&amp;#45;&amp;#45;181353c6d21c401e846224642fa68421 --&gt;\n&lt;g id=\"edge1625\" class=\"edge\"&gt;\n&lt;title&gt;ef2953632f184d08834a2ec4dd77d6fb&amp;#45;&amp;#45;181353c6d21c401e846224642fa68421&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24546.84,-114C24556.9,-114 24568.79,-114 24581.13,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3b22e79122864c39834f9425d496de19 --&gt;\n&lt;g id=\"node1633\" class=\"node\"&gt;\n&lt;title&gt;3b22e79122864c39834f9425d496de19&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M24838.8,-142.8C24838.8,-142.8 24805.2,-142.8 24805.2,-142.8 24799.2,-142.8 24793.2,-136.8 24793.2,-130.8 24793.2,-130.8 24793.2,-97.2 24793.2,-97.2 24793.2,-91.2 24799.2,-85.2 24805.2,-85.2 24805.2,-85.2 24838.8,-85.2 24838.8,-85.2 24844.8,-85.2 24850.8,-91.2 24850.8,-97.2 24850.8,-97.2 24850.8,-130.8 24850.8,-130.8 24850.8,-136.8 24844.8,-142.8 24838.8,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"24822\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 181353c6d21c401e846224642fa68421&amp;#45;&amp;#45;3b22e79122864c39834f9425d496de19 --&gt;\n&lt;g id=\"edge1626\" class=\"edge\"&gt;\n&lt;title&gt;181353c6d21c401e846224642fa68421&amp;#45;&amp;#45;3b22e79122864c39834f9425d496de19&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24758.09,-114C24770.37,-114 24782.2,-114 24792.22,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3b22e79122864c39834f9425d496de19&amp;#45;&amp;#45;0585b51aa4bc4a5cbd9e59b38da6f09f --&gt;\n&lt;g id=\"edge2044\" class=\"edge\"&gt;\n&lt;title&gt;3b22e79122864c39834f9425d496de19&amp;#45;&amp;#45;0585b51aa4bc4a5cbd9e59b38da6f09f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24822,-143.65C24822,-154.2 24822,-164.76 24822,-175.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- d843cd1e15c64522a8b224b29fc7ad17 --&gt;\n&lt;g id=\"node1634\" class=\"node\"&gt;\n&lt;title&gt;d843cd1e15c64522a8b224b29fc7ad17&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"24915.6\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3b22e79122864c39834f9425d496de19&amp;#45;&amp;#45;d843cd1e15c64522a8b224b29fc7ad17 --&gt;\n&lt;g id=\"edge1627\" class=\"edge\"&gt;\n&lt;title&gt;3b22e79122864c39834f9425d496de19&amp;#45;&amp;#45;d843cd1e15c64522a8b224b29fc7ad17&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24851.48,-114C24871.44,-114 24896.54,-114 24908.16,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 95ad3f236e3d4087b9ce91d3497f7fe8 --&gt;\n&lt;g id=\"node1635\" class=\"node\"&gt;\n&lt;title&gt;95ad3f236e3d4087b9ce91d3497f7fe8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"25068.72,-114.72 25067.28,-114.72 25067.28,-113.28 25068.72,-113.28 25068.72,-114.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d843cd1e15c64522a8b224b29fc7ad17&amp;#45;&amp;#45;95ad3f236e3d4087b9ce91d3497f7fe8 --&gt;\n&lt;g id=\"edge1628\" class=\"edge\"&gt;\n&lt;title&gt;d843cd1e15c64522a8b224b29fc7ad17&amp;#45;&amp;#45;95ad3f236e3d4087b9ce91d3497f7fe8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24923.06,-114C24951.4,-114 25063.42,-114 25066.92,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- b2eb048608714a93a5e0c404f5aa614d --&gt;\n&lt;g id=\"node1636\" class=\"node\"&gt;\n&lt;title&gt;b2eb048608714a93a5e0c404f5aa614d&lt;/title&gt;\n&lt;ellipse fill=\"black\" stroke=\"black\" cx=\"25220.4\" cy=\"-114\" rx=\"7.2\" ry=\"7.2\"/&gt;\n&lt;/g&gt;\n&lt;!-- 95ad3f236e3d4087b9ce91d3497f7fe8&amp;#45;&amp;#45;b2eb048608714a93a5e0c404f5aa614d --&gt;\n&lt;g id=\"edge1629\" class=\"edge\"&gt;\n&lt;title&gt;95ad3f236e3d4087b9ce91d3497f7fe8&amp;#45;&amp;#45;b2eb048608714a93a5e0c404f5aa614d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25069.11,-114C25073.08,-114 25184.17,-114 25212.75,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4470995f9d394649a78be43f9930e0a8 --&gt;\n&lt;g id=\"node1637\" class=\"node\"&gt;\n&lt;title&gt;4470995f9d394649a78be43f9930e0a8&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M25400.4,-142.8C25400.4,-142.8 25297.2,-142.8 25297.2,-142.8 25291.2,-142.8 25285.2,-136.8 25285.2,-130.8 25285.2,-130.8 25285.2,-97.2 25285.2,-97.2 25285.2,-91.2 25291.2,-85.2 25297.2,-85.2 25297.2,-85.2 25400.4,-85.2 25400.4,-85.2 25406.4,-85.2 25412.4,-91.2 25412.4,-97.2 25412.4,-97.2 25412.4,-130.8 25412.4,-130.8 25412.4,-136.8 25406.4,-142.8 25400.4,-142.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"25348.8\" y=\"-108.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b16)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- b2eb048608714a93a5e0c404f5aa614d&amp;#45;&amp;#45;4470995f9d394649a78be43f9930e0a8 --&gt;\n&lt;g id=\"edge1630\" class=\"edge\"&gt;\n&lt;title&gt;b2eb048608714a93a5e0c404f5aa614d&amp;#45;&amp;#45;4470995f9d394649a78be43f9930e0a8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25227.84,-114C25238.66,-114 25261.54,-114 25284.45,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4470995f9d394649a78be43f9930e0a8&amp;#45;&amp;#45;93d6870fb6194899bd408557f81b6712 --&gt;\n&lt;g id=\"edge1631\" class=\"edge\"&gt;\n&lt;title&gt;4470995f9d394649a78be43f9930e0a8&amp;#45;&amp;#45;93d6870fb6194899bd408557f81b6712&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25413.2,-114C25425.7,-114 25438.15,-114 25448.52,-114\"/&gt;\n&lt;/g&gt;\n&lt;!-- f0a75d5a5eba4c5f80f8f958b3dddc87 --&gt;\n&lt;g id=\"node1872\" class=\"node\"&gt;\n&lt;title&gt;f0a75d5a5eba4c5f80f8f958b3dddc87&lt;/title&gt;\n&lt;/g&gt;\n&lt;!-- 93d6870fb6194899bd408557f81b6712&amp;#45;&amp;#45;f0a75d5a5eba4c5f80f8f958b3dddc87 --&gt;\n&lt;!-- 069e166ee39d40a6a12d31494d302b95 --&gt;\n&lt;g id=\"node1640\" class=\"node\"&gt;\n&lt;title&gt;069e166ee39d40a6a12d31494d302b95&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"119.52,-67.72 118.08,-67.72 118.08,-66.28 119.52,-66.28 119.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2b8eeba143c348efbc2431a0c6576458&amp;#45;&amp;#45;069e166ee39d40a6a12d31494d302b95 --&gt;\n&lt;g id=\"edge1632\" class=\"edge\"&gt;\n&lt;title&gt;2b8eeba143c348efbc2431a0c6576458&amp;#45;&amp;#45;069e166ee39d40a6a12d31494d302b95&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M53.97,-67C79.67,-67 115.48,-67 117.69,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6671ce95a29d4284b903742c1b6dc4e1 --&gt;\n&lt;g id=\"node1641\" class=\"node\"&gt;\n&lt;title&gt;6671ce95a29d4284b903742c1b6dc4e1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"213.12,-67.72 211.68,-67.72 211.68,-66.28 213.12,-66.28 213.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 069e166ee39d40a6a12d31494d302b95&amp;#45;&amp;#45;6671ce95a29d4284b903742c1b6dc4e1 --&gt;\n&lt;g id=\"edge1633\" class=\"edge\"&gt;\n&lt;title&gt;069e166ee39d40a6a12d31494d302b95&amp;#45;&amp;#45;6671ce95a29d4284b903742c1b6dc4e1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M119.87,-67C122.6,-67 208.65,-67 211.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e3990db5b054aeebd9ec9a5b8143e07 --&gt;\n&lt;g id=\"node1642\" class=\"node\"&gt;\n&lt;title&gt;9e3990db5b054aeebd9ec9a5b8143e07&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"306.72,-67.72 305.28,-67.72 305.28,-66.28 306.72,-66.28 306.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6671ce95a29d4284b903742c1b6dc4e1&amp;#45;&amp;#45;9e3990db5b054aeebd9ec9a5b8143e07 --&gt;\n&lt;g id=\"edge1634\" class=\"edge\"&gt;\n&lt;title&gt;6671ce95a29d4284b903742c1b6dc4e1&amp;#45;&amp;#45;9e3990db5b054aeebd9ec9a5b8143e07&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M213.47,-67C216.2,-67 302.25,-67 304.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- b4c56a55ae4d493f894cd8a83476313e --&gt;\n&lt;g id=\"node1643\" class=\"node\"&gt;\n&lt;title&gt;b4c56a55ae4d493f894cd8a83476313e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"400.32,-67.72 398.88,-67.72 398.88,-66.28 400.32,-66.28 400.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e3990db5b054aeebd9ec9a5b8143e07&amp;#45;&amp;#45;b4c56a55ae4d493f894cd8a83476313e --&gt;\n&lt;g id=\"edge1635\" class=\"edge\"&gt;\n&lt;title&gt;9e3990db5b054aeebd9ec9a5b8143e07&amp;#45;&amp;#45;b4c56a55ae4d493f894cd8a83476313e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M307.07,-67C309.8,-67 395.85,-67 398.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 43a1ded7804c4ed99f5a79170de8128b --&gt;\n&lt;g id=\"node1644\" class=\"node\"&gt;\n&lt;title&gt;43a1ded7804c4ed99f5a79170de8128b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"493.92,-67.72 492.48,-67.72 492.48,-66.28 493.92,-66.28 493.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b4c56a55ae4d493f894cd8a83476313e&amp;#45;&amp;#45;43a1ded7804c4ed99f5a79170de8128b --&gt;\n&lt;g id=\"edge1636\" class=\"edge\"&gt;\n&lt;title&gt;b4c56a55ae4d493f894cd8a83476313e&amp;#45;&amp;#45;43a1ded7804c4ed99f5a79170de8128b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M400.67,-67C403.4,-67 489.45,-67 492.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8fcb6efe466b485899f23b91a7c6fb04 --&gt;\n&lt;g id=\"node1645\" class=\"node\"&gt;\n&lt;title&gt;8fcb6efe466b485899f23b91a7c6fb04&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"587.52,-67.72 586.08,-67.72 586.08,-66.28 587.52,-66.28 587.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 43a1ded7804c4ed99f5a79170de8128b&amp;#45;&amp;#45;8fcb6efe466b485899f23b91a7c6fb04 --&gt;\n&lt;g id=\"edge1637\" class=\"edge\"&gt;\n&lt;title&gt;43a1ded7804c4ed99f5a79170de8128b&amp;#45;&amp;#45;8fcb6efe466b485899f23b91a7c6fb04&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M494.27,-67C497,-67 583.05,-67 585.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1a141b1b27f443b8a540a92612b43cad --&gt;\n&lt;g id=\"node1646\" class=\"node\"&gt;\n&lt;title&gt;1a141b1b27f443b8a540a92612b43cad&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M697.2,-95.8C697.2,-95.8 663.6,-95.8 663.6,-95.8 657.6,-95.8 651.6,-89.8 651.6,-83.8 651.6,-83.8 651.6,-50.2 651.6,-50.2 651.6,-44.2 657.6,-38.2 663.6,-38.2 663.6,-38.2 697.2,-38.2 697.2,-38.2 703.2,-38.2 709.2,-44.2 709.2,-50.2 709.2,-50.2 709.2,-83.8 709.2,-83.8 709.2,-89.8 703.2,-95.8 697.2,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"680.4\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 8fcb6efe466b485899f23b91a7c6fb04&amp;#45;&amp;#45;1a141b1b27f443b8a540a92612b43cad --&gt;\n&lt;g id=\"edge1638\" class=\"edge\"&gt;\n&lt;title&gt;8fcb6efe466b485899f23b91a7c6fb04&amp;#45;&amp;#45;1a141b1b27f443b8a540a92612b43cad&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M587.87,-67C589.59,-67 624.48,-67 650.68,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1a141b1b27f443b8a540a92612b43cad&amp;#45;&amp;#45;9b0aeae922f94e91a442ffb84017d3ba --&gt;\n&lt;g id=\"edge2045\" class=\"edge\"&gt;\n&lt;title&gt;1a141b1b27f443b8a540a92612b43cad&amp;#45;&amp;#45;9b0aeae922f94e91a442ffb84017d3ba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M680.4,-96.74C680.4,-99.98 680.4,-103.21 680.4,-106.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 69477d2c175b4425853b023e538d9bef --&gt;\n&lt;g id=\"node1647\" class=\"node\"&gt;\n&lt;title&gt;69477d2c175b4425853b023e538d9bef&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M896.4,-95.8C896.4,-95.8 757.2,-95.8 757.2,-95.8 751.2,-95.8 745.2,-89.8 745.2,-83.8 745.2,-83.8 745.2,-50.2 745.2,-50.2 745.2,-44.2 751.2,-38.2 757.2,-38.2 757.2,-38.2 896.4,-38.2 896.4,-38.2 902.4,-38.2 908.4,-44.2 908.4,-50.2 908.4,-50.2 908.4,-83.8 908.4,-83.8 908.4,-89.8 902.4,-95.8 896.4,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"826.8\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 1a141b1b27f443b8a540a92612b43cad&amp;#45;&amp;#45;69477d2c175b4425853b023e538d9bef --&gt;\n&lt;g id=\"edge1639\" class=\"edge\"&gt;\n&lt;title&gt;1a141b1b27f443b8a540a92612b43cad&amp;#45;&amp;#45;69477d2c175b4425853b023e538d9bef&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M709.93,-67C720.04,-67 731.98,-67 744.28,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- da6b3b48c844443aa564f9a13d84a762 --&gt;\n&lt;g id=\"node1648\" class=\"node\"&gt;\n&lt;title&gt;da6b3b48c844443aa564f9a13d84a762&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M990,-95.8C990,-95.8 956.4,-95.8 956.4,-95.8 950.4,-95.8 944.4,-89.8 944.4,-83.8 944.4,-83.8 944.4,-50.2 944.4,-50.2 944.4,-44.2 950.4,-38.2 956.4,-38.2 956.4,-38.2 990,-38.2 990,-38.2 996,-38.2 1002,-44.2 1002,-50.2 1002,-50.2 1002,-83.8 1002,-83.8 1002,-89.8 996,-95.8 990,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"973.2\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 69477d2c175b4425853b023e538d9bef&amp;#45;&amp;#45;da6b3b48c844443aa564f9a13d84a762 --&gt;\n&lt;g id=\"edge1640\" class=\"edge\"&gt;\n&lt;title&gt;69477d2c175b4425853b023e538d9bef&amp;#45;&amp;#45;da6b3b48c844443aa564f9a13d84a762&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M909.28,-67C921.57,-67 933.49,-67 943.58,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- da6b3b48c844443aa564f9a13d84a762&amp;#45;&amp;#45;506bb15c03c24962b22ed25ee7cec69a --&gt;\n&lt;g id=\"edge2046\" class=\"edge\"&gt;\n&lt;title&gt;da6b3b48c844443aa564f9a13d84a762&amp;#45;&amp;#45;506bb15c03c24962b22ed25ee7cec69a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M973.2,-96.74C973.2,-99.98 973.2,-103.21 973.2,-106.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- d8d9b78ede864f268396628e999851c5 --&gt;\n&lt;g id=\"node1649\" class=\"node\"&gt;\n&lt;title&gt;d8d9b78ede864f268396628e999851c5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1067.52,-67.72 1066.08,-67.72 1066.08,-66.28 1067.52,-66.28 1067.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- da6b3b48c844443aa564f9a13d84a762&amp;#45;&amp;#45;d8d9b78ede864f268396628e999851c5 --&gt;\n&lt;g id=\"edge1641\" class=\"edge\"&gt;\n&lt;title&gt;da6b3b48c844443aa564f9a13d84a762&amp;#45;&amp;#45;d8d9b78ede864f268396628e999851c5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1002.68,-67C1028.73,-67 1063.54,-67 1065.7,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- a4104b35f6d3434e88e594ab98d99a2f --&gt;\n&lt;g id=\"node1650\" class=\"node\"&gt;\n&lt;title&gt;a4104b35f6d3434e88e594ab98d99a2f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1161.12,-67.72 1159.68,-67.72 1159.68,-66.28 1161.12,-66.28 1161.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d8d9b78ede864f268396628e999851c5&amp;#45;&amp;#45;a4104b35f6d3434e88e594ab98d99a2f --&gt;\n&lt;g id=\"edge1642\" class=\"edge\"&gt;\n&lt;title&gt;d8d9b78ede864f268396628e999851c5&amp;#45;&amp;#45;a4104b35f6d3434e88e594ab98d99a2f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1067.87,-67C1070.6,-67 1156.65,-67 1159.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0baab9ad36e940bd888dcf3e72311e9b --&gt;\n&lt;g id=\"node1651\" class=\"node\"&gt;\n&lt;title&gt;0baab9ad36e940bd888dcf3e72311e9b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1254.72,-67.72 1253.28,-67.72 1253.28,-66.28 1254.72,-66.28 1254.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a4104b35f6d3434e88e594ab98d99a2f&amp;#45;&amp;#45;0baab9ad36e940bd888dcf3e72311e9b --&gt;\n&lt;g id=\"edge1643\" class=\"edge\"&gt;\n&lt;title&gt;a4104b35f6d3434e88e594ab98d99a2f&amp;#45;&amp;#45;0baab9ad36e940bd888dcf3e72311e9b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1161.47,-67C1164.2,-67 1250.25,-67 1252.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- dada9e51fd1f4b69a91c51921cfb7fae --&gt;\n&lt;g id=\"node1652\" class=\"node\"&gt;\n&lt;title&gt;dada9e51fd1f4b69a91c51921cfb7fae&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1348.32,-67.72 1346.88,-67.72 1346.88,-66.28 1348.32,-66.28 1348.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0baab9ad36e940bd888dcf3e72311e9b&amp;#45;&amp;#45;dada9e51fd1f4b69a91c51921cfb7fae --&gt;\n&lt;g id=\"edge1644\" class=\"edge\"&gt;\n&lt;title&gt;0baab9ad36e940bd888dcf3e72311e9b&amp;#45;&amp;#45;dada9e51fd1f4b69a91c51921cfb7fae&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1255.07,-67C1257.8,-67 1343.85,-67 1346.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- d08e1cbc95d54726ba3eee1af1e866a4 --&gt;\n&lt;g id=\"node1653\" class=\"node\"&gt;\n&lt;title&gt;d08e1cbc95d54726ba3eee1af1e866a4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1441.92,-67.72 1440.48,-67.72 1440.48,-66.28 1441.92,-66.28 1441.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dada9e51fd1f4b69a91c51921cfb7fae&amp;#45;&amp;#45;d08e1cbc95d54726ba3eee1af1e866a4 --&gt;\n&lt;g id=\"edge1645\" class=\"edge\"&gt;\n&lt;title&gt;dada9e51fd1f4b69a91c51921cfb7fae&amp;#45;&amp;#45;d08e1cbc95d54726ba3eee1af1e866a4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1348.67,-67C1351.4,-67 1437.45,-67 1440.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8e1c739dabae4b5a96e759de3576d078 --&gt;\n&lt;g id=\"node1654\" class=\"node\"&gt;\n&lt;title&gt;8e1c739dabae4b5a96e759de3576d078&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1535.52,-67.72 1534.08,-67.72 1534.08,-66.28 1535.52,-66.28 1535.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d08e1cbc95d54726ba3eee1af1e866a4&amp;#45;&amp;#45;8e1c739dabae4b5a96e759de3576d078 --&gt;\n&lt;g id=\"edge1646\" class=\"edge\"&gt;\n&lt;title&gt;d08e1cbc95d54726ba3eee1af1e866a4&amp;#45;&amp;#45;8e1c739dabae4b5a96e759de3576d078&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1442.27,-67C1445,-67 1531.05,-67 1533.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 48ad2d87afca49e990cbf3f1507341aa --&gt;\n&lt;g id=\"node1655\" class=\"node\"&gt;\n&lt;title&gt;48ad2d87afca49e990cbf3f1507341aa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1629.12,-67.72 1627.68,-67.72 1627.68,-66.28 1629.12,-66.28 1629.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8e1c739dabae4b5a96e759de3576d078&amp;#45;&amp;#45;48ad2d87afca49e990cbf3f1507341aa --&gt;\n&lt;g id=\"edge1647\" class=\"edge\"&gt;\n&lt;title&gt;8e1c739dabae4b5a96e759de3576d078&amp;#45;&amp;#45;48ad2d87afca49e990cbf3f1507341aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1535.87,-67C1538.6,-67 1624.65,-67 1627.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- bee6975e209541abbf195f11d30bb765 --&gt;\n&lt;g id=\"node1656\" class=\"node\"&gt;\n&lt;title&gt;bee6975e209541abbf195f11d30bb765&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1781.52,-67.72 1780.08,-67.72 1780.08,-66.28 1781.52,-66.28 1781.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 48ad2d87afca49e990cbf3f1507341aa&amp;#45;&amp;#45;bee6975e209541abbf195f11d30bb765 --&gt;\n&lt;g id=\"edge1648\" class=\"edge\"&gt;\n&lt;title&gt;48ad2d87afca49e990cbf3f1507341aa&amp;#45;&amp;#45;bee6975e209541abbf195f11d30bb765&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1629.51,-67C1633.99,-67 1775.28,-67 1779.69,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 54b5edbe50d74573bb28c014b6f8fbf6 --&gt;\n&lt;g id=\"node1657\" class=\"node\"&gt;\n&lt;title&gt;54b5edbe50d74573bb28c014b6f8fbf6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"1933.92,-67.72 1932.48,-67.72 1932.48,-66.28 1933.92,-66.28 1933.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bee6975e209541abbf195f11d30bb765&amp;#45;&amp;#45;54b5edbe50d74573bb28c014b6f8fbf6 --&gt;\n&lt;g id=\"edge1649\" class=\"edge\"&gt;\n&lt;title&gt;bee6975e209541abbf195f11d30bb765&amp;#45;&amp;#45;54b5edbe50d74573bb28c014b6f8fbf6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1781.91,-67C1786.39,-67 1927.68,-67 1932.09,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f932621b3114b24866a8bb007e4d4e7 --&gt;\n&lt;g id=\"node1658\" class=\"node\"&gt;\n&lt;title&gt;6f932621b3114b24866a8bb007e4d4e7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2027.52,-67.72 2026.08,-67.72 2026.08,-66.28 2027.52,-66.28 2027.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 54b5edbe50d74573bb28c014b6f8fbf6&amp;#45;&amp;#45;6f932621b3114b24866a8bb007e4d4e7 --&gt;\n&lt;g id=\"edge1650\" class=\"edge\"&gt;\n&lt;title&gt;54b5edbe50d74573bb28c014b6f8fbf6&amp;#45;&amp;#45;6f932621b3114b24866a8bb007e4d4e7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M1934.27,-67C1937,-67 2023.05,-67 2025.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2f8814c599f746e5b5fdf9bd1cba24ab --&gt;\n&lt;g id=\"node1659\" class=\"node\"&gt;\n&lt;title&gt;2f8814c599f746e5b5fdf9bd1cba24ab&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2121.12,-67.72 2119.68,-67.72 2119.68,-66.28 2121.12,-66.28 2121.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6f932621b3114b24866a8bb007e4d4e7&amp;#45;&amp;#45;2f8814c599f746e5b5fdf9bd1cba24ab --&gt;\n&lt;g id=\"edge1651\" class=\"edge\"&gt;\n&lt;title&gt;6f932621b3114b24866a8bb007e4d4e7&amp;#45;&amp;#45;2f8814c599f746e5b5fdf9bd1cba24ab&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2027.87,-67C2030.6,-67 2116.65,-67 2119.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- f559c7cfa18647fdb2e369b05214dbb4 --&gt;\n&lt;g id=\"node1660\" class=\"node\"&gt;\n&lt;title&gt;f559c7cfa18647fdb2e369b05214dbb4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2214.72,-67.72 2213.28,-67.72 2213.28,-66.28 2214.72,-66.28 2214.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2f8814c599f746e5b5fdf9bd1cba24ab&amp;#45;&amp;#45;f559c7cfa18647fdb2e369b05214dbb4 --&gt;\n&lt;g id=\"edge1652\" class=\"edge\"&gt;\n&lt;title&gt;2f8814c599f746e5b5fdf9bd1cba24ab&amp;#45;&amp;#45;f559c7cfa18647fdb2e369b05214dbb4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2121.47,-67C2124.2,-67 2210.25,-67 2212.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- e1a4a9124b1548028dc92fd1da94514b --&gt;\n&lt;g id=\"node1661\" class=\"node\"&gt;\n&lt;title&gt;e1a4a9124b1548028dc92fd1da94514b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2308.32,-67.72 2306.88,-67.72 2306.88,-66.28 2308.32,-66.28 2308.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f559c7cfa18647fdb2e369b05214dbb4&amp;#45;&amp;#45;e1a4a9124b1548028dc92fd1da94514b --&gt;\n&lt;g id=\"edge1653\" class=\"edge\"&gt;\n&lt;title&gt;f559c7cfa18647fdb2e369b05214dbb4&amp;#45;&amp;#45;e1a4a9124b1548028dc92fd1da94514b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2215.07,-67C2217.8,-67 2303.85,-67 2306.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 94b2742f6dc54784b399b57d5ef5be94 --&gt;\n&lt;g id=\"node1662\" class=\"node\"&gt;\n&lt;title&gt;94b2742f6dc54784b399b57d5ef5be94&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2401.92,-67.72 2400.48,-67.72 2400.48,-66.28 2401.92,-66.28 2401.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e1a4a9124b1548028dc92fd1da94514b&amp;#45;&amp;#45;94b2742f6dc54784b399b57d5ef5be94 --&gt;\n&lt;g id=\"edge1654\" class=\"edge\"&gt;\n&lt;title&gt;e1a4a9124b1548028dc92fd1da94514b&amp;#45;&amp;#45;94b2742f6dc54784b399b57d5ef5be94&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2308.67,-67C2311.4,-67 2397.45,-67 2400.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- a0c30e3e73784def9f11714f314cd8aa --&gt;\n&lt;g id=\"node1663\" class=\"node\"&gt;\n&lt;title&gt;a0c30e3e73784def9f11714f314cd8aa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2554.32,-67.72 2552.88,-67.72 2552.88,-66.28 2554.32,-66.28 2554.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 94b2742f6dc54784b399b57d5ef5be94&amp;#45;&amp;#45;a0c30e3e73784def9f11714f314cd8aa --&gt;\n&lt;g id=\"edge1655\" class=\"edge\"&gt;\n&lt;title&gt;94b2742f6dc54784b399b57d5ef5be94&amp;#45;&amp;#45;a0c30e3e73784def9f11714f314cd8aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2402.31,-67C2406.79,-67 2548.08,-67 2552.49,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- b7b835c169cd40278de4b8531a47cfbe --&gt;\n&lt;g id=\"node1664\" class=\"node\"&gt;\n&lt;title&gt;b7b835c169cd40278de4b8531a47cfbe&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2706.72,-67.72 2705.28,-67.72 2705.28,-66.28 2706.72,-66.28 2706.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a0c30e3e73784def9f11714f314cd8aa&amp;#45;&amp;#45;b7b835c169cd40278de4b8531a47cfbe --&gt;\n&lt;g id=\"edge1656\" class=\"edge\"&gt;\n&lt;title&gt;a0c30e3e73784def9f11714f314cd8aa&amp;#45;&amp;#45;b7b835c169cd40278de4b8531a47cfbe&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2554.71,-67C2559.19,-67 2700.48,-67 2704.89,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- dda88a76010a4758b30f9dc96d86da61 --&gt;\n&lt;g id=\"node1665\" class=\"node\"&gt;\n&lt;title&gt;dda88a76010a4758b30f9dc96d86da61&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2800.32,-67.72 2798.88,-67.72 2798.88,-66.28 2800.32,-66.28 2800.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b7b835c169cd40278de4b8531a47cfbe&amp;#45;&amp;#45;dda88a76010a4758b30f9dc96d86da61 --&gt;\n&lt;g id=\"edge1657\" class=\"edge\"&gt;\n&lt;title&gt;b7b835c169cd40278de4b8531a47cfbe&amp;#45;&amp;#45;dda88a76010a4758b30f9dc96d86da61&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2707.07,-67C2709.8,-67 2795.85,-67 2798.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5836a8e50bbb4c27b18abd521328400d --&gt;\n&lt;g id=\"node1666\" class=\"node\"&gt;\n&lt;title&gt;5836a8e50bbb4c27b18abd521328400d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2893.92,-67.72 2892.48,-67.72 2892.48,-66.28 2893.92,-66.28 2893.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- dda88a76010a4758b30f9dc96d86da61&amp;#45;&amp;#45;5836a8e50bbb4c27b18abd521328400d --&gt;\n&lt;g id=\"edge1658\" class=\"edge\"&gt;\n&lt;title&gt;dda88a76010a4758b30f9dc96d86da61&amp;#45;&amp;#45;5836a8e50bbb4c27b18abd521328400d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2800.67,-67C2803.4,-67 2889.45,-67 2892.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- fc331f1c739e4fa19f6c466c00bce0aa --&gt;\n&lt;g id=\"node1667\" class=\"node\"&gt;\n&lt;title&gt;fc331f1c739e4fa19f6c466c00bce0aa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"2987.52,-67.72 2986.08,-67.72 2986.08,-66.28 2987.52,-66.28 2987.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5836a8e50bbb4c27b18abd521328400d&amp;#45;&amp;#45;fc331f1c739e4fa19f6c466c00bce0aa --&gt;\n&lt;g id=\"edge1659\" class=\"edge\"&gt;\n&lt;title&gt;5836a8e50bbb4c27b18abd521328400d&amp;#45;&amp;#45;fc331f1c739e4fa19f6c466c00bce0aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2894.27,-67C2897,-67 2983.05,-67 2985.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- d52af3b5db11432bb81072f244f38549 --&gt;\n&lt;g id=\"node1668\" class=\"node\"&gt;\n&lt;title&gt;d52af3b5db11432bb81072f244f38549&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3081.12,-67.72 3079.68,-67.72 3079.68,-66.28 3081.12,-66.28 3081.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fc331f1c739e4fa19f6c466c00bce0aa&amp;#45;&amp;#45;d52af3b5db11432bb81072f244f38549 --&gt;\n&lt;g id=\"edge1660\" class=\"edge\"&gt;\n&lt;title&gt;fc331f1c739e4fa19f6c466c00bce0aa&amp;#45;&amp;#45;d52af3b5db11432bb81072f244f38549&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M2987.87,-67C2990.6,-67 3076.65,-67 3079.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- d037ca71baa549f99289789eec9c4b53 --&gt;\n&lt;g id=\"node1669\" class=\"node\"&gt;\n&lt;title&gt;d037ca71baa549f99289789eec9c4b53&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3174.72,-67.72 3173.28,-67.72 3173.28,-66.28 3174.72,-66.28 3174.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d52af3b5db11432bb81072f244f38549&amp;#45;&amp;#45;d037ca71baa549f99289789eec9c4b53 --&gt;\n&lt;g id=\"edge1661\" class=\"edge\"&gt;\n&lt;title&gt;d52af3b5db11432bb81072f244f38549&amp;#45;&amp;#45;d037ca71baa549f99289789eec9c4b53&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3081.47,-67C3084.2,-67 3170.25,-67 3172.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 804a3f3b5edf4743b5518b49143175b7 --&gt;\n&lt;g id=\"node1670\" class=\"node\"&gt;\n&lt;title&gt;804a3f3b5edf4743b5518b49143175b7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3268.32,-67.72 3266.88,-67.72 3266.88,-66.28 3268.32,-66.28 3268.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d037ca71baa549f99289789eec9c4b53&amp;#45;&amp;#45;804a3f3b5edf4743b5518b49143175b7 --&gt;\n&lt;g id=\"edge1662\" class=\"edge\"&gt;\n&lt;title&gt;d037ca71baa549f99289789eec9c4b53&amp;#45;&amp;#45;804a3f3b5edf4743b5518b49143175b7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3175.07,-67C3177.8,-67 3263.85,-67 3266.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- c06508b26f184803bc6355c409f9d70f --&gt;\n&lt;g id=\"node1671\" class=\"node\"&gt;\n&lt;title&gt;c06508b26f184803bc6355c409f9d70f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3361.92,-67.72 3360.48,-67.72 3360.48,-66.28 3361.92,-66.28 3361.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 804a3f3b5edf4743b5518b49143175b7&amp;#45;&amp;#45;c06508b26f184803bc6355c409f9d70f --&gt;\n&lt;g id=\"edge1663\" class=\"edge\"&gt;\n&lt;title&gt;804a3f3b5edf4743b5518b49143175b7&amp;#45;&amp;#45;c06508b26f184803bc6355c409f9d70f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3268.67,-67C3271.4,-67 3357.45,-67 3360.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b9bcbfa464745d5ac58ed17de7e6574 --&gt;\n&lt;g id=\"node1672\" class=\"node\"&gt;\n&lt;title&gt;6b9bcbfa464745d5ac58ed17de7e6574&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3514.32,-67.72 3512.88,-67.72 3512.88,-66.28 3514.32,-66.28 3514.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c06508b26f184803bc6355c409f9d70f&amp;#45;&amp;#45;6b9bcbfa464745d5ac58ed17de7e6574 --&gt;\n&lt;g id=\"edge1664\" class=\"edge\"&gt;\n&lt;title&gt;c06508b26f184803bc6355c409f9d70f&amp;#45;&amp;#45;6b9bcbfa464745d5ac58ed17de7e6574&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3362.31,-67C3366.79,-67 3508.08,-67 3512.49,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- af182db8b6444ce7a96e42f0865ede9f --&gt;\n&lt;g id=\"node1673\" class=\"node\"&gt;\n&lt;title&gt;af182db8b6444ce7a96e42f0865ede9f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3666.72,-67.72 3665.28,-67.72 3665.28,-66.28 3666.72,-66.28 3666.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6b9bcbfa464745d5ac58ed17de7e6574&amp;#45;&amp;#45;af182db8b6444ce7a96e42f0865ede9f --&gt;\n&lt;g id=\"edge1665\" class=\"edge\"&gt;\n&lt;title&gt;6b9bcbfa464745d5ac58ed17de7e6574&amp;#45;&amp;#45;af182db8b6444ce7a96e42f0865ede9f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3514.71,-67C3519.19,-67 3660.48,-67 3664.89,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- c4ae616d4e894306b732f1cb9ad48515 --&gt;\n&lt;g id=\"node1674\" class=\"node\"&gt;\n&lt;title&gt;c4ae616d4e894306b732f1cb9ad48515&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3760.32,-67.72 3758.88,-67.72 3758.88,-66.28 3760.32,-66.28 3760.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- af182db8b6444ce7a96e42f0865ede9f&amp;#45;&amp;#45;c4ae616d4e894306b732f1cb9ad48515 --&gt;\n&lt;g id=\"edge1666\" class=\"edge\"&gt;\n&lt;title&gt;af182db8b6444ce7a96e42f0865ede9f&amp;#45;&amp;#45;c4ae616d4e894306b732f1cb9ad48515&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3667.07,-67C3669.8,-67 3755.85,-67 3758.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 014614a7a82445f789493da7859c2c26 --&gt;\n&lt;g id=\"node1675\" class=\"node\"&gt;\n&lt;title&gt;014614a7a82445f789493da7859c2c26&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3853.92,-67.72 3852.48,-67.72 3852.48,-66.28 3853.92,-66.28 3853.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c4ae616d4e894306b732f1cb9ad48515&amp;#45;&amp;#45;014614a7a82445f789493da7859c2c26 --&gt;\n&lt;g id=\"edge1667\" class=\"edge\"&gt;\n&lt;title&gt;c4ae616d4e894306b732f1cb9ad48515&amp;#45;&amp;#45;014614a7a82445f789493da7859c2c26&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3760.67,-67C3763.4,-67 3849.45,-67 3852.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 56a1c886136e469a81ae40c5297b25ff --&gt;\n&lt;g id=\"node1676\" class=\"node\"&gt;\n&lt;title&gt;56a1c886136e469a81ae40c5297b25ff&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"3947.52,-67.72 3946.08,-67.72 3946.08,-66.28 3947.52,-66.28 3947.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 014614a7a82445f789493da7859c2c26&amp;#45;&amp;#45;56a1c886136e469a81ae40c5297b25ff --&gt;\n&lt;g id=\"edge1668\" class=\"edge\"&gt;\n&lt;title&gt;014614a7a82445f789493da7859c2c26&amp;#45;&amp;#45;56a1c886136e469a81ae40c5297b25ff&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3854.27,-67C3857,-67 3943.05,-67 3945.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- fa4971a3fe554c23acc8c14f64d551a9 --&gt;\n&lt;g id=\"node1677\" class=\"node\"&gt;\n&lt;title&gt;fa4971a3fe554c23acc8c14f64d551a9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4041.12,-67.72 4039.68,-67.72 4039.68,-66.28 4041.12,-66.28 4041.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 56a1c886136e469a81ae40c5297b25ff&amp;#45;&amp;#45;fa4971a3fe554c23acc8c14f64d551a9 --&gt;\n&lt;g id=\"edge1669\" class=\"edge\"&gt;\n&lt;title&gt;56a1c886136e469a81ae40c5297b25ff&amp;#45;&amp;#45;fa4971a3fe554c23acc8c14f64d551a9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M3947.87,-67C3950.6,-67 4036.65,-67 4039.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1163bbc8c4cd43b9afd00733910d2405 --&gt;\n&lt;g id=\"node1678\" class=\"node\"&gt;\n&lt;title&gt;1163bbc8c4cd43b9afd00733910d2405&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4134.72,-67.72 4133.28,-67.72 4133.28,-66.28 4134.72,-66.28 4134.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fa4971a3fe554c23acc8c14f64d551a9&amp;#45;&amp;#45;1163bbc8c4cd43b9afd00733910d2405 --&gt;\n&lt;g id=\"edge1670\" class=\"edge\"&gt;\n&lt;title&gt;fa4971a3fe554c23acc8c14f64d551a9&amp;#45;&amp;#45;1163bbc8c4cd43b9afd00733910d2405&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4041.47,-67C4044.2,-67 4130.25,-67 4132.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 05737841499748be92639f31e38f534b --&gt;\n&lt;g id=\"node1679\" class=\"node\"&gt;\n&lt;title&gt;05737841499748be92639f31e38f534b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4228.32,-67.72 4226.88,-67.72 4226.88,-66.28 4228.32,-66.28 4228.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1163bbc8c4cd43b9afd00733910d2405&amp;#45;&amp;#45;05737841499748be92639f31e38f534b --&gt;\n&lt;g id=\"edge1671\" class=\"edge\"&gt;\n&lt;title&gt;1163bbc8c4cd43b9afd00733910d2405&amp;#45;&amp;#45;05737841499748be92639f31e38f534b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4135.07,-67C4137.8,-67 4223.85,-67 4226.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8223cf35d9fc4b8db64621afbd0d7552 --&gt;\n&lt;g id=\"node1680\" class=\"node\"&gt;\n&lt;title&gt;8223cf35d9fc4b8db64621afbd0d7552&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4380.72,-67.72 4379.28,-67.72 4379.28,-66.28 4380.72,-66.28 4380.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 05737841499748be92639f31e38f534b&amp;#45;&amp;#45;8223cf35d9fc4b8db64621afbd0d7552 --&gt;\n&lt;g id=\"edge1672\" class=\"edge\"&gt;\n&lt;title&gt;05737841499748be92639f31e38f534b&amp;#45;&amp;#45;8223cf35d9fc4b8db64621afbd0d7552&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4228.71,-67C4233.19,-67 4374.48,-67 4378.89,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1cbf893967c845f9abc639904608ced3 --&gt;\n&lt;g id=\"node1681\" class=\"node\"&gt;\n&lt;title&gt;1cbf893967c845f9abc639904608ced3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4533.12,-67.72 4531.68,-67.72 4531.68,-66.28 4533.12,-66.28 4533.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8223cf35d9fc4b8db64621afbd0d7552&amp;#45;&amp;#45;1cbf893967c845f9abc639904608ced3 --&gt;\n&lt;g id=\"edge1673\" class=\"edge\"&gt;\n&lt;title&gt;8223cf35d9fc4b8db64621afbd0d7552&amp;#45;&amp;#45;1cbf893967c845f9abc639904608ced3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4381.11,-67C4385.59,-67 4526.88,-67 4531.29,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- b4c22d1a4c3d4683ae7d898a854008c3 --&gt;\n&lt;g id=\"node1682\" class=\"node\"&gt;\n&lt;title&gt;b4c22d1a4c3d4683ae7d898a854008c3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4626.72,-67.72 4625.28,-67.72 4625.28,-66.28 4626.72,-66.28 4626.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1cbf893967c845f9abc639904608ced3&amp;#45;&amp;#45;b4c22d1a4c3d4683ae7d898a854008c3 --&gt;\n&lt;g id=\"edge1674\" class=\"edge\"&gt;\n&lt;title&gt;1cbf893967c845f9abc639904608ced3&amp;#45;&amp;#45;b4c22d1a4c3d4683ae7d898a854008c3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4533.47,-67C4536.2,-67 4622.25,-67 4624.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9c723f0dc5f442ea83ed70c5d70d2db5 --&gt;\n&lt;g id=\"node1683\" class=\"node\"&gt;\n&lt;title&gt;9c723f0dc5f442ea83ed70c5d70d2db5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4720.32,-67.72 4718.88,-67.72 4718.88,-66.28 4720.32,-66.28 4720.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b4c22d1a4c3d4683ae7d898a854008c3&amp;#45;&amp;#45;9c723f0dc5f442ea83ed70c5d70d2db5 --&gt;\n&lt;g id=\"edge1675\" class=\"edge\"&gt;\n&lt;title&gt;b4c22d1a4c3d4683ae7d898a854008c3&amp;#45;&amp;#45;9c723f0dc5f442ea83ed70c5d70d2db5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4627.07,-67C4629.8,-67 4715.85,-67 4718.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 46efb1fc8f0e4bff97ba216627d7c9aa --&gt;\n&lt;g id=\"node1684\" class=\"node\"&gt;\n&lt;title&gt;46efb1fc8f0e4bff97ba216627d7c9aa&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4813.92,-67.72 4812.48,-67.72 4812.48,-66.28 4813.92,-66.28 4813.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9c723f0dc5f442ea83ed70c5d70d2db5&amp;#45;&amp;#45;46efb1fc8f0e4bff97ba216627d7c9aa --&gt;\n&lt;g id=\"edge1676\" class=\"edge\"&gt;\n&lt;title&gt;9c723f0dc5f442ea83ed70c5d70d2db5&amp;#45;&amp;#45;46efb1fc8f0e4bff97ba216627d7c9aa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4720.67,-67C4723.4,-67 4809.45,-67 4812.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5508527a0c4e405cabe7267d899bf523 --&gt;\n&lt;g id=\"node1685\" class=\"node\"&gt;\n&lt;title&gt;5508527a0c4e405cabe7267d899bf523&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"4907.52,-67.72 4906.08,-67.72 4906.08,-66.28 4907.52,-66.28 4907.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 46efb1fc8f0e4bff97ba216627d7c9aa&amp;#45;&amp;#45;5508527a0c4e405cabe7267d899bf523 --&gt;\n&lt;g id=\"edge1677\" class=\"edge\"&gt;\n&lt;title&gt;46efb1fc8f0e4bff97ba216627d7c9aa&amp;#45;&amp;#45;5508527a0c4e405cabe7267d899bf523&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4814.27,-67C4817,-67 4903.05,-67 4905.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1405ddc9d5a54695aa824ce6ead42871 --&gt;\n&lt;g id=\"node1686\" class=\"node\"&gt;\n&lt;title&gt;1405ddc9d5a54695aa824ce6ead42871&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5001.12,-67.72 4999.68,-67.72 4999.68,-66.28 5001.12,-66.28 5001.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5508527a0c4e405cabe7267d899bf523&amp;#45;&amp;#45;1405ddc9d5a54695aa824ce6ead42871 --&gt;\n&lt;g id=\"edge1678\" class=\"edge\"&gt;\n&lt;title&gt;5508527a0c4e405cabe7267d899bf523&amp;#45;&amp;#45;1405ddc9d5a54695aa824ce6ead42871&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M4907.87,-67C4910.6,-67 4996.65,-67 4999.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- e63499fb99b7471a8caf39ee9d32436e --&gt;\n&lt;g id=\"node1687\" class=\"node\"&gt;\n&lt;title&gt;e63499fb99b7471a8caf39ee9d32436e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5094.72,-67.72 5093.28,-67.72 5093.28,-66.28 5094.72,-66.28 5094.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1405ddc9d5a54695aa824ce6ead42871&amp;#45;&amp;#45;e63499fb99b7471a8caf39ee9d32436e --&gt;\n&lt;g id=\"edge1679\" class=\"edge\"&gt;\n&lt;title&gt;1405ddc9d5a54695aa824ce6ead42871&amp;#45;&amp;#45;e63499fb99b7471a8caf39ee9d32436e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5001.47,-67C5004.2,-67 5090.25,-67 5092.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- c7d1ccfdc32b48e782681c25c8b8ec3b --&gt;\n&lt;g id=\"node1688\" class=\"node\"&gt;\n&lt;title&gt;c7d1ccfdc32b48e782681c25c8b8ec3b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5188.32,-67.72 5186.88,-67.72 5186.88,-66.28 5188.32,-66.28 5188.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e63499fb99b7471a8caf39ee9d32436e&amp;#45;&amp;#45;c7d1ccfdc32b48e782681c25c8b8ec3b --&gt;\n&lt;g id=\"edge1680\" class=\"edge\"&gt;\n&lt;title&gt;e63499fb99b7471a8caf39ee9d32436e&amp;#45;&amp;#45;c7d1ccfdc32b48e782681c25c8b8ec3b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5095.07,-67C5097.8,-67 5183.85,-67 5186.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6725aa89783f4c2e82e94a2f54a0f84c --&gt;\n&lt;g id=\"node1689\" class=\"node\"&gt;\n&lt;title&gt;6725aa89783f4c2e82e94a2f54a0f84c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5281.92,-67.72 5280.48,-67.72 5280.48,-66.28 5281.92,-66.28 5281.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c7d1ccfdc32b48e782681c25c8b8ec3b&amp;#45;&amp;#45;6725aa89783f4c2e82e94a2f54a0f84c --&gt;\n&lt;g id=\"edge1681\" class=\"edge\"&gt;\n&lt;title&gt;c7d1ccfdc32b48e782681c25c8b8ec3b&amp;#45;&amp;#45;6725aa89783f4c2e82e94a2f54a0f84c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5188.67,-67C5191.4,-67 5277.45,-67 5280.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- ab5240d3d2d44b7f88308a968e0f44c5 --&gt;\n&lt;g id=\"node1690\" class=\"node\"&gt;\n&lt;title&gt;ab5240d3d2d44b7f88308a968e0f44c5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5434.32,-67.72 5432.88,-67.72 5432.88,-66.28 5434.32,-66.28 5434.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6725aa89783f4c2e82e94a2f54a0f84c&amp;#45;&amp;#45;ab5240d3d2d44b7f88308a968e0f44c5 --&gt;\n&lt;g id=\"edge1682\" class=\"edge\"&gt;\n&lt;title&gt;6725aa89783f4c2e82e94a2f54a0f84c&amp;#45;&amp;#45;ab5240d3d2d44b7f88308a968e0f44c5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5282.31,-67C5286.79,-67 5428.08,-67 5432.49,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 233b641d50094cc4bf830bbfb267ed3a --&gt;\n&lt;g id=\"node1691\" class=\"node\"&gt;\n&lt;title&gt;233b641d50094cc4bf830bbfb267ed3a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5586.72,-67.72 5585.28,-67.72 5585.28,-66.28 5586.72,-66.28 5586.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ab5240d3d2d44b7f88308a968e0f44c5&amp;#45;&amp;#45;233b641d50094cc4bf830bbfb267ed3a --&gt;\n&lt;g id=\"edge1683\" class=\"edge\"&gt;\n&lt;title&gt;ab5240d3d2d44b7f88308a968e0f44c5&amp;#45;&amp;#45;233b641d50094cc4bf830bbfb267ed3a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5434.71,-67C5439.19,-67 5580.48,-67 5584.89,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 39ff557d4c004dda9d81a16bdbe59515 --&gt;\n&lt;g id=\"node1692\" class=\"node\"&gt;\n&lt;title&gt;39ff557d4c004dda9d81a16bdbe59515&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5680.32,-67.72 5678.88,-67.72 5678.88,-66.28 5680.32,-66.28 5680.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 233b641d50094cc4bf830bbfb267ed3a&amp;#45;&amp;#45;39ff557d4c004dda9d81a16bdbe59515 --&gt;\n&lt;g id=\"edge1684\" class=\"edge\"&gt;\n&lt;title&gt;233b641d50094cc4bf830bbfb267ed3a&amp;#45;&amp;#45;39ff557d4c004dda9d81a16bdbe59515&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5587.07,-67C5589.8,-67 5675.85,-67 5678.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- f539da8a378647b0aa13516f5ed9f57c --&gt;\n&lt;g id=\"node1693\" class=\"node\"&gt;\n&lt;title&gt;f539da8a378647b0aa13516f5ed9f57c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5773.92,-67.72 5772.48,-67.72 5772.48,-66.28 5773.92,-66.28 5773.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 39ff557d4c004dda9d81a16bdbe59515&amp;#45;&amp;#45;f539da8a378647b0aa13516f5ed9f57c --&gt;\n&lt;g id=\"edge1685\" class=\"edge\"&gt;\n&lt;title&gt;39ff557d4c004dda9d81a16bdbe59515&amp;#45;&amp;#45;f539da8a378647b0aa13516f5ed9f57c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5680.67,-67C5683.4,-67 5769.45,-67 5772.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- a8fe5fb2b53b4854b6213402e81d8bc1 --&gt;\n&lt;g id=\"node1694\" class=\"node\"&gt;\n&lt;title&gt;a8fe5fb2b53b4854b6213402e81d8bc1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5867.52,-67.72 5866.08,-67.72 5866.08,-66.28 5867.52,-66.28 5867.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f539da8a378647b0aa13516f5ed9f57c&amp;#45;&amp;#45;a8fe5fb2b53b4854b6213402e81d8bc1 --&gt;\n&lt;g id=\"edge1686\" class=\"edge\"&gt;\n&lt;title&gt;f539da8a378647b0aa13516f5ed9f57c&amp;#45;&amp;#45;a8fe5fb2b53b4854b6213402e81d8bc1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5774.27,-67C5777,-67 5863.05,-67 5865.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 59932117670d4f91bbfd5fcc11586589 --&gt;\n&lt;g id=\"node1695\" class=\"node\"&gt;\n&lt;title&gt;59932117670d4f91bbfd5fcc11586589&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"5961.12,-67.72 5959.68,-67.72 5959.68,-66.28 5961.12,-66.28 5961.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a8fe5fb2b53b4854b6213402e81d8bc1&amp;#45;&amp;#45;59932117670d4f91bbfd5fcc11586589 --&gt;\n&lt;g id=\"edge1687\" class=\"edge\"&gt;\n&lt;title&gt;a8fe5fb2b53b4854b6213402e81d8bc1&amp;#45;&amp;#45;59932117670d4f91bbfd5fcc11586589&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5867.87,-67C5870.6,-67 5956.65,-67 5959.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d1701ddbb0b456f92ebdd57be1c2906 --&gt;\n&lt;g id=\"node1696\" class=\"node\"&gt;\n&lt;title&gt;6d1701ddbb0b456f92ebdd57be1c2906&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6054.72,-67.72 6053.28,-67.72 6053.28,-66.28 6054.72,-66.28 6054.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 59932117670d4f91bbfd5fcc11586589&amp;#45;&amp;#45;6d1701ddbb0b456f92ebdd57be1c2906 --&gt;\n&lt;g id=\"edge1688\" class=\"edge\"&gt;\n&lt;title&gt;59932117670d4f91bbfd5fcc11586589&amp;#45;&amp;#45;6d1701ddbb0b456f92ebdd57be1c2906&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M5961.47,-67C5964.2,-67 6050.25,-67 6052.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8fd8a6fac90f49119cd657d524684de2 --&gt;\n&lt;g id=\"node1697\" class=\"node\"&gt;\n&lt;title&gt;8fd8a6fac90f49119cd657d524684de2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6148.32,-67.72 6146.88,-67.72 6146.88,-66.28 6148.32,-66.28 6148.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6d1701ddbb0b456f92ebdd57be1c2906&amp;#45;&amp;#45;8fd8a6fac90f49119cd657d524684de2 --&gt;\n&lt;g id=\"edge1689\" class=\"edge\"&gt;\n&lt;title&gt;6d1701ddbb0b456f92ebdd57be1c2906&amp;#45;&amp;#45;8fd8a6fac90f49119cd657d524684de2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6055.07,-67C6057.8,-67 6143.85,-67 6146.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- bfcb89562150462abc3651eff400cddb --&gt;\n&lt;g id=\"node1698\" class=\"node\"&gt;\n&lt;title&gt;bfcb89562150462abc3651eff400cddb&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6241.92,-67.72 6240.48,-67.72 6240.48,-66.28 6241.92,-66.28 6241.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8fd8a6fac90f49119cd657d524684de2&amp;#45;&amp;#45;bfcb89562150462abc3651eff400cddb --&gt;\n&lt;g id=\"edge1690\" class=\"edge\"&gt;\n&lt;title&gt;8fd8a6fac90f49119cd657d524684de2&amp;#45;&amp;#45;bfcb89562150462abc3651eff400cddb&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6148.67,-67C6151.4,-67 6237.45,-67 6240.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ec0852466f246bf9494e0b3cb0e8f16 --&gt;\n&lt;g id=\"node1699\" class=\"node\"&gt;\n&lt;title&gt;0ec0852466f246bf9494e0b3cb0e8f16&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6335.52,-67.72 6334.08,-67.72 6334.08,-66.28 6335.52,-66.28 6335.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bfcb89562150462abc3651eff400cddb&amp;#45;&amp;#45;0ec0852466f246bf9494e0b3cb0e8f16 --&gt;\n&lt;g id=\"edge1691\" class=\"edge\"&gt;\n&lt;title&gt;bfcb89562150462abc3651eff400cddb&amp;#45;&amp;#45;0ec0852466f246bf9494e0b3cb0e8f16&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6242.27,-67C6245,-67 6331.05,-67 6333.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- b77c1c20949b434489f50d3724eac86a --&gt;\n&lt;g id=\"node1700\" class=\"node\"&gt;\n&lt;title&gt;b77c1c20949b434489f50d3724eac86a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6429.12,-67.72 6427.68,-67.72 6427.68,-66.28 6429.12,-66.28 6429.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ec0852466f246bf9494e0b3cb0e8f16&amp;#45;&amp;#45;b77c1c20949b434489f50d3724eac86a --&gt;\n&lt;g id=\"edge1692\" class=\"edge\"&gt;\n&lt;title&gt;0ec0852466f246bf9494e0b3cb0e8f16&amp;#45;&amp;#45;b77c1c20949b434489f50d3724eac86a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6335.87,-67C6338.6,-67 6424.65,-67 6427.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- cdf93294a17b43ee83c319c5efdaf206 --&gt;\n&lt;g id=\"node1701\" class=\"node\"&gt;\n&lt;title&gt;cdf93294a17b43ee83c319c5efdaf206&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M6538.8,-95.8C6538.8,-95.8 6505.2,-95.8 6505.2,-95.8 6499.2,-95.8 6493.2,-89.8 6493.2,-83.8 6493.2,-83.8 6493.2,-50.2 6493.2,-50.2 6493.2,-44.2 6499.2,-38.2 6505.2,-38.2 6505.2,-38.2 6538.8,-38.2 6538.8,-38.2 6544.8,-38.2 6550.8,-44.2 6550.8,-50.2 6550.8,-50.2 6550.8,-83.8 6550.8,-83.8 6550.8,-89.8 6544.8,-95.8 6538.8,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"6522\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- b77c1c20949b434489f50d3724eac86a&amp;#45;&amp;#45;cdf93294a17b43ee83c319c5efdaf206 --&gt;\n&lt;g id=\"edge1693\" class=\"edge\"&gt;\n&lt;title&gt;b77c1c20949b434489f50d3724eac86a&amp;#45;&amp;#45;cdf93294a17b43ee83c319c5efdaf206&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6429.47,-67C6431.19,-67 6466.08,-67 6492.28,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- cdf93294a17b43ee83c319c5efdaf206&amp;#45;&amp;#45;2177919b1ac6446085e6bcafba7aabd3 --&gt;\n&lt;g id=\"edge2047\" class=\"edge\"&gt;\n&lt;title&gt;cdf93294a17b43ee83c319c5efdaf206&amp;#45;&amp;#45;2177919b1ac6446085e6bcafba7aabd3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6522,-96.74C6522,-99.98 6522,-103.21 6522,-106.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0b54c211b97043d6819ee48b1ab1fe44 --&gt;\n&lt;g id=\"node1702\" class=\"node\"&gt;\n&lt;title&gt;0b54c211b97043d6819ee48b1ab1fe44&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M6750,-95.8C6750,-95.8 6598.8,-95.8 6598.8,-95.8 6592.8,-95.8 6586.8,-89.8 6586.8,-83.8 6586.8,-83.8 6586.8,-50.2 6586.8,-50.2 6586.8,-44.2 6592.8,-38.2 6598.8,-38.2 6598.8,-38.2 6750,-38.2 6750,-38.2 6756,-38.2 6762,-44.2 6762,-50.2 6762,-50.2 6762,-83.8 6762,-83.8 6762,-89.8 6756,-95.8 6750,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"6674.4\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- cdf93294a17b43ee83c319c5efdaf206&amp;#45;&amp;#45;0b54c211b97043d6819ee48b1ab1fe44 --&gt;\n&lt;g id=\"edge1694\" class=\"edge\"&gt;\n&lt;title&gt;cdf93294a17b43ee83c319c5efdaf206&amp;#45;&amp;#45;0b54c211b97043d6819ee48b1ab1fe44&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6551.64,-67C6561.7,-67 6573.59,-67 6585.93,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- ad7aa81b1b3d4215879b5540dc889e7f --&gt;\n&lt;g id=\"node1703\" class=\"node\"&gt;\n&lt;title&gt;ad7aa81b1b3d4215879b5540dc889e7f&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M6843.6,-95.8C6843.6,-95.8 6810,-95.8 6810,-95.8 6804,-95.8 6798,-89.8 6798,-83.8 6798,-83.8 6798,-50.2 6798,-50.2 6798,-44.2 6804,-38.2 6810,-38.2 6810,-38.2 6843.6,-38.2 6843.6,-38.2 6849.6,-38.2 6855.6,-44.2 6855.6,-50.2 6855.6,-50.2 6855.6,-83.8 6855.6,-83.8 6855.6,-89.8 6849.6,-95.8 6843.6,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"6826.8\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 0b54c211b97043d6819ee48b1ab1fe44&amp;#45;&amp;#45;ad7aa81b1b3d4215879b5540dc889e7f --&gt;\n&lt;g id=\"edge1695\" class=\"edge\"&gt;\n&lt;title&gt;0b54c211b97043d6819ee48b1ab1fe44&amp;#45;&amp;#45;ad7aa81b1b3d4215879b5540dc889e7f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6762.89,-67C6775.17,-67 6787,-67 6797.02,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- ad7aa81b1b3d4215879b5540dc889e7f&amp;#45;&amp;#45;cc7bf931f6f54667ba873541415b2a03 --&gt;\n&lt;g id=\"edge2048\" class=\"edge\"&gt;\n&lt;title&gt;ad7aa81b1b3d4215879b5540dc889e7f&amp;#45;&amp;#45;cc7bf931f6f54667ba873541415b2a03&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6826.8,-96.74C6826.8,-99.98 6826.8,-103.21 6826.8,-106.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e4225384a5f42e59c06625c239c6523 --&gt;\n&lt;g id=\"node1704\" class=\"node\"&gt;\n&lt;title&gt;3e4225384a5f42e59c06625c239c6523&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"6921.12,-67.72 6919.68,-67.72 6919.68,-66.28 6921.12,-66.28 6921.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ad7aa81b1b3d4215879b5540dc889e7f&amp;#45;&amp;#45;3e4225384a5f42e59c06625c239c6523 --&gt;\n&lt;g id=\"edge1696\" class=\"edge\"&gt;\n&lt;title&gt;ad7aa81b1b3d4215879b5540dc889e7f&amp;#45;&amp;#45;3e4225384a5f42e59c06625c239c6523&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6856.28,-67C6882.33,-67 6917.14,-67 6919.3,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1f14b090936147c097edfd2f8b5092ab --&gt;\n&lt;g id=\"node1705\" class=\"node\"&gt;\n&lt;title&gt;1f14b090936147c097edfd2f8b5092ab&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7014.72,-67.72 7013.28,-67.72 7013.28,-66.28 7014.72,-66.28 7014.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e4225384a5f42e59c06625c239c6523&amp;#45;&amp;#45;1f14b090936147c097edfd2f8b5092ab --&gt;\n&lt;g id=\"edge1697\" class=\"edge\"&gt;\n&lt;title&gt;3e4225384a5f42e59c06625c239c6523&amp;#45;&amp;#45;1f14b090936147c097edfd2f8b5092ab&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M6921.47,-67C6924.2,-67 7010.25,-67 7012.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7419745f7b0d4c2e8420c524ef408def --&gt;\n&lt;g id=\"node1706\" class=\"node\"&gt;\n&lt;title&gt;7419745f7b0d4c2e8420c524ef408def&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7108.32,-67.72 7106.88,-67.72 7106.88,-66.28 7108.32,-66.28 7108.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1f14b090936147c097edfd2f8b5092ab&amp;#45;&amp;#45;7419745f7b0d4c2e8420c524ef408def --&gt;\n&lt;g id=\"edge1698\" class=\"edge\"&gt;\n&lt;title&gt;1f14b090936147c097edfd2f8b5092ab&amp;#45;&amp;#45;7419745f7b0d4c2e8420c524ef408def&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7015.07,-67C7017.8,-67 7103.85,-67 7106.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- d7a19a2245484eeaa64da44f183b95f6 --&gt;\n&lt;g id=\"node1707\" class=\"node\"&gt;\n&lt;title&gt;d7a19a2245484eeaa64da44f183b95f6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7201.92,-67.72 7200.48,-67.72 7200.48,-66.28 7201.92,-66.28 7201.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7419745f7b0d4c2e8420c524ef408def&amp;#45;&amp;#45;d7a19a2245484eeaa64da44f183b95f6 --&gt;\n&lt;g id=\"edge1699\" class=\"edge\"&gt;\n&lt;title&gt;7419745f7b0d4c2e8420c524ef408def&amp;#45;&amp;#45;d7a19a2245484eeaa64da44f183b95f6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7108.67,-67C7111.4,-67 7197.45,-67 7200.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 229f39c54fc44353be2a2f79062088f6 --&gt;\n&lt;g id=\"node1708\" class=\"node\"&gt;\n&lt;title&gt;229f39c54fc44353be2a2f79062088f6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7295.52,-67.72 7294.08,-67.72 7294.08,-66.28 7295.52,-66.28 7295.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d7a19a2245484eeaa64da44f183b95f6&amp;#45;&amp;#45;229f39c54fc44353be2a2f79062088f6 --&gt;\n&lt;g id=\"edge1700\" class=\"edge\"&gt;\n&lt;title&gt;d7a19a2245484eeaa64da44f183b95f6&amp;#45;&amp;#45;229f39c54fc44353be2a2f79062088f6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7202.27,-67C7205,-67 7291.05,-67 7293.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- d26e1da7d1744c0094418994cd2e8e12 --&gt;\n&lt;g id=\"node1709\" class=\"node\"&gt;\n&lt;title&gt;d26e1da7d1744c0094418994cd2e8e12&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7389.12,-67.72 7387.68,-67.72 7387.68,-66.28 7389.12,-66.28 7389.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 229f39c54fc44353be2a2f79062088f6&amp;#45;&amp;#45;d26e1da7d1744c0094418994cd2e8e12 --&gt;\n&lt;g id=\"edge1701\" class=\"edge\"&gt;\n&lt;title&gt;229f39c54fc44353be2a2f79062088f6&amp;#45;&amp;#45;d26e1da7d1744c0094418994cd2e8e12&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7295.87,-67C7298.6,-67 7384.65,-67 7387.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- b5ea877715a249c994591173aa44c0f3 --&gt;\n&lt;g id=\"node1710\" class=\"node\"&gt;\n&lt;title&gt;b5ea877715a249c994591173aa44c0f3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7482.72,-67.72 7481.28,-67.72 7481.28,-66.28 7482.72,-66.28 7482.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d26e1da7d1744c0094418994cd2e8e12&amp;#45;&amp;#45;b5ea877715a249c994591173aa44c0f3 --&gt;\n&lt;g id=\"edge1702\" class=\"edge\"&gt;\n&lt;title&gt;d26e1da7d1744c0094418994cd2e8e12&amp;#45;&amp;#45;b5ea877715a249c994591173aa44c0f3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7389.47,-67C7392.2,-67 7478.25,-67 7480.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8e7043c4dc4646c8ae39eefbbcf52549 --&gt;\n&lt;g id=\"node1711\" class=\"node\"&gt;\n&lt;title&gt;8e7043c4dc4646c8ae39eefbbcf52549&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7576.32,-67.72 7574.88,-67.72 7574.88,-66.28 7576.32,-66.28 7576.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b5ea877715a249c994591173aa44c0f3&amp;#45;&amp;#45;8e7043c4dc4646c8ae39eefbbcf52549 --&gt;\n&lt;g id=\"edge1703\" class=\"edge\"&gt;\n&lt;title&gt;b5ea877715a249c994591173aa44c0f3&amp;#45;&amp;#45;8e7043c4dc4646c8ae39eefbbcf52549&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7483.07,-67C7485.8,-67 7571.85,-67 7574.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5e55baf849364f5fa939b1fd5145da21 --&gt;\n&lt;g id=\"node1712\" class=\"node\"&gt;\n&lt;title&gt;5e55baf849364f5fa939b1fd5145da21&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"7669.92,-67.72 7668.48,-67.72 7668.48,-66.28 7669.92,-66.28 7669.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8e7043c4dc4646c8ae39eefbbcf52549&amp;#45;&amp;#45;5e55baf849364f5fa939b1fd5145da21 --&gt;\n&lt;g id=\"edge1704\" class=\"edge\"&gt;\n&lt;title&gt;8e7043c4dc4646c8ae39eefbbcf52549&amp;#45;&amp;#45;5e55baf849364f5fa939b1fd5145da21&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7576.67,-67C7579.4,-67 7665.45,-67 7668.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- cd197a3b23bb465bb3c64bf15245c439 --&gt;\n&lt;g id=\"node1713\" class=\"node\"&gt;\n&lt;title&gt;cd197a3b23bb465bb3c64bf15245c439&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M7779.6,-95.8C7779.6,-95.8 7746,-95.8 7746,-95.8 7740,-95.8 7734,-89.8 7734,-83.8 7734,-83.8 7734,-50.2 7734,-50.2 7734,-44.2 7740,-38.2 7746,-38.2 7746,-38.2 7779.6,-38.2 7779.6,-38.2 7785.6,-38.2 7791.6,-44.2 7791.6,-50.2 7791.6,-50.2 7791.6,-83.8 7791.6,-83.8 7791.6,-89.8 7785.6,-95.8 7779.6,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"7762.8\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5e55baf849364f5fa939b1fd5145da21&amp;#45;&amp;#45;cd197a3b23bb465bb3c64bf15245c439 --&gt;\n&lt;g id=\"edge1705\" class=\"edge\"&gt;\n&lt;title&gt;5e55baf849364f5fa939b1fd5145da21&amp;#45;&amp;#45;cd197a3b23bb465bb3c64bf15245c439&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7670.27,-67C7671.99,-67 7706.88,-67 7733.08,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- cd197a3b23bb465bb3c64bf15245c439&amp;#45;&amp;#45;8519436465a04d4aadc6ef25d0cc1e20 --&gt;\n&lt;g id=\"edge2049\" class=\"edge\"&gt;\n&lt;title&gt;cd197a3b23bb465bb3c64bf15245c439&amp;#45;&amp;#45;8519436465a04d4aadc6ef25d0cc1e20&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7762.8,-96.74C7762.8,-99.98 7762.8,-103.21 7762.8,-106.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- a5a9b73570b7436a9192e3a6b43dd583 --&gt;\n&lt;g id=\"node1714\" class=\"node\"&gt;\n&lt;title&gt;a5a9b73570b7436a9192e3a6b43dd583&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M7990.8,-95.8C7990.8,-95.8 7839.6,-95.8 7839.6,-95.8 7833.6,-95.8 7827.6,-89.8 7827.6,-83.8 7827.6,-83.8 7827.6,-50.2 7827.6,-50.2 7827.6,-44.2 7833.6,-38.2 7839.6,-38.2 7839.6,-38.2 7990.8,-38.2 7990.8,-38.2 7996.8,-38.2 8002.8,-44.2 8002.8,-50.2 8002.8,-50.2 8002.8,-83.8 8002.8,-83.8 8002.8,-89.8 7996.8,-95.8 7990.8,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"7915.2\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- cd197a3b23bb465bb3c64bf15245c439&amp;#45;&amp;#45;a5a9b73570b7436a9192e3a6b43dd583 --&gt;\n&lt;g id=\"edge1706\" class=\"edge\"&gt;\n&lt;title&gt;cd197a3b23bb465bb3c64bf15245c439&amp;#45;&amp;#45;a5a9b73570b7436a9192e3a6b43dd583&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M7792.44,-67C7802.5,-67 7814.39,-67 7826.73,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- af8d84e4219343a9a77dc00dbb4a4c6c --&gt;\n&lt;g id=\"node1715\" class=\"node\"&gt;\n&lt;title&gt;af8d84e4219343a9a77dc00dbb4a4c6c&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M8084.4,-95.8C8084.4,-95.8 8050.8,-95.8 8050.8,-95.8 8044.8,-95.8 8038.8,-89.8 8038.8,-83.8 8038.8,-83.8 8038.8,-50.2 8038.8,-50.2 8038.8,-44.2 8044.8,-38.2 8050.8,-38.2 8050.8,-38.2 8084.4,-38.2 8084.4,-38.2 8090.4,-38.2 8096.4,-44.2 8096.4,-50.2 8096.4,-50.2 8096.4,-83.8 8096.4,-83.8 8096.4,-89.8 8090.4,-95.8 8084.4,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"8067.6\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- a5a9b73570b7436a9192e3a6b43dd583&amp;#45;&amp;#45;af8d84e4219343a9a77dc00dbb4a4c6c --&gt;\n&lt;g id=\"edge1707\" class=\"edge\"&gt;\n&lt;title&gt;a5a9b73570b7436a9192e3a6b43dd583&amp;#45;&amp;#45;af8d84e4219343a9a77dc00dbb4a4c6c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8003.69,-67C8015.97,-67 8027.8,-67 8037.82,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- af8d84e4219343a9a77dc00dbb4a4c6c&amp;#45;&amp;#45;6bdfcce7bdab4688b64f96e430691315 --&gt;\n&lt;g id=\"edge2050\" class=\"edge\"&gt;\n&lt;title&gt;af8d84e4219343a9a77dc00dbb4a4c6c&amp;#45;&amp;#45;6bdfcce7bdab4688b64f96e430691315&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8067.6,-96.74C8067.6,-99.98 8067.6,-103.21 8067.6,-106.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9d08f8550bc54e5db821f6252629d9c7 --&gt;\n&lt;g id=\"node1716\" class=\"node\"&gt;\n&lt;title&gt;9d08f8550bc54e5db821f6252629d9c7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8161.92,-67.72 8160.48,-67.72 8160.48,-66.28 8161.92,-66.28 8161.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- af8d84e4219343a9a77dc00dbb4a4c6c&amp;#45;&amp;#45;9d08f8550bc54e5db821f6252629d9c7 --&gt;\n&lt;g id=\"edge1708\" class=\"edge\"&gt;\n&lt;title&gt;af8d84e4219343a9a77dc00dbb4a4c6c&amp;#45;&amp;#45;9d08f8550bc54e5db821f6252629d9c7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8097.08,-67C8123.13,-67 8157.94,-67 8160.1,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9bfee48c36ee463e9b0b31bf8fda874e --&gt;\n&lt;g id=\"node1717\" class=\"node\"&gt;\n&lt;title&gt;9bfee48c36ee463e9b0b31bf8fda874e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8255.52,-67.72 8254.08,-67.72 8254.08,-66.28 8255.52,-66.28 8255.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9d08f8550bc54e5db821f6252629d9c7&amp;#45;&amp;#45;9bfee48c36ee463e9b0b31bf8fda874e --&gt;\n&lt;g id=\"edge1709\" class=\"edge\"&gt;\n&lt;title&gt;9d08f8550bc54e5db821f6252629d9c7&amp;#45;&amp;#45;9bfee48c36ee463e9b0b31bf8fda874e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8162.27,-67C8165,-67 8251.05,-67 8253.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5758762721144277b4aad40591964ef4 --&gt;\n&lt;g id=\"node1718\" class=\"node\"&gt;\n&lt;title&gt;5758762721144277b4aad40591964ef4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8349.12,-67.72 8347.68,-67.72 8347.68,-66.28 8349.12,-66.28 8349.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9bfee48c36ee463e9b0b31bf8fda874e&amp;#45;&amp;#45;5758762721144277b4aad40591964ef4 --&gt;\n&lt;g id=\"edge1710\" class=\"edge\"&gt;\n&lt;title&gt;9bfee48c36ee463e9b0b31bf8fda874e&amp;#45;&amp;#45;5758762721144277b4aad40591964ef4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8255.87,-67C8258.6,-67 8344.65,-67 8347.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5082a66c97ac46d3bb088dc0e0cb36a2 --&gt;\n&lt;g id=\"node1719\" class=\"node\"&gt;\n&lt;title&gt;5082a66c97ac46d3bb088dc0e0cb36a2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8442.72,-67.72 8441.28,-67.72 8441.28,-66.28 8442.72,-66.28 8442.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5758762721144277b4aad40591964ef4&amp;#45;&amp;#45;5082a66c97ac46d3bb088dc0e0cb36a2 --&gt;\n&lt;g id=\"edge1711\" class=\"edge\"&gt;\n&lt;title&gt;5758762721144277b4aad40591964ef4&amp;#45;&amp;#45;5082a66c97ac46d3bb088dc0e0cb36a2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8349.47,-67C8352.2,-67 8438.25,-67 8440.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 02b0124bc5f5481e901ff826cce28d5b --&gt;\n&lt;g id=\"node1720\" class=\"node\"&gt;\n&lt;title&gt;02b0124bc5f5481e901ff826cce28d5b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8536.32,-67.72 8534.88,-67.72 8534.88,-66.28 8536.32,-66.28 8536.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5082a66c97ac46d3bb088dc0e0cb36a2&amp;#45;&amp;#45;02b0124bc5f5481e901ff826cce28d5b --&gt;\n&lt;g id=\"edge1712\" class=\"edge\"&gt;\n&lt;title&gt;5082a66c97ac46d3bb088dc0e0cb36a2&amp;#45;&amp;#45;02b0124bc5f5481e901ff826cce28d5b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8443.07,-67C8445.8,-67 8531.85,-67 8534.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- e045f6de12c04f6b92b7d9b356baeed6 --&gt;\n&lt;g id=\"node1721\" class=\"node\"&gt;\n&lt;title&gt;e045f6de12c04f6b92b7d9b356baeed6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8629.92,-67.72 8628.48,-67.72 8628.48,-66.28 8629.92,-66.28 8629.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 02b0124bc5f5481e901ff826cce28d5b&amp;#45;&amp;#45;e045f6de12c04f6b92b7d9b356baeed6 --&gt;\n&lt;g id=\"edge1713\" class=\"edge\"&gt;\n&lt;title&gt;02b0124bc5f5481e901ff826cce28d5b&amp;#45;&amp;#45;e045f6de12c04f6b92b7d9b356baeed6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8536.67,-67C8539.4,-67 8625.45,-67 8628.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3c2caf7a8e7744129c2f95189a8af040 --&gt;\n&lt;g id=\"node1722\" class=\"node\"&gt;\n&lt;title&gt;3c2caf7a8e7744129c2f95189a8af040&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8782.32,-67.72 8780.88,-67.72 8780.88,-66.28 8782.32,-66.28 8782.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e045f6de12c04f6b92b7d9b356baeed6&amp;#45;&amp;#45;3c2caf7a8e7744129c2f95189a8af040 --&gt;\n&lt;g id=\"edge1714\" class=\"edge\"&gt;\n&lt;title&gt;e045f6de12c04f6b92b7d9b356baeed6&amp;#45;&amp;#45;3c2caf7a8e7744129c2f95189a8af040&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8630.31,-67C8634.79,-67 8776.08,-67 8780.49,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- c5bd4de408de47b8b0f0fc03e8016061 --&gt;\n&lt;g id=\"node1723\" class=\"node\"&gt;\n&lt;title&gt;c5bd4de408de47b8b0f0fc03e8016061&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"8934.72,-67.72 8933.28,-67.72 8933.28,-66.28 8934.72,-66.28 8934.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3c2caf7a8e7744129c2f95189a8af040&amp;#45;&amp;#45;c5bd4de408de47b8b0f0fc03e8016061 --&gt;\n&lt;g id=\"edge1715\" class=\"edge\"&gt;\n&lt;title&gt;3c2caf7a8e7744129c2f95189a8af040&amp;#45;&amp;#45;c5bd4de408de47b8b0f0fc03e8016061&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8782.71,-67C8787.19,-67 8928.48,-67 8932.89,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2188cfa39f9a4d7c8c4ea0fea698cc40 --&gt;\n&lt;g id=\"node1724\" class=\"node\"&gt;\n&lt;title&gt;2188cfa39f9a4d7c8c4ea0fea698cc40&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9028.32,-67.72 9026.88,-67.72 9026.88,-66.28 9028.32,-66.28 9028.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c5bd4de408de47b8b0f0fc03e8016061&amp;#45;&amp;#45;2188cfa39f9a4d7c8c4ea0fea698cc40 --&gt;\n&lt;g id=\"edge1716\" class=\"edge\"&gt;\n&lt;title&gt;c5bd4de408de47b8b0f0fc03e8016061&amp;#45;&amp;#45;2188cfa39f9a4d7c8c4ea0fea698cc40&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M8935.07,-67C8937.8,-67 9023.85,-67 9026.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5469658c63a64432a4ad2255a274c2c4 --&gt;\n&lt;g id=\"node1725\" class=\"node\"&gt;\n&lt;title&gt;5469658c63a64432a4ad2255a274c2c4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9121.92,-67.72 9120.48,-67.72 9120.48,-66.28 9121.92,-66.28 9121.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2188cfa39f9a4d7c8c4ea0fea698cc40&amp;#45;&amp;#45;5469658c63a64432a4ad2255a274c2c4 --&gt;\n&lt;g id=\"edge1717\" class=\"edge\"&gt;\n&lt;title&gt;2188cfa39f9a4d7c8c4ea0fea698cc40&amp;#45;&amp;#45;5469658c63a64432a4ad2255a274c2c4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9028.67,-67C9031.4,-67 9117.45,-67 9120.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- f20ad22362ed4fd1bd746c1ab07b3a67 --&gt;\n&lt;g id=\"node1726\" class=\"node\"&gt;\n&lt;title&gt;f20ad22362ed4fd1bd746c1ab07b3a67&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9215.52,-67.72 9214.08,-67.72 9214.08,-66.28 9215.52,-66.28 9215.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5469658c63a64432a4ad2255a274c2c4&amp;#45;&amp;#45;f20ad22362ed4fd1bd746c1ab07b3a67 --&gt;\n&lt;g id=\"edge1718\" class=\"edge\"&gt;\n&lt;title&gt;5469658c63a64432a4ad2255a274c2c4&amp;#45;&amp;#45;f20ad22362ed4fd1bd746c1ab07b3a67&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9122.27,-67C9125,-67 9211.05,-67 9213.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1846180d63344c68aeab2c50b62866ac --&gt;\n&lt;g id=\"node1727\" class=\"node\"&gt;\n&lt;title&gt;1846180d63344c68aeab2c50b62866ac&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9309.12,-67.72 9307.68,-67.72 9307.68,-66.28 9309.12,-66.28 9309.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f20ad22362ed4fd1bd746c1ab07b3a67&amp;#45;&amp;#45;1846180d63344c68aeab2c50b62866ac --&gt;\n&lt;g id=\"edge1719\" class=\"edge\"&gt;\n&lt;title&gt;f20ad22362ed4fd1bd746c1ab07b3a67&amp;#45;&amp;#45;1846180d63344c68aeab2c50b62866ac&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9215.87,-67C9218.6,-67 9304.65,-67 9307.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- be39328665714b03a76c0219fed98c25 --&gt;\n&lt;g id=\"node1728\" class=\"node\"&gt;\n&lt;title&gt;be39328665714b03a76c0219fed98c25&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9461.52,-67.72 9460.08,-67.72 9460.08,-66.28 9461.52,-66.28 9461.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1846180d63344c68aeab2c50b62866ac&amp;#45;&amp;#45;be39328665714b03a76c0219fed98c25 --&gt;\n&lt;g id=\"edge1720\" class=\"edge\"&gt;\n&lt;title&gt;1846180d63344c68aeab2c50b62866ac&amp;#45;&amp;#45;be39328665714b03a76c0219fed98c25&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9309.51,-67C9313.99,-67 9455.28,-67 9459.69,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 57aa7458b34c4376bed20bda94758d54 --&gt;\n&lt;g id=\"node1729\" class=\"node\"&gt;\n&lt;title&gt;57aa7458b34c4376bed20bda94758d54&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9613.92,-67.72 9612.48,-67.72 9612.48,-66.28 9613.92,-66.28 9613.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- be39328665714b03a76c0219fed98c25&amp;#45;&amp;#45;57aa7458b34c4376bed20bda94758d54 --&gt;\n&lt;g id=\"edge1721\" class=\"edge\"&gt;\n&lt;title&gt;be39328665714b03a76c0219fed98c25&amp;#45;&amp;#45;57aa7458b34c4376bed20bda94758d54&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9461.91,-67C9466.39,-67 9607.68,-67 9612.09,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2eabc3005d46494e86fb1349f264ce45 --&gt;\n&lt;g id=\"node1730\" class=\"node\"&gt;\n&lt;title&gt;2eabc3005d46494e86fb1349f264ce45&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9707.52,-67.72 9706.08,-67.72 9706.08,-66.28 9707.52,-66.28 9707.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 57aa7458b34c4376bed20bda94758d54&amp;#45;&amp;#45;2eabc3005d46494e86fb1349f264ce45 --&gt;\n&lt;g id=\"edge1722\" class=\"edge\"&gt;\n&lt;title&gt;57aa7458b34c4376bed20bda94758d54&amp;#45;&amp;#45;2eabc3005d46494e86fb1349f264ce45&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9614.27,-67C9617,-67 9703.05,-67 9705.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- c96096293be64621b4fbfccd3c7adbe5 --&gt;\n&lt;g id=\"node1731\" class=\"node\"&gt;\n&lt;title&gt;c96096293be64621b4fbfccd3c7adbe5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9801.12,-67.72 9799.68,-67.72 9799.68,-66.28 9801.12,-66.28 9801.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2eabc3005d46494e86fb1349f264ce45&amp;#45;&amp;#45;c96096293be64621b4fbfccd3c7adbe5 --&gt;\n&lt;g id=\"edge1723\" class=\"edge\"&gt;\n&lt;title&gt;2eabc3005d46494e86fb1349f264ce45&amp;#45;&amp;#45;c96096293be64621b4fbfccd3c7adbe5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9707.87,-67C9710.6,-67 9796.65,-67 9799.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 141f3c9c6ca84610b833b06950c224bf --&gt;\n&lt;g id=\"node1732\" class=\"node\"&gt;\n&lt;title&gt;141f3c9c6ca84610b833b06950c224bf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9894.72,-67.72 9893.28,-67.72 9893.28,-66.28 9894.72,-66.28 9894.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c96096293be64621b4fbfccd3c7adbe5&amp;#45;&amp;#45;141f3c9c6ca84610b833b06950c224bf --&gt;\n&lt;g id=\"edge1724\" class=\"edge\"&gt;\n&lt;title&gt;c96096293be64621b4fbfccd3c7adbe5&amp;#45;&amp;#45;141f3c9c6ca84610b833b06950c224bf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9801.47,-67C9804.2,-67 9890.25,-67 9892.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 09533cf90e5a43fda7a0d1f9be5a3145 --&gt;\n&lt;g id=\"node1733\" class=\"node\"&gt;\n&lt;title&gt;09533cf90e5a43fda7a0d1f9be5a3145&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"9988.32,-67.72 9986.88,-67.72 9986.88,-66.28 9988.32,-66.28 9988.32,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 141f3c9c6ca84610b833b06950c224bf&amp;#45;&amp;#45;09533cf90e5a43fda7a0d1f9be5a3145 --&gt;\n&lt;g id=\"edge1725\" class=\"edge\"&gt;\n&lt;title&gt;141f3c9c6ca84610b833b06950c224bf&amp;#45;&amp;#45;09533cf90e5a43fda7a0d1f9be5a3145&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9895.07,-67C9897.8,-67 9983.85,-67 9986.54,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 31246dcd7d3a430c9b8a24cd7e9aeb26 --&gt;\n&lt;g id=\"node1734\" class=\"node\"&gt;\n&lt;title&gt;31246dcd7d3a430c9b8a24cd7e9aeb26&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10081.92,-67.72 10080.48,-67.72 10080.48,-66.28 10081.92,-66.28 10081.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 09533cf90e5a43fda7a0d1f9be5a3145&amp;#45;&amp;#45;31246dcd7d3a430c9b8a24cd7e9aeb26 --&gt;\n&lt;g id=\"edge1726\" class=\"edge\"&gt;\n&lt;title&gt;09533cf90e5a43fda7a0d1f9be5a3145&amp;#45;&amp;#45;31246dcd7d3a430c9b8a24cd7e9aeb26&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M9988.67,-67C9991.4,-67 10077.45,-67 10080.14,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 738c50166ac6403bad3ce84e75ecda9e --&gt;\n&lt;g id=\"node1735\" class=\"node\"&gt;\n&lt;title&gt;738c50166ac6403bad3ce84e75ecda9e&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M10191.6,-95.8C10191.6,-95.8 10158,-95.8 10158,-95.8 10152,-95.8 10146,-89.8 10146,-83.8 10146,-83.8 10146,-50.2 10146,-50.2 10146,-44.2 10152,-38.2 10158,-38.2 10158,-38.2 10191.6,-38.2 10191.6,-38.2 10197.6,-38.2 10203.6,-44.2 10203.6,-50.2 10203.6,-50.2 10203.6,-83.8 10203.6,-83.8 10203.6,-89.8 10197.6,-95.8 10191.6,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"10174.8\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 31246dcd7d3a430c9b8a24cd7e9aeb26&amp;#45;&amp;#45;738c50166ac6403bad3ce84e75ecda9e --&gt;\n&lt;g id=\"edge1727\" class=\"edge\"&gt;\n&lt;title&gt;31246dcd7d3a430c9b8a24cd7e9aeb26&amp;#45;&amp;#45;738c50166ac6403bad3ce84e75ecda9e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10082.27,-67C10083.99,-67 10118.88,-67 10145.08,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 738c50166ac6403bad3ce84e75ecda9e&amp;#45;&amp;#45;96580d1dfbfa448f917553da3c587116 --&gt;\n&lt;g id=\"edge2051\" class=\"edge\"&gt;\n&lt;title&gt;738c50166ac6403bad3ce84e75ecda9e&amp;#45;&amp;#45;96580d1dfbfa448f917553da3c587116&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10174.8,-96.74C10174.8,-99.98 10174.8,-103.21 10174.8,-106.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5f31be5ccad24d398a019ca92a94aac6 --&gt;\n&lt;g id=\"node1736\" class=\"node\"&gt;\n&lt;title&gt;5f31be5ccad24d398a019ca92a94aac6&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M10402.8,-95.8C10402.8,-95.8 10251.6,-95.8 10251.6,-95.8 10245.6,-95.8 10239.6,-89.8 10239.6,-83.8 10239.6,-83.8 10239.6,-50.2 10239.6,-50.2 10239.6,-44.2 10245.6,-38.2 10251.6,-38.2 10251.6,-38.2 10402.8,-38.2 10402.8,-38.2 10408.8,-38.2 10414.8,-44.2 10414.8,-50.2 10414.8,-50.2 10414.8,-83.8 10414.8,-83.8 10414.8,-89.8 10408.8,-95.8 10402.8,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"10327.2\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 738c50166ac6403bad3ce84e75ecda9e&amp;#45;&amp;#45;5f31be5ccad24d398a019ca92a94aac6 --&gt;\n&lt;g id=\"edge1728\" class=\"edge\"&gt;\n&lt;title&gt;738c50166ac6403bad3ce84e75ecda9e&amp;#45;&amp;#45;5f31be5ccad24d398a019ca92a94aac6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10204.44,-67C10214.5,-67 10226.39,-67 10238.73,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 023576f72888464e86f080f067249229 --&gt;\n&lt;g id=\"node1737\" class=\"node\"&gt;\n&lt;title&gt;023576f72888464e86f080f067249229&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M10496.4,-95.8C10496.4,-95.8 10462.8,-95.8 10462.8,-95.8 10456.8,-95.8 10450.8,-89.8 10450.8,-83.8 10450.8,-83.8 10450.8,-50.2 10450.8,-50.2 10450.8,-44.2 10456.8,-38.2 10462.8,-38.2 10462.8,-38.2 10496.4,-38.2 10496.4,-38.2 10502.4,-38.2 10508.4,-44.2 10508.4,-50.2 10508.4,-50.2 10508.4,-83.8 10508.4,-83.8 10508.4,-89.8 10502.4,-95.8 10496.4,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"10479.6\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 5f31be5ccad24d398a019ca92a94aac6&amp;#45;&amp;#45;023576f72888464e86f080f067249229 --&gt;\n&lt;g id=\"edge1729\" class=\"edge\"&gt;\n&lt;title&gt;5f31be5ccad24d398a019ca92a94aac6&amp;#45;&amp;#45;023576f72888464e86f080f067249229&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10415.69,-67C10427.97,-67 10439.8,-67 10449.82,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 023576f72888464e86f080f067249229&amp;#45;&amp;#45;e06cea31c806461c8618ec382573bedd --&gt;\n&lt;g id=\"edge2052\" class=\"edge\"&gt;\n&lt;title&gt;023576f72888464e86f080f067249229&amp;#45;&amp;#45;e06cea31c806461c8618ec382573bedd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10479.6,-96.74C10479.6,-99.98 10479.6,-103.21 10479.6,-106.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 09e621dd91c24eccb22991737b17e2cd --&gt;\n&lt;g id=\"node1738\" class=\"node\"&gt;\n&lt;title&gt;09e621dd91c24eccb22991737b17e2cd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10573.92,-67.72 10572.48,-67.72 10572.48,-66.28 10573.92,-66.28 10573.92,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 023576f72888464e86f080f067249229&amp;#45;&amp;#45;09e621dd91c24eccb22991737b17e2cd --&gt;\n&lt;g id=\"edge1730\" class=\"edge\"&gt;\n&lt;title&gt;023576f72888464e86f080f067249229&amp;#45;&amp;#45;09e621dd91c24eccb22991737b17e2cd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10509.08,-67C10535.13,-67 10569.94,-67 10572.1,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- b4793fe14f1145168615421d2c38f404 --&gt;\n&lt;g id=\"node1739\" class=\"node\"&gt;\n&lt;title&gt;b4793fe14f1145168615421d2c38f404&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10667.52,-67.72 10666.08,-67.72 10666.08,-66.28 10667.52,-66.28 10667.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 09e621dd91c24eccb22991737b17e2cd&amp;#45;&amp;#45;b4793fe14f1145168615421d2c38f404 --&gt;\n&lt;g id=\"edge1731\" class=\"edge\"&gt;\n&lt;title&gt;09e621dd91c24eccb22991737b17e2cd&amp;#45;&amp;#45;b4793fe14f1145168615421d2c38f404&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10574.27,-67C10577,-67 10663.05,-67 10665.74,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0114f71f84614d818f57cd7950b37607 --&gt;\n&lt;g id=\"node1740\" class=\"node\"&gt;\n&lt;title&gt;0114f71f84614d818f57cd7950b37607&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10761.12,-67.72 10759.68,-67.72 10759.68,-66.28 10761.12,-66.28 10761.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b4793fe14f1145168615421d2c38f404&amp;#45;&amp;#45;0114f71f84614d818f57cd7950b37607 --&gt;\n&lt;g id=\"edge1732\" class=\"edge\"&gt;\n&lt;title&gt;b4793fe14f1145168615421d2c38f404&amp;#45;&amp;#45;0114f71f84614d818f57cd7950b37607&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10667.87,-67C10670.6,-67 10756.65,-67 10759.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 275532d4273242038313ad52e04db33c --&gt;\n&lt;g id=\"node1741\" class=\"node\"&gt;\n&lt;title&gt;275532d4273242038313ad52e04db33c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"10854.72,-67.72 10853.28,-67.72 10853.28,-66.28 10854.72,-66.28 10854.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0114f71f84614d818f57cd7950b37607&amp;#45;&amp;#45;275532d4273242038313ad52e04db33c --&gt;\n&lt;g id=\"edge1733\" class=\"edge\"&gt;\n&lt;title&gt;0114f71f84614d818f57cd7950b37607&amp;#45;&amp;#45;275532d4273242038313ad52e04db33c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10761.47,-67C10764.2,-67 10850.25,-67 10852.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 864725e841c44d17a3eb338f00fcbd13 --&gt;\n&lt;g id=\"node1742\" class=\"node\"&gt;\n&lt;title&gt;864725e841c44d17a3eb338f00fcbd13&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11007.12,-67.72 11005.68,-67.72 11005.68,-66.28 11007.12,-66.28 11007.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 275532d4273242038313ad52e04db33c&amp;#45;&amp;#45;864725e841c44d17a3eb338f00fcbd13 --&gt;\n&lt;g id=\"edge1734\" class=\"edge\"&gt;\n&lt;title&gt;275532d4273242038313ad52e04db33c&amp;#45;&amp;#45;864725e841c44d17a3eb338f00fcbd13&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M10855.11,-67C10859.59,-67 11000.88,-67 11005.29,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 28196532968c4cac862a4a179e58df43 --&gt;\n&lt;g id=\"node1743\" class=\"node\"&gt;\n&lt;title&gt;28196532968c4cac862a4a179e58df43&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11159.52,-67.72 11158.08,-67.72 11158.08,-66.28 11159.52,-66.28 11159.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 864725e841c44d17a3eb338f00fcbd13&amp;#45;&amp;#45;28196532968c4cac862a4a179e58df43 --&gt;\n&lt;g id=\"edge1735\" class=\"edge\"&gt;\n&lt;title&gt;864725e841c44d17a3eb338f00fcbd13&amp;#45;&amp;#45;28196532968c4cac862a4a179e58df43&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11007.51,-67C11011.99,-67 11153.28,-67 11157.69,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 625289550f884827848afb81cbc221ee --&gt;\n&lt;g id=\"node1744\" class=\"node\"&gt;\n&lt;title&gt;625289550f884827848afb81cbc221ee&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11253.12,-67.72 11251.68,-67.72 11251.68,-66.28 11253.12,-66.28 11253.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 28196532968c4cac862a4a179e58df43&amp;#45;&amp;#45;625289550f884827848afb81cbc221ee --&gt;\n&lt;g id=\"edge1736\" class=\"edge\"&gt;\n&lt;title&gt;28196532968c4cac862a4a179e58df43&amp;#45;&amp;#45;625289550f884827848afb81cbc221ee&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11159.87,-67C11162.6,-67 11248.65,-67 11251.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 132631ad5953472092dd9e16207bad87 --&gt;\n&lt;g id=\"node1745\" class=\"node\"&gt;\n&lt;title&gt;132631ad5953472092dd9e16207bad87&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11346.72,-67.72 11345.28,-67.72 11345.28,-66.28 11346.72,-66.28 11346.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 625289550f884827848afb81cbc221ee&amp;#45;&amp;#45;132631ad5953472092dd9e16207bad87 --&gt;\n&lt;g id=\"edge1737\" class=\"edge\"&gt;\n&lt;title&gt;625289550f884827848afb81cbc221ee&amp;#45;&amp;#45;132631ad5953472092dd9e16207bad87&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11253.47,-67C11256.2,-67 11342.25,-67 11344.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- e2aa842b089740a2a18bb93ddc227d11 --&gt;\n&lt;g id=\"node1746\" class=\"node\"&gt;\n&lt;title&gt;e2aa842b089740a2a18bb93ddc227d11&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11499.12,-67.72 11497.68,-67.72 11497.68,-66.28 11499.12,-66.28 11499.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 132631ad5953472092dd9e16207bad87&amp;#45;&amp;#45;e2aa842b089740a2a18bb93ddc227d11 --&gt;\n&lt;g id=\"edge1738\" class=\"edge\"&gt;\n&lt;title&gt;132631ad5953472092dd9e16207bad87&amp;#45;&amp;#45;e2aa842b089740a2a18bb93ddc227d11&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11347.11,-67C11351.59,-67 11492.88,-67 11497.29,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8d874d299914feba54a81aabc0bddc2 --&gt;\n&lt;g id=\"node1747\" class=\"node\"&gt;\n&lt;title&gt;f8d874d299914feba54a81aabc0bddc2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11651.52,-67.72 11650.08,-67.72 11650.08,-66.28 11651.52,-66.28 11651.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e2aa842b089740a2a18bb93ddc227d11&amp;#45;&amp;#45;f8d874d299914feba54a81aabc0bddc2 --&gt;\n&lt;g id=\"edge1739\" class=\"edge\"&gt;\n&lt;title&gt;e2aa842b089740a2a18bb93ddc227d11&amp;#45;&amp;#45;f8d874d299914feba54a81aabc0bddc2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11499.51,-67C11503.99,-67 11645.28,-67 11649.69,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3dba8215ae3f4cbcbdd1f4a47f4b744b --&gt;\n&lt;g id=\"node1748\" class=\"node\"&gt;\n&lt;title&gt;3dba8215ae3f4cbcbdd1f4a47f4b744b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11745.12,-67.72 11743.68,-67.72 11743.68,-66.28 11745.12,-66.28 11745.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f8d874d299914feba54a81aabc0bddc2&amp;#45;&amp;#45;3dba8215ae3f4cbcbdd1f4a47f4b744b --&gt;\n&lt;g id=\"edge1740\" class=\"edge\"&gt;\n&lt;title&gt;f8d874d299914feba54a81aabc0bddc2&amp;#45;&amp;#45;3dba8215ae3f4cbcbdd1f4a47f4b744b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11651.87,-67C11654.6,-67 11740.65,-67 11743.34,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4a9a542ba35544a0a0430a8bc5c13b7a --&gt;\n&lt;g id=\"node1749\" class=\"node\"&gt;\n&lt;title&gt;4a9a542ba35544a0a0430a8bc5c13b7a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11838.72,-67.72 11837.28,-67.72 11837.28,-66.28 11838.72,-66.28 11838.72,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3dba8215ae3f4cbcbdd1f4a47f4b744b&amp;#45;&amp;#45;4a9a542ba35544a0a0430a8bc5c13b7a --&gt;\n&lt;g id=\"edge1741\" class=\"edge\"&gt;\n&lt;title&gt;3dba8215ae3f4cbcbdd1f4a47f4b744b&amp;#45;&amp;#45;4a9a542ba35544a0a0430a8bc5c13b7a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11745.47,-67C11748.2,-67 11834.25,-67 11836.94,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6988653cd8124f4aadeca14940ee4ea3 --&gt;\n&lt;g id=\"node1750\" class=\"node\"&gt;\n&lt;title&gt;6988653cd8124f4aadeca14940ee4ea3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"11991.12,-67.72 11989.68,-67.72 11989.68,-66.28 11991.12,-66.28 11991.12,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4a9a542ba35544a0a0430a8bc5c13b7a&amp;#45;&amp;#45;6988653cd8124f4aadeca14940ee4ea3 --&gt;\n&lt;g id=\"edge1742\" class=\"edge\"&gt;\n&lt;title&gt;4a9a542ba35544a0a0430a8bc5c13b7a&amp;#45;&amp;#45;6988653cd8124f4aadeca14940ee4ea3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11839.11,-67C11843.59,-67 11984.88,-67 11989.29,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9d09c72e0a244df3b9b2d8bf78250f2c --&gt;\n&lt;g id=\"node1751\" class=\"node\"&gt;\n&lt;title&gt;9d09c72e0a244df3b9b2d8bf78250f2c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12143.52,-67.72 12142.08,-67.72 12142.08,-66.28 12143.52,-66.28 12143.52,-67.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6988653cd8124f4aadeca14940ee4ea3&amp;#45;&amp;#45;9d09c72e0a244df3b9b2d8bf78250f2c --&gt;\n&lt;g id=\"edge1743\" class=\"edge\"&gt;\n&lt;title&gt;6988653cd8124f4aadeca14940ee4ea3&amp;#45;&amp;#45;9d09c72e0a244df3b9b2d8bf78250f2c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M11991.51,-67C11995.99,-67 12137.28,-67 12141.69,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 21ca499276a9438390f6dc616c520827 --&gt;\n&lt;g id=\"node1752\" class=\"node\"&gt;\n&lt;title&gt;21ca499276a9438390f6dc616c520827&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M12253.2,-95.8C12253.2,-95.8 12219.6,-95.8 12219.6,-95.8 12213.6,-95.8 12207.6,-89.8 12207.6,-83.8 12207.6,-83.8 12207.6,-50.2 12207.6,-50.2 12207.6,-44.2 12213.6,-38.2 12219.6,-38.2 12219.6,-38.2 12253.2,-38.2 12253.2,-38.2 12259.2,-38.2 12265.2,-44.2 12265.2,-50.2 12265.2,-50.2 12265.2,-83.8 12265.2,-83.8 12265.2,-89.8 12259.2,-95.8 12253.2,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12236.4\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 9d09c72e0a244df3b9b2d8bf78250f2c&amp;#45;&amp;#45;21ca499276a9438390f6dc616c520827 --&gt;\n&lt;g id=\"edge1744\" class=\"edge\"&gt;\n&lt;title&gt;9d09c72e0a244df3b9b2d8bf78250f2c&amp;#45;&amp;#45;21ca499276a9438390f6dc616c520827&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12143.87,-67C12145.59,-67 12180.48,-67 12206.68,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 21ca499276a9438390f6dc616c520827&amp;#45;&amp;#45;9e63cc073f5d4559a12881c5d1a90403 --&gt;\n&lt;g id=\"edge2053\" class=\"edge\"&gt;\n&lt;title&gt;21ca499276a9438390f6dc616c520827&amp;#45;&amp;#45;9e63cc073f5d4559a12881c5d1a90403&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12236.4,-96.74C12236.4,-99.98 12236.4,-103.21 12236.4,-106.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- b1b1919e7249442ea546dc5680f81cd0 --&gt;\n&lt;g id=\"node1753\" class=\"node\"&gt;\n&lt;title&gt;b1b1919e7249442ea546dc5680f81cd0&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M12464.4,-95.8C12464.4,-95.8 12313.2,-95.8 12313.2,-95.8 12307.2,-95.8 12301.2,-89.8 12301.2,-83.8 12301.2,-83.8 12301.2,-50.2 12301.2,-50.2 12301.2,-44.2 12307.2,-38.2 12313.2,-38.2 12313.2,-38.2 12464.4,-38.2 12464.4,-38.2 12470.4,-38.2 12476.4,-44.2 12476.4,-50.2 12476.4,-50.2 12476.4,-83.8 12476.4,-83.8 12476.4,-89.8 12470.4,-95.8 12464.4,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12388.8\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g0)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 21ca499276a9438390f6dc616c520827&amp;#45;&amp;#45;b1b1919e7249442ea546dc5680f81cd0 --&gt;\n&lt;g id=\"edge1745\" class=\"edge\"&gt;\n&lt;title&gt;21ca499276a9438390f6dc616c520827&amp;#45;&amp;#45;b1b1919e7249442ea546dc5680f81cd0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12266.04,-67C12276.1,-67 12287.99,-67 12300.33,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9f4515ea8d234c8fa52707ace1a2a938 --&gt;\n&lt;g id=\"node1754\" class=\"node\"&gt;\n&lt;title&gt;9f4515ea8d234c8fa52707ace1a2a938&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M12558,-95.8C12558,-95.8 12524.4,-95.8 12524.4,-95.8 12518.4,-95.8 12512.4,-89.8 12512.4,-83.8 12512.4,-83.8 12512.4,-50.2 12512.4,-50.2 12512.4,-44.2 12518.4,-38.2 12524.4,-38.2 12524.4,-38.2 12558,-38.2 12558,-38.2 12564,-38.2 12570,-44.2 12570,-50.2 12570,-50.2 12570,-83.8 12570,-83.8 12570,-89.8 12564,-95.8 12558,-95.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12541.2\" y=\"-61.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- b1b1919e7249442ea546dc5680f81cd0&amp;#45;&amp;#45;9f4515ea8d234c8fa52707ace1a2a938 --&gt;\n&lt;g id=\"edge1746\" class=\"edge\"&gt;\n&lt;title&gt;b1b1919e7249442ea546dc5680f81cd0&amp;#45;&amp;#45;9f4515ea8d234c8fa52707ace1a2a938&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12477.29,-67C12489.57,-67 12501.4,-67 12511.42,-67\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9f4515ea8d234c8fa52707ace1a2a938&amp;#45;&amp;#45;6aec09791e304b91a71ef9edaaa50673 --&gt;\n&lt;g id=\"edge2054\" class=\"edge\"&gt;\n&lt;title&gt;9f4515ea8d234c8fa52707ace1a2a938&amp;#45;&amp;#45;6aec09791e304b91a71ef9edaaa50673&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12541.2,-96.74C12541.2,-99.98 12541.2,-103.21 12541.2,-106.45\"/&gt;\n&lt;/g&gt;\n&lt;!-- c611bab6b1fb4fe7a821be46bf540ab4 --&gt;\n&lt;g id=\"node1755\" class=\"node\"&gt;\n&lt;title&gt;c611bab6b1fb4fe7a821be46bf540ab4&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M12721.2,-73.8C12721.2,-73.8 12618,-73.8 12618,-73.8 12612,-73.8 12606,-67.8 12606,-61.8 12606,-61.8 12606,-28.2 12606,-28.2 12606,-22.2 12612,-16.2 12618,-16.2 12618,-16.2 12721.2,-16.2 12721.2,-16.2 12727.2,-16.2 12733.2,-22.2 12733.2,-28.2 12733.2,-28.2 12733.2,-61.8 12733.2,-61.8 12733.2,-67.8 12727.2,-73.8 12721.2,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"12669.6\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b07)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 9f4515ea8d234c8fa52707ace1a2a938&amp;#45;&amp;#45;c611bab6b1fb4fe7a821be46bf540ab4 --&gt;\n&lt;g id=\"edge1747\" class=\"edge\"&gt;\n&lt;title&gt;9f4515ea8d234c8fa52707ace1a2a938&amp;#45;&amp;#45;c611bab6b1fb4fe7a821be46bf540ab4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12570.88,-62.01C12581.15,-60.22 12593.18,-58.13 12605.21,-56.03\"/&gt;\n&lt;/g&gt;\n&lt;!-- 071509c915ec4dfc946c7de673c9516d --&gt;\n&lt;g id=\"node1756\" class=\"node\"&gt;\n&lt;title&gt;071509c915ec4dfc946c7de673c9516d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12798.72,-45.72 12797.28,-45.72 12797.28,-44.28 12798.72,-44.28 12798.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c611bab6b1fb4fe7a821be46bf540ab4&amp;#45;&amp;#45;071509c915ec4dfc946c7de673c9516d --&gt;\n&lt;g id=\"edge1748\" class=\"edge\"&gt;\n&lt;title&gt;c611bab6b1fb4fe7a821be46bf540ab4&amp;#45;&amp;#45;071509c915ec4dfc946c7de673c9516d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12734.17,-45C12764.66,-45 12795.04,-45 12796.91,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 09ad04df85c049519cc724f7cdd974e7 --&gt;\n&lt;g id=\"node1757\" class=\"node\"&gt;\n&lt;title&gt;09ad04df85c049519cc724f7cdd974e7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12892.32,-45.72 12890.88,-45.72 12890.88,-44.28 12892.32,-44.28 12892.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 071509c915ec4dfc946c7de673c9516d&amp;#45;&amp;#45;09ad04df85c049519cc724f7cdd974e7 --&gt;\n&lt;g id=\"edge1749\" class=\"edge\"&gt;\n&lt;title&gt;071509c915ec4dfc946c7de673c9516d&amp;#45;&amp;#45;09ad04df85c049519cc724f7cdd974e7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12799.07,-45C12801.8,-45 12887.85,-45 12890.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1ac246b5529548bf86ad3dd86cb3da02 --&gt;\n&lt;g id=\"node1758\" class=\"node\"&gt;\n&lt;title&gt;1ac246b5529548bf86ad3dd86cb3da02&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"12985.92,-45.72 12984.48,-45.72 12984.48,-44.28 12985.92,-44.28 12985.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 09ad04df85c049519cc724f7cdd974e7&amp;#45;&amp;#45;1ac246b5529548bf86ad3dd86cb3da02 --&gt;\n&lt;g id=\"edge1750\" class=\"edge\"&gt;\n&lt;title&gt;09ad04df85c049519cc724f7cdd974e7&amp;#45;&amp;#45;1ac246b5529548bf86ad3dd86cb3da02&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12892.67,-45C12895.4,-45 12981.45,-45 12984.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 12bc6b93a2c343088edf1d2067e399a0 --&gt;\n&lt;g id=\"node1759\" class=\"node\"&gt;\n&lt;title&gt;12bc6b93a2c343088edf1d2067e399a0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13079.52,-45.72 13078.08,-45.72 13078.08,-44.28 13079.52,-44.28 13079.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1ac246b5529548bf86ad3dd86cb3da02&amp;#45;&amp;#45;12bc6b93a2c343088edf1d2067e399a0 --&gt;\n&lt;g id=\"edge1751\" class=\"edge\"&gt;\n&lt;title&gt;1ac246b5529548bf86ad3dd86cb3da02&amp;#45;&amp;#45;12bc6b93a2c343088edf1d2067e399a0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M12986.27,-45C12989,-45 13075.05,-45 13077.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2831adcb1dc148feba4f63f0feb311a5 --&gt;\n&lt;g id=\"node1760\" class=\"node\"&gt;\n&lt;title&gt;2831adcb1dc148feba4f63f0feb311a5&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13173.12,-45.72 13171.68,-45.72 13171.68,-44.28 13173.12,-44.28 13173.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 12bc6b93a2c343088edf1d2067e399a0&amp;#45;&amp;#45;2831adcb1dc148feba4f63f0feb311a5 --&gt;\n&lt;g id=\"edge1752\" class=\"edge\"&gt;\n&lt;title&gt;12bc6b93a2c343088edf1d2067e399a0&amp;#45;&amp;#45;2831adcb1dc148feba4f63f0feb311a5&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13079.87,-45C13082.6,-45 13168.65,-45 13171.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- f131dd3f02b34015a36b7b6bc4af1182 --&gt;\n&lt;g id=\"node1761\" class=\"node\"&gt;\n&lt;title&gt;f131dd3f02b34015a36b7b6bc4af1182&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13266.72,-45.72 13265.28,-45.72 13265.28,-44.28 13266.72,-44.28 13266.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2831adcb1dc148feba4f63f0feb311a5&amp;#45;&amp;#45;f131dd3f02b34015a36b7b6bc4af1182 --&gt;\n&lt;g id=\"edge1753\" class=\"edge\"&gt;\n&lt;title&gt;2831adcb1dc148feba4f63f0feb311a5&amp;#45;&amp;#45;f131dd3f02b34015a36b7b6bc4af1182&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13173.47,-45C13176.2,-45 13262.25,-45 13264.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- e5a0aef8c35744ea907d3462c240288e --&gt;\n&lt;g id=\"node1762\" class=\"node\"&gt;\n&lt;title&gt;e5a0aef8c35744ea907d3462c240288e&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M13376.4,-73.8C13376.4,-73.8 13342.8,-73.8 13342.8,-73.8 13336.8,-73.8 13330.8,-67.8 13330.8,-61.8 13330.8,-61.8 13330.8,-28.2 13330.8,-28.2 13330.8,-22.2 13336.8,-16.2 13342.8,-16.2 13342.8,-16.2 13376.4,-16.2 13376.4,-16.2 13382.4,-16.2 13388.4,-22.2 13388.4,-28.2 13388.4,-28.2 13388.4,-61.8 13388.4,-61.8 13388.4,-67.8 13382.4,-73.8 13376.4,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"13359.6\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- f131dd3f02b34015a36b7b6bc4af1182&amp;#45;&amp;#45;e5a0aef8c35744ea907d3462c240288e --&gt;\n&lt;g id=\"edge1754\" class=\"edge\"&gt;\n&lt;title&gt;f131dd3f02b34015a36b7b6bc4af1182&amp;#45;&amp;#45;e5a0aef8c35744ea907d3462c240288e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13267.07,-45C13268.79,-45 13303.68,-45 13329.88,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- e5a0aef8c35744ea907d3462c240288e&amp;#45;&amp;#45;66cc98e92f334148908ccafb7335facd --&gt;\n&lt;g id=\"edge2055\" class=\"edge\"&gt;\n&lt;title&gt;e5a0aef8c35744ea907d3462c240288e&amp;#45;&amp;#45;66cc98e92f334148908ccafb7335facd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13359.6,-74.65C13359.6,-85.2 13359.6,-95.76 13359.6,-106.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- e38c6868bdfa4adfbf5b4eb66a632ab7 --&gt;\n&lt;g id=\"node1763\" class=\"node\"&gt;\n&lt;title&gt;e38c6868bdfa4adfbf5b4eb66a632ab7&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M13575.6,-73.8C13575.6,-73.8 13436.4,-73.8 13436.4,-73.8 13430.4,-73.8 13424.4,-67.8 13424.4,-61.8 13424.4,-61.8 13424.4,-28.2 13424.4,-28.2 13424.4,-22.2 13430.4,-16.2 13436.4,-16.2 13436.4,-16.2 13575.6,-16.2 13575.6,-16.2 13581.6,-16.2 13587.6,-22.2 13587.6,-28.2 13587.6,-28.2 13587.6,-61.8 13587.6,-61.8 13587.6,-67.8 13581.6,-73.8 13575.6,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"13506\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- e5a0aef8c35744ea907d3462c240288e&amp;#45;&amp;#45;e38c6868bdfa4adfbf5b4eb66a632ab7 --&gt;\n&lt;g id=\"edge1755\" class=\"edge\"&gt;\n&lt;title&gt;e5a0aef8c35744ea907d3462c240288e&amp;#45;&amp;#45;e38c6868bdfa4adfbf5b4eb66a632ab7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13389.13,-45C13399.24,-45 13411.18,-45 13423.48,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 370e2707d59d4b12bc97b87d4e08c056 --&gt;\n&lt;g id=\"node1764\" class=\"node\"&gt;\n&lt;title&gt;370e2707d59d4b12bc97b87d4e08c056&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M13669.2,-73.8C13669.2,-73.8 13635.6,-73.8 13635.6,-73.8 13629.6,-73.8 13623.6,-67.8 13623.6,-61.8 13623.6,-61.8 13623.6,-28.2 13623.6,-28.2 13623.6,-22.2 13629.6,-16.2 13635.6,-16.2 13635.6,-16.2 13669.2,-16.2 13669.2,-16.2 13675.2,-16.2 13681.2,-22.2 13681.2,-28.2 13681.2,-28.2 13681.2,-61.8 13681.2,-61.8 13681.2,-67.8 13675.2,-73.8 13669.2,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"13652.4\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- e38c6868bdfa4adfbf5b4eb66a632ab7&amp;#45;&amp;#45;370e2707d59d4b12bc97b87d4e08c056 --&gt;\n&lt;g id=\"edge1756\" class=\"edge\"&gt;\n&lt;title&gt;e38c6868bdfa4adfbf5b4eb66a632ab7&amp;#45;&amp;#45;370e2707d59d4b12bc97b87d4e08c056&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13588.48,-45C13600.77,-45 13612.69,-45 13622.78,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 370e2707d59d4b12bc97b87d4e08c056&amp;#45;&amp;#45;cb19981f10ad424f9f64d7defb2f1bfa --&gt;\n&lt;g id=\"edge2056\" class=\"edge\"&gt;\n&lt;title&gt;370e2707d59d4b12bc97b87d4e08c056&amp;#45;&amp;#45;cb19981f10ad424f9f64d7defb2f1bfa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13652.4,-74.65C13652.4,-85.2 13652.4,-95.76 13652.4,-106.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- c459a41a98f34e2381750a91de2f1a2d --&gt;\n&lt;g id=\"node1765\" class=\"node\"&gt;\n&lt;title&gt;c459a41a98f34e2381750a91de2f1a2d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13746.72,-45.72 13745.28,-45.72 13745.28,-44.28 13746.72,-44.28 13746.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 370e2707d59d4b12bc97b87d4e08c056&amp;#45;&amp;#45;c459a41a98f34e2381750a91de2f1a2d --&gt;\n&lt;g id=\"edge1757\" class=\"edge\"&gt;\n&lt;title&gt;370e2707d59d4b12bc97b87d4e08c056&amp;#45;&amp;#45;c459a41a98f34e2381750a91de2f1a2d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13681.88,-45C13707.93,-45 13742.74,-45 13744.9,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 105af1283a644b26a269b4d620ba07d8 --&gt;\n&lt;g id=\"node1766\" class=\"node\"&gt;\n&lt;title&gt;105af1283a644b26a269b4d620ba07d8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13840.32,-45.72 13838.88,-45.72 13838.88,-44.28 13840.32,-44.28 13840.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c459a41a98f34e2381750a91de2f1a2d&amp;#45;&amp;#45;105af1283a644b26a269b4d620ba07d8 --&gt;\n&lt;g id=\"edge1758\" class=\"edge\"&gt;\n&lt;title&gt;c459a41a98f34e2381750a91de2f1a2d&amp;#45;&amp;#45;105af1283a644b26a269b4d620ba07d8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13747.07,-45C13749.8,-45 13835.85,-45 13838.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a259bac027f4d159369729ca7747d1c --&gt;\n&lt;g id=\"node1767\" class=\"node\"&gt;\n&lt;title&gt;0a259bac027f4d159369729ca7747d1c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"13933.92,-45.72 13932.48,-45.72 13932.48,-44.28 13933.92,-44.28 13933.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 105af1283a644b26a269b4d620ba07d8&amp;#45;&amp;#45;0a259bac027f4d159369729ca7747d1c --&gt;\n&lt;g id=\"edge1759\" class=\"edge\"&gt;\n&lt;title&gt;105af1283a644b26a269b4d620ba07d8&amp;#45;&amp;#45;0a259bac027f4d159369729ca7747d1c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13840.67,-45C13843.4,-45 13929.45,-45 13932.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 22ca21ada01045e4b4dfb30fb4792c49 --&gt;\n&lt;g id=\"node1768\" class=\"node\"&gt;\n&lt;title&gt;22ca21ada01045e4b4dfb30fb4792c49&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14027.52,-45.72 14026.08,-45.72 14026.08,-44.28 14027.52,-44.28 14027.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0a259bac027f4d159369729ca7747d1c&amp;#45;&amp;#45;22ca21ada01045e4b4dfb30fb4792c49 --&gt;\n&lt;g id=\"edge1760\" class=\"edge\"&gt;\n&lt;title&gt;0a259bac027f4d159369729ca7747d1c&amp;#45;&amp;#45;22ca21ada01045e4b4dfb30fb4792c49&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M13934.27,-45C13937,-45 14023.05,-45 14025.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 973751f25b1e48bba52bf38ec4c0d2cf --&gt;\n&lt;g id=\"node1769\" class=\"node\"&gt;\n&lt;title&gt;973751f25b1e48bba52bf38ec4c0d2cf&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14121.12,-45.72 14119.68,-45.72 14119.68,-44.28 14121.12,-44.28 14121.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 22ca21ada01045e4b4dfb30fb4792c49&amp;#45;&amp;#45;973751f25b1e48bba52bf38ec4c0d2cf --&gt;\n&lt;g id=\"edge1761\" class=\"edge\"&gt;\n&lt;title&gt;22ca21ada01045e4b4dfb30fb4792c49&amp;#45;&amp;#45;973751f25b1e48bba52bf38ec4c0d2cf&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14027.87,-45C14030.6,-45 14116.65,-45 14119.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 600cdd18d03b4d00be2e74bbc20862ba --&gt;\n&lt;g id=\"node1770\" class=\"node\"&gt;\n&lt;title&gt;600cdd18d03b4d00be2e74bbc20862ba&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14214.72,-45.72 14213.28,-45.72 14213.28,-44.28 14214.72,-44.28 14214.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 973751f25b1e48bba52bf38ec4c0d2cf&amp;#45;&amp;#45;600cdd18d03b4d00be2e74bbc20862ba --&gt;\n&lt;g id=\"edge1762\" class=\"edge\"&gt;\n&lt;title&gt;973751f25b1e48bba52bf38ec4c0d2cf&amp;#45;&amp;#45;600cdd18d03b4d00be2e74bbc20862ba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14121.47,-45C14124.2,-45 14210.25,-45 14212.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 39bb37d1330c4ed0973d1737cb95a371 --&gt;\n&lt;g id=\"node1771\" class=\"node\"&gt;\n&lt;title&gt;39bb37d1330c4ed0973d1737cb95a371&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14308.32,-45.72 14306.88,-45.72 14306.88,-44.28 14308.32,-44.28 14308.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 600cdd18d03b4d00be2e74bbc20862ba&amp;#45;&amp;#45;39bb37d1330c4ed0973d1737cb95a371 --&gt;\n&lt;g id=\"edge1763\" class=\"edge\"&gt;\n&lt;title&gt;600cdd18d03b4d00be2e74bbc20862ba&amp;#45;&amp;#45;39bb37d1330c4ed0973d1737cb95a371&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14215.07,-45C14217.8,-45 14303.85,-45 14306.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- a3fe2d35b34e4582b29d4dede5f8ee0e --&gt;\n&lt;g id=\"node1772\" class=\"node\"&gt;\n&lt;title&gt;a3fe2d35b34e4582b29d4dede5f8ee0e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14460.72,-45.72 14459.28,-45.72 14459.28,-44.28 14460.72,-44.28 14460.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 39bb37d1330c4ed0973d1737cb95a371&amp;#45;&amp;#45;a3fe2d35b34e4582b29d4dede5f8ee0e --&gt;\n&lt;g id=\"edge1764\" class=\"edge\"&gt;\n&lt;title&gt;39bb37d1330c4ed0973d1737cb95a371&amp;#45;&amp;#45;a3fe2d35b34e4582b29d4dede5f8ee0e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14308.71,-45C14313.19,-45 14454.48,-45 14458.89,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- c2d6840c037c4e2c866e1ef3eca68b21 --&gt;\n&lt;g id=\"node1773\" class=\"node\"&gt;\n&lt;title&gt;c2d6840c037c4e2c866e1ef3eca68b21&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14613.12,-45.72 14611.68,-45.72 14611.68,-44.28 14613.12,-44.28 14613.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a3fe2d35b34e4582b29d4dede5f8ee0e&amp;#45;&amp;#45;c2d6840c037c4e2c866e1ef3eca68b21 --&gt;\n&lt;g id=\"edge1765\" class=\"edge\"&gt;\n&lt;title&gt;a3fe2d35b34e4582b29d4dede5f8ee0e&amp;#45;&amp;#45;c2d6840c037c4e2c866e1ef3eca68b21&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14461.11,-45C14465.59,-45 14606.88,-45 14611.29,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 880680e224a7464295af70b4fbbb2ca4 --&gt;\n&lt;g id=\"node1774\" class=\"node\"&gt;\n&lt;title&gt;880680e224a7464295af70b4fbbb2ca4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14706.72,-45.72 14705.28,-45.72 14705.28,-44.28 14706.72,-44.28 14706.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c2d6840c037c4e2c866e1ef3eca68b21&amp;#45;&amp;#45;880680e224a7464295af70b4fbbb2ca4 --&gt;\n&lt;g id=\"edge1766\" class=\"edge\"&gt;\n&lt;title&gt;c2d6840c037c4e2c866e1ef3eca68b21&amp;#45;&amp;#45;880680e224a7464295af70b4fbbb2ca4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14613.47,-45C14616.2,-45 14702.25,-45 14704.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- a91d187ca46a46a197f199da9fc74b71 --&gt;\n&lt;g id=\"node1775\" class=\"node\"&gt;\n&lt;title&gt;a91d187ca46a46a197f199da9fc74b71&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14800.32,-45.72 14798.88,-45.72 14798.88,-44.28 14800.32,-44.28 14800.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 880680e224a7464295af70b4fbbb2ca4&amp;#45;&amp;#45;a91d187ca46a46a197f199da9fc74b71 --&gt;\n&lt;g id=\"edge1767\" class=\"edge\"&gt;\n&lt;title&gt;880680e224a7464295af70b4fbbb2ca4&amp;#45;&amp;#45;a91d187ca46a46a197f199da9fc74b71&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14707.07,-45C14709.8,-45 14795.85,-45 14798.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 20620a3370e8459b8a2ca15b0376ddae --&gt;\n&lt;g id=\"node1776\" class=\"node\"&gt;\n&lt;title&gt;20620a3370e8459b8a2ca15b0376ddae&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14893.92,-45.72 14892.48,-45.72 14892.48,-44.28 14893.92,-44.28 14893.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a91d187ca46a46a197f199da9fc74b71&amp;#45;&amp;#45;20620a3370e8459b8a2ca15b0376ddae --&gt;\n&lt;g id=\"edge1768\" class=\"edge\"&gt;\n&lt;title&gt;a91d187ca46a46a197f199da9fc74b71&amp;#45;&amp;#45;20620a3370e8459b8a2ca15b0376ddae&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14800.67,-45C14803.4,-45 14889.45,-45 14892.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 64c552e2fcd04103a6937bc2c1c4a3a4 --&gt;\n&lt;g id=\"node1777\" class=\"node\"&gt;\n&lt;title&gt;64c552e2fcd04103a6937bc2c1c4a3a4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"14987.52,-45.72 14986.08,-45.72 14986.08,-44.28 14987.52,-44.28 14987.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 20620a3370e8459b8a2ca15b0376ddae&amp;#45;&amp;#45;64c552e2fcd04103a6937bc2c1c4a3a4 --&gt;\n&lt;g id=\"edge1769\" class=\"edge\"&gt;\n&lt;title&gt;20620a3370e8459b8a2ca15b0376ddae&amp;#45;&amp;#45;64c552e2fcd04103a6937bc2c1c4a3a4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14894.27,-45C14897,-45 14983.05,-45 14985.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5bc4853400d0494181eda5935143a067 --&gt;\n&lt;g id=\"node1778\" class=\"node\"&gt;\n&lt;title&gt;5bc4853400d0494181eda5935143a067&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15081.12,-45.72 15079.68,-45.72 15079.68,-44.28 15081.12,-44.28 15081.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 64c552e2fcd04103a6937bc2c1c4a3a4&amp;#45;&amp;#45;5bc4853400d0494181eda5935143a067 --&gt;\n&lt;g id=\"edge1770\" class=\"edge\"&gt;\n&lt;title&gt;64c552e2fcd04103a6937bc2c1c4a3a4&amp;#45;&amp;#45;5bc4853400d0494181eda5935143a067&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M14987.87,-45C14990.6,-45 15076.65,-45 15079.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 24ca520ceafc4102b5bb8f8a5a0772ed --&gt;\n&lt;g id=\"node1779\" class=\"node\"&gt;\n&lt;title&gt;24ca520ceafc4102b5bb8f8a5a0772ed&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15233.52,-45.72 15232.08,-45.72 15232.08,-44.28 15233.52,-44.28 15233.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5bc4853400d0494181eda5935143a067&amp;#45;&amp;#45;24ca520ceafc4102b5bb8f8a5a0772ed --&gt;\n&lt;g id=\"edge1771\" class=\"edge\"&gt;\n&lt;title&gt;5bc4853400d0494181eda5935143a067&amp;#45;&amp;#45;24ca520ceafc4102b5bb8f8a5a0772ed&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15081.51,-45C15085.99,-45 15227.28,-45 15231.69,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 355900f1ca7148a4b6bdb6f6ccd43bcc --&gt;\n&lt;g id=\"node1780\" class=\"node\"&gt;\n&lt;title&gt;355900f1ca7148a4b6bdb6f6ccd43bcc&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15385.92,-45.72 15384.48,-45.72 15384.48,-44.28 15385.92,-44.28 15385.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 24ca520ceafc4102b5bb8f8a5a0772ed&amp;#45;&amp;#45;355900f1ca7148a4b6bdb6f6ccd43bcc --&gt;\n&lt;g id=\"edge1772\" class=\"edge\"&gt;\n&lt;title&gt;24ca520ceafc4102b5bb8f8a5a0772ed&amp;#45;&amp;#45;355900f1ca7148a4b6bdb6f6ccd43bcc&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15233.91,-45C15238.39,-45 15379.68,-45 15384.09,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- b06ccc749df7407b992b2868ff96094b --&gt;\n&lt;g id=\"node1781\" class=\"node\"&gt;\n&lt;title&gt;b06ccc749df7407b992b2868ff96094b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15479.52,-45.72 15478.08,-45.72 15478.08,-44.28 15479.52,-44.28 15479.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 355900f1ca7148a4b6bdb6f6ccd43bcc&amp;#45;&amp;#45;b06ccc749df7407b992b2868ff96094b --&gt;\n&lt;g id=\"edge1773\" class=\"edge\"&gt;\n&lt;title&gt;355900f1ca7148a4b6bdb6f6ccd43bcc&amp;#45;&amp;#45;b06ccc749df7407b992b2868ff96094b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15386.27,-45C15389,-45 15475.05,-45 15477.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c0619c1edec483fafc5febaf1f59ed2 --&gt;\n&lt;g id=\"node1782\" class=\"node\"&gt;\n&lt;title&gt;7c0619c1edec483fafc5febaf1f59ed2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15573.12,-45.72 15571.68,-45.72 15571.68,-44.28 15573.12,-44.28 15573.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b06ccc749df7407b992b2868ff96094b&amp;#45;&amp;#45;7c0619c1edec483fafc5febaf1f59ed2 --&gt;\n&lt;g id=\"edge1774\" class=\"edge\"&gt;\n&lt;title&gt;b06ccc749df7407b992b2868ff96094b&amp;#45;&amp;#45;7c0619c1edec483fafc5febaf1f59ed2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15479.87,-45C15482.6,-45 15568.65,-45 15571.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- a508bc22477f47fd98150d2c20401573 --&gt;\n&lt;g id=\"node1783\" class=\"node\"&gt;\n&lt;title&gt;a508bc22477f47fd98150d2c20401573&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15666.72,-45.72 15665.28,-45.72 15665.28,-44.28 15666.72,-44.28 15666.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c0619c1edec483fafc5febaf1f59ed2&amp;#45;&amp;#45;a508bc22477f47fd98150d2c20401573 --&gt;\n&lt;g id=\"edge1775\" class=\"edge\"&gt;\n&lt;title&gt;7c0619c1edec483fafc5febaf1f59ed2&amp;#45;&amp;#45;a508bc22477f47fd98150d2c20401573&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15573.47,-45C15576.2,-45 15662.25,-45 15664.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52e7acc89380408880ecb0c190a11d2b --&gt;\n&lt;g id=\"node1784\" class=\"node\"&gt;\n&lt;title&gt;52e7acc89380408880ecb0c190a11d2b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15760.32,-45.72 15758.88,-45.72 15758.88,-44.28 15760.32,-44.28 15760.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a508bc22477f47fd98150d2c20401573&amp;#45;&amp;#45;52e7acc89380408880ecb0c190a11d2b --&gt;\n&lt;g id=\"edge1776\" class=\"edge\"&gt;\n&lt;title&gt;a508bc22477f47fd98150d2c20401573&amp;#45;&amp;#45;52e7acc89380408880ecb0c190a11d2b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15667.07,-45C15669.8,-45 15755.85,-45 15758.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 14ef35d35d49496da2cbde87074949cd --&gt;\n&lt;g id=\"node1785\" class=\"node\"&gt;\n&lt;title&gt;14ef35d35d49496da2cbde87074949cd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15853.92,-45.72 15852.48,-45.72 15852.48,-44.28 15853.92,-44.28 15853.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 52e7acc89380408880ecb0c190a11d2b&amp;#45;&amp;#45;14ef35d35d49496da2cbde87074949cd --&gt;\n&lt;g id=\"edge1777\" class=\"edge\"&gt;\n&lt;title&gt;52e7acc89380408880ecb0c190a11d2b&amp;#45;&amp;#45;14ef35d35d49496da2cbde87074949cd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15760.67,-45C15763.4,-45 15849.45,-45 15852.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e59ffd6e997466ba7d9dba0746dacd9 --&gt;\n&lt;g id=\"node1786\" class=\"node\"&gt;\n&lt;title&gt;6e59ffd6e997466ba7d9dba0746dacd9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"15947.52,-45.72 15946.08,-45.72 15946.08,-44.28 15947.52,-44.28 15947.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 14ef35d35d49496da2cbde87074949cd&amp;#45;&amp;#45;6e59ffd6e997466ba7d9dba0746dacd9 --&gt;\n&lt;g id=\"edge1778\" class=\"edge\"&gt;\n&lt;title&gt;14ef35d35d49496da2cbde87074949cd&amp;#45;&amp;#45;6e59ffd6e997466ba7d9dba0746dacd9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15854.27,-45C15857,-45 15943.05,-45 15945.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17c7826791384d3d8c519215d7cbefc9 --&gt;\n&lt;g id=\"node1787\" class=\"node\"&gt;\n&lt;title&gt;17c7826791384d3d8c519215d7cbefc9&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16041.12,-45.72 16039.68,-45.72 16039.68,-44.28 16041.12,-44.28 16041.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6e59ffd6e997466ba7d9dba0746dacd9&amp;#45;&amp;#45;17c7826791384d3d8c519215d7cbefc9 --&gt;\n&lt;g id=\"edge1779\" class=\"edge\"&gt;\n&lt;title&gt;6e59ffd6e997466ba7d9dba0746dacd9&amp;#45;&amp;#45;17c7826791384d3d8c519215d7cbefc9&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M15947.87,-45C15950.6,-45 16036.65,-45 16039.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 364ca7e258e345ecadcb2bbe3202908c --&gt;\n&lt;g id=\"node1788\" class=\"node\"&gt;\n&lt;title&gt;364ca7e258e345ecadcb2bbe3202908c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16193.52,-45.72 16192.08,-45.72 16192.08,-44.28 16193.52,-44.28 16193.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 17c7826791384d3d8c519215d7cbefc9&amp;#45;&amp;#45;364ca7e258e345ecadcb2bbe3202908c --&gt;\n&lt;g id=\"edge1780\" class=\"edge\"&gt;\n&lt;title&gt;17c7826791384d3d8c519215d7cbefc9&amp;#45;&amp;#45;364ca7e258e345ecadcb2bbe3202908c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16041.51,-45C16045.99,-45 16187.28,-45 16191.69,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 315cea1d4a7b4224827f83235b7a7757 --&gt;\n&lt;g id=\"node1789\" class=\"node\"&gt;\n&lt;title&gt;315cea1d4a7b4224827f83235b7a7757&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16345.92,-45.72 16344.48,-45.72 16344.48,-44.28 16345.92,-44.28 16345.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 364ca7e258e345ecadcb2bbe3202908c&amp;#45;&amp;#45;315cea1d4a7b4224827f83235b7a7757 --&gt;\n&lt;g id=\"edge1781\" class=\"edge\"&gt;\n&lt;title&gt;364ca7e258e345ecadcb2bbe3202908c&amp;#45;&amp;#45;315cea1d4a7b4224827f83235b7a7757&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16193.91,-45C16198.39,-45 16339.68,-45 16344.09,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- a06ce6fe320e4e1c9aa4d2acfcbc2f84 --&gt;\n&lt;g id=\"node1790\" class=\"node\"&gt;\n&lt;title&gt;a06ce6fe320e4e1c9aa4d2acfcbc2f84&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16439.52,-45.72 16438.08,-45.72 16438.08,-44.28 16439.52,-44.28 16439.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 315cea1d4a7b4224827f83235b7a7757&amp;#45;&amp;#45;a06ce6fe320e4e1c9aa4d2acfcbc2f84 --&gt;\n&lt;g id=\"edge1782\" class=\"edge\"&gt;\n&lt;title&gt;315cea1d4a7b4224827f83235b7a7757&amp;#45;&amp;#45;a06ce6fe320e4e1c9aa4d2acfcbc2f84&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16346.27,-45C16349,-45 16435.05,-45 16437.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2b5abc27686842bf8a494ec975a79bd8 --&gt;\n&lt;g id=\"node1791\" class=\"node\"&gt;\n&lt;title&gt;2b5abc27686842bf8a494ec975a79bd8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16533.12,-45.72 16531.68,-45.72 16531.68,-44.28 16533.12,-44.28 16533.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a06ce6fe320e4e1c9aa4d2acfcbc2f84&amp;#45;&amp;#45;2b5abc27686842bf8a494ec975a79bd8 --&gt;\n&lt;g id=\"edge1783\" class=\"edge\"&gt;\n&lt;title&gt;a06ce6fe320e4e1c9aa4d2acfcbc2f84&amp;#45;&amp;#45;2b5abc27686842bf8a494ec975a79bd8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16439.87,-45C16442.6,-45 16528.65,-45 16531.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 74655cd21311483da45ac539f12e9864 --&gt;\n&lt;g id=\"node1792\" class=\"node\"&gt;\n&lt;title&gt;74655cd21311483da45ac539f12e9864&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16626.72,-45.72 16625.28,-45.72 16625.28,-44.28 16626.72,-44.28 16626.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2b5abc27686842bf8a494ec975a79bd8&amp;#45;&amp;#45;74655cd21311483da45ac539f12e9864 --&gt;\n&lt;g id=\"edge1784\" class=\"edge\"&gt;\n&lt;title&gt;2b5abc27686842bf8a494ec975a79bd8&amp;#45;&amp;#45;74655cd21311483da45ac539f12e9864&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16533.47,-45C16536.2,-45 16622.25,-45 16624.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- b78207243b8a4a3394a3f9104b4e1cd4 --&gt;\n&lt;g id=\"node1793\" class=\"node\"&gt;\n&lt;title&gt;b78207243b8a4a3394a3f9104b4e1cd4&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16720.32,-45.72 16718.88,-45.72 16718.88,-44.28 16720.32,-44.28 16720.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 74655cd21311483da45ac539f12e9864&amp;#45;&amp;#45;b78207243b8a4a3394a3f9104b4e1cd4 --&gt;\n&lt;g id=\"edge1785\" class=\"edge\"&gt;\n&lt;title&gt;74655cd21311483da45ac539f12e9864&amp;#45;&amp;#45;b78207243b8a4a3394a3f9104b4e1cd4&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16627.07,-45C16629.8,-45 16715.85,-45 16718.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4f98c9b21284f7b9d9e39bd010da32a --&gt;\n&lt;g id=\"node1794\" class=\"node\"&gt;\n&lt;title&gt;e4f98c9b21284f7b9d9e39bd010da32a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16813.92,-45.72 16812.48,-45.72 16812.48,-44.28 16813.92,-44.28 16813.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b78207243b8a4a3394a3f9104b4e1cd4&amp;#45;&amp;#45;e4f98c9b21284f7b9d9e39bd010da32a --&gt;\n&lt;g id=\"edge1786\" class=\"edge\"&gt;\n&lt;title&gt;b78207243b8a4a3394a3f9104b4e1cd4&amp;#45;&amp;#45;e4f98c9b21284f7b9d9e39bd010da32a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16720.67,-45C16723.4,-45 16809.45,-45 16812.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- ff734fa7e8a34b7aa7a47bb6627d92be --&gt;\n&lt;g id=\"node1795\" class=\"node\"&gt;\n&lt;title&gt;ff734fa7e8a34b7aa7a47bb6627d92be&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"16907.52,-45.72 16906.08,-45.72 16906.08,-44.28 16907.52,-44.28 16907.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e4f98c9b21284f7b9d9e39bd010da32a&amp;#45;&amp;#45;ff734fa7e8a34b7aa7a47bb6627d92be --&gt;\n&lt;g id=\"edge1787\" class=\"edge\"&gt;\n&lt;title&gt;e4f98c9b21284f7b9d9e39bd010da32a&amp;#45;&amp;#45;ff734fa7e8a34b7aa7a47bb6627d92be&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16814.27,-45C16817,-45 16903.05,-45 16905.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- d4250537898141508bfbc98b0c40b497 --&gt;\n&lt;g id=\"node1796\" class=\"node\"&gt;\n&lt;title&gt;d4250537898141508bfbc98b0c40b497&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17059.92,-45.72 17058.48,-45.72 17058.48,-44.28 17059.92,-44.28 17059.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ff734fa7e8a34b7aa7a47bb6627d92be&amp;#45;&amp;#45;d4250537898141508bfbc98b0c40b497 --&gt;\n&lt;g id=\"edge1788\" class=\"edge\"&gt;\n&lt;title&gt;ff734fa7e8a34b7aa7a47bb6627d92be&amp;#45;&amp;#45;d4250537898141508bfbc98b0c40b497&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M16907.91,-45C16912.39,-45 17053.68,-45 17058.09,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- bac9620193e749039740b74616f36351 --&gt;\n&lt;g id=\"node1797\" class=\"node\"&gt;\n&lt;title&gt;bac9620193e749039740b74616f36351&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17212.32,-45.72 17210.88,-45.72 17210.88,-44.28 17212.32,-44.28 17212.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d4250537898141508bfbc98b0c40b497&amp;#45;&amp;#45;bac9620193e749039740b74616f36351 --&gt;\n&lt;g id=\"edge1789\" class=\"edge\"&gt;\n&lt;title&gt;d4250537898141508bfbc98b0c40b497&amp;#45;&amp;#45;bac9620193e749039740b74616f36351&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17060.31,-45C17064.79,-45 17206.08,-45 17210.49,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0183f796521449f0a289fa5029003636 --&gt;\n&lt;g id=\"node1798\" class=\"node\"&gt;\n&lt;title&gt;0183f796521449f0a289fa5029003636&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17305.92,-45.72 17304.48,-45.72 17304.48,-44.28 17305.92,-44.28 17305.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bac9620193e749039740b74616f36351&amp;#45;&amp;#45;0183f796521449f0a289fa5029003636 --&gt;\n&lt;g id=\"edge1790\" class=\"edge\"&gt;\n&lt;title&gt;bac9620193e749039740b74616f36351&amp;#45;&amp;#45;0183f796521449f0a289fa5029003636&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17212.67,-45C17215.4,-45 17301.45,-45 17304.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 92ddc0a3b9c743ecad13a0fe97586b06 --&gt;\n&lt;g id=\"node1799\" class=\"node\"&gt;\n&lt;title&gt;92ddc0a3b9c743ecad13a0fe97586b06&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17399.52,-45.72 17398.08,-45.72 17398.08,-44.28 17399.52,-44.28 17399.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0183f796521449f0a289fa5029003636&amp;#45;&amp;#45;92ddc0a3b9c743ecad13a0fe97586b06 --&gt;\n&lt;g id=\"edge1791\" class=\"edge\"&gt;\n&lt;title&gt;0183f796521449f0a289fa5029003636&amp;#45;&amp;#45;92ddc0a3b9c743ecad13a0fe97586b06&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17306.27,-45C17309,-45 17395.05,-45 17397.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- fe5eea8704174c42b73847ea1be6e622 --&gt;\n&lt;g id=\"node1800\" class=\"node\"&gt;\n&lt;title&gt;fe5eea8704174c42b73847ea1be6e622&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17493.12,-45.72 17491.68,-45.72 17491.68,-44.28 17493.12,-44.28 17493.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 92ddc0a3b9c743ecad13a0fe97586b06&amp;#45;&amp;#45;fe5eea8704174c42b73847ea1be6e622 --&gt;\n&lt;g id=\"edge1792\" class=\"edge\"&gt;\n&lt;title&gt;92ddc0a3b9c743ecad13a0fe97586b06&amp;#45;&amp;#45;fe5eea8704174c42b73847ea1be6e622&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17399.87,-45C17402.6,-45 17488.65,-45 17491.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5eb625153d5d4fa0a25d64358997948d --&gt;\n&lt;g id=\"node1801\" class=\"node\"&gt;\n&lt;title&gt;5eb625153d5d4fa0a25d64358997948d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17586.72,-45.72 17585.28,-45.72 17585.28,-44.28 17586.72,-44.28 17586.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fe5eea8704174c42b73847ea1be6e622&amp;#45;&amp;#45;5eb625153d5d4fa0a25d64358997948d --&gt;\n&lt;g id=\"edge1793\" class=\"edge\"&gt;\n&lt;title&gt;fe5eea8704174c42b73847ea1be6e622&amp;#45;&amp;#45;5eb625153d5d4fa0a25d64358997948d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17493.47,-45C17496.2,-45 17582.25,-45 17584.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- f339b512ddd44618addb55ae2fd0cf5c --&gt;\n&lt;g id=\"node1802\" class=\"node\"&gt;\n&lt;title&gt;f339b512ddd44618addb55ae2fd0cf5c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17680.32,-45.72 17678.88,-45.72 17678.88,-44.28 17680.32,-44.28 17680.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5eb625153d5d4fa0a25d64358997948d&amp;#45;&amp;#45;f339b512ddd44618addb55ae2fd0cf5c --&gt;\n&lt;g id=\"edge1794\" class=\"edge\"&gt;\n&lt;title&gt;5eb625153d5d4fa0a25d64358997948d&amp;#45;&amp;#45;f339b512ddd44618addb55ae2fd0cf5c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17587.07,-45C17589.8,-45 17675.85,-45 17678.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- a120ea9b8c074173a3ee09b564add0ad --&gt;\n&lt;g id=\"node1803\" class=\"node\"&gt;\n&lt;title&gt;a120ea9b8c074173a3ee09b564add0ad&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17773.92,-45.72 17772.48,-45.72 17772.48,-44.28 17773.92,-44.28 17773.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f339b512ddd44618addb55ae2fd0cf5c&amp;#45;&amp;#45;a120ea9b8c074173a3ee09b564add0ad --&gt;\n&lt;g id=\"edge1795\" class=\"edge\"&gt;\n&lt;title&gt;f339b512ddd44618addb55ae2fd0cf5c&amp;#45;&amp;#45;a120ea9b8c074173a3ee09b564add0ad&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17680.67,-45C17683.4,-45 17769.45,-45 17772.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- e40de7c04d7e4a709414f569a6ad1f34 --&gt;\n&lt;g id=\"node1804\" class=\"node\"&gt;\n&lt;title&gt;e40de7c04d7e4a709414f569a6ad1f34&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17867.52,-45.72 17866.08,-45.72 17866.08,-44.28 17867.52,-44.28 17867.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- a120ea9b8c074173a3ee09b564add0ad&amp;#45;&amp;#45;e40de7c04d7e4a709414f569a6ad1f34 --&gt;\n&lt;g id=\"edge1796\" class=\"edge\"&gt;\n&lt;title&gt;a120ea9b8c074173a3ee09b564add0ad&amp;#45;&amp;#45;e40de7c04d7e4a709414f569a6ad1f34&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17774.27,-45C17777,-45 17863.05,-45 17865.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 20b22fec5ff1413b9e4139afc35de48b --&gt;\n&lt;g id=\"node1805\" class=\"node\"&gt;\n&lt;title&gt;20b22fec5ff1413b9e4139afc35de48b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"17961.12,-45.72 17959.68,-45.72 17959.68,-44.28 17961.12,-44.28 17961.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e40de7c04d7e4a709414f569a6ad1f34&amp;#45;&amp;#45;20b22fec5ff1413b9e4139afc35de48b --&gt;\n&lt;g id=\"edge1797\" class=\"edge\"&gt;\n&lt;title&gt;e40de7c04d7e4a709414f569a6ad1f34&amp;#45;&amp;#45;20b22fec5ff1413b9e4139afc35de48b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17867.87,-45C17870.6,-45 17956.65,-45 17959.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a2e6966589a42e1ae95332a307b5a97 --&gt;\n&lt;g id=\"node1806\" class=\"node\"&gt;\n&lt;title&gt;5a2e6966589a42e1ae95332a307b5a97&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18113.52,-45.72 18112.08,-45.72 18112.08,-44.28 18113.52,-44.28 18113.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 20b22fec5ff1413b9e4139afc35de48b&amp;#45;&amp;#45;5a2e6966589a42e1ae95332a307b5a97 --&gt;\n&lt;g id=\"edge1798\" class=\"edge\"&gt;\n&lt;title&gt;20b22fec5ff1413b9e4139afc35de48b&amp;#45;&amp;#45;5a2e6966589a42e1ae95332a307b5a97&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M17961.51,-45C17965.99,-45 18107.28,-45 18111.69,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 13ad7a4423b6432fb6a6bace61fd9d03 --&gt;\n&lt;g id=\"node1807\" class=\"node\"&gt;\n&lt;title&gt;13ad7a4423b6432fb6a6bace61fd9d03&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18265.92,-45.72 18264.48,-45.72 18264.48,-44.28 18265.92,-44.28 18265.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5a2e6966589a42e1ae95332a307b5a97&amp;#45;&amp;#45;13ad7a4423b6432fb6a6bace61fd9d03 --&gt;\n&lt;g id=\"edge1799\" class=\"edge\"&gt;\n&lt;title&gt;5a2e6966589a42e1ae95332a307b5a97&amp;#45;&amp;#45;13ad7a4423b6432fb6a6bace61fd9d03&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18113.91,-45C18118.39,-45 18259.68,-45 18264.09,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4dc6e475a5bd4734bee744b6fea5f4e6 --&gt;\n&lt;g id=\"node1808\" class=\"node\"&gt;\n&lt;title&gt;4dc6e475a5bd4734bee744b6fea5f4e6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18359.52,-45.72 18358.08,-45.72 18358.08,-44.28 18359.52,-44.28 18359.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 13ad7a4423b6432fb6a6bace61fd9d03&amp;#45;&amp;#45;4dc6e475a5bd4734bee744b6fea5f4e6 --&gt;\n&lt;g id=\"edge1800\" class=\"edge\"&gt;\n&lt;title&gt;13ad7a4423b6432fb6a6bace61fd9d03&amp;#45;&amp;#45;4dc6e475a5bd4734bee744b6fea5f4e6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18266.27,-45C18269,-45 18355.05,-45 18357.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- ef048355277e4b2d9401af593f861847 --&gt;\n&lt;g id=\"node1809\" class=\"node\"&gt;\n&lt;title&gt;ef048355277e4b2d9401af593f861847&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18453.12,-45.72 18451.68,-45.72 18451.68,-44.28 18453.12,-44.28 18453.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 4dc6e475a5bd4734bee744b6fea5f4e6&amp;#45;&amp;#45;ef048355277e4b2d9401af593f861847 --&gt;\n&lt;g id=\"edge1801\" class=\"edge\"&gt;\n&lt;title&gt;4dc6e475a5bd4734bee744b6fea5f4e6&amp;#45;&amp;#45;ef048355277e4b2d9401af593f861847&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18359.87,-45C18362.6,-45 18448.65,-45 18451.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 968f2358eb83473c9dad481fadc9aa90 --&gt;\n&lt;g id=\"node1810\" class=\"node\"&gt;\n&lt;title&gt;968f2358eb83473c9dad481fadc9aa90&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18546.72,-45.72 18545.28,-45.72 18545.28,-44.28 18546.72,-44.28 18546.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ef048355277e4b2d9401af593f861847&amp;#45;&amp;#45;968f2358eb83473c9dad481fadc9aa90 --&gt;\n&lt;g id=\"edge1802\" class=\"edge\"&gt;\n&lt;title&gt;ef048355277e4b2d9401af593f861847&amp;#45;&amp;#45;968f2358eb83473c9dad481fadc9aa90&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18453.47,-45C18456.2,-45 18542.25,-45 18544.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- ef2a765482f049e1b9e7d933ec145e7e --&gt;\n&lt;g id=\"node1811\" class=\"node\"&gt;\n&lt;title&gt;ef2a765482f049e1b9e7d933ec145e7e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18640.32,-45.72 18638.88,-45.72 18638.88,-44.28 18640.32,-44.28 18640.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 968f2358eb83473c9dad481fadc9aa90&amp;#45;&amp;#45;ef2a765482f049e1b9e7d933ec145e7e --&gt;\n&lt;g id=\"edge1803\" class=\"edge\"&gt;\n&lt;title&gt;968f2358eb83473c9dad481fadc9aa90&amp;#45;&amp;#45;ef2a765482f049e1b9e7d933ec145e7e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18547.07,-45C18549.8,-45 18635.85,-45 18638.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 90bc17cb9d994d008672f69113f65f9d --&gt;\n&lt;g id=\"node1812\" class=\"node\"&gt;\n&lt;title&gt;90bc17cb9d994d008672f69113f65f9d&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18733.92,-45.72 18732.48,-45.72 18732.48,-44.28 18733.92,-44.28 18733.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ef2a765482f049e1b9e7d933ec145e7e&amp;#45;&amp;#45;90bc17cb9d994d008672f69113f65f9d --&gt;\n&lt;g id=\"edge1804\" class=\"edge\"&gt;\n&lt;title&gt;ef2a765482f049e1b9e7d933ec145e7e&amp;#45;&amp;#45;90bc17cb9d994d008672f69113f65f9d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18640.67,-45C18643.4,-45 18729.45,-45 18732.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 75db98012da949a0b0dcde9418647648 --&gt;\n&lt;g id=\"node1813\" class=\"node\"&gt;\n&lt;title&gt;75db98012da949a0b0dcde9418647648&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18827.52,-45.72 18826.08,-45.72 18826.08,-44.28 18827.52,-44.28 18827.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 90bc17cb9d994d008672f69113f65f9d&amp;#45;&amp;#45;75db98012da949a0b0dcde9418647648 --&gt;\n&lt;g id=\"edge1805\" class=\"edge\"&gt;\n&lt;title&gt;90bc17cb9d994d008672f69113f65f9d&amp;#45;&amp;#45;75db98012da949a0b0dcde9418647648&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18734.27,-45C18737,-45 18823.05,-45 18825.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6bd59546545d4c3dadcf675e860a5f6f --&gt;\n&lt;g id=\"node1814\" class=\"node\"&gt;\n&lt;title&gt;6bd59546545d4c3dadcf675e860a5f6f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"18921.12,-45.72 18919.68,-45.72 18919.68,-44.28 18921.12,-44.28 18921.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 75db98012da949a0b0dcde9418647648&amp;#45;&amp;#45;6bd59546545d4c3dadcf675e860a5f6f --&gt;\n&lt;g id=\"edge1806\" class=\"edge\"&gt;\n&lt;title&gt;75db98012da949a0b0dcde9418647648&amp;#45;&amp;#45;6bd59546545d4c3dadcf675e860a5f6f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18827.87,-45C18830.6,-45 18916.65,-45 18919.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 37726542e57446ec9a75df868197a315 --&gt;\n&lt;g id=\"node1815\" class=\"node\"&gt;\n&lt;title&gt;37726542e57446ec9a75df868197a315&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19014.72,-45.72 19013.28,-45.72 19013.28,-44.28 19014.72,-44.28 19014.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 6bd59546545d4c3dadcf675e860a5f6f&amp;#45;&amp;#45;37726542e57446ec9a75df868197a315 --&gt;\n&lt;g id=\"edge1807\" class=\"edge\"&gt;\n&lt;title&gt;6bd59546545d4c3dadcf675e860a5f6f&amp;#45;&amp;#45;37726542e57446ec9a75df868197a315&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M18921.47,-45C18924.2,-45 19010.25,-45 19012.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- d2cd70323e5243dd9cb193e906b00315 --&gt;\n&lt;g id=\"node1816\" class=\"node\"&gt;\n&lt;title&gt;d2cd70323e5243dd9cb193e906b00315&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19108.32,-45.72 19106.88,-45.72 19106.88,-44.28 19108.32,-44.28 19108.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 37726542e57446ec9a75df868197a315&amp;#45;&amp;#45;d2cd70323e5243dd9cb193e906b00315 --&gt;\n&lt;g id=\"edge1808\" class=\"edge\"&gt;\n&lt;title&gt;37726542e57446ec9a75df868197a315&amp;#45;&amp;#45;d2cd70323e5243dd9cb193e906b00315&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19015.07,-45C19017.8,-45 19103.85,-45 19106.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0b849b54b0ac460581fa9651e13cc7fa --&gt;\n&lt;g id=\"node1817\" class=\"node\"&gt;\n&lt;title&gt;0b849b54b0ac460581fa9651e13cc7fa&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M19218,-73.8C19218,-73.8 19184.4,-73.8 19184.4,-73.8 19178.4,-73.8 19172.4,-67.8 19172.4,-61.8 19172.4,-61.8 19172.4,-28.2 19172.4,-28.2 19172.4,-22.2 19178.4,-16.2 19184.4,-16.2 19184.4,-16.2 19218,-16.2 19218,-16.2 19224,-16.2 19230,-22.2 19230,-28.2 19230,-28.2 19230,-61.8 19230,-61.8 19230,-67.8 19224,-73.8 19218,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"19201.2\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d2cd70323e5243dd9cb193e906b00315&amp;#45;&amp;#45;0b849b54b0ac460581fa9651e13cc7fa --&gt;\n&lt;g id=\"edge1809\" class=\"edge\"&gt;\n&lt;title&gt;d2cd70323e5243dd9cb193e906b00315&amp;#45;&amp;#45;0b849b54b0ac460581fa9651e13cc7fa&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19108.67,-45C19110.39,-45 19145.28,-45 19171.48,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0b849b54b0ac460581fa9651e13cc7fa&amp;#45;&amp;#45;8a8284a1dbd64ebab0cad67aca43be98 --&gt;\n&lt;g id=\"edge2057\" class=\"edge\"&gt;\n&lt;title&gt;0b849b54b0ac460581fa9651e13cc7fa&amp;#45;&amp;#45;8a8284a1dbd64ebab0cad67aca43be98&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19201.2,-74.65C19201.2,-85.2 19201.2,-95.76 19201.2,-106.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 36ee58714825467bb96ddf9ef25b498f --&gt;\n&lt;g id=\"node1818\" class=\"node\"&gt;\n&lt;title&gt;36ee58714825467bb96ddf9ef25b498f&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M19429.2,-73.8C19429.2,-73.8 19278,-73.8 19278,-73.8 19272,-73.8 19266,-67.8 19266,-61.8 19266,-61.8 19266,-28.2 19266,-28.2 19266,-22.2 19272,-16.2 19278,-16.2 19278,-16.2 19429.2,-16.2 19429.2,-16.2 19435.2,-16.2 19441.2,-22.2 19441.2,-28.2 19441.2,-28.2 19441.2,-61.8 19441.2,-61.8 19441.2,-67.8 19435.2,-73.8 19429.2,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"19353.6\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 0b849b54b0ac460581fa9651e13cc7fa&amp;#45;&amp;#45;36ee58714825467bb96ddf9ef25b498f --&gt;\n&lt;g id=\"edge1810\" class=\"edge\"&gt;\n&lt;title&gt;0b849b54b0ac460581fa9651e13cc7fa&amp;#45;&amp;#45;36ee58714825467bb96ddf9ef25b498f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19230.84,-45C19240.9,-45 19252.79,-45 19265.13,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 181aa74e055541a3ad475f492b3b2f5e --&gt;\n&lt;g id=\"node1819\" class=\"node\"&gt;\n&lt;title&gt;181aa74e055541a3ad475f492b3b2f5e&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M19522.8,-73.8C19522.8,-73.8 19489.2,-73.8 19489.2,-73.8 19483.2,-73.8 19477.2,-67.8 19477.2,-61.8 19477.2,-61.8 19477.2,-28.2 19477.2,-28.2 19477.2,-22.2 19483.2,-16.2 19489.2,-16.2 19489.2,-16.2 19522.8,-16.2 19522.8,-16.2 19528.8,-16.2 19534.8,-22.2 19534.8,-28.2 19534.8,-28.2 19534.8,-61.8 19534.8,-61.8 19534.8,-67.8 19528.8,-73.8 19522.8,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"19506\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 36ee58714825467bb96ddf9ef25b498f&amp;#45;&amp;#45;181aa74e055541a3ad475f492b3b2f5e --&gt;\n&lt;g id=\"edge1811\" class=\"edge\"&gt;\n&lt;title&gt;36ee58714825467bb96ddf9ef25b498f&amp;#45;&amp;#45;181aa74e055541a3ad475f492b3b2f5e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19442.09,-45C19454.37,-45 19466.2,-45 19476.22,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 181aa74e055541a3ad475f492b3b2f5e&amp;#45;&amp;#45;d0da8f72a88c46a79a294c11190fb084 --&gt;\n&lt;g id=\"edge2058\" class=\"edge\"&gt;\n&lt;title&gt;181aa74e055541a3ad475f492b3b2f5e&amp;#45;&amp;#45;d0da8f72a88c46a79a294c11190fb084&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19506,-74.65C19506,-85.2 19506,-95.76 19506,-106.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e44a87f992c450a86a4794d2a58c7d8 --&gt;\n&lt;g id=\"node1820\" class=\"node\"&gt;\n&lt;title&gt;3e44a87f992c450a86a4794d2a58c7d8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19600.32,-45.72 19598.88,-45.72 19598.88,-44.28 19600.32,-44.28 19600.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 181aa74e055541a3ad475f492b3b2f5e&amp;#45;&amp;#45;3e44a87f992c450a86a4794d2a58c7d8 --&gt;\n&lt;g id=\"edge1812\" class=\"edge\"&gt;\n&lt;title&gt;181aa74e055541a3ad475f492b3b2f5e&amp;#45;&amp;#45;3e44a87f992c450a86a4794d2a58c7d8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19535.48,-45C19561.53,-45 19596.34,-45 19598.5,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8745f1317054449c974dbfd94c5f4352 --&gt;\n&lt;g id=\"node1821\" class=\"node\"&gt;\n&lt;title&gt;8745f1317054449c974dbfd94c5f4352&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19693.92,-45.72 19692.48,-45.72 19692.48,-44.28 19693.92,-44.28 19693.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 3e44a87f992c450a86a4794d2a58c7d8&amp;#45;&amp;#45;8745f1317054449c974dbfd94c5f4352 --&gt;\n&lt;g id=\"edge1813\" class=\"edge\"&gt;\n&lt;title&gt;3e44a87f992c450a86a4794d2a58c7d8&amp;#45;&amp;#45;8745f1317054449c974dbfd94c5f4352&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19600.67,-45C19603.4,-45 19689.45,-45 19692.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2217c817a9764a76b2cb44412609a7f1 --&gt;\n&lt;g id=\"node1822\" class=\"node\"&gt;\n&lt;title&gt;2217c817a9764a76b2cb44412609a7f1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19787.52,-45.72 19786.08,-45.72 19786.08,-44.28 19787.52,-44.28 19787.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8745f1317054449c974dbfd94c5f4352&amp;#45;&amp;#45;2217c817a9764a76b2cb44412609a7f1 --&gt;\n&lt;g id=\"edge1814\" class=\"edge\"&gt;\n&lt;title&gt;8745f1317054449c974dbfd94c5f4352&amp;#45;&amp;#45;2217c817a9764a76b2cb44412609a7f1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19694.27,-45C19697,-45 19783.05,-45 19785.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7339ccb6d43e488da8c4c829a07256d3 --&gt;\n&lt;g id=\"node1823\" class=\"node\"&gt;\n&lt;title&gt;7339ccb6d43e488da8c4c829a07256d3&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19881.12,-45.72 19879.68,-45.72 19879.68,-44.28 19881.12,-44.28 19881.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2217c817a9764a76b2cb44412609a7f1&amp;#45;&amp;#45;7339ccb6d43e488da8c4c829a07256d3 --&gt;\n&lt;g id=\"edge1815\" class=\"edge\"&gt;\n&lt;title&gt;2217c817a9764a76b2cb44412609a7f1&amp;#45;&amp;#45;7339ccb6d43e488da8c4c829a07256d3&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19787.87,-45C19790.6,-45 19876.65,-45 19879.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- d75be51b95cd48d08ceb0e4f07a0b672 --&gt;\n&lt;g id=\"node1824\" class=\"node\"&gt;\n&lt;title&gt;d75be51b95cd48d08ceb0e4f07a0b672&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"19974.72,-45.72 19973.28,-45.72 19973.28,-44.28 19974.72,-44.28 19974.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7339ccb6d43e488da8c4c829a07256d3&amp;#45;&amp;#45;d75be51b95cd48d08ceb0e4f07a0b672 --&gt;\n&lt;g id=\"edge1816\" class=\"edge\"&gt;\n&lt;title&gt;7339ccb6d43e488da8c4c829a07256d3&amp;#45;&amp;#45;d75be51b95cd48d08ceb0e4f07a0b672&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19881.47,-45C19884.2,-45 19970.25,-45 19972.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- cafc8c550898450aa00264627ee5ae06 --&gt;\n&lt;g id=\"node1825\" class=\"node\"&gt;\n&lt;title&gt;cafc8c550898450aa00264627ee5ae06&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20068.32,-45.72 20066.88,-45.72 20066.88,-44.28 20068.32,-44.28 20068.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d75be51b95cd48d08ceb0e4f07a0b672&amp;#45;&amp;#45;cafc8c550898450aa00264627ee5ae06 --&gt;\n&lt;g id=\"edge1817\" class=\"edge\"&gt;\n&lt;title&gt;d75be51b95cd48d08ceb0e4f07a0b672&amp;#45;&amp;#45;cafc8c550898450aa00264627ee5ae06&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M19975.07,-45C19977.8,-45 20063.85,-45 20066.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0bea72e3cf924bceaaf2717a2c1ec66e --&gt;\n&lt;g id=\"node1826\" class=\"node\"&gt;\n&lt;title&gt;0bea72e3cf924bceaaf2717a2c1ec66e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20161.92,-45.72 20160.48,-45.72 20160.48,-44.28 20161.92,-44.28 20161.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cafc8c550898450aa00264627ee5ae06&amp;#45;&amp;#45;0bea72e3cf924bceaaf2717a2c1ec66e --&gt;\n&lt;g id=\"edge1818\" class=\"edge\"&gt;\n&lt;title&gt;cafc8c550898450aa00264627ee5ae06&amp;#45;&amp;#45;0bea72e3cf924bceaaf2717a2c1ec66e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20068.67,-45C20071.4,-45 20157.45,-45 20160.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e6c1b25e415455cbfbb7cfd5c5ed5a2 --&gt;\n&lt;g id=\"node1827\" class=\"node\"&gt;\n&lt;title&gt;9e6c1b25e415455cbfbb7cfd5c5ed5a2&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20255.52,-45.72 20254.08,-45.72 20254.08,-44.28 20255.52,-44.28 20255.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0bea72e3cf924bceaaf2717a2c1ec66e&amp;#45;&amp;#45;9e6c1b25e415455cbfbb7cfd5c5ed5a2 --&gt;\n&lt;g id=\"edge1819\" class=\"edge\"&gt;\n&lt;title&gt;0bea72e3cf924bceaaf2717a2c1ec66e&amp;#45;&amp;#45;9e6c1b25e415455cbfbb7cfd5c5ed5a2&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20162.27,-45C20165,-45 20251.05,-45 20253.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2340c204c0cc4c149b7166a5424744f7 --&gt;\n&lt;g id=\"node1828\" class=\"node\"&gt;\n&lt;title&gt;2340c204c0cc4c149b7166a5424744f7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20349.12,-45.72 20347.68,-45.72 20347.68,-44.28 20349.12,-44.28 20349.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9e6c1b25e415455cbfbb7cfd5c5ed5a2&amp;#45;&amp;#45;2340c204c0cc4c149b7166a5424744f7 --&gt;\n&lt;g id=\"edge1820\" class=\"edge\"&gt;\n&lt;title&gt;9e6c1b25e415455cbfbb7cfd5c5ed5a2&amp;#45;&amp;#45;2340c204c0cc4c149b7166a5424744f7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20255.87,-45C20258.6,-45 20344.65,-45 20347.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 99c7367a03d3468683af87dee5450a44 --&gt;\n&lt;g id=\"node1829\" class=\"node\"&gt;\n&lt;title&gt;99c7367a03d3468683af87dee5450a44&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M20458.8,-73.8C20458.8,-73.8 20425.2,-73.8 20425.2,-73.8 20419.2,-73.8 20413.2,-67.8 20413.2,-61.8 20413.2,-61.8 20413.2,-28.2 20413.2,-28.2 20413.2,-22.2 20419.2,-16.2 20425.2,-16.2 20425.2,-16.2 20458.8,-16.2 20458.8,-16.2 20464.8,-16.2 20470.8,-22.2 20470.8,-28.2 20470.8,-28.2 20470.8,-61.8 20470.8,-61.8 20470.8,-67.8 20464.8,-73.8 20458.8,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"20442\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 2340c204c0cc4c149b7166a5424744f7&amp;#45;&amp;#45;99c7367a03d3468683af87dee5450a44 --&gt;\n&lt;g id=\"edge1821\" class=\"edge\"&gt;\n&lt;title&gt;2340c204c0cc4c149b7166a5424744f7&amp;#45;&amp;#45;99c7367a03d3468683af87dee5450a44&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20349.47,-45C20351.19,-45 20386.08,-45 20412.28,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 99c7367a03d3468683af87dee5450a44&amp;#45;&amp;#45;891e52357e5f4a08b29ad22a5f73b5b0 --&gt;\n&lt;g id=\"edge2059\" class=\"edge\"&gt;\n&lt;title&gt;99c7367a03d3468683af87dee5450a44&amp;#45;&amp;#45;891e52357e5f4a08b29ad22a5f73b5b0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20442,-74.65C20442,-85.2 20442,-95.76 20442,-106.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- d0b54e9c557642989106721938facf7a --&gt;\n&lt;g id=\"node1830\" class=\"node\"&gt;\n&lt;title&gt;d0b54e9c557642989106721938facf7a&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M20670,-73.8C20670,-73.8 20518.8,-73.8 20518.8,-73.8 20512.8,-73.8 20506.8,-67.8 20506.8,-61.8 20506.8,-61.8 20506.8,-28.2 20506.8,-28.2 20506.8,-22.2 20512.8,-16.2 20518.8,-16.2 20518.8,-16.2 20670,-16.2 20670,-16.2 20676,-16.2 20682,-22.2 20682,-28.2 20682,-28.2 20682,-61.8 20682,-61.8 20682,-67.8 20676,-73.8 20670,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"20594.4\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 99c7367a03d3468683af87dee5450a44&amp;#45;&amp;#45;d0b54e9c557642989106721938facf7a --&gt;\n&lt;g id=\"edge1822\" class=\"edge\"&gt;\n&lt;title&gt;99c7367a03d3468683af87dee5450a44&amp;#45;&amp;#45;d0b54e9c557642989106721938facf7a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20471.64,-45C20481.7,-45 20493.59,-45 20505.93,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93af41cc805e4c61b5e29e33bda40356 --&gt;\n&lt;g id=\"node1831\" class=\"node\"&gt;\n&lt;title&gt;93af41cc805e4c61b5e29e33bda40356&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M20763.6,-73.8C20763.6,-73.8 20730,-73.8 20730,-73.8 20724,-73.8 20718,-67.8 20718,-61.8 20718,-61.8 20718,-28.2 20718,-28.2 20718,-22.2 20724,-16.2 20730,-16.2 20730,-16.2 20763.6,-16.2 20763.6,-16.2 20769.6,-16.2 20775.6,-22.2 20775.6,-28.2 20775.6,-28.2 20775.6,-61.8 20775.6,-61.8 20775.6,-67.8 20769.6,-73.8 20763.6,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"20746.8\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- d0b54e9c557642989106721938facf7a&amp;#45;&amp;#45;93af41cc805e4c61b5e29e33bda40356 --&gt;\n&lt;g id=\"edge1823\" class=\"edge\"&gt;\n&lt;title&gt;d0b54e9c557642989106721938facf7a&amp;#45;&amp;#45;93af41cc805e4c61b5e29e33bda40356&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20682.89,-45C20695.17,-45 20707,-45 20717.02,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93af41cc805e4c61b5e29e33bda40356&amp;#45;&amp;#45;90212b0515c34200af13486a7fa548f7 --&gt;\n&lt;g id=\"edge2060\" class=\"edge\"&gt;\n&lt;title&gt;93af41cc805e4c61b5e29e33bda40356&amp;#45;&amp;#45;90212b0515c34200af13486a7fa548f7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20746.8,-74.65C20746.8,-85.2 20746.8,-95.76 20746.8,-106.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c4fff0cad3349ccb1db3e84436f5b67 --&gt;\n&lt;g id=\"node1832\" class=\"node\"&gt;\n&lt;title&gt;7c4fff0cad3349ccb1db3e84436f5b67&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20841.12,-45.72 20839.68,-45.72 20839.68,-44.28 20841.12,-44.28 20841.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 93af41cc805e4c61b5e29e33bda40356&amp;#45;&amp;#45;7c4fff0cad3349ccb1db3e84436f5b67 --&gt;\n&lt;g id=\"edge1824\" class=\"edge\"&gt;\n&lt;title&gt;93af41cc805e4c61b5e29e33bda40356&amp;#45;&amp;#45;7c4fff0cad3349ccb1db3e84436f5b67&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20776.28,-45C20802.33,-45 20837.14,-45 20839.3,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- d5f1c5d4793a4dcfa3e7d9d4d3e259ea --&gt;\n&lt;g id=\"node1833\" class=\"node\"&gt;\n&lt;title&gt;d5f1c5d4793a4dcfa3e7d9d4d3e259ea&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"20934.72,-45.72 20933.28,-45.72 20933.28,-44.28 20934.72,-44.28 20934.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7c4fff0cad3349ccb1db3e84436f5b67&amp;#45;&amp;#45;d5f1c5d4793a4dcfa3e7d9d4d3e259ea --&gt;\n&lt;g id=\"edge1825\" class=\"edge\"&gt;\n&lt;title&gt;7c4fff0cad3349ccb1db3e84436f5b67&amp;#45;&amp;#45;d5f1c5d4793a4dcfa3e7d9d4d3e259ea&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20841.47,-45C20844.2,-45 20930.25,-45 20932.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- d91de08f1b7144e597e4a46ff4569ba8 --&gt;\n&lt;g id=\"node1834\" class=\"node\"&gt;\n&lt;title&gt;d91de08f1b7144e597e4a46ff4569ba8&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21028.32,-45.72 21026.88,-45.72 21026.88,-44.28 21028.32,-44.28 21028.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d5f1c5d4793a4dcfa3e7d9d4d3e259ea&amp;#45;&amp;#45;d91de08f1b7144e597e4a46ff4569ba8 --&gt;\n&lt;g id=\"edge1826\" class=\"edge\"&gt;\n&lt;title&gt;d5f1c5d4793a4dcfa3e7d9d4d3e259ea&amp;#45;&amp;#45;d91de08f1b7144e597e4a46ff4569ba8&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M20935.07,-45C20937.8,-45 21023.85,-45 21026.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 647733e1cd674e3c8a80c07ef58b5575 --&gt;\n&lt;g id=\"node1835\" class=\"node\"&gt;\n&lt;title&gt;647733e1cd674e3c8a80c07ef58b5575&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21121.92,-45.72 21120.48,-45.72 21120.48,-44.28 21121.92,-44.28 21121.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d91de08f1b7144e597e4a46ff4569ba8&amp;#45;&amp;#45;647733e1cd674e3c8a80c07ef58b5575 --&gt;\n&lt;g id=\"edge1827\" class=\"edge\"&gt;\n&lt;title&gt;d91de08f1b7144e597e4a46ff4569ba8&amp;#45;&amp;#45;647733e1cd674e3c8a80c07ef58b5575&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21028.67,-45C21031.4,-45 21117.45,-45 21120.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- fe3af363e3e44c1bb53eef156d82f362 --&gt;\n&lt;g id=\"node1836\" class=\"node\"&gt;\n&lt;title&gt;fe3af363e3e44c1bb53eef156d82f362&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21215.52,-45.72 21214.08,-45.72 21214.08,-44.28 21215.52,-44.28 21215.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 647733e1cd674e3c8a80c07ef58b5575&amp;#45;&amp;#45;fe3af363e3e44c1bb53eef156d82f362 --&gt;\n&lt;g id=\"edge1828\" class=\"edge\"&gt;\n&lt;title&gt;647733e1cd674e3c8a80c07ef58b5575&amp;#45;&amp;#45;fe3af363e3e44c1bb53eef156d82f362&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21122.27,-45C21125,-45 21211.05,-45 21213.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- d807c8605a6d446f9c686507cfde23ad --&gt;\n&lt;g id=\"node1837\" class=\"node\"&gt;\n&lt;title&gt;d807c8605a6d446f9c686507cfde23ad&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21309.12,-45.72 21307.68,-45.72 21307.68,-44.28 21309.12,-44.28 21309.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- fe3af363e3e44c1bb53eef156d82f362&amp;#45;&amp;#45;d807c8605a6d446f9c686507cfde23ad --&gt;\n&lt;g id=\"edge1829\" class=\"edge\"&gt;\n&lt;title&gt;fe3af363e3e44c1bb53eef156d82f362&amp;#45;&amp;#45;d807c8605a6d446f9c686507cfde23ad&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21215.87,-45C21218.6,-45 21304.65,-45 21307.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5b04408c264a4a4a8a81de553ca9db95 --&gt;\n&lt;g id=\"node1838\" class=\"node\"&gt;\n&lt;title&gt;5b04408c264a4a4a8a81de553ca9db95&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21461.52,-45.72 21460.08,-45.72 21460.08,-44.28 21461.52,-44.28 21461.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- d807c8605a6d446f9c686507cfde23ad&amp;#45;&amp;#45;5b04408c264a4a4a8a81de553ca9db95 --&gt;\n&lt;g id=\"edge1830\" class=\"edge\"&gt;\n&lt;title&gt;d807c8605a6d446f9c686507cfde23ad&amp;#45;&amp;#45;5b04408c264a4a4a8a81de553ca9db95&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21309.51,-45C21313.99,-45 21455.28,-45 21459.69,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 60f132665ce749a8a3ff0b0fbd221b01 --&gt;\n&lt;g id=\"node1839\" class=\"node\"&gt;\n&lt;title&gt;60f132665ce749a8a3ff0b0fbd221b01&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21613.92,-45.72 21612.48,-45.72 21612.48,-44.28 21613.92,-44.28 21613.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 5b04408c264a4a4a8a81de553ca9db95&amp;#45;&amp;#45;60f132665ce749a8a3ff0b0fbd221b01 --&gt;\n&lt;g id=\"edge1831\" class=\"edge\"&gt;\n&lt;title&gt;5b04408c264a4a4a8a81de553ca9db95&amp;#45;&amp;#45;60f132665ce749a8a3ff0b0fbd221b01&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21461.91,-45C21466.39,-45 21607.68,-45 21612.09,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9b01b576f0064737a93b3098c1784ce6 --&gt;\n&lt;g id=\"node1840\" class=\"node\"&gt;\n&lt;title&gt;9b01b576f0064737a93b3098c1784ce6&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21707.52,-45.72 21706.08,-45.72 21706.08,-44.28 21707.52,-44.28 21707.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 60f132665ce749a8a3ff0b0fbd221b01&amp;#45;&amp;#45;9b01b576f0064737a93b3098c1784ce6 --&gt;\n&lt;g id=\"edge1832\" class=\"edge\"&gt;\n&lt;title&gt;60f132665ce749a8a3ff0b0fbd221b01&amp;#45;&amp;#45;9b01b576f0064737a93b3098c1784ce6&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21614.27,-45C21617,-45 21703.05,-45 21705.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d282cd172664494ba7c2d1654ed668e --&gt;\n&lt;g id=\"node1841\" class=\"node\"&gt;\n&lt;title&gt;7d282cd172664494ba7c2d1654ed668e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21801.12,-45.72 21799.68,-45.72 21799.68,-44.28 21801.12,-44.28 21801.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 9b01b576f0064737a93b3098c1784ce6&amp;#45;&amp;#45;7d282cd172664494ba7c2d1654ed668e --&gt;\n&lt;g id=\"edge1833\" class=\"edge\"&gt;\n&lt;title&gt;9b01b576f0064737a93b3098c1784ce6&amp;#45;&amp;#45;7d282cd172664494ba7c2d1654ed668e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21707.87,-45C21710.6,-45 21796.65,-45 21799.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- bab34d720a454876b66670269cd66f98 --&gt;\n&lt;g id=\"node1842\" class=\"node\"&gt;\n&lt;title&gt;bab34d720a454876b66670269cd66f98&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21894.72,-45.72 21893.28,-45.72 21893.28,-44.28 21894.72,-44.28 21894.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7d282cd172664494ba7c2d1654ed668e&amp;#45;&amp;#45;bab34d720a454876b66670269cd66f98 --&gt;\n&lt;g id=\"edge1834\" class=\"edge\"&gt;\n&lt;title&gt;7d282cd172664494ba7c2d1654ed668e&amp;#45;&amp;#45;bab34d720a454876b66670269cd66f98&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21801.47,-45C21804.2,-45 21890.25,-45 21892.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- b98fe8c293ea4c34b9b2d78f8c314411 --&gt;\n&lt;g id=\"node1843\" class=\"node\"&gt;\n&lt;title&gt;b98fe8c293ea4c34b9b2d78f8c314411&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"21988.32,-45.72 21986.88,-45.72 21986.88,-44.28 21988.32,-44.28 21988.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- bab34d720a454876b66670269cd66f98&amp;#45;&amp;#45;b98fe8c293ea4c34b9b2d78f8c314411 --&gt;\n&lt;g id=\"edge1835\" class=\"edge\"&gt;\n&lt;title&gt;bab34d720a454876b66670269cd66f98&amp;#45;&amp;#45;b98fe8c293ea4c34b9b2d78f8c314411&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21895.07,-45C21897.8,-45 21983.85,-45 21986.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- daffe61c629f498bb471041f0302d9af --&gt;\n&lt;g id=\"node1844\" class=\"node\"&gt;\n&lt;title&gt;daffe61c629f498bb471041f0302d9af&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22140.72,-45.72 22139.28,-45.72 22139.28,-44.28 22140.72,-44.28 22140.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b98fe8c293ea4c34b9b2d78f8c314411&amp;#45;&amp;#45;daffe61c629f498bb471041f0302d9af --&gt;\n&lt;g id=\"edge1836\" class=\"edge\"&gt;\n&lt;title&gt;b98fe8c293ea4c34b9b2d78f8c314411&amp;#45;&amp;#45;daffe61c629f498bb471041f0302d9af&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M21988.71,-45C21993.19,-45 22134.48,-45 22138.89,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 775745b1477b45618a8bb0d095eb378c --&gt;\n&lt;g id=\"node1845\" class=\"node\"&gt;\n&lt;title&gt;775745b1477b45618a8bb0d095eb378c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22293.12,-45.72 22291.68,-45.72 22291.68,-44.28 22293.12,-44.28 22293.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- daffe61c629f498bb471041f0302d9af&amp;#45;&amp;#45;775745b1477b45618a8bb0d095eb378c --&gt;\n&lt;g id=\"edge1837\" class=\"edge\"&gt;\n&lt;title&gt;daffe61c629f498bb471041f0302d9af&amp;#45;&amp;#45;775745b1477b45618a8bb0d095eb378c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22141.11,-45C22145.59,-45 22286.88,-45 22291.29,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7666086cbd704f3fabac3bfb46b4aaef --&gt;\n&lt;g id=\"node1846\" class=\"node\"&gt;\n&lt;title&gt;7666086cbd704f3fabac3bfb46b4aaef&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22386.72,-45.72 22385.28,-45.72 22385.28,-44.28 22386.72,-44.28 22386.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 775745b1477b45618a8bb0d095eb378c&amp;#45;&amp;#45;7666086cbd704f3fabac3bfb46b4aaef --&gt;\n&lt;g id=\"edge1838\" class=\"edge\"&gt;\n&lt;title&gt;775745b1477b45618a8bb0d095eb378c&amp;#45;&amp;#45;7666086cbd704f3fabac3bfb46b4aaef&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22293.47,-45C22296.2,-45 22382.25,-45 22384.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0450995c273a4964b292ec1825cd8506 --&gt;\n&lt;g id=\"node1847\" class=\"node\"&gt;\n&lt;title&gt;0450995c273a4964b292ec1825cd8506&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22480.32,-45.72 22478.88,-45.72 22478.88,-44.28 22480.32,-44.28 22480.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 7666086cbd704f3fabac3bfb46b4aaef&amp;#45;&amp;#45;0450995c273a4964b292ec1825cd8506 --&gt;\n&lt;g id=\"edge1839\" class=\"edge\"&gt;\n&lt;title&gt;7666086cbd704f3fabac3bfb46b4aaef&amp;#45;&amp;#45;0450995c273a4964b292ec1825cd8506&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22387.07,-45C22389.8,-45 22475.85,-45 22478.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- abe99264f74547dd9e4ac3843efd1b53 --&gt;\n&lt;g id=\"node1848\" class=\"node\"&gt;\n&lt;title&gt;abe99264f74547dd9e4ac3843efd1b53&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22573.92,-45.72 22572.48,-45.72 22572.48,-44.28 22573.92,-44.28 22573.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0450995c273a4964b292ec1825cd8506&amp;#45;&amp;#45;abe99264f74547dd9e4ac3843efd1b53 --&gt;\n&lt;g id=\"edge1840\" class=\"edge\"&gt;\n&lt;title&gt;0450995c273a4964b292ec1825cd8506&amp;#45;&amp;#45;abe99264f74547dd9e4ac3843efd1b53&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22480.67,-45C22483.4,-45 22569.45,-45 22572.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2c400795e19d4a78ac1f458549eefc78 --&gt;\n&lt;g id=\"node1849\" class=\"node\"&gt;\n&lt;title&gt;2c400795e19d4a78ac1f458549eefc78&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22667.52,-45.72 22666.08,-45.72 22666.08,-44.28 22667.52,-44.28 22667.52,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- abe99264f74547dd9e4ac3843efd1b53&amp;#45;&amp;#45;2c400795e19d4a78ac1f458549eefc78 --&gt;\n&lt;g id=\"edge1841\" class=\"edge\"&gt;\n&lt;title&gt;abe99264f74547dd9e4ac3843efd1b53&amp;#45;&amp;#45;2c400795e19d4a78ac1f458549eefc78&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22574.27,-45C22577,-45 22663.05,-45 22665.74,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- fdd8504abc6c4eb89b63b6083853001c --&gt;\n&lt;g id=\"node1850\" class=\"node\"&gt;\n&lt;title&gt;fdd8504abc6c4eb89b63b6083853001c&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"22761.12,-45.72 22759.68,-45.72 22759.68,-44.28 22761.12,-44.28 22761.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 2c400795e19d4a78ac1f458549eefc78&amp;#45;&amp;#45;fdd8504abc6c4eb89b63b6083853001c --&gt;\n&lt;g id=\"edge1842\" class=\"edge\"&gt;\n&lt;title&gt;2c400795e19d4a78ac1f458549eefc78&amp;#45;&amp;#45;fdd8504abc6c4eb89b63b6083853001c&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22667.87,-45C22670.6,-45 22756.65,-45 22759.34,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 85b6cd3729e945c494675d0a22d81b6a --&gt;\n&lt;g id=\"node1851\" class=\"node\"&gt;\n&lt;title&gt;85b6cd3729e945c494675d0a22d81b6a&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M22870.8,-73.8C22870.8,-73.8 22837.2,-73.8 22837.2,-73.8 22831.2,-73.8 22825.2,-67.8 22825.2,-61.8 22825.2,-61.8 22825.2,-28.2 22825.2,-28.2 22825.2,-22.2 22831.2,-16.2 22837.2,-16.2 22837.2,-16.2 22870.8,-16.2 22870.8,-16.2 22876.8,-16.2 22882.8,-22.2 22882.8,-28.2 22882.8,-28.2 22882.8,-61.8 22882.8,-61.8 22882.8,-67.8 22876.8,-73.8 22870.8,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"22854\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- fdd8504abc6c4eb89b63b6083853001c&amp;#45;&amp;#45;85b6cd3729e945c494675d0a22d81b6a --&gt;\n&lt;g id=\"edge1843\" class=\"edge\"&gt;\n&lt;title&gt;fdd8504abc6c4eb89b63b6083853001c&amp;#45;&amp;#45;85b6cd3729e945c494675d0a22d81b6a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22761.47,-45C22763.19,-45 22798.08,-45 22824.28,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 85b6cd3729e945c494675d0a22d81b6a&amp;#45;&amp;#45;e71b3d9418b04246ae942944d7477927 --&gt;\n&lt;g id=\"edge2061\" class=\"edge\"&gt;\n&lt;title&gt;85b6cd3729e945c494675d0a22d81b6a&amp;#45;&amp;#45;e71b3d9418b04246ae942944d7477927&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22854,-74.65C22854,-85.2 22854,-95.76 22854,-106.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 8e2ffdb1eab049b8adcaacb792d29167 --&gt;\n&lt;g id=\"node1852\" class=\"node\"&gt;\n&lt;title&gt;8e2ffdb1eab049b8adcaacb792d29167&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M23082,-73.8C23082,-73.8 22930.8,-73.8 22930.8,-73.8 22924.8,-73.8 22918.8,-67.8 22918.8,-61.8 22918.8,-61.8 22918.8,-28.2 22918.8,-28.2 22918.8,-22.2 22924.8,-16.2 22930.8,-16.2 22930.8,-16.2 23082,-16.2 23082,-16.2 23088,-16.2 23094,-22.2 23094,-28.2 23094,-28.2 23094,-61.8 23094,-61.8 23094,-67.8 23088,-73.8 23082,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"23006.4\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 85b6cd3729e945c494675d0a22d81b6a&amp;#45;&amp;#45;8e2ffdb1eab049b8adcaacb792d29167 --&gt;\n&lt;g id=\"edge1844\" class=\"edge\"&gt;\n&lt;title&gt;85b6cd3729e945c494675d0a22d81b6a&amp;#45;&amp;#45;8e2ffdb1eab049b8adcaacb792d29167&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M22883.64,-45C22893.7,-45 22905.59,-45 22917.93,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 987f82b97f27495daeff1f302121ba85 --&gt;\n&lt;g id=\"node1853\" class=\"node\"&gt;\n&lt;title&gt;987f82b97f27495daeff1f302121ba85&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M23175.6,-73.8C23175.6,-73.8 23142,-73.8 23142,-73.8 23136,-73.8 23130,-67.8 23130,-61.8 23130,-61.8 23130,-28.2 23130,-28.2 23130,-22.2 23136,-16.2 23142,-16.2 23142,-16.2 23175.6,-16.2 23175.6,-16.2 23181.6,-16.2 23187.6,-22.2 23187.6,-28.2 23187.6,-28.2 23187.6,-61.8 23187.6,-61.8 23187.6,-67.8 23181.6,-73.8 23175.6,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"23158.8\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 8e2ffdb1eab049b8adcaacb792d29167&amp;#45;&amp;#45;987f82b97f27495daeff1f302121ba85 --&gt;\n&lt;g id=\"edge1845\" class=\"edge\"&gt;\n&lt;title&gt;8e2ffdb1eab049b8adcaacb792d29167&amp;#45;&amp;#45;987f82b97f27495daeff1f302121ba85&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23094.89,-45C23107.17,-45 23119,-45 23129.02,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 987f82b97f27495daeff1f302121ba85&amp;#45;&amp;#45;5f7ee32ddb624d249ed982a690345702 --&gt;\n&lt;g id=\"edge2062\" class=\"edge\"&gt;\n&lt;title&gt;987f82b97f27495daeff1f302121ba85&amp;#45;&amp;#45;5f7ee32ddb624d249ed982a690345702&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23158.8,-74.65C23158.8,-85.2 23158.8,-95.76 23158.8,-106.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- f0493bb37c2c4b41a14f701f8031c2a1 --&gt;\n&lt;g id=\"node1854\" class=\"node\"&gt;\n&lt;title&gt;f0493bb37c2c4b41a14f701f8031c2a1&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23253.12,-45.72 23251.68,-45.72 23251.68,-44.28 23253.12,-44.28 23253.12,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 987f82b97f27495daeff1f302121ba85&amp;#45;&amp;#45;f0493bb37c2c4b41a14f701f8031c2a1 --&gt;\n&lt;g id=\"edge1846\" class=\"edge\"&gt;\n&lt;title&gt;987f82b97f27495daeff1f302121ba85&amp;#45;&amp;#45;f0493bb37c2c4b41a14f701f8031c2a1&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23188.28,-45C23214.33,-45 23249.14,-45 23251.3,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- e30d7c4d573a47c798dcceace6fade2f --&gt;\n&lt;g id=\"node1855\" class=\"node\"&gt;\n&lt;title&gt;e30d7c4d573a47c798dcceace6fade2f&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23346.72,-45.72 23345.28,-45.72 23345.28,-44.28 23346.72,-44.28 23346.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- f0493bb37c2c4b41a14f701f8031c2a1&amp;#45;&amp;#45;e30d7c4d573a47c798dcceace6fade2f --&gt;\n&lt;g id=\"edge1847\" class=\"edge\"&gt;\n&lt;title&gt;f0493bb37c2c4b41a14f701f8031c2a1&amp;#45;&amp;#45;e30d7c4d573a47c798dcceace6fade2f&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23253.47,-45C23256.2,-45 23342.25,-45 23344.94,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- e01383bc35404e49aaa2d0b9852f0e87 --&gt;\n&lt;g id=\"node1856\" class=\"node\"&gt;\n&lt;title&gt;e01383bc35404e49aaa2d0b9852f0e87&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23440.32,-45.72 23438.88,-45.72 23438.88,-44.28 23440.32,-44.28 23440.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e30d7c4d573a47c798dcceace6fade2f&amp;#45;&amp;#45;e01383bc35404e49aaa2d0b9852f0e87 --&gt;\n&lt;g id=\"edge1848\" class=\"edge\"&gt;\n&lt;title&gt;e30d7c4d573a47c798dcceace6fade2f&amp;#45;&amp;#45;e01383bc35404e49aaa2d0b9852f0e87&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23347.07,-45C23349.8,-45 23435.85,-45 23438.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- ca03fc97e8b74c1c9247b40cdd1589d0 --&gt;\n&lt;g id=\"node1857\" class=\"node\"&gt;\n&lt;title&gt;ca03fc97e8b74c1c9247b40cdd1589d0&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23533.92,-45.72 23532.48,-45.72 23532.48,-44.28 23533.92,-44.28 23533.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- e01383bc35404e49aaa2d0b9852f0e87&amp;#45;&amp;#45;ca03fc97e8b74c1c9247b40cdd1589d0 --&gt;\n&lt;g id=\"edge1849\" class=\"edge\"&gt;\n&lt;title&gt;e01383bc35404e49aaa2d0b9852f0e87&amp;#45;&amp;#45;ca03fc97e8b74c1c9247b40cdd1589d0&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23440.67,-45C23443.4,-45 23529.45,-45 23532.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- c1a014a52c764d6c8b38f2dd4686ad2e --&gt;\n&lt;g id=\"node1858\" class=\"node\"&gt;\n&lt;title&gt;c1a014a52c764d6c8b38f2dd4686ad2e&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23686.32,-45.72 23684.88,-45.72 23684.88,-44.28 23686.32,-44.28 23686.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- ca03fc97e8b74c1c9247b40cdd1589d0&amp;#45;&amp;#45;c1a014a52c764d6c8b38f2dd4686ad2e --&gt;\n&lt;g id=\"edge1850\" class=\"edge\"&gt;\n&lt;title&gt;ca03fc97e8b74c1c9247b40cdd1589d0&amp;#45;&amp;#45;c1a014a52c764d6c8b38f2dd4686ad2e&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23534.31,-45C23538.79,-45 23680.08,-45 23684.49,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 804a974dbb9440cfa79b8ee795d5492a --&gt;\n&lt;g id=\"node1859\" class=\"node\"&gt;\n&lt;title&gt;804a974dbb9440cfa79b8ee795d5492a&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23838.72,-45.72 23837.28,-45.72 23837.28,-44.28 23838.72,-44.28 23838.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- c1a014a52c764d6c8b38f2dd4686ad2e&amp;#45;&amp;#45;804a974dbb9440cfa79b8ee795d5492a --&gt;\n&lt;g id=\"edge1851\" class=\"edge\"&gt;\n&lt;title&gt;c1a014a52c764d6c8b38f2dd4686ad2e&amp;#45;&amp;#45;804a974dbb9440cfa79b8ee795d5492a&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23686.71,-45C23691.19,-45 23832.48,-45 23836.89,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1471ee7bf3604e1c821fae5fdef6c5bd --&gt;\n&lt;g id=\"node1860\" class=\"node\"&gt;\n&lt;title&gt;1471ee7bf3604e1c821fae5fdef6c5bd&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"23932.32,-45.72 23930.88,-45.72 23930.88,-44.28 23932.32,-44.28 23932.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 804a974dbb9440cfa79b8ee795d5492a&amp;#45;&amp;#45;1471ee7bf3604e1c821fae5fdef6c5bd --&gt;\n&lt;g id=\"edge1852\" class=\"edge\"&gt;\n&lt;title&gt;804a974dbb9440cfa79b8ee795d5492a&amp;#45;&amp;#45;1471ee7bf3604e1c821fae5fdef6c5bd&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23839.07,-45C23841.8,-45 23927.85,-45 23930.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- de288640cdcd483ebff728b72a220910 --&gt;\n&lt;g id=\"node1861\" class=\"node\"&gt;\n&lt;title&gt;de288640cdcd483ebff728b72a220910&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24025.92,-45.72 24024.48,-45.72 24024.48,-44.28 24025.92,-44.28 24025.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 1471ee7bf3604e1c821fae5fdef6c5bd&amp;#45;&amp;#45;de288640cdcd483ebff728b72a220910 --&gt;\n&lt;g id=\"edge1853\" class=\"edge\"&gt;\n&lt;title&gt;1471ee7bf3604e1c821fae5fdef6c5bd&amp;#45;&amp;#45;de288640cdcd483ebff728b72a220910&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M23932.67,-45C23935.4,-45 24021.45,-45 24024.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- b27ab60c76b043ee983af9fac941d894 --&gt;\n&lt;g id=\"node1862\" class=\"node\"&gt;\n&lt;title&gt;b27ab60c76b043ee983af9fac941d894&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24178.32,-45.72 24176.88,-45.72 24176.88,-44.28 24178.32,-44.28 24178.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- de288640cdcd483ebff728b72a220910&amp;#45;&amp;#45;b27ab60c76b043ee983af9fac941d894 --&gt;\n&lt;g id=\"edge1854\" class=\"edge\"&gt;\n&lt;title&gt;de288640cdcd483ebff728b72a220910&amp;#45;&amp;#45;b27ab60c76b043ee983af9fac941d894&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24026.31,-45C24030.79,-45 24172.08,-45 24176.49,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 72c029c07c704d58b92184859e9c5b64 --&gt;\n&lt;g id=\"node1863\" class=\"node\"&gt;\n&lt;title&gt;72c029c07c704d58b92184859e9c5b64&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24330.72,-45.72 24329.28,-45.72 24329.28,-44.28 24330.72,-44.28 24330.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- b27ab60c76b043ee983af9fac941d894&amp;#45;&amp;#45;72c029c07c704d58b92184859e9c5b64 --&gt;\n&lt;g id=\"edge1855\" class=\"edge\"&gt;\n&lt;title&gt;b27ab60c76b043ee983af9fac941d894&amp;#45;&amp;#45;72c029c07c704d58b92184859e9c5b64&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24178.71,-45C24183.19,-45 24324.48,-45 24328.89,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- de4d055a8d0d4e3a8f5b68c07215c4ea --&gt;\n&lt;g id=\"node1864\" class=\"node\"&gt;\n&lt;title&gt;de4d055a8d0d4e3a8f5b68c07215c4ea&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24424.32,-45.72 24422.88,-45.72 24422.88,-44.28 24424.32,-44.28 24424.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 72c029c07c704d58b92184859e9c5b64&amp;#45;&amp;#45;de4d055a8d0d4e3a8f5b68c07215c4ea --&gt;\n&lt;g id=\"edge1856\" class=\"edge\"&gt;\n&lt;title&gt;72c029c07c704d58b92184859e9c5b64&amp;#45;&amp;#45;de4d055a8d0d4e3a8f5b68c07215c4ea&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24331.07,-45C24333.8,-45 24419.85,-45 24422.54,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0eb3067610174e94b73d0cc31b54174b --&gt;\n&lt;g id=\"node1865\" class=\"node\"&gt;\n&lt;title&gt;0eb3067610174e94b73d0cc31b54174b&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24517.92,-45.72 24516.48,-45.72 24516.48,-44.28 24517.92,-44.28 24517.92,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- de4d055a8d0d4e3a8f5b68c07215c4ea&amp;#45;&amp;#45;0eb3067610174e94b73d0cc31b54174b --&gt;\n&lt;g id=\"edge1857\" class=\"edge\"&gt;\n&lt;title&gt;de4d055a8d0d4e3a8f5b68c07215c4ea&amp;#45;&amp;#45;0eb3067610174e94b73d0cc31b54174b&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24424.67,-45C24427.4,-45 24513.45,-45 24516.14,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- cc718696bd784529a7c9ff2b36dd57e7 --&gt;\n&lt;g id=\"node1866\" class=\"node\"&gt;\n&lt;title&gt;cc718696bd784529a7c9ff2b36dd57e7&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24670.32,-45.72 24668.88,-45.72 24668.88,-44.28 24670.32,-44.28 24670.32,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0eb3067610174e94b73d0cc31b54174b&amp;#45;&amp;#45;cc718696bd784529a7c9ff2b36dd57e7 --&gt;\n&lt;g id=\"edge1858\" class=\"edge\"&gt;\n&lt;title&gt;0eb3067610174e94b73d0cc31b54174b&amp;#45;&amp;#45;cc718696bd784529a7c9ff2b36dd57e7&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24518.31,-45C24522.79,-45 24664.08,-45 24668.49,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 38986bc7741e423f8a152162a0cb81ba --&gt;\n&lt;g id=\"node1867\" class=\"node\"&gt;\n&lt;title&gt;38986bc7741e423f8a152162a0cb81ba&lt;/title&gt;\n&lt;polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.35\" points=\"24822.72,-45.72 24821.28,-45.72 24821.28,-44.28 24822.72,-44.28 24822.72,-45.72\"/&gt;\n&lt;/g&gt;\n&lt;!-- cc718696bd784529a7c9ff2b36dd57e7&amp;#45;&amp;#45;38986bc7741e423f8a152162a0cb81ba --&gt;\n&lt;g id=\"edge1859\" class=\"edge\"&gt;\n&lt;title&gt;cc718696bd784529a7c9ff2b36dd57e7&amp;#45;&amp;#45;38986bc7741e423f8a152162a0cb81ba&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24670.71,-45C24675.19,-45 24816.48,-45 24820.89,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- c72d47f3e0d540768ac76d635dd42930 --&gt;\n&lt;g id=\"node1868\" class=\"node\"&gt;\n&lt;title&gt;c72d47f3e0d540768ac76d635dd42930&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M24932.4,-73.8C24932.4,-73.8 24898.8,-73.8 24898.8,-73.8 24892.8,-73.8 24886.8,-67.8 24886.8,-61.8 24886.8,-61.8 24886.8,-28.2 24886.8,-28.2 24886.8,-22.2 24892.8,-16.2 24898.8,-16.2 24898.8,-16.2 24932.4,-16.2 24932.4,-16.2 24938.4,-16.2 24944.4,-22.2 24944.4,-28.2 24944.4,-28.2 24944.4,-61.8 24944.4,-61.8 24944.4,-67.8 24938.4,-73.8 24932.4,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"24915.6\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 38986bc7741e423f8a152162a0cb81ba&amp;#45;&amp;#45;c72d47f3e0d540768ac76d635dd42930 --&gt;\n&lt;g id=\"edge1860\" class=\"edge\"&gt;\n&lt;title&gt;38986bc7741e423f8a152162a0cb81ba&amp;#45;&amp;#45;c72d47f3e0d540768ac76d635dd42930&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24823.07,-45C24824.79,-45 24859.68,-45 24885.88,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- c72d47f3e0d540768ac76d635dd42930&amp;#45;&amp;#45;d843cd1e15c64522a8b224b29fc7ad17 --&gt;\n&lt;g id=\"edge2063\" class=\"edge\"&gt;\n&lt;title&gt;c72d47f3e0d540768ac76d635dd42930&amp;#45;&amp;#45;d843cd1e15c64522a8b224b29fc7ad17&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24915.6,-74.65C24915.6,-85.2 24915.6,-95.76 24915.6,-106.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 0ac16300309d4086a809fc3d23141057 --&gt;\n&lt;g id=\"node1869\" class=\"node\"&gt;\n&lt;title&gt;0ac16300309d4086a809fc3d23141057&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M25143.6,-73.8C25143.6,-73.8 24992.4,-73.8 24992.4,-73.8 24986.4,-73.8 24980.4,-67.8 24980.4,-61.8 24980.4,-61.8 24980.4,-28.2 24980.4,-28.2 24980.4,-22.2 24986.4,-16.2 24992.4,-16.2 24992.4,-16.2 25143.6,-16.2 25143.6,-16.2 25149.6,-16.2 25155.6,-22.2 25155.6,-28.2 25155.6,-28.2 25155.6,-61.8 25155.6,-61.8 25155.6,-67.8 25149.6,-73.8 25143.6,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"25068\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RZ(&amp;#45;1.0*g1)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- c72d47f3e0d540768ac76d635dd42930&amp;#45;&amp;#45;0ac16300309d4086a809fc3d23141057 --&gt;\n&lt;g id=\"edge1861\" class=\"edge\"&gt;\n&lt;title&gt;c72d47f3e0d540768ac76d635dd42930&amp;#45;&amp;#45;0ac16300309d4086a809fc3d23141057&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M24945.24,-45C24955.3,-45 24967.19,-45 24979.53,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- ac9e88ae5cad4261aa45fe916d74fa01 --&gt;\n&lt;g id=\"node1870\" class=\"node\"&gt;\n&lt;title&gt;ac9e88ae5cad4261aa45fe916d74fa01&lt;/title&gt;\n&lt;path fill=\"#f0c1be\" stroke=\"#d03a2f\" stroke-width=\"2.7\" d=\"M25237.2,-73.8C25237.2,-73.8 25203.6,-73.8 25203.6,-73.8 25197.6,-73.8 25191.6,-67.8 25191.6,-61.8 25191.6,-61.8 25191.6,-28.2 25191.6,-28.2 25191.6,-22.2 25197.6,-16.2 25203.6,-16.2 25203.6,-16.2 25237.2,-16.2 25237.2,-16.2 25243.2,-16.2 25249.2,-22.2 25249.2,-28.2 25249.2,-28.2 25249.2,-61.8 25249.2,-61.8 25249.2,-67.8 25243.2,-73.8 25237.2,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"25220.4\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;X&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- 0ac16300309d4086a809fc3d23141057&amp;#45;&amp;#45;ac9e88ae5cad4261aa45fe916d74fa01 --&gt;\n&lt;g id=\"edge1862\" class=\"edge\"&gt;\n&lt;title&gt;0ac16300309d4086a809fc3d23141057&amp;#45;&amp;#45;ac9e88ae5cad4261aa45fe916d74fa01&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25156.49,-45C25168.77,-45 25180.6,-45 25190.62,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- ac9e88ae5cad4261aa45fe916d74fa01&amp;#45;&amp;#45;b2eb048608714a93a5e0c404f5aa614d --&gt;\n&lt;g id=\"edge2064\" class=\"edge\"&gt;\n&lt;title&gt;ac9e88ae5cad4261aa45fe916d74fa01&amp;#45;&amp;#45;b2eb048608714a93a5e0c404f5aa614d&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25220.4,-74.65C25220.4,-85.2 25220.4,-95.76 25220.4,-106.31\"/&gt;\n&lt;/g&gt;\n&lt;!-- 68d19bd08e984e349b54f74d002cbefe --&gt;\n&lt;g id=\"node1871\" class=\"node\"&gt;\n&lt;title&gt;68d19bd08e984e349b54f74d002cbefe&lt;/title&gt;\n&lt;path fill=\"#afd3e9\" stroke=\"#3182bd\" stroke-width=\"2.7\" d=\"M25400.4,-73.8C25400.4,-73.8 25297.2,-73.8 25297.2,-73.8 25291.2,-73.8 25285.2,-67.8 25285.2,-61.8 25285.2,-61.8 25285.2,-28.2 25285.2,-28.2 25285.2,-22.2 25291.2,-16.2 25297.2,-16.2 25297.2,-16.2 25400.4,-16.2 25400.4,-16.2 25406.4,-16.2 25412.4,-22.2 25412.4,-28.2 25412.4,-28.2 25412.4,-61.8 25412.4,-61.8 25412.4,-67.8 25406.4,-73.8 25400.4,-73.8\"/&gt;\n&lt;text text-anchor=\"middle\" x=\"25348.8\" y=\"-39.5\" font-family=\"JetBrains Mono\" font-size=\"20.00\"&gt;RX(b17)&lt;/text&gt;\n&lt;/g&gt;\n&lt;!-- ac9e88ae5cad4261aa45fe916d74fa01&amp;#45;&amp;#45;68d19bd08e984e349b54f74d002cbefe --&gt;\n&lt;g id=\"edge1863\" class=\"edge\"&gt;\n&lt;title&gt;ac9e88ae5cad4261aa45fe916d74fa01&amp;#45;&amp;#45;68d19bd08e984e349b54f74d002cbefe&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25250.08,-45C25260.35,-45 25272.38,-45 25284.41,-45\"/&gt;\n&lt;/g&gt;\n&lt;!-- 68d19bd08e984e349b54f74d002cbefe&amp;#45;&amp;#45;f0a75d5a5eba4c5f80f8f958b3dddc87 --&gt;\n&lt;g id=\"edge1864\" class=\"edge\"&gt;\n&lt;title&gt;68d19bd08e984e349b54f74d002cbefe&amp;#45;&amp;#45;f0a75d5a5eba4c5f80f8f958b3dddc87&lt;/title&gt;\n&lt;path fill=\"none\" stroke=\"black\" stroke-width=\"2.7\" d=\"M25413.2,-45C25425.7,-45 25438.15,-45 25448.52,-45\"/&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"qml/qaoa/#train-the-qaoa-circuit-to-solve-maxcut","title":"Train the QAOA circuit to solve MaxCut","text":"<p>Given the QAOA circuit above, one can construct the associated Qadence <code>QuantumModel</code> and train it using standard gradient based optimization.</p> <p>The loss function to be minimized reads:</p> \\[ \\mathcal{L} = \\sum_{i,j}^{N_{\\mathcal{E}}} \\frac{1}{2} \\left(1 - \\langle \\psi | \\sigma_i^z \\sigma_j^z | \\psi \\rangle \\right) \\] <p>where \\(\\psi(\\beta, \\gamma)\\) is the wavefunction obtained by propagating the QAQA quantum circuit and the sum runs over the edges of the graph \\(N_{\\mathcal{E}}\\).</p> <pre><code>import torch\nfrom qadence import QuantumModel\ntorch.manual_seed(seed)\ndef loss_function(_model: QuantumModel):\nexpval_ops = _model.expectation().squeeze()\n# this corresponds to the MaxCut cost by definition\n# with negative sign in front to perform maximization\nexpval = 0.0\nfor val in expval_ops:\nexpval += 0.5 * (1 - val)\nreturn -1.0 * expval\n# initialize the parameters to random values\nmodel = QuantumModel(circuit, observable=zz_ops)\nmodel.reset_vparams(torch.rand(model.num_vparams))\ninitial_loss = loss_function(model)\nprint(f\"Initial loss: {initial_loss}\")\n# train the model\nn_epochs = 100\nlr = 1.0\noptimizer = torch.optim.Adagrad(model.parameters(), lr=lr)\nfor i in range(n_epochs):\noptimizer.zero_grad()\nloss = loss_function(model)\nloss.backward()\noptimizer.step()\nif (i+1) % (n_epochs // 10) == 0:\nprint(f\"MaxCut cost at iteration {i+1}: {-loss.item()}\")\n</code></pre> <pre><code>Initial loss: -3.922852057361637\nMaxCut cost at iteration 10: 9.685649181971101\nMaxCut cost at iteration 20: 9.923347063604217\nMaxCut cost at iteration 30: 9.997930895832448\nMaxCut cost at iteration 40: 9.999880276394054\nMaxCut cost at iteration 50: 9.999979610385545\nMaxCut cost at iteration 60: 9.999994577033208\nMaxCut cost at iteration 70: 9.99999839157383\nMaxCut cost at iteration 80: 9.99999951116925\nMaxCut cost at iteration 90: 9.999999850608658\nMaxCut cost at iteration 100: 9.999999954286157\n</code></pre> <p>Qadence offers some convenience functions to implement this training loop with advanced logging and metrics track features. You can refer to this for more details.</p>"},{"location":"qml/qaoa/#results","title":"Results","text":"<p>Given the trained quantum model, one needs to sample the resulting quantum state to recover the bitstring with the highest probability which corresponds to the maximum cut of the graph.</p> <pre><code>samples = model.sample(n_shots=100)[0]\nmost_frequent = max(samples, key=samples.get)\nprint(f\"Most frequently sampled bitstring corresponding to the maximum cut: {most_frequent}\")\n# let's now draw the cut obtained with the QAOA procedure\ncolors = []\nlabels = {}\nfor node, b in zip(graph.nodes(), most_frequent):\ncolors.append(\"green\") if int(b) == 0 else colors.append(\"red\")\nlabels[node] = \"A\" if int(b) == 0 else \"B\"\nnx.draw_networkx(graph, node_color=colors, with_labels=True, labels=labels)\n</code></pre> <pre><code>Most frequently sampled bitstring corresponding to the maximum cut: 11111000\n&lt;?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?&gt;\n&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;\n&lt;svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1088.64pt\" height=\"504pt\" viewBox=\"0 0 1088.64 504\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"&gt;\n&lt;metadata&gt;\n&lt;rdf:RDF xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"&gt;\n&lt;cc:Work&gt;\n&lt;dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/&gt;\n&lt;dc:date&gt;2023-10-12T10:40:11.837518&lt;/dc:date&gt;\n&lt;dc:format&gt;image/svg+xml&lt;/dc:format&gt;\n&lt;dc:creator&gt;\n&lt;cc:Agent&gt;\n&lt;dc:title&gt;Matplotlib v3.7.3, https://matplotlib.org/&lt;/dc:title&gt;\n&lt;/cc:Agent&gt;\n&lt;/dc:creator&gt;\n&lt;/cc:Work&gt;\n&lt;/rdf:RDF&gt;\n&lt;/metadata&gt;\n&lt;defs&gt;\n&lt;style type=\"text/css\"&gt;*{stroke-linejoin: round; stroke-linecap: butt}&lt;/style&gt;\n&lt;/defs&gt;\n&lt;g id=\"figure_1\"&gt;\n&lt;g id=\"patch_1\"&gt;\n&lt;path d=\"M 0 504 \nL 1088.64 504 \nL 1088.64 0 \nL 0 0 \nz\n\" style=\"fill: #ffffff\"/&gt;\n&lt;/g&gt;\n&lt;g id=\"axes_1\"&gt;\n&lt;g id=\"patch_2\"&gt;\n&lt;path d=\"M 136.08 448.56 \nL 979.776 448.56 \nL 979.776 60.48 \nL 136.08 60.48 \nz\n\" style=\"fill: #ffffff\"/&gt;\n&lt;/g&gt;\n&lt;g id=\"LineCollection_1\"&gt;\n&lt;path d=\"M 906.562711 94.156364 \nL 710.333088 215.299797 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 906.562711 94.156364 \nL 704.50701 123.771802 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 710.333088 215.299797 \nL 769.917431 298.57911 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 710.333088 215.299797 \nL 704.50701 123.771802 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 710.333088 215.299797 \nL 574.288406 228.016135 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 710.333088 215.299797 \nL 416.402756 284.304262 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 209.293289 414.883636 \nL 416.402756 284.304262 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 457.807624 125.920349 \nL 704.50701 123.771802 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 457.807624 125.920349 \nL 574.288406 228.016135 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 457.807624 125.920349 \nL 416.402756 284.304262 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 769.917431 298.57911 \nL 704.50701 123.771802 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 769.917431 298.57911 \nL 574.288406 228.016135 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 704.50701 123.771802 \nL 574.288406 228.016135 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;path d=\"M 574.288406 228.016135 \nL 416.402756 284.304262 \n\" clip-path=\"url(#p33349b7b82)\" style=\"fill: none; stroke: #000000\"/&gt;\n&lt;/g&gt;\n&lt;g id=\"matplotlib.axis_1\"&gt;\n&lt;g id=\"xtick_1\"/&gt;\n&lt;g id=\"xtick_2\"/&gt;\n&lt;g id=\"xtick_3\"/&gt;\n&lt;g id=\"xtick_4\"/&gt;\n&lt;g id=\"xtick_5\"/&gt;\n&lt;g id=\"xtick_6\"/&gt;\n&lt;g id=\"xtick_7\"/&gt;\n&lt;g id=\"xtick_8\"/&gt;\n&lt;g id=\"xtick_9\"/&gt;\n&lt;/g&gt;\n&lt;g id=\"matplotlib.axis_2\"&gt;\n&lt;g id=\"ytick_1\"/&gt;\n&lt;g id=\"ytick_2\"/&gt;\n&lt;g id=\"ytick_3\"/&gt;\n&lt;g id=\"ytick_4\"/&gt;\n&lt;g id=\"ytick_5\"/&gt;\n&lt;g id=\"ytick_6\"/&gt;\n&lt;g id=\"ytick_7\"/&gt;\n&lt;/g&gt;\n&lt;g id=\"PathCollection_1\"&gt;\n&lt;defs&gt;\n&lt;path id=\"C0_0_2faf75dcdd\" d=\"M 0 8.660254 \nC 2.296726 8.660254 4.499694 7.747755 6.123724 6.123724 \nC 7.747755 4.499694 8.660254 2.296726 8.660254 -0 \nC 8.660254 -2.296726 7.747755 -4.499694 6.123724 -6.123724 \nC 4.499694 -7.747755 2.296726 -8.660254 0 -8.660254 \nC -2.296726 -8.660254 -4.499694 -7.747755 -6.123724 -6.123724 \nC -7.747755 -4.499694 -8.660254 -2.296726 -8.660254 0 \nC -8.660254 2.296726 -7.747755 4.499694 -6.123724 6.123724 \nC -4.499694 7.747755 -2.296726 8.660254 0 8.660254 \nz\n\"/&gt;\n&lt;/defs&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;use xlink:href=\"#C0_0_2faf75dcdd\" x=\"906.562711\" y=\"94.156364\" style=\"fill: #ff0000; stroke: #ff0000\"/&gt;\n&lt;/g&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;use xlink:href=\"#C0_0_2faf75dcdd\" x=\"710.333088\" y=\"215.299797\" style=\"fill: #ff0000; stroke: #ff0000\"/&gt;\n&lt;/g&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;use xlink:href=\"#C0_0_2faf75dcdd\" x=\"209.293289\" y=\"414.883636\" style=\"fill: #ff0000; stroke: #ff0000\"/&gt;\n&lt;/g&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;use xlink:href=\"#C0_0_2faf75dcdd\" x=\"457.807624\" y=\"125.920349\" style=\"fill: #ff0000; stroke: #ff0000\"/&gt;\n&lt;/g&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;use xlink:href=\"#C0_0_2faf75dcdd\" x=\"769.917431\" y=\"298.57911\" style=\"fill: #ff0000; stroke: #ff0000\"/&gt;\n&lt;/g&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;use xlink:href=\"#C0_0_2faf75dcdd\" x=\"704.50701\" y=\"123.771802\" style=\"fill: #008000; stroke: #008000\"/&gt;\n&lt;/g&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;use xlink:href=\"#C0_0_2faf75dcdd\" x=\"574.288406\" y=\"228.016135\" style=\"fill: #008000; stroke: #008000\"/&gt;\n&lt;/g&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;use xlink:href=\"#C0_0_2faf75dcdd\" x=\"416.402756\" y=\"284.304262\" style=\"fill: #008000; stroke: #008000\"/&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;g id=\"patch_3\"&gt;\n&lt;path d=\"M 136.08 448.56 \nL 136.08 60.48 \n\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/&gt;\n&lt;/g&gt;\n&lt;g id=\"patch_4\"&gt;\n&lt;path d=\"M 979.776 448.56 \nL 979.776 60.48 \n\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/&gt;\n&lt;/g&gt;\n&lt;g id=\"patch_5\"&gt;\n&lt;path d=\"M 136.08 448.56 \nL 979.776 448.56 \n\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/&gt;\n&lt;/g&gt;\n&lt;g id=\"patch_6\"&gt;\n&lt;path d=\"M 136.08 60.48 \nL 979.776 60.48 \n\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/&gt;\n&lt;/g&gt;\n&lt;g id=\"text_1\"&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;!-- B --&gt;\n&lt;g transform=\"translate(902.446148 97.467614) scale(0.12 -0.12)\"&gt;\n&lt;defs&gt;\n&lt;path id=\"DejaVuSans-42\" d=\"M 1259 2228 \nL 1259 519 \nL 2272 519 \nQ 2781 519 3026 730 \nQ 3272 941 3272 1375 \nQ 3272 1813 3026 2020 \nQ 2781 2228 2272 2228 \nL 1259 2228 \nz\nM 1259 4147 \nL 1259 2741 \nL 2194 2741 \nQ 2656 2741 2882 2914 \nQ 3109 3088 3109 3444 \nQ 3109 3797 2882 3972 \nQ 2656 4147 2194 4147 \nL 1259 4147 \nz\nM 628 4666 \nL 2241 4666 \nQ 2963 4666 3353 4366 \nQ 3744 4066 3744 3513 \nQ 3744 3084 3544 2831 \nQ 3344 2578 2956 2516 \nQ 3422 2416 3680 2098 \nQ 3938 1781 3938 1306 \nQ 3938 681 3513 340 \nQ 3088 0 2303 0 \nL 628 0 \nL 628 4666 \nz\n\" transform=\"scale(0.015625)\"/&gt;\n&lt;/defs&gt;\n&lt;use xlink:href=\"#DejaVuSans-42\"/&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;g id=\"text_2\"&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;!-- B --&gt;\n&lt;g transform=\"translate(706.216525 218.611047) scale(0.12 -0.12)\"&gt;\n&lt;use xlink:href=\"#DejaVuSans-42\"/&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;g id=\"text_3\"&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;!-- B --&gt;\n&lt;g transform=\"translate(205.176727 418.194886) scale(0.12 -0.12)\"&gt;\n&lt;use xlink:href=\"#DejaVuSans-42\"/&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;g id=\"text_4\"&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;!-- B --&gt;\n&lt;g transform=\"translate(453.691061 129.231599) scale(0.12 -0.12)\"&gt;\n&lt;use xlink:href=\"#DejaVuSans-42\"/&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;g id=\"text_5\"&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;!-- B --&gt;\n&lt;g transform=\"translate(765.800869 301.89036) scale(0.12 -0.12)\"&gt;\n&lt;use xlink:href=\"#DejaVuSans-42\"/&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;g id=\"text_6\"&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;!-- A --&gt;\n&lt;g transform=\"translate(700.402635 127.083052) scale(0.12 -0.12)\"&gt;\n&lt;defs&gt;\n&lt;path id=\"DejaVuSans-41\" d=\"M 2188 4044 \nL 1331 1722 \nL 3047 1722 \nL 2188 4044 \nz\nM 1831 4666 \nL 2547 4666 \nL 4325 0 \nL 3669 0 \nL 3244 1197 \nL 1141 1197 \nL 716 0 \nL 50 0 \nL 1831 4666 \nz\n\" transform=\"scale(0.015625)\"/&gt;\n&lt;/defs&gt;\n&lt;use xlink:href=\"#DejaVuSans-41\"/&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;g id=\"text_7\"&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;!-- A --&gt;\n&lt;g transform=\"translate(570.184031 231.327385) scale(0.12 -0.12)\"&gt;\n&lt;use xlink:href=\"#DejaVuSans-41\"/&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;g id=\"text_8\"&gt;\n&lt;g clip-path=\"url(#p33349b7b82)\"&gt;\n&lt;!-- A --&gt;\n&lt;g transform=\"translate(412.298381 287.615512) scale(0.12 -0.12)\"&gt;\n&lt;use xlink:href=\"#DejaVuSans-41\"/&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;/g&gt;\n&lt;defs&gt;\n&lt;clipPath id=\"p33349b7b82\"&gt;\n&lt;rect x=\"136.08\" y=\"60.48\" width=\"843.696\" height=\"388.08\"/&gt;\n&lt;/clipPath&gt;\n&lt;/defs&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"qml/qaoa/#references","title":"References","text":"<ol> <li> <p>Farhi et al. - A Quantum Approximate Optimization Algorithm\u00a0\u21a9</p> </li> </ol>"},{"location":"qml/qcl/","title":"Quantum circuit learning","text":"<p>This tutorial shows how to apply <code>qadence</code> for solving a basic quantum machine learning application: fitting a simple function with the quantum circuit learning<sup>1</sup> (QCL) algorithm.</p> <p>QCL is a supervised quantum machine learning algorithm that uses a parametrized quantum neural network to learn the behavior of an arbitrary mathematical function using a set of function values as training data. This tutorial shows how to fit the \\(\\sin(x)\\) function in the \\([-1, 1]\\) domain.</p> <p>In the following, train and test data are defined.</p> <pre><code>from typing import Callable\nimport torch\n# make sure all tensors are kept on the same device\n# only available from PyTorch 2.0\ndevice = \"cuda\" if torch.cuda.is_available() else \"cpu\"\ntorch.set_default_device(device)\n# notice that the domain does not include 1 and -1\n# this avoids a singularity in the rotation angles when\n# when encoding the domain points into the quantum circuit\n# with a non-linear transformation (see below)\ndef qcl_training_data(\ndomain: tuple = (-0.99, 0.99), n_points: int = 100\n) -&gt; tuple[torch.Tensor, torch.Tensor]:\nstart, end = domain\nx_rand, _ = torch.sort(torch.DoubleTensor(n_points).uniform_(start, end))\ny_rand = torch.sin(x_rand)\nreturn x_rand, y_rand\ntest_frac = 0.25\nx, y = qcl_training_data()\nn_test = int(len(x) * test_frac)\nx_train, y_train = x[0:n_test-len(x)], y[0:n_test-len(x)]\nx_test, y_test = x[n_test-len(x):], y[n_test-len(x):]\n</code></pre> <pre><code>\n</code></pre>"},{"location":"qml/qcl/#train-the-qcl-model","title":"Train the QCL model","text":"<p>Qadence provides the <code>QNN</code> convenience constructor to build a quantum neural network. The <code>QNN</code> class needs a circuit and a list of observables; the number of feature parameters in the input circuit determines the number of input features (i.e. the dimensionality of the classical data given as input) whereas the number of observables determines the number of outputs of the quantum neural network.</p> <p>Total qubit magnetization is used as observable:</p> \\[ \\hat{O} = \\sum_i^N \\hat{\\sigma}_i^z \\] <p>In the following the observable, quantum circuit and corresponding QNN model are constructed.</p> <pre><code>import sympy\nimport qadence as qd\nfrom qadence.operations import RX\nn_qubits = 8\n# create a simple feature map with a non-linear parameter transformation\nfeature_param = qd.FeatureParameter(\"phi\")\nfeature_map = qd.kron(RX(i, feature_param) for i in range(n_qubits))\nfeatre_map = qd.tag(feature_map, \"feature_map\")\n# create a digital-analog variational ansatz using Qadence convenience constructors\nansatz = qd.hea(n_qubits, depth=n_qubits, strategy=qd.Strategy.SDAQC)\nansatz = qd.tag(ansatz, \"ansatz\")\n# total magnetization observable\nobservable = qd.hamiltonian_factory(n_qubits, detuning = qd.Z)\ncircuit = qd.QuantumCircuit(n_qubits, feature_map, ansatz)\nmodel = qd.QNN(circuit, [observable])\nexpval = model(values=torch.rand(10))\nprint(expval)\n</code></pre> <pre><code>tensor([[ 0.1640],\n[-0.0787],\n[-0.4532],\n[ 0.0720],\n[-0.1039],\n[ 0.1009],\n[-0.2124],\n[ 0.1358],\n[-0.4851],\n[ 0.1562]], grad_fn=&lt;CatBackward0&gt;)\n</code></pre> <p>The QCL algorithm uses the output of the quantum neural network as a tunable universal function approximator. Standard PyTorch code is used for training the QNN using a mean-square error loss, Adam optimizer. Training is performend on the GPU if available:</p> <pre><code># train the model\nn_epochs = 200\nlr = 0.5\ninput_values = {\"phi\": x_train}\nmse_loss = torch.nn.MSELoss()  # standard PyTorch loss function\noptimizer = torch.optim.Adam(model.parameters(), lr=lr)  # standard PyTorch Adam optimizer\nprint(f\"Initial loss: {mse_loss(model(input_values), y_train)}\")\ny_pred_initial = model({\"phi\": x_test})\nrunning_loss = 0.0\nfor i in range(n_epochs):\noptimizer.zero_grad()\nloss = mse_loss(model(input_values), y_train)\nloss.backward()\noptimizer.step()\nif (i+1) % 20 == 0:\nprint(f\"Epoch {i+1} - Loss: {loss.item()}\")\n</code></pre> <pre><code>Initial loss: 0.040382579742702956\nEpoch 20 - Loss: 0.06094355349958272\nEpoch 40 - Loss: 0.020199471072599125\nEpoch 60 - Loss: 0.034795959771942046\nEpoch 80 - Loss: 0.16442932438213143\nEpoch 100 - Loss: 0.01530923269939165\nEpoch 120 - Loss: 0.02774412169104146\nEpoch 140 - Loss: 0.43824295695050114\nEpoch 160 - Loss: 0.031369205849141414\nEpoch 180 - Loss: 0.021469213972949482\nEpoch 200 - Loss: 0.018666303121455067\n</code></pre> <p>Qadence offers some convenience functions to implement this training loop with advanced logging and metrics track features. You can refer to this for more details.</p> <p>The quantum model is now trained on the training data points. To determine the quality of the results, one can check to see how well it fits the function on the test set.</p> <pre><code>import matplotlib.pyplot as plt\ny_pred = model({\"phi\": x_test})\n# convert all the results to numpy arrays for plotting\nx_train_np = x_train.cpu().detach().numpy().flatten()\ny_train_np = y_train.cpu().detach().numpy().flatten()\nx_test_np = x_test.cpu().detach().numpy().flatten()\ny_pred_initial_np = y_pred_initial.cpu().detach().numpy().flatten()\ny_pred_np = y_pred.cpu().detach().numpy().flatten()\nfig, _ = plt.subplots()\nplt.scatter(x_train_np, y_train_np, label=\"Training points\", marker=\"o\", color=\"orange\")\nplt.plot(x_test_np, y_pred_initial_np, label=\"Initial prediction\", color=\"green\", alpha=0.5)\nplt.plot(x_test_np, y_pred_np, label=\"Final prediction\")\nplt.legend()\n</code></pre> 2023-10-12T10:40:27.935958 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/"},{"location":"qml/qcl/#references","title":"References","text":"<ol> <li> <p>Mitarai et al., Quantum Circuit Learning \u21a9</p> </li> </ol>"},{"location":"qml/qml_tools/","title":"Tools for quantum machine learning","text":"<p>Qadence offers a wide range of utilities for helping building and researching quantum machine learning algorithms, including:</p> <ul> <li>a set of constructors for circuits commonly used in quantum machine learning</li> <li>a set of tools for optimizing quantum neural networks and loading classical data into a QML algorithm</li> </ul>"},{"location":"qml/qml_tools/#quantum-machine-learning-constructors","title":"Quantum machine learning constructors","text":"<p>Besides the arbitrary Hamiltonian constructors, Qadence also provides a complete set of program constructors useful for digital-analog quantum machine learning programs.</p>"},{"location":"qml/qml_tools/#feature-maps","title":"Feature maps","text":"<p>A few feature maps are directly available for loading classical data into quantum circuits by encoding them into gate rotation angles.</p> <pre><code>from qadence import feature_map\nn_qubits = 3\nfm = feature_map(n_qubits, fm_type=\"fourier\")\nfm = feature_map(n_qubits, fm_type=\"chebyshev\")\nfm = feature_map(n_qubits, fm_type=\"tower\")\n</code></pre> <pre><code>Fourier = KronBlock(0,1,2) [tag: FM]\n\u251c\u2500\u2500 RX(0) [params: ['phi']]\n\u251c\u2500\u2500 RX(1) [params: ['phi']]\n\u2514\u2500\u2500 RX(2) [params: ['phi']]\nChebyshev KronBlock(0,1,2) [tag: FM]\n\u251c\u2500\u2500 RX(0) [params: ['2*acos(phi)']]\n\u251c\u2500\u2500 RX(1) [params: ['2*acos(phi)']]\n\u2514\u2500\u2500 RX(2) [params: ['2*acos(phi)']]\nTower KronBlock(0,1,2) [tag: FM]\n\u251c\u2500\u2500 RX(0) [params: ['2*acos(phi)']]\n\u251c\u2500\u2500 RX(1) [params: ['4*acos(phi)']]\n\u2514\u2500\u2500 RX(2) [params: ['6*acos(phi)']]\n</code></pre>"},{"location":"qml/qml_tools/#hardware-efficient-ansatz","title":"Hardware-efficient ansatz","text":"<p>Ansatze blocks for quantum machine-learning are typically built following the Hardware-Efficient Ansatz formalism (HEA). Both fully digital and digital-analog HEAs can easily be built with the <code>hea</code> function. By default, the digital version is returned:</p> <pre><code>from qadence import hea\nfrom qadence.draw import display\nn_qubits = 3\ndepth = 2\nansatz = hea(n_qubits, depth)\n</code></pre> 8e9b6b95b28d46e08d96fad2a26e29af 0 e74d6067f76f4dec80e43351c3cc985e RX(theta\u2080) 8e9b6b95b28d46e08d96fad2a26e29af--e74d6067f76f4dec80e43351c3cc985e 8f7332cf4c46497099943a4549945137 1 a9ad7c30786a4d89aba26058517728cc RY(theta\u2083) e74d6067f76f4dec80e43351c3cc985e--a9ad7c30786a4d89aba26058517728cc a389b580d3484ae2aeb3624722227e51 RX(theta\u2086) a9ad7c30786a4d89aba26058517728cc--a389b580d3484ae2aeb3624722227e51 e12617f8a77248e984339392b37192c5 a389b580d3484ae2aeb3624722227e51--e12617f8a77248e984339392b37192c5 4f12486dabc542dfa2697a976f3f5369 e12617f8a77248e984339392b37192c5--4f12486dabc542dfa2697a976f3f5369 dc20ec534de84c5a86736ff7d4a00f48 RX(theta\u2089) 4f12486dabc542dfa2697a976f3f5369--dc20ec534de84c5a86736ff7d4a00f48 0752a9120dab4587bcfe57bef19c15c7 RY(theta\u2081\u2082) dc20ec534de84c5a86736ff7d4a00f48--0752a9120dab4587bcfe57bef19c15c7 57d3bb7217ad4fd197bd08dc6e291e96 RX(theta\u2081\u2085) 0752a9120dab4587bcfe57bef19c15c7--57d3bb7217ad4fd197bd08dc6e291e96 a7565c368550474dbd058cedb2cbe8d4 57d3bb7217ad4fd197bd08dc6e291e96--a7565c368550474dbd058cedb2cbe8d4 10fb45fb69f34536a50ba97ed0e8e9fc a7565c368550474dbd058cedb2cbe8d4--10fb45fb69f34536a50ba97ed0e8e9fc dbdd24776dca454f88fb61e367414a5f 10fb45fb69f34536a50ba97ed0e8e9fc--dbdd24776dca454f88fb61e367414a5f 67818372eaaa49ada3837e01c35a932a 6b8b62969fad414e90c7833e33b2a0fd RX(theta\u2081) 8f7332cf4c46497099943a4549945137--6b8b62969fad414e90c7833e33b2a0fd fe1b7387d14b4ebbaa1e0155e576a35d 2 4850bb7d891844a790bb7684a8fea552 RY(theta\u2084) 6b8b62969fad414e90c7833e33b2a0fd--4850bb7d891844a790bb7684a8fea552 bbcf3f934dbd4d6dbbf9f9332960ce59 RX(theta\u2087) 4850bb7d891844a790bb7684a8fea552--bbcf3f934dbd4d6dbbf9f9332960ce59 fdf8805afaa54e1e971da9e9d911e05c X bbcf3f934dbd4d6dbbf9f9332960ce59--fdf8805afaa54e1e971da9e9d911e05c fdf8805afaa54e1e971da9e9d911e05c--e12617f8a77248e984339392b37192c5 a31a56f33b7d45afb3c9c8f103b6d081 fdf8805afaa54e1e971da9e9d911e05c--a31a56f33b7d45afb3c9c8f103b6d081 af5450df43d2479b8f0a6ee6c7648351 RX(theta\u2081\u2080) a31a56f33b7d45afb3c9c8f103b6d081--af5450df43d2479b8f0a6ee6c7648351 b15e89d4cc57447c8b3a254e91db8c42 RY(theta\u2081\u2083) af5450df43d2479b8f0a6ee6c7648351--b15e89d4cc57447c8b3a254e91db8c42 253ba8e5b3444c54bf2db54e27d2a4da RX(theta\u2081\u2086) b15e89d4cc57447c8b3a254e91db8c42--253ba8e5b3444c54bf2db54e27d2a4da 45a7f401688547d78d1f05fa9ec4f975 X 253ba8e5b3444c54bf2db54e27d2a4da--45a7f401688547d78d1f05fa9ec4f975 45a7f401688547d78d1f05fa9ec4f975--a7565c368550474dbd058cedb2cbe8d4 ae00737eeb5a4a36b15ffad9dd62cbdf 45a7f401688547d78d1f05fa9ec4f975--ae00737eeb5a4a36b15ffad9dd62cbdf ae00737eeb5a4a36b15ffad9dd62cbdf--67818372eaaa49ada3837e01c35a932a de98301e88ff433bb89b0a01969ea0d3 0245430f184e4b0cae305d9a54b3a3ff RX(theta\u2082) fe1b7387d14b4ebbaa1e0155e576a35d--0245430f184e4b0cae305d9a54b3a3ff cbe60199e1da4ecfbc202d7a8f92ddc5 RY(theta\u2085) 0245430f184e4b0cae305d9a54b3a3ff--cbe60199e1da4ecfbc202d7a8f92ddc5 6ecd46e036f5479980e4942c8950cff7 RX(theta\u2088) cbe60199e1da4ecfbc202d7a8f92ddc5--6ecd46e036f5479980e4942c8950cff7 e3dd4906ec864a92b77d907fb139a721 6ecd46e036f5479980e4942c8950cff7--e3dd4906ec864a92b77d907fb139a721 d4394a8865324600833e4594380e158e X e3dd4906ec864a92b77d907fb139a721--d4394a8865324600833e4594380e158e d4394a8865324600833e4594380e158e--a31a56f33b7d45afb3c9c8f103b6d081 b8d7564e13ae47ce860724c9681318ea RX(theta\u2081\u2081) d4394a8865324600833e4594380e158e--b8d7564e13ae47ce860724c9681318ea bfb74af3a6b64d3ba92b05d7c0159cb4 RY(theta\u2081\u2084) b8d7564e13ae47ce860724c9681318ea--bfb74af3a6b64d3ba92b05d7c0159cb4 644b553bbbb1418c9e937246edcc5713 RX(theta\u2081\u2087) bfb74af3a6b64d3ba92b05d7c0159cb4--644b553bbbb1418c9e937246edcc5713 61ab1a1d14f049989252dc42fe3de40f 644b553bbbb1418c9e937246edcc5713--61ab1a1d14f049989252dc42fe3de40f 6a0cdc5751ef4727b18c9a6c41861038 X 61ab1a1d14f049989252dc42fe3de40f--6a0cdc5751ef4727b18c9a6c41861038 6a0cdc5751ef4727b18c9a6c41861038--ae00737eeb5a4a36b15ffad9dd62cbdf 6a0cdc5751ef4727b18c9a6c41861038--de98301e88ff433bb89b0a01969ea0d3 <p>As seen above, the rotation layers are automatically parameterized, and the prefix <code>\"theta\"</code> can be changed with the <code>param_prefix</code> argument.</p> <p>Furthermore, both the single-qubit rotations and the two-qubit entangler can be customized with the <code>operations</code> and <code>entangler</code> argument. The operations can be passed as a list of single-qubit rotations, while the entangler should be either <code>CNOT</code>, <code>CZ</code>, <code>CRX</code>, <code>CRY</code>, <code>CRZ</code> or <code>CPHASE</code>.</p> <pre><code>from qadence import RX, RY, CPHASE\nansatz = hea(\nn_qubits=n_qubits,\ndepth=depth,\nparam_prefix=\"phi\",\noperations=[RX, RY, RX],\nentangler=CPHASE\n)\n</code></pre> 95d748cc3055445c8745923110e02547 0 d605ab651d894e5da30434b65324cfb2 RX(phi\u2080) 95d748cc3055445c8745923110e02547--d605ab651d894e5da30434b65324cfb2 408ec41cec684d078b989d637ee6d3ce 1 1ad257a7db354b1bb1288c741bfe5358 RY(phi\u2083) d605ab651d894e5da30434b65324cfb2--1ad257a7db354b1bb1288c741bfe5358 1a1aa0609c25429ea0f5571c396023d4 RX(phi\u2086) 1ad257a7db354b1bb1288c741bfe5358--1a1aa0609c25429ea0f5571c396023d4 0899e854b6bb45d28d507e18e8739c7c 1a1aa0609c25429ea0f5571c396023d4--0899e854b6bb45d28d507e18e8739c7c b2b9b921499144c4a32e4cdb11a4d31a 0899e854b6bb45d28d507e18e8739c7c--b2b9b921499144c4a32e4cdb11a4d31a f6d9a2c631ce4aa5ae47f9a04393d920 RX(phi\u2089) b2b9b921499144c4a32e4cdb11a4d31a--f6d9a2c631ce4aa5ae47f9a04393d920 1c4daabf7877463cb30ec56f0b1dfe5d RY(phi\u2081\u2082) f6d9a2c631ce4aa5ae47f9a04393d920--1c4daabf7877463cb30ec56f0b1dfe5d 4e417617e7534329b60c1968e06cacd4 RX(phi\u2081\u2085) 1c4daabf7877463cb30ec56f0b1dfe5d--4e417617e7534329b60c1968e06cacd4 fd768c7e8ee041c1badf17f860627b6f 4e417617e7534329b60c1968e06cacd4--fd768c7e8ee041c1badf17f860627b6f e28c1049962d43ec85dd14dfc2f294ba fd768c7e8ee041c1badf17f860627b6f--e28c1049962d43ec85dd14dfc2f294ba ef3c4dbb397d42ad9d1ef3c3756bf1d4 e28c1049962d43ec85dd14dfc2f294ba--ef3c4dbb397d42ad9d1ef3c3756bf1d4 e7d3b6ec3aaf41ef9de051e754a71e29 edca1ad2f2434fed9fe4acd8584a3577 RX(phi\u2081) 408ec41cec684d078b989d637ee6d3ce--edca1ad2f2434fed9fe4acd8584a3577 bf0e1fcb6d534fa2b7c0d8d8e519956d 2 f95a1d4a0460432e8acbbed174e92b52 RY(phi\u2084) edca1ad2f2434fed9fe4acd8584a3577--f95a1d4a0460432e8acbbed174e92b52 881e423466c241b2b5c7207fb0a0f5db RX(phi\u2087) f95a1d4a0460432e8acbbed174e92b52--881e423466c241b2b5c7207fb0a0f5db 7f452706768741cc849c1c3272102ad8 PHASE(phi_ent\u2080) 881e423466c241b2b5c7207fb0a0f5db--7f452706768741cc849c1c3272102ad8 7f452706768741cc849c1c3272102ad8--0899e854b6bb45d28d507e18e8739c7c 38d6da8266d3499197c83f812df65a4f 7f452706768741cc849c1c3272102ad8--38d6da8266d3499197c83f812df65a4f 7dee61a701124c72ab4f06f2a1adce0d RX(phi\u2081\u2080) 38d6da8266d3499197c83f812df65a4f--7dee61a701124c72ab4f06f2a1adce0d 906a6b26d4634bab96a8b133b542c88c RY(phi\u2081\u2083) 7dee61a701124c72ab4f06f2a1adce0d--906a6b26d4634bab96a8b133b542c88c 63ab8526d70641f2a281c1893a23cc97 RX(phi\u2081\u2086) 906a6b26d4634bab96a8b133b542c88c--63ab8526d70641f2a281c1893a23cc97 4d0b564f43a64e7a956fdd2e4aec0271 PHASE(phi_ent\u2082) 63ab8526d70641f2a281c1893a23cc97--4d0b564f43a64e7a956fdd2e4aec0271 4d0b564f43a64e7a956fdd2e4aec0271--fd768c7e8ee041c1badf17f860627b6f 764f95d36bf744db96425158e707f101 4d0b564f43a64e7a956fdd2e4aec0271--764f95d36bf744db96425158e707f101 764f95d36bf744db96425158e707f101--e7d3b6ec3aaf41ef9de051e754a71e29 a6336e392fb14c709b9aa4043a9ca913 86ff473674e0466192cf2c679a253589 RX(phi\u2082) bf0e1fcb6d534fa2b7c0d8d8e519956d--86ff473674e0466192cf2c679a253589 800de64e2f964a7598613a23c8438b6f RY(phi\u2085) 86ff473674e0466192cf2c679a253589--800de64e2f964a7598613a23c8438b6f 45d46e33cf884facbf461afcfae43577 RX(phi\u2088) 800de64e2f964a7598613a23c8438b6f--45d46e33cf884facbf461afcfae43577 491e721e13b8455db476f4d15dd32993 45d46e33cf884facbf461afcfae43577--491e721e13b8455db476f4d15dd32993 efb3a16bcbe14e53ba426ce5b4194b74 PHASE(phi_ent\u2081) 491e721e13b8455db476f4d15dd32993--efb3a16bcbe14e53ba426ce5b4194b74 efb3a16bcbe14e53ba426ce5b4194b74--38d6da8266d3499197c83f812df65a4f 36beb3ab8d7a46be956ccbf83301b909 RX(phi\u2081\u2081) efb3a16bcbe14e53ba426ce5b4194b74--36beb3ab8d7a46be956ccbf83301b909 1ea3101bae654b1f8b4f8b744316a8de RY(phi\u2081\u2084) 36beb3ab8d7a46be956ccbf83301b909--1ea3101bae654b1f8b4f8b744316a8de 18e0c0ba1b8242ecab0583bd17c57d12 RX(phi\u2081\u2087) 1ea3101bae654b1f8b4f8b744316a8de--18e0c0ba1b8242ecab0583bd17c57d12 b3129a7ed52a4d10a46fe04c92ed8afa 18e0c0ba1b8242ecab0583bd17c57d12--b3129a7ed52a4d10a46fe04c92ed8afa f0fe446907bd47e9a4b930acfcd9a508 PHASE(phi_ent\u2083) b3129a7ed52a4d10a46fe04c92ed8afa--f0fe446907bd47e9a4b930acfcd9a508 f0fe446907bd47e9a4b930acfcd9a508--764f95d36bf744db96425158e707f101 f0fe446907bd47e9a4b930acfcd9a508--a6336e392fb14c709b9aa4043a9ca913 <p>Having a truly hardware-efficient ansatz means that the entangling operation can be chosen according to each device's native interactions. Besides digital operations, in Qadence it is also possible to build digital-analog HEAs with the entanglement produced by the natural evolution of a set of interacting qubits, as natively implemented in neutral atom devices. As with other digital-analog functions, this can be controlled with the <code>strategy</code> argument which can be chosen from the <code>Strategy</code> enum type. Currently, only <code>Strategy.DIGITAL</code> and <code>Strategy.SDAQC</code> are available. By default, calling <code>strategy = Strategy.SDAQC</code> will use a global entangling Hamiltonian with Ising-like NN interactions and constant interaction strength,</p> <pre><code>from qadence import Strategy\nansatz = hea(\nn_qubits,\ndepth=depth,\nstrategy=Strategy.SDAQC\n)\n</code></pre> cluster_9e7adeeb1d2547b3b1c82d01ca25b834 cluster_111ff31092b94234a066069f7537fe49 135da3c22a634fd48de004d4c272063f 0 86cb3c96bb5b4be99dae4e18bb0a11d9 RX(theta\u2080) 135da3c22a634fd48de004d4c272063f--86cb3c96bb5b4be99dae4e18bb0a11d9 a681864202af407cb40fe05a31868f4d 1 14496448890e441989b609edbc5d6a4f RY(theta\u2083) 86cb3c96bb5b4be99dae4e18bb0a11d9--14496448890e441989b609edbc5d6a4f ff6786a69c484476877caab054716a0c RX(theta\u2086) 14496448890e441989b609edbc5d6a4f--ff6786a69c484476877caab054716a0c 899c9f5430ed4c19aa8e82906e566f61 HamEvo ff6786a69c484476877caab054716a0c--899c9f5430ed4c19aa8e82906e566f61 2691517546224fc4ba01f9c74a5cfff9 RX(theta\u2089) 899c9f5430ed4c19aa8e82906e566f61--2691517546224fc4ba01f9c74a5cfff9 17c062bcee3f4d22b0701f386649dfc8 RY(theta\u2081\u2082) 2691517546224fc4ba01f9c74a5cfff9--17c062bcee3f4d22b0701f386649dfc8 35fd796863b34b8db7ea37903feaddcd RX(theta\u2081\u2085) 17c062bcee3f4d22b0701f386649dfc8--35fd796863b34b8db7ea37903feaddcd 3e71e5dc348a4f5d85901526c44be96a HamEvo 35fd796863b34b8db7ea37903feaddcd--3e71e5dc348a4f5d85901526c44be96a 8902de45f5c948acac508043e70d1985 3e71e5dc348a4f5d85901526c44be96a--8902de45f5c948acac508043e70d1985 696e4bad890c4ece8d178f9e25cfc53b 1eca90cdb6924d579c00d2d15276980d RX(theta\u2081) a681864202af407cb40fe05a31868f4d--1eca90cdb6924d579c00d2d15276980d 0dcfc6ae35d4472b92359fcc5c34c566 2 10fd29c2e3fe4c32989ba87e8ec466e5 RY(theta\u2084) 1eca90cdb6924d579c00d2d15276980d--10fd29c2e3fe4c32989ba87e8ec466e5 970997e279484155bdb2300e09196159 RX(theta\u2087) 10fd29c2e3fe4c32989ba87e8ec466e5--970997e279484155bdb2300e09196159 54a367bdfbe342ee8a5c5fe62884a428 t = theta_t\u2080 970997e279484155bdb2300e09196159--54a367bdfbe342ee8a5c5fe62884a428 179f3a3150ce4010a3c7f45ab282904e RX(theta\u2081\u2080) 54a367bdfbe342ee8a5c5fe62884a428--179f3a3150ce4010a3c7f45ab282904e 5a4e02c849ee4788906002c1bf34c77c RY(theta\u2081\u2083) 179f3a3150ce4010a3c7f45ab282904e--5a4e02c849ee4788906002c1bf34c77c 90a7f86712464e7794a69dc4a6da2cac RX(theta\u2081\u2086) 5a4e02c849ee4788906002c1bf34c77c--90a7f86712464e7794a69dc4a6da2cac 17f0ca22efea4d239353e9a01120292b t = theta_t\u2081 90a7f86712464e7794a69dc4a6da2cac--17f0ca22efea4d239353e9a01120292b 17f0ca22efea4d239353e9a01120292b--696e4bad890c4ece8d178f9e25cfc53b 1c903f0f7c3a423f9c4410f01dd6f109 a5f85e81c7974775a3be8051ec5a27ed RX(theta\u2082) 0dcfc6ae35d4472b92359fcc5c34c566--a5f85e81c7974775a3be8051ec5a27ed a90f3ec662f3473382b7b232f78df537 RY(theta\u2085) a5f85e81c7974775a3be8051ec5a27ed--a90f3ec662f3473382b7b232f78df537 437607a905a04b138db0f463c4217c90 RX(theta\u2088) a90f3ec662f3473382b7b232f78df537--437607a905a04b138db0f463c4217c90 52e1e0c03f49462d8f6a75af9e643b59 437607a905a04b138db0f463c4217c90--52e1e0c03f49462d8f6a75af9e643b59 c40576dde99b46279eeae2a13f10851d RX(theta\u2081\u2081) 52e1e0c03f49462d8f6a75af9e643b59--c40576dde99b46279eeae2a13f10851d d4e6fb6ef14f42339d0ff2cbb4a433d4 RY(theta\u2081\u2084) c40576dde99b46279eeae2a13f10851d--d4e6fb6ef14f42339d0ff2cbb4a433d4 fa942440e161471899a43c57be738928 RX(theta\u2081\u2087) d4e6fb6ef14f42339d0ff2cbb4a433d4--fa942440e161471899a43c57be738928 4002c2b4fd784f7aaeb3e6a42cc5d281 fa942440e161471899a43c57be738928--4002c2b4fd784f7aaeb3e6a42cc5d281 4002c2b4fd784f7aaeb3e6a42cc5d281--1c903f0f7c3a423f9c4410f01dd6f109 <p>Note that, by default, only the time-parameter is automatically parameterized when building a digital-analog HEA. However, as described in the Hamiltonians tutorial, arbitrary interaction Hamiltonians can be easily built with the <code>hamiltonian_factory</code> function, with both customized or fully parameterized interactions, and these can be directly passed as the <code>entangler</code> for a customizable digital-analog HEA.</p> <pre><code>from qadence import hamiltonian_factory, Interaction, N, Register, hea\n# Build a parameterized neutral-atom Hamiltonian following a honeycomb_lattice:\nregister = Register.honeycomb_lattice(1, 1)\nentangler = hamiltonian_factory(\nregister,\ninteraction=Interaction.NN,\ndetuning=N,\ninteraction_strength=\"e\",\ndetuning_strength=\"n\"\n)\n# Build a fully parameterized Digital-Analog HEA:\nn_qubits = register.n_qubits\ndepth = 2\nansatz = hea(\nn_qubits=register.n_qubits,\ndepth=depth,\noperations=[RX, RY, RX],\nentangler=entangler,\nstrategy=Strategy.SDAQC\n)\n</code></pre> cluster_b56d6501ef0b41cfbdde99a44f96c357 cluster_4493f40995a44b9d99663f2b62cb36ca 923f7ade7ca047b3a40998bf830ffa93 0 3588d98c23794473a17ff24cbd504320 RX(theta\u2080) 923f7ade7ca047b3a40998bf830ffa93--3588d98c23794473a17ff24cbd504320 2835e2b80cf548ea90a3fd7f2a8e4386 1 f6af05db32de4c5ca582f9401af911d7 RY(theta\u2086) 3588d98c23794473a17ff24cbd504320--f6af05db32de4c5ca582f9401af911d7 26555cb051364d70a498b9501ac5b12a RX(theta\u2081\u2082) f6af05db32de4c5ca582f9401af911d7--26555cb051364d70a498b9501ac5b12a 36749882920c4232b1945398a603a04b 26555cb051364d70a498b9501ac5b12a--36749882920c4232b1945398a603a04b f4485a0d88ee418f825c184835154c47 RX(theta\u2081\u2088) 36749882920c4232b1945398a603a04b--f4485a0d88ee418f825c184835154c47 42d74f1fbfcf41c3994d175c52e5f942 RY(theta\u2082\u2084) f4485a0d88ee418f825c184835154c47--42d74f1fbfcf41c3994d175c52e5f942 bda19859c0954d50bc7bbcfcfe9fdbd4 RX(theta\u2083\u2080) 42d74f1fbfcf41c3994d175c52e5f942--bda19859c0954d50bc7bbcfcfe9fdbd4 b673dfe6905d42e39576275b1bb7c2e9 bda19859c0954d50bc7bbcfcfe9fdbd4--b673dfe6905d42e39576275b1bb7c2e9 94405a52f42449b582a616b33a84e48c b673dfe6905d42e39576275b1bb7c2e9--94405a52f42449b582a616b33a84e48c 6d2a50af8f774853a09498ce4d281296 5eee5af6f36144e3a3f4f568c1659aee RX(theta\u2081) 2835e2b80cf548ea90a3fd7f2a8e4386--5eee5af6f36144e3a3f4f568c1659aee cf524f1700b140f3b5479abedc41ec1a 2 a0c8ac9af92a40c1a320bbf60984dbdb RY(theta\u2087) 5eee5af6f36144e3a3f4f568c1659aee--a0c8ac9af92a40c1a320bbf60984dbdb eb7edf149b19446e8d8edf22a05c8200 RX(theta\u2081\u2083) a0c8ac9af92a40c1a320bbf60984dbdb--eb7edf149b19446e8d8edf22a05c8200 4a17b840d61f4811bbc52e04b19b22f3 eb7edf149b19446e8d8edf22a05c8200--4a17b840d61f4811bbc52e04b19b22f3 f5551df730624831a1a01d88aa62982b RX(theta\u2081\u2089) 4a17b840d61f4811bbc52e04b19b22f3--f5551df730624831a1a01d88aa62982b 01c43b12481d4c53a326a87e34483fbf RY(theta\u2082\u2085) f5551df730624831a1a01d88aa62982b--01c43b12481d4c53a326a87e34483fbf 63fd59b5e4ca4117ad35dd216ddc6743 RX(theta\u2083\u2081) 01c43b12481d4c53a326a87e34483fbf--63fd59b5e4ca4117ad35dd216ddc6743 93ec4b16a883478584e27794b86d27a0 63fd59b5e4ca4117ad35dd216ddc6743--93ec4b16a883478584e27794b86d27a0 93ec4b16a883478584e27794b86d27a0--6d2a50af8f774853a09498ce4d281296 634006155e5e4fc8bbf3c3aef52233ed c5fb45ea13a04c829e7874bce90f0a90 RX(theta\u2082) cf524f1700b140f3b5479abedc41ec1a--c5fb45ea13a04c829e7874bce90f0a90 d8a1bad2e70946508a745a17c885279b 3 fec00255681d4fa682205b674de73c31 RY(theta\u2088) c5fb45ea13a04c829e7874bce90f0a90--fec00255681d4fa682205b674de73c31 00652c08ac954dacbabc02c9262df5e2 RX(theta\u2081\u2084) fec00255681d4fa682205b674de73c31--00652c08ac954dacbabc02c9262df5e2 c3f11f1a56b14cd8888e831da540927c HamEvo 00652c08ac954dacbabc02c9262df5e2--c3f11f1a56b14cd8888e831da540927c efed1bf539414e22afb4a27e2aa50155 RX(theta\u2082\u2080) c3f11f1a56b14cd8888e831da540927c--efed1bf539414e22afb4a27e2aa50155 8db71b379c344232bf4e148d839bf14f RY(theta\u2082\u2086) efed1bf539414e22afb4a27e2aa50155--8db71b379c344232bf4e148d839bf14f 6fb7428ad9934b2fb3cf06f372482f09 RX(theta\u2083\u2082) 8db71b379c344232bf4e148d839bf14f--6fb7428ad9934b2fb3cf06f372482f09 564e8caeb3bd4aebae8bb8e242e96c47 HamEvo 6fb7428ad9934b2fb3cf06f372482f09--564e8caeb3bd4aebae8bb8e242e96c47 564e8caeb3bd4aebae8bb8e242e96c47--634006155e5e4fc8bbf3c3aef52233ed ac6fb194662c45fa84070fe2dfeb3b95 a255529bda98463a97584cc61ed9b680 RX(theta\u2083) d8a1bad2e70946508a745a17c885279b--a255529bda98463a97584cc61ed9b680 225d0c114e8a4f5bb1479255e1cb2529 4 ff6f343e88c34a7a8edbbfa24c7bbe73 RY(theta\u2089) a255529bda98463a97584cc61ed9b680--ff6f343e88c34a7a8edbbfa24c7bbe73 b8f2171a03384f4f90974b8d40485301 RX(theta\u2081\u2085) ff6f343e88c34a7a8edbbfa24c7bbe73--b8f2171a03384f4f90974b8d40485301 25a4ae1e7d6746eab8333e23c976f047 t = theta_t\u2080 b8f2171a03384f4f90974b8d40485301--25a4ae1e7d6746eab8333e23c976f047 0632abeb64584650926e623c03b4f4f3 RX(theta\u2082\u2081) 25a4ae1e7d6746eab8333e23c976f047--0632abeb64584650926e623c03b4f4f3 c97beadfa5144d83b89f066f259f8a62 RY(theta\u2082\u2087) 0632abeb64584650926e623c03b4f4f3--c97beadfa5144d83b89f066f259f8a62 4dbff693cdbd4b38bc7e3b9598e71bb4 RX(theta\u2083\u2083) c97beadfa5144d83b89f066f259f8a62--4dbff693cdbd4b38bc7e3b9598e71bb4 51a5b75bf25d49dbaa46e03aec2d5769 t = theta_t\u2081 4dbff693cdbd4b38bc7e3b9598e71bb4--51a5b75bf25d49dbaa46e03aec2d5769 51a5b75bf25d49dbaa46e03aec2d5769--ac6fb194662c45fa84070fe2dfeb3b95 98901dc1cb244f23a62c6e41649cda55 73b5ce07a562400fbe2474edd2a335e9 RX(theta\u2084) 225d0c114e8a4f5bb1479255e1cb2529--73b5ce07a562400fbe2474edd2a335e9 b893737505aa4784a133681ec3f74eb6 5 2491a9477f864618b3b2ea7412d48e13 RY(theta\u2081\u2080) 73b5ce07a562400fbe2474edd2a335e9--2491a9477f864618b3b2ea7412d48e13 783743e9b9f24924a29cf1bd9a023e66 RX(theta\u2081\u2086) 2491a9477f864618b3b2ea7412d48e13--783743e9b9f24924a29cf1bd9a023e66 cade324cf7f648079513a86852f93110 783743e9b9f24924a29cf1bd9a023e66--cade324cf7f648079513a86852f93110 173038fd25e146a99d948261f1baf639 RX(theta\u2082\u2082) cade324cf7f648079513a86852f93110--173038fd25e146a99d948261f1baf639 fc325bd203c64d15aeddd7261df2a286 RY(theta\u2082\u2088) 173038fd25e146a99d948261f1baf639--fc325bd203c64d15aeddd7261df2a286 aa5d102296c74558ad5ffdd60548ef5c RX(theta\u2083\u2084) fc325bd203c64d15aeddd7261df2a286--aa5d102296c74558ad5ffdd60548ef5c b32e2f35bf9a427081a1f3ac8083fac4 aa5d102296c74558ad5ffdd60548ef5c--b32e2f35bf9a427081a1f3ac8083fac4 b32e2f35bf9a427081a1f3ac8083fac4--98901dc1cb244f23a62c6e41649cda55 313599369b724f41864ce4fe807c7f1c 6b01adf0d22a42b2aa8057c854797abc RX(theta\u2085) b893737505aa4784a133681ec3f74eb6--6b01adf0d22a42b2aa8057c854797abc bdf7c00e51e34163905cfc2d2a4c5a03 RY(theta\u2081\u2081) 6b01adf0d22a42b2aa8057c854797abc--bdf7c00e51e34163905cfc2d2a4c5a03 5e28217f71fc4d46a383f0d8b42dfc18 RX(theta\u2081\u2087) bdf7c00e51e34163905cfc2d2a4c5a03--5e28217f71fc4d46a383f0d8b42dfc18 783e5fcd51aa47ee9ae731ecb11ef6dc 5e28217f71fc4d46a383f0d8b42dfc18--783e5fcd51aa47ee9ae731ecb11ef6dc b6b49d5623be44c298b949d5dac28652 RX(theta\u2082\u2083) 783e5fcd51aa47ee9ae731ecb11ef6dc--b6b49d5623be44c298b949d5dac28652 71ae052f18e24f899919bf309dcd058d RY(theta\u2082\u2089) b6b49d5623be44c298b949d5dac28652--71ae052f18e24f899919bf309dcd058d 690e4fc7d4274fc39b46a43a09bf41f8 RX(theta\u2083\u2085) 71ae052f18e24f899919bf309dcd058d--690e4fc7d4274fc39b46a43a09bf41f8 9cb8d43a737542e9884733bafba0b982 690e4fc7d4274fc39b46a43a09bf41f8--9cb8d43a737542e9884733bafba0b982 9cb8d43a737542e9884733bafba0b982--313599369b724f41864ce4fe807c7f1c"},{"location":"qml/qml_tools/#machine-learning-tools","title":"Machine Learning Tools","text":""},{"location":"qml/qml_tools/#dataloaders","title":"Dataloaders","text":"<p>When using <code>qadence</code>, you can supply classical data to a quantum machine learning algorithm by using a standard PyTorch <code>DataLoader</code> instance. Qadence also provides the <code>DictDataLoader</code> convenience class which allows to build dictionaries of <code>DataLoader</code>s instances and easily iterate over them.</p> <pre><code>import torch\nfrom torch.utils.data import DataLoader, TensorDataset\nfrom qadence.ml_tools import DictDataLoader\ndef dataloader() -&gt; DataLoader:\nbatch_size = 5\nx = torch.linspace(0, 1, batch_size).reshape(-1, 1)\ny = torch.sin(x)\ndataset = TensorDataset(x, y)\nreturn DataLoader(dataset, batch_size=batch_size)\ndef dictdataloader() -&gt; DictDataLoader:\nbatch_size = 5\nkeys = [\"y1\", \"y2\"]\ndls = {}\nfor k in keys:\nx = torch.rand(batch_size, 1)\ny = torch.sin(x)\ndataset = TensorDataset(x, y)\ndataloader = DataLoader(dataset, batch_size=batch_size)\ndls[k] = dataloader\nreturn DictDataLoader(dls)\nn_epochs = 2\n# iterate standard DataLoader\ndl = dataloader()\nfor i in range(n_epochs):\ndata = next(iter(dl))\n# iterate DictDataLoader\nddl = dictdataloader()\nfor i in range(n_epochs):\ndata = next(iter(ddl))\n</code></pre> <pre><code>\n</code></pre>"},{"location":"qml/qml_tools/#optimization-routines","title":"Optimization routines","text":"<p>For training QML models, <code>qadence</code> also offers a few out-of-the-box routines for optimizing differentiable models like <code>QNN</code>s and <code>QuantumModel</code>s containing either trainable and/or non-trainable parameters (you can refer to this for a refresh about different parameter types):</p> <ul> <li><code>train_with_grad</code> for gradient-based optimization using PyTorch native optimizers</li> <li><code>train_gradient_free</code> for gradient-free optimization using the Nevergrad library.</li> </ul> <p>These routines performs training, logging/printing loss metrics and storing intermediate checkpoints of models. In the following, we use <code>train_with_grad</code> as example but the code can be used directly with the gradient-free routine.</p> <p>As every other training routine commonly used in Machine Learning, it requires <code>model</code>, <code>data</code> and an <code>optimizer</code> as input arguments. However, in addition, it requires a <code>loss_fn</code> and a <code>TrainConfig</code>. A <code>loss_fn</code> is required to be a function which expects both a model and data and returns a tuple of (loss, metrics: <code>&lt;dict&gt;</code>), where <code>metrics</code> is a dict of scalars which can be customized too.</p> <pre><code>import torch\nfrom itertools import count\ncnt = count()\ncriterion = torch.nn.MSELoss()\ndef loss_fn(model: torch.nn.Module, data: torch.Tensor) -&gt; tuple[torch.Tensor, dict]:\nnext(cnt)\nx, y = data[0], data[1]\nout = model(x)\nloss = criterion(out, y)\nreturn loss, {}\n</code></pre> <pre><code>\n</code></pre> <p>The <code>TrainConfig</code> tells <code>train_with_grad</code> what batch_size should be used, how many epochs to train, in which intervals to print/log metrics and how often to store intermediate checkpoints.</p> <pre><code>from qadence.ml_tools import TrainConfig\nbatch_size = 5\nn_epochs = 100\nconfig = TrainConfig(\nfolder=\"some_path/\",\nmax_iter=n_epochs,\ncheckpoint_every=100,\nwrite_every=100,\nbatch_size=batch_size,\n)\n</code></pre> <pre><code>\n</code></pre> <p>Let's see it in action with a simple example.</p>"},{"location":"qml/qml_tools/#fitting-a-funtion-with-a-qnn-using-ml_tools","title":"Fitting a funtion with a QNN using <code>ml_tools</code>","text":"<p>Let's look at a complete example of how to use <code>train_with_grad</code> now.</p> <pre><code>from pathlib import Path\nimport torch\nfrom itertools import count\nfrom qadence.constructors import hamiltonian_factory, hea, feature_map\nfrom qadence import chain, Parameter, QuantumCircuit, Z\nfrom qadence.models import QNN\nfrom qadence.ml_tools import train_with_grad, TrainConfig\nimport matplotlib.pyplot as plt\nn_qubits = 2\nfm = feature_map(n_qubits)\nansatz = hea(n_qubits=n_qubits, depth=3)\nobservable = hamiltonian_factory(n_qubits, detuning=Z)\ncircuit = QuantumCircuit(n_qubits, fm, ansatz)\nmodel = QNN(circuit, observable, backend=\"pyqtorch\", diff_mode=\"ad\")\nbatch_size = 1\ninput_values = {\"phi\": torch.rand(batch_size, requires_grad=True)}\npred = model(input_values)\ncnt = count()\ncriterion = torch.nn.MSELoss()\noptimizer = torch.optim.Adam(model.parameters(), lr=0.1)\ndef loss_fn(model: torch.nn.Module, data: torch.Tensor) -&gt; tuple[torch.Tensor, dict]:\nnext(cnt)\nx, y = data[0], data[1]\nout = model(x)\nloss = criterion(out, y)\nreturn loss, {}\ntmp_path = Path(\"/tmp\")\nn_epochs = 5\nconfig = TrainConfig(\nfolder=tmp_path,\nmax_iter=n_epochs,\ncheckpoint_every=100,\nwrite_every=100,\nbatch_size=batch_size,\n)\nbatch_size = 25\nx = torch.linspace(0, 1, batch_size).reshape(-1, 1)\ny = torch.sin(x)\ntrain_with_grad(model, (x, y), optimizer, config, loss_fn=loss_fn)\nplt.plot(y.numpy())\nplt.plot(model(input_values).detach().numpy())\n</code></pre> <pre><code>\n</code></pre> <p>For users who want to use the low-level API of <code>qadence</code>, here is the example from above written without <code>train_with_grad</code>.</p>"},{"location":"qml/qml_tools/#fitting-a-function-low-level-api","title":"Fitting a function - Low-level API","text":"<pre><code>from pathlib import Path\nimport torch\nfrom itertools import count\nfrom qadence.constructors import hamiltonian_factory, hea, feature_map\nfrom qadence import chain, Parameter, QuantumCircuit, Z\nfrom qadence.models import QNN\nfrom qadence.ml_tools import train_with_grad, TrainConfig\nn_qubits = 2\nfm = feature_map(n_qubits)\nansatz = hea(n_qubits=n_qubits, depth=3)\nobservable = hamiltonian_factory(n_qubits, detuning=Z)\ncircuit = QuantumCircuit(n_qubits, fm, ansatz)\nmodel = QNN(circuit, observable, backend=\"pyqtorch\", diff_mode=\"ad\")\nbatch_size = 1\ninput_values = {\"phi\": torch.rand(batch_size, requires_grad=True)}\npred = model(input_values)\ncriterion = torch.nn.MSELoss()\noptimizer = torch.optim.Adam(model.parameters(), lr=0.1)\nn_epochs=50\ncnt = count()\ntmp_path = Path(\"/tmp\")\nconfig = TrainConfig(\nfolder=tmp_path,\nmax_iter=n_epochs,\ncheckpoint_every=100,\nwrite_every=100,\nbatch_size=batch_size,\n)\nx = torch.linspace(0, 1, batch_size).reshape(-1, 1)\ny = torch.sin(x)\nfor i in range(n_epochs):\nout = model(x)\nloss = criterion(out, y)\nloss.backward()\noptimizer.step()\n</code></pre> <pre><code>\n</code></pre>"},{"location":"tutorials/backends/","title":"Backends","text":"<p>Backends allow execution of Qadence abstract quantum circuits. They could be chosen from a variety of simulators, emulators and hardware and can enable circuit differentiability. The primary way to interact and configure a backend is via the high-level API <code>QuantumModel</code>.</p> <p>Not all backends are equivalent</p> <p>Not all backends support the same set of operations, especially while executing analog blocks. Qadence will throw descriptive errors in such cases.</p>"},{"location":"tutorials/backends/#execution-backends","title":"Execution backends","text":"<p>PyQTorch: An efficient, large-scale simulator designed for quantum machine learning, seamlessly integrated with the popular PyTorch deep learning framework for automatic differentiability. It also offers analog computing for time-independent pulses. See <code>PyQTorchBackend</code>.</p> <p>Pulser: A Python library for pulse-level/analog control of neutral atom devices. Execution via QuTiP. See <code>PulserBackend</code>.</p> <p>Braket: A Python SDK for interacting with quantum devices on Amazon Braket. Currently, only the devices with the digital interface of Amazon Braket are supported and execution is performed using the local simulator. Execution on remote simulators and quantum processing units will be available soon. See <code>BraketBackend</code></p> <p>More: Proprietary Qadence extensions provide more high-performance backends based on tensor networks or differentiation engines. For more enquiries, please contact: <code>info@pasqal.com</code>.</p>"},{"location":"tutorials/backends/#differentiation-backend","title":"Differentiation backend","text":"<p>The <code>DifferentiableBackend</code> class enables different differentiation modes for the given backend. This can be chosen from two types:</p> <ul> <li>Automatic differentiation (AD): available for PyTorch based backends (PyQTorch).</li> <li>Parameter Shift Rules (PSR): available for all backends. See this section for more information on differentiability and PSR.</li> </ul> <p>In practice, only a <code>diff_mode</code> should be provided in the <code>QuantumModel</code>. Please note that <code>diff_mode</code> defaults to <code>None</code>:</p> <pre><code>import sympy\nimport torch\nfrom qadence import Parameter, RX, RZ, Z, CNOT, QuantumCircuit, QuantumModel, chain, BackendName, DiffMode\nx = Parameter(\"x\", trainable=False)\ny = Parameter(\"y\", trainable=False)\nfm = chain(\nRX(0, 3 * x),\nRX(0, x),\nRZ(1, sympy.exp(y)),\nRX(0, 3.14),\nRZ(1, \"theta\")\n)\nansatz = CNOT(0, 1)\nblock = chain(fm, ansatz)\ncircuit = QuantumCircuit(2, block)\nobservable = Z(0)\n# DiffMode.GPSR is available for any backend.\n# DiffMode.AD is only available for natively differentiable backends.\nmodel = QuantumModel(circuit, observable, backend=BackendName.PYQTORCH, diff_mode=DiffMode.GPSR)\n# Get some values for the feature parameters.\nvalues = {\"x\": (x := torch.tensor([0.5], requires_grad=True)), \"y\": torch.tensor([0.1])}\n# Compute expectation.\nexp = model.expectation(values)\n# Differentiate the expectation wrt x.\ndexp_dx = torch.autograd.grad(exp, x, torch.ones_like(exp))\n</code></pre> <pre><code>dexp_dx = (tensor([3.6398]),)\n</code></pre>"},{"location":"tutorials/backends/#low-level-backend_factory-interface","title":"Low-level <code>backend_factory</code> interface","text":"<p>Every backend in Qadence inherits from the abstract <code>Backend</code> class: <code>Backend</code> and implement the following methods:</p> <ul> <li><code>run</code>: propagate the initial state according to the quantum circuit and return the final wavefunction object.</li> <li><code>sample</code>: sample from a circuit.</li> <li><code>expectation</code>: computes the expectation of a circuit given an observable.</li> <li><code>convert</code>: convert the abstract <code>QuantumCircuit</code> object to its backend-native representation including a backend specific parameter embedding function.</li> </ul> <p>Backends are purely functional objects which take as input the values for the circuit parameters and return the desired output from a call to a method. In order to use a backend directly, embedded parameters must be supplied as they are returned by the backend specific embedding function.</p> <p>Here is a simple demonstration of the use of the Braket backend to execute a circuit in non-differentiable mode:</p> <pre><code>from qadence import QuantumCircuit, FeatureParameter, RX, RZ, CNOT, hea, chain\n# Construct a feature map.\nx = FeatureParameter(\"x\")\nz = FeatureParameter(\"y\")\nfm = chain(RX(0, 3 * x), RZ(1, z), CNOT(0, 1))\n# Construct a circuit with an hardware-efficient ansatz.\ncircuit = QuantumCircuit(3, fm, hea(3,1))\n</code></pre> <p>The abstract <code>QuantumCircuit</code> can now be converted to its native representation via the Braket backend.</p> <pre><code>from qadence import backend_factory\n# Use only Braket in non-differentiable mode:\nbackend = backend_factory(\"braket\")\n# The `Converted` object\n# (contains a `ConvertedCircuit` with the original and native representation)\nconv = backend.convert(circuit)\n</code></pre> <pre><code>conv.circuit.original = ChainBlock(0,1,2)\n\u251c\u2500\u2500 ChainBlock(0,1)\n\u2502   \u251c\u2500\u2500 RX(0) [params: ['3*x']]\n\u2502   \u251c\u2500\u2500 RZ(1) [params: ['y']]\n\u2502   \u2514\u2500\u2500 CNOT(0,1)\n\u2514\u2500\u2500 ChainBlock(0,1,2) [tag: HEA]\n\u251c\u2500\u2500 ChainBlock(0,1,2)\n\u2502   \u251c\u2500\u2500 KronBlock(0,1,2)\n\u2502   \u2502   \u251c\u2500\u2500 RX(0) [params: ['theta_0']]\n\u2502   \u2502   \u251c\u2500\u2500 RX(1) [params: ['theta_1']]\n\u2502   \u2502   \u2514\u2500\u2500 RX(2) [params: ['theta_2']]\n\u2502   \u251c\u2500\u2500 KronBlock(0,1,2)\n\u2502   \u2502   \u251c\u2500\u2500 RY(0) [params: ['theta_3']]\n\u2502   \u2502   \u251c\u2500\u2500 RY(1) [params: ['theta_4']]\n\u2502   \u2502   \u2514\u2500\u2500 RY(2) [params: ['theta_5']]\n\u2502   \u2514\u2500\u2500 KronBlock(0,1,2)\n\u2502       \u251c\u2500\u2500 RX(0) [params: ['theta_6']]\n\u2502       \u251c\u2500\u2500 RX(1) [params: ['theta_7']]\n\u2502       \u2514\u2500\u2500 RX(2) [params: ['theta_8']]\n\u2514\u2500\u2500 ChainBlock(0,1,2)\n\u251c\u2500\u2500 KronBlock(0,1)\n\u2502   \u2514\u2500\u2500 CNOT(0,1)\n\u2514\u2500\u2500 KronBlock(1,2)\n\u2514\u2500\u2500 CNOT(1,2)\nconv.circuit.native = Circuit('instructions': [Instruction('operator': Rx('angle': 13c21096-db5a-4ae4-9a59-c89e96a45a24, 'qubit_count': 1), 'target': QubitSet([Qubit(0)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': Rz('angle': 1c1e445a-1599-478d-b5d8-39c4c9bd71fd, 'qubit_count': 1), 'target': QubitSet([Qubit(1)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': CNot('qubit_count': 2), 'target': QubitSet([Qubit(0), Qubit(1)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': Rx('angle': 2070dc4a-8dd2-4692-a479-9eaa4e81a0db, 'qubit_count': 1), 'target': QubitSet([Qubit(0)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': Rx('angle': 0a6038c3-6f35-40c0-bf7e-76181adb99f1, 'qubit_count': 1), 'target': QubitSet([Qubit(1)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': Rx('angle': 738ebfd5-9217-456c-9979-70359d1b0515, 'qubit_count': 1), 'target': QubitSet([Qubit(2)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': Ry('angle': 323e7fdb-a3f4-4043-be6a-f75a3d85f3cf, 'qubit_count': 1), 'target': QubitSet([Qubit(0)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': Ry('angle': 4d1a485c-9db0-42df-b3c2-ef2d4316be84, 'qubit_count': 1), 'target': QubitSet([Qubit(1)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': Ry('angle': 78ee7c17-ddf2-4335-9b63-72ba4f6bc03f, 'qubit_count': 1), 'target': QubitSet([Qubit(2)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': Rx('angle': 4ef1f5e5-86e9-4130-9d7b-69927ff0d259, 'qubit_count': 1), 'target': QubitSet([Qubit(0)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': Rx('angle': cc69dc94-6a63-4a73-b23c-f2689d31cf89, 'qubit_count': 1), 'target': QubitSet([Qubit(1)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': Rx('angle': 80346efe-4ca0-4e81-ab01-b3f48c0b62a3, 'qubit_count': 1), 'target': QubitSet([Qubit(2)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': CNot('qubit_count': 2), 'target': QubitSet([Qubit(0), Qubit(1)]), 'control': QubitSet([]), 'control_state': (), 'power': 1), Instruction('operator': CNot('qubit_count': 2), 'target': QubitSet([Qubit(1), Qubit(2)]), 'control': QubitSet([]), 'control_state': (), 'power': 1)])\n</code></pre> <p>Additionally, <code>Converted</code> contains all fixed and variational parameters, as well as an embedding function which accepts feature parameters to construct a dictionary of circuit native parameters. These are needed as each backend uses a different representation of the circuit parameters:</p> <pre><code>import torch\n# Contains fixed parameters and variational (from the HEA)\nconv.params\ninputs = {\"x\": torch.tensor([1., 1.]), \"y\":torch.tensor([2., 2.])}\n# get all circuit parameters (including feature params)\nembedded = conv.embedding_fn(conv.params, inputs)\n</code></pre> <pre><code>conv.params = {\ntheta_3: tensor([0.7932], requires_grad=True)\ntheta_8: tensor([0.3735], requires_grad=True)\ntheta_7: tensor([0.6958], requires_grad=True)\ntheta_4: tensor([0.6764], requires_grad=True)\ntheta_2: tensor([0.1853], requires_grad=True)\ntheta_6: tensor([0.3156], requires_grad=True)\ntheta_5: tensor([0.5831], requires_grad=True)\ntheta_1: tensor([0.3882], requires_grad=True)\ntheta_0: tensor([0.9098], requires_grad=True)\n}\nembedded = {\n13c21096-db5a-4ae4-9a59-c89e96a45a24: tensor([3., 3.])\n1c1e445a-1599-478d-b5d8-39c4c9bd71fd: tensor([2., 2.])\n2070dc4a-8dd2-4692-a479-9eaa4e81a0db: tensor([0.9098], grad_fn=&lt;ViewBackward0&gt;)\n0a6038c3-6f35-40c0-bf7e-76181adb99f1: tensor([0.3882], grad_fn=&lt;ViewBackward0&gt;)\n738ebfd5-9217-456c-9979-70359d1b0515: tensor([0.1853], grad_fn=&lt;ViewBackward0&gt;)\n323e7fdb-a3f4-4043-be6a-f75a3d85f3cf: tensor([0.7932], grad_fn=&lt;ViewBackward0&gt;)\n4d1a485c-9db0-42df-b3c2-ef2d4316be84: tensor([0.6764], grad_fn=&lt;ViewBackward0&gt;)\n78ee7c17-ddf2-4335-9b63-72ba4f6bc03f: tensor([0.5831], grad_fn=&lt;ViewBackward0&gt;)\n4ef1f5e5-86e9-4130-9d7b-69927ff0d259: tensor([0.3156], grad_fn=&lt;ViewBackward0&gt;)\ncc69dc94-6a63-4a73-b23c-f2689d31cf89: tensor([0.6958], grad_fn=&lt;ViewBackward0&gt;)\n80346efe-4ca0-4e81-ab01-b3f48c0b62a3: tensor([0.3735], grad_fn=&lt;ViewBackward0&gt;)\n}\n</code></pre> <p>Note that above the parameters keys have changed as they now address the keys on the Braket device. A more readable embedding is provided by the PyQTorch backend:</p> <pre><code>from qadence import BackendName, DiffMode\npyq_backend = backend_factory(backend=BackendName.PYQTORCH, diff_mode=DiffMode.AD)\n# the `Converted` object\n# (contains a `ConvertedCircuit` wiht the original and native representation)\npyq_conv = pyq_backend.convert(circuit)\nembedded = pyq_conv.embedding_fn(pyq_conv.params, inputs)\n</code></pre> <pre><code>embedded = {\ntheta_3: tensor([0.7932], grad_fn=&lt;ViewBackward0&gt;)\ntheta_7: tensor([0.6958], grad_fn=&lt;ViewBackward0&gt;)\ntheta_4: tensor([0.6764], grad_fn=&lt;ViewBackward0&gt;)\ntheta_2: tensor([0.1853], grad_fn=&lt;ViewBackward0&gt;)\n3*x: tensor([3., 3.])\ntheta_6: tensor([0.3156], grad_fn=&lt;ViewBackward0&gt;)\ntheta_5: tensor([0.5831], grad_fn=&lt;ViewBackward0&gt;)\ntheta_1: tensor([0.3882], grad_fn=&lt;ViewBackward0&gt;)\ntheta_8: tensor([0.3735], grad_fn=&lt;ViewBackward0&gt;)\ny: tensor([2., 2.])\ntheta_0: tensor([0.9098], grad_fn=&lt;ViewBackward0&gt;)\n}\n</code></pre> <p>With the embedded parameters, <code>QuantumModel</code> methods are accessible:</p> <pre><code>embedded = conv.embedding_fn(conv.params, inputs)\nsamples = backend.run(conv.circuit, embedded)\nprint(f\"{samples = }\")\n</code></pre> <pre><code>samples = tensor([[ 0.2990-0.2461j,  0.0270-0.1615j,  0.1237+0.1462j, -0.0063+0.4529j,\n-0.5341-0.2540j, -0.2409+0.0672j,  0.1245+0.1007j,  0.0659+0.3729j],\n[ 0.2990-0.2461j,  0.0270-0.1615j,  0.1237+0.1462j, -0.0063+0.4529j,\n-0.5341-0.2540j, -0.2409+0.0672j,  0.1245+0.1007j,  0.0659+0.3729j]])\n</code></pre>"},{"location":"tutorials/backends/#lower-level-the-backend-representation","title":"Lower-level: the <code>Backend</code> representation","text":"<p>If there is a requirement to work with a specific backend, it is possible to access directly the native circuit. For example, Braket noise features can be imported which are not exposed directly by Qadence.</p> <pre><code>from braket.circuits import Noise\n# Get the native Braket circuit with the given parameters\ninputs = {\"x\": torch.rand(1), \"y\":torch.rand(1)}\nembedded = conv.embedding_fn(conv.params, inputs)\nnative = backend.assign_parameters(conv.circuit, embedded)\n# Define a noise channel\nnoise = Noise.Depolarizing(probability=0.1)\n# Add noise to every gate in the circuit\nnative.apply_gate_noise(noise)\n</code></pre> <p>In order to run this noisy circuit, the density matrix simulator is needed in Braket:</p> <p><pre><code>from braket.devices import LocalSimulator\ndevice = LocalSimulator(\"braket_dm\")\nresult = device.run(native, shots=1000).result().measurement_counts\nprint(result)\n</code></pre> <pre><code>Counter({'000': 206, '100': 190, '111': 123, '011': 122, '101': 98, '001': 94, '010': 85, '110': 82})\n</code></pre> <pre><code>print(conv.circuit.native.diagram())\n</code></pre> <pre><code>T  : |                   0                    |                   1                    |                   2                    |                   3                    |                   4                    |5|6|\nq0 : -Rx(13c21096-db5a-4ae4-9a59-c89e96a45a24)-C----------------------------------------Rx(2070dc4a-8dd2-4692-a479-9eaa4e81a0db)-Ry(323e7fdb-a3f4-4043-be6a-f75a3d85f3cf)-Rx(4ef1f5e5-86e9-4130-9d7b-69927ff0d259)-C---\n|                                                                                                                                                                   |   q1 : -Rz(1c1e445a-1599-478d-b5d8-39c4c9bd71fd)-X----------------------------------------Rx(0a6038c3-6f35-40c0-bf7e-76181adb99f1)-Ry(4d1a485c-9db0-42df-b3c2-ef2d4316be84)-Rx(cc69dc94-6a63-4a73-b23c-f2689d31cf89)-X-C-\n| q2 : -Rx(738ebfd5-9217-456c-9979-70359d1b0515)-Ry(78ee7c17-ddf2-4335-9b63-72ba4f6bc03f)-Rx(80346efe-4ca0-4e81-ab01-b3f48c0b62a3)-------------------------------------------------------------------------------------X-\nT  : |                   0                    |                   1                    |                   2                    |                   3                    |                   4                    |5|6|\nUnassigned parameters: [0a6038c3-6f35-40c0-bf7e-76181adb99f1, 13c21096-db5a-4ae4-9a59-c89e96a45a24, 1c1e445a-1599-478d-b5d8-39c4c9bd71fd, 2070dc4a-8dd2-4692-a479-9eaa4e81a0db, 323e7fdb-a3f4-4043-be6a-f75a3d85f3cf, 4d1a485c-9db0-42df-b3c2-ef2d4316be84, 4ef1f5e5-86e9-4130-9d7b-69927ff0d259, 738ebfd5-9217-456c-9979-70359d1b0515, 78ee7c17-ddf2-4335-9b63-72ba4f6bc03f, 80346efe-4ca0-4e81-ab01-b3f48c0b62a3, cc69dc94-6a63-4a73-b23c-f2689d31cf89].\n</code></pre> <pre><code>print(native.diagram())\n</code></pre> <pre><code>T  : |        0         |        1         |        2         |        3         |        4         |     5     |     6     |\nq0 : -Rx(1.73)-DEPO(0.1)-C--------DEPO(0.1)-Rx(0.91)-DEPO(0.1)-Ry(0.79)-DEPO(0.1)-Rx(0.32)-DEPO(0.1)-C-DEPO(0.1)-------------\n|                                                                           |                       q1 : -Rz(1.00)-DEPO(0.1)-X--------DEPO(0.1)-Rx(0.39)-DEPO(0.1)-Ry(0.68)-DEPO(0.1)-Rx(0.70)-DEPO(0.1)-X-DEPO(0.1)-C-DEPO(0.1)-\n|           q2 : -Rx(0.19)-DEPO(0.1)-Ry(0.58)-DEPO(0.1)-Rx(0.37)-DEPO(0.1)---------------------------------------------------X-DEPO(0.1)-\nT  : |        0         |        1         |        2         |        3         |        4         |     5     |     6     |\n</code></pre> </p>"},{"location":"tutorials/getting_started/","title":"Getting started","text":"<p>Quantum programs in Qadence are constructed via a block-system, with an emphasis on composability of primitive blocks to obtain larger, composite blocks. This functional approach is different from other frameworks which follow a more object-oriented way to construct circuits and express programs.</p> How to visualize blocks <p>There are two ways to display blocks in a Python interpreter: either as a tree in ASCII format using <code>print</code>:</p> <p><pre><code>from qadence import X, Y, kron\nkron_block = kron(X(0), Y(1))\nprint(kron_block)\n</code></pre> <pre><code>KronBlock(0,1)\n\u251c\u2500\u2500 X(0)\n\u2514\u2500\u2500 Y(1)\n</code></pre> </p> <p>Or using the visualization package:</p> <p><pre><code>from qadence import X, Y, kron\nfrom qadence.draw import display\nkron_block = kron(X(0), Y(1))\n# display(kron_block)  # un-comment this line\n</code></pre> 43005a16f35b4415b9dec506d4689d08 0 367253af8d794c19bb16f64554f8158e X 43005a16f35b4415b9dec506d4689d08--367253af8d794c19bb16f64554f8158e 3051aed9de2f41bfa9995f26992d1f59 1 78fcc5b7d966436f999e8679c976d9ce 367253af8d794c19bb16f64554f8158e--78fcc5b7d966436f999e8679c976d9ce 35920ce36624471aa0b730d2eb36c243 7de4b8c233624d0696138ca44f282f8a Y 3051aed9de2f41bfa9995f26992d1f59--7de4b8c233624d0696138ca44f282f8a 7de4b8c233624d0696138ca44f282f8a--35920ce36624471aa0b730d2eb36c243 </p>"},{"location":"tutorials/getting_started/#primitive-blocks","title":"Primitive blocks","text":"<p>A <code>PrimitiveBlock</code> represents a digital or an analog time-evolution quantum operation applied to a qubit support. Programs can always be decomposed down into a sequence of <code>PrimitiveBlock</code> elements.</p> <p>Two canonical examples of digital primitive blocks are the parametrized <code>RX</code> and the <code>CNOT</code> gates:</p> <pre><code>from qadence import RX\n# A rotation gate on qubit 0 with a fixed numerical parameter.\nrx_gate = RX(0, 0.5)\n</code></pre> 0a75282483ab4c6c9b8115589a11ff97 0 4e27e1b300c84b12beb84734ceca80dc RX(0.5) 0a75282483ab4c6c9b8115589a11ff97--4e27e1b300c84b12beb84734ceca80dc d3fd7b766fb64e6f8583a877a37942b4 4e27e1b300c84b12beb84734ceca80dc--d3fd7b766fb64e6f8583a877a37942b4 <pre><code>from qadence import CNOT\n# A CNOT gate with control on qubit 0 and target on qubit 1.\ncnot_gate = CNOT(0, 1)\n</code></pre> 121af08d741a43b3bd98694f30832258 0 b8fe746acd6e4e53ae5adf599e0cca65 121af08d741a43b3bd98694f30832258--b8fe746acd6e4e53ae5adf599e0cca65 6952b82e4e194c9a82ed8f98f094693b 1 3c2938b9c9974892acb58880e13b2640 b8fe746acd6e4e53ae5adf599e0cca65--3c2938b9c9974892acb58880e13b2640 9883aa12bb964ed5b4536d7f8ba69480 bbf5bd7ff9254940b026734662b53640 X 6952b82e4e194c9a82ed8f98f094693b--bbf5bd7ff9254940b026734662b53640 bbf5bd7ff9254940b026734662b53640--b8fe746acd6e4e53ae5adf599e0cca65 bbf5bd7ff9254940b026734662b53640--9883aa12bb964ed5b4536d7f8ba69480 <p>A list of all instances of primitive blocks (also referred to as operations) can be found here.</p>"},{"location":"tutorials/getting_started/#composite-blocks","title":"Composite Blocks","text":"<p>Programs can be expressed by composing blocks to result in a larger <code>CompositeBlock</code> using three fundamental operations: chain, kron, and add.</p> <ul> <li>chain applies a set of blocks in sequence on the same or overlapping qubit supports and results in a <code>ChainBlock</code> type. It is akin to applying a matrix product of the sub-blocks with the <code>*</code> operator.</li> </ul> <p><pre><code>from qadence import X, chain\n# Chaining on the same qubit using a call to the function.\nchain_x = chain(X(0), X(0))\n</code></pre> 664acb814c334fb49c76095a09611874 0 8a878eb5fcc94f9fa07e91eb85f11b36 X 664acb814c334fb49c76095a09611874--8a878eb5fcc94f9fa07e91eb85f11b36 890bf03cbf8e4d02b57131db0a96730e X 8a878eb5fcc94f9fa07e91eb85f11b36--890bf03cbf8e4d02b57131db0a96730e 75cfa3ae246e49d3b1e6ca7543497f93 890bf03cbf8e4d02b57131db0a96730e--75cfa3ae246e49d3b1e6ca7543497f93 <pre><code># Chaining on different qubits using the operator overload.\n# Identical to the kron operation.\nchain_xx = X(0) * X(1)\n</code></pre> 559d598e8a44442981fc2a0c851c5e8c 0 739d530063f448db8357428f0c91326c X 559d598e8a44442981fc2a0c851c5e8c--739d530063f448db8357428f0c91326c eeb53d2b14784c578287cb6604df64d1 1 757ffb00d06b45438e861608586daee0 739d530063f448db8357428f0c91326c--757ffb00d06b45438e861608586daee0 aab45d6e018742d0a896a477416fc41c 757ffb00d06b45438e861608586daee0--aab45d6e018742d0a896a477416fc41c 657ead3f45504d96839f2683c6874579 41944e7fe0cc403a96772f387f9af0c4 eeb53d2b14784c578287cb6604df64d1--41944e7fe0cc403a96772f387f9af0c4 af9effde156942a7a8356331a0ea0799 X 41944e7fe0cc403a96772f387f9af0c4--af9effde156942a7a8356331a0ea0799 af9effde156942a7a8356331a0ea0799--657ead3f45504d96839f2683c6874579 </p> <ul> <li>kron applies a set of blocks in parallel (simultaneously) on disjoint qubit support and results in a <code>KronBlock</code> type. This is akin to applying a tensor product of the sub-blocks with the <code>@</code> operator.</li> </ul> <pre><code>from qadence import X, kron\nkron_xx = kron(X(0), X(1))  # Equivalent to X(0) @ X(1)\n</code></pre> 2bf760f0b9164b8e8169d490de4df82f 0 79026ab05e2a4fa7b7d0c8d3058a393a X 2bf760f0b9164b8e8169d490de4df82f--79026ab05e2a4fa7b7d0c8d3058a393a 91685917a2e44dafab73c490320093d3 1 cf49aee47b654b36930cc7038a9abf6a 79026ab05e2a4fa7b7d0c8d3058a393a--cf49aee47b654b36930cc7038a9abf6a 0475b4fe44de4af3a000ddc05b0a3268 dfc8c202794b4b8290bfeb38254e5668 X 91685917a2e44dafab73c490320093d3--dfc8c202794b4b8290bfeb38254e5668 dfc8c202794b4b8290bfeb38254e5668--0475b4fe44de4af3a000ddc05b0a3268 <p>For the digital case, it should be noted that <code>kron</code> and <code>chain</code> are semantically equivalent up to the diagrammatic representation as <code>chain</code> implicitly fills blank wires with identities. However, Qadence also supports analog blocks, for which composing sequentially or in parallel becomes non-equivalent. More about analog blocks can be found in the digital-analog section.</p> <ul> <li>add sums the corresponding matrix of each sub-block and results in a <code>AddBlock</code> type which can be used to construct Pauli operators. Please note that <code>AddBlock</code> can give rise to non-unitary computations that might not be supported by all backends.</li> </ul> Get the matrix of a block <p>It is always possible to retrieve the matrix representation of a block by calling the <code>block.tensor()</code> method. Please note that the returned tensor contains a batch dimension for the purposes of block parametrization.</p> <p><pre><code>\n</code></pre> <pre><code>X(0) * X(0) tensor = tensor([[[1.+0.j, 0.+0.j],\n[0.+0.j, 1.+0.j]]])\nX(0) @ X(1) tensor = tensor([[[0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j],\n[0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j],\n[0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j],\n[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]]])\n</code></pre> </p> <pre><code>from qadence import X, Z\nxz = X(0) + Z(0)\nprint(xz.tensor())\n</code></pre> <pre><code>tensor([[[ 1.+0.j,  1.+0.j],\n[ 1.+0.j, -1.+0.j]]])\n</code></pre> <p>Finally, it is possible to tag blocks with human-readable names:</p> <pre><code>from qadence import X, Y, CNOT, kron, chain, tag\nxy = kron(X(0), Y(1))\ntag(xy, \"subblock\")\ncomposite_block = kron(xy, CNOT(3,4))\nfinal_block = chain(composite_block, composite_block)\n</code></pre> cluster_cbf567a5fc714eff9a14b3285fe58f41 subblock cluster_994353ad3ff24286a157e75123c1bac5 subblock 1ef130cfd5234274a09292a9043df640 0 cc0a79b3e3864adc8e129a9bb1726247 X 1ef130cfd5234274a09292a9043df640--cc0a79b3e3864adc8e129a9bb1726247 8014fe6255dd4d60a2d179339ca42c82 1 e56c381be86545e184648bd547098138 X cc0a79b3e3864adc8e129a9bb1726247--e56c381be86545e184648bd547098138 7d684f9ef9dc41e4a83a2c8a0d0a0a61 e56c381be86545e184648bd547098138--7d684f9ef9dc41e4a83a2c8a0d0a0a61 b981de6ecefd44128c31247fe89ced08 2246d0c6a0904d89a9dd1a6964bb1dc8 Y 8014fe6255dd4d60a2d179339ca42c82--2246d0c6a0904d89a9dd1a6964bb1dc8 5a17609693944a11934467eeef3b4f4c 2 def766ad1d7a466bac6a2ea183fde080 Y 2246d0c6a0904d89a9dd1a6964bb1dc8--def766ad1d7a466bac6a2ea183fde080 def766ad1d7a466bac6a2ea183fde080--b981de6ecefd44128c31247fe89ced08 091b184e86194c218e378812f933025c 29be0ba18c7b448391678aa1e5609e22 5a17609693944a11934467eeef3b4f4c--29be0ba18c7b448391678aa1e5609e22 0573e569272243f5a96aad6558d211f4 3 8bde44fe7fee4d99818888f8d350d82d 29be0ba18c7b448391678aa1e5609e22--8bde44fe7fee4d99818888f8d350d82d 8bde44fe7fee4d99818888f8d350d82d--091b184e86194c218e378812f933025c 51c1014190c8480eb31a06732d349731 f3a0231fedd44ecfaa56dccc54961e23 0573e569272243f5a96aad6558d211f4--f3a0231fedd44ecfaa56dccc54961e23 aefdb87de0674a8b9f26921f37691944 4 5042b4b9ab9d47d7b7c544f190df5666 f3a0231fedd44ecfaa56dccc54961e23--5042b4b9ab9d47d7b7c544f190df5666 5042b4b9ab9d47d7b7c544f190df5666--51c1014190c8480eb31a06732d349731 f9529c3166ae4bee953785bd9c4d80e6 4d267c736fb14edbac43a7f6818a5bf2 X aefdb87de0674a8b9f26921f37691944--4d267c736fb14edbac43a7f6818a5bf2 4d267c736fb14edbac43a7f6818a5bf2--f3a0231fedd44ecfaa56dccc54961e23 d1b8e25314204579afc1bdf4a6682f20 X 4d267c736fb14edbac43a7f6818a5bf2--d1b8e25314204579afc1bdf4a6682f20 d1b8e25314204579afc1bdf4a6682f20--5042b4b9ab9d47d7b7c544f190df5666 d1b8e25314204579afc1bdf4a6682f20--f9529c3166ae4bee953785bd9c4d80e6"},{"location":"tutorials/getting_started/#block-execution","title":"Block execution","text":"<p>To quickly run quantum operations and access wavefunctions, samples or expectation values of observables, one can use the convenience functions <code>run</code>, <code>sample</code> and <code>expectation</code>. The following example shows an execution workflow with the natively available <code>PyQTorch</code> backend:</p> <pre><code>from qadence import chain, add, H, Z, run, sample, expectation\nn_qubits = 2\nblock = chain(H(0), H(1))\n# Compute the wavefunction.\n# Please check the documentation for other available backends.\nwf = run(block)\n# Sample the resulting wavefunction with a given number of shots.\nxs = sample(block, n_shots=1000)\n# Compute an expectation based on an observable of Pauli-Z operators.\nobs = add(Z(i) for i in range(n_qubits))\nex = expectation(block, obs)\n</code></pre> <pre><code>wf = tensor([[0.5000+0.j, 0.5000+0.j, 0.5000+0.j, 0.5000+0.j]])\nxs = [Counter({'00': 263, '11': 254, '01': 246, '10': 237})]\nex = tensor([[0.]])\n</code></pre> <p>More fine-grained control and better performance is provided via the high-level <code>QuantumModel</code> abstraction.</p>"},{"location":"tutorials/getting_started/#execution-via-quantumcircuit-and-quantummodel","title":"Execution via <code>QuantumCircuit</code> and <code>QuantumModel</code>","text":"<p>Quantum programs in Qadence are constructed in two steps:</p> <ol> <li>Build a <code>QuantumCircuit</code> which ties together a composite block and a register.</li> <li>Define a <code>QuantumModel</code> which differentiates, compiles and executes the circuit.</li> </ol> <p><code>QuantumCircuit</code> is a central class in Qadence and circuits are abstract objects from the actual hardware/simulator that they are expected to be executed on. They require to specify the <code>Register</code> of resources to execute your program on. Previous examples were already using <code>QuantumCircuit</code> with a <code>Register</code> that fits the qubit support for the given block.</p> <pre><code>from qadence import QuantumCircuit, Register, H, chain\n# NOTE: Run a block which supports two qubits\n# on a register of three qubits.\nregister = Register(3)\ncircuit = QuantumCircuit(register, chain(H(0), H(1)))\n</code></pre> <pre><code>circuit = ChainBlock(0,1)\n\u251c\u2500\u2500 H(0)\n\u2514\u2500\u2500 H(1)\n</code></pre> <p>Registers and qubit supports</p> <p>Registers can also be constructed from qubit coordinates to create arbitrary register topologies. See details in the digital-analog section. Qubit supports are subsets of the circuit register tied to blocks.</p> <p><code>QuantumModel</code> is another central class in Qadence. It specifies a Backend for the differentiation, compilation and execution of the abstract circuit.</p> <pre><code>from qadence import BackendName, DiffMode, QuantumCircuit, QuantumModel, Register, H, chain\nreg = Register(3)\ncirc = QuantumCircuit(reg, chain(H(0), H(1)))\nmodel = QuantumModel(circ, backend=BackendName.PYQTORCH, diff_mode=DiffMode.AD)\nxs = model.sample(n_shots=100)\n</code></pre> <pre><code>xs = [Counter({'110': 38, '100': 27, '010': 20, '000': 15})]\n</code></pre> <p>For more details on <code>QuantumModel</code>, see here.</p>"},{"location":"tutorials/hamiltonians/","title":"Constructing arbitrary Hamiltonians","text":"<p>At the heart of digital-analog quantum computing is the description and execution of analog blocks, which represent a set of interacting qubits under some interaction Hamiltonian. For this purpose, Qadence relies on the <code>hamiltonian_factory</code> function to create arbitrary Hamiltonian blocks to be used as generators of <code>HamEvo</code> or as observables to be measured.</p>"},{"location":"tutorials/hamiltonians/#arbitrary-all-to-all-hamiltonians","title":"Arbitrary all-to-all Hamiltonians","text":"<p>Arbitrary all-to-all interaction Hamiltonians can be easily created by passing the number of qubits in the first argument. The type of <code>interaction</code> can be chosen from the available ones in the <code>Interaction</code> enum type.</p> <pre><code>from qadence import hamiltonian_factory\nfrom qadence import N, X, Y, Z\nfrom qadence import Interaction\nn_qubits = 3\nhamilt = hamiltonian_factory(n_qubits, interaction=Interaction.ZZ)\n</code></pre> <pre><code>AddBlock(0,1,2)\n\u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2514\u2500\u2500 KronBlock(0,1)\n\u2502       \u251c\u2500\u2500 Z(0)\n\u2502       \u2514\u2500\u2500 Z(1)\n\u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2514\u2500\u2500 KronBlock(0,2)\n\u2502       \u251c\u2500\u2500 Z(0)\n\u2502       \u2514\u2500\u2500 Z(2)\n\u2514\u2500\u2500 [mul: 1.00000000000000] \u2514\u2500\u2500 KronBlock(1,2)\n\u251c\u2500\u2500 Z(1)\n\u2514\u2500\u2500 Z(2)\n</code></pre> <p>Single-qubit terms can also be added by passing the respective operator directly to the <code>detuning</code> argument. For example, the total magnetization is commonly used as an observable to be measured:</p> <pre><code>total_mag = hamiltonian_factory(n_qubits, detuning = Z)\n</code></pre> <pre><code>AddBlock(0,1,2)\n\u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2514\u2500\u2500 Z(0)\n\u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2514\u2500\u2500 Z(1)\n\u2514\u2500\u2500 [mul: 1.00000000000000] \u2514\u2500\u2500 Z(2)\n</code></pre> <p>For further customization, arbitrary coefficients can be passed as arrays to the <code>interaction_strength</code> and <code>detuning_strength</code> arguments for the two-qubits and single-qubit terms respectively.</p> <pre><code>n_qubits = 3\nhamilt = hamiltonian_factory(\nn_qubits,\ninteraction=Interaction.ZZ,\ndetuning=Z,\ninteraction_strength=[0.5, 0.2, 0.1],\ndetuning_strength=[0.1, 0.5, -0.3]\n)\n</code></pre> <pre><code>AddBlock(0,1,2)\n\u251c\u2500\u2500 [mul: 0.100] \u2502   \u2514\u2500\u2500 Z(0)\n\u251c\u2500\u2500 [mul: 0.500] \u2502   \u2514\u2500\u2500 Z(1)\n\u251c\u2500\u2500 [mul: -0.300] \u2502   \u2514\u2500\u2500 Z(2)\n\u251c\u2500\u2500 [mul: 0.500] \u2502   \u2514\u2500\u2500 KronBlock(0,1)\n\u2502       \u251c\u2500\u2500 Z(0)\n\u2502       \u2514\u2500\u2500 Z(1)\n\u251c\u2500\u2500 [mul: 0.200] \u2502   \u2514\u2500\u2500 KronBlock(0,2)\n\u2502       \u251c\u2500\u2500 Z(0)\n\u2502       \u2514\u2500\u2500 Z(2)\n\u2514\u2500\u2500 [mul: 0.100] \u2514\u2500\u2500 KronBlock(1,2)\n\u251c\u2500\u2500 Z(1)\n\u2514\u2500\u2500 Z(2)\n</code></pre> <p>Ordering interaction strengths matters</p> <p>When passing interaction strengths as an array, the ordering must be indentical to the one obtained from the <code>edge</code> property of a Qadence <code>Register</code>:</p> <p><pre><code>from qadence import Register\nprint(Register(n_qubits).edges)\n</code></pre> <pre><code>[(0, 1), (0, 2), (1, 2)]\n</code></pre> </p> <p>For one more example, let's create a transverse-field Ising model,</p> <pre><code>n_qubits = 4\nn_edges = int(0.5 * n_qubits * (n_qubits - 1))\nz_terms = [1.0] * n_qubits\nzz_terms = [2.0] * n_edges\nzz_ham = hamiltonian_factory(\nn_qubits,\ninteraction=Interaction.ZZ,\ndetuning=Z,\ninteraction_strength=zz_terms,\ndetuning_strength=z_terms\n)\nx_terms = [-1.0] * n_qubits\nx_ham = hamiltonian_factory(n_qubits, detuning = X, detuning_strength = x_terms)\ntransverse_ising = zz_ham + x_ham\n</code></pre> <pre><code>AddBlock(0,1,2,3)\n\u251c\u2500\u2500 AddBlock(0,1,2,3)\n\u2502   \u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2502   \u2514\u2500\u2500 Z(0)\n\u2502   \u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2502   \u2514\u2500\u2500 Z(1)\n\u2502   \u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2502   \u2514\u2500\u2500 Z(2)\n\u2502   \u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2502   \u2514\u2500\u2500 Z(3)\n\u2502   \u251c\u2500\u2500 [mul: 2.00000000000000] \u2502   \u2502   \u2514\u2500\u2500 KronBlock(0,1)\n\u2502   \u2502       \u251c\u2500\u2500 Z(0)\n\u2502   \u2502       \u2514\u2500\u2500 Z(1)\n\u2502   \u251c\u2500\u2500 [mul: 2.00000000000000] \u2502   \u2502   \u2514\u2500\u2500 KronBlock(0,2)\n\u2502   \u2502       \u251c\u2500\u2500 Z(0)\n\u2502   \u2502       \u2514\u2500\u2500 Z(2)\n\u2502   \u251c\u2500\u2500 [mul: 2.00000000000000] \u2502   \u2502   \u2514\u2500\u2500 KronBlock(0,3)\n\u2502   \u2502       \u251c\u2500\u2500 Z(0)\n\u2502   \u2502       \u2514\u2500\u2500 Z(3)\n\u2502   \u251c\u2500\u2500 [mul: 2.00000000000000] \u2502   \u2502   \u2514\u2500\u2500 KronBlock(1,2)\n\u2502   \u2502       \u251c\u2500\u2500 Z(1)\n\u2502   \u2502       \u2514\u2500\u2500 Z(2)\n\u2502   \u251c\u2500\u2500 [mul: 2.00000000000000] \u2502   \u2502   \u2514\u2500\u2500 KronBlock(1,3)\n\u2502   \u2502       \u251c\u2500\u2500 Z(1)\n\u2502   \u2502       \u2514\u2500\u2500 Z(3)\n\u2502   \u2514\u2500\u2500 [mul: 2.00000000000000] \u2502       \u2514\u2500\u2500 KronBlock(2,3)\n\u2502           \u251c\u2500\u2500 Z(2)\n\u2502           \u2514\u2500\u2500 Z(3)\n\u2514\u2500\u2500 AddBlock(0,1,2,3)\n\u251c\u2500\u2500 [mul: -1.00000000000000] \u2502   \u2514\u2500\u2500 X(0)\n\u251c\u2500\u2500 [mul: -1.00000000000000] \u2502   \u2514\u2500\u2500 X(1)\n\u251c\u2500\u2500 [mul: -1.00000000000000] \u2502   \u2514\u2500\u2500 X(2)\n\u2514\u2500\u2500 [mul: -1.00000000000000] \u2514\u2500\u2500 X(3)\n</code></pre> <p>Random interaction coefficients</p> <p>Random interaction coefficients can be chosen between -1 and 1 by simply passing <code>random_strength = True</code> instead of <code>detuning_strength</code> and <code>interaction_strength</code>.</p>"},{"location":"tutorials/hamiltonians/#arbitrary-hamiltonian-topologies","title":"Arbitrary Hamiltonian topologies","text":"<p>Arbitrary interaction topologies can be created using the Qadence <code>Register</code>. Simply pass the register with the desired topology as the first argument to the <code>hamiltonian_factory</code>:</p> <pre><code>from qadence import Register\nreg = Register.square(qubits_side=2)\nsquare_hamilt = hamiltonian_factory(reg, interaction=Interaction.NN)\n</code></pre> <pre><code>AddBlock(0,1,2,3)\n\u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2514\u2500\u2500 KronBlock(0,1)\n\u2502       \u251c\u2500\u2500 N(0)\n\u2502       \u2514\u2500\u2500 N(1)\n\u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2514\u2500\u2500 KronBlock(0,3)\n\u2502       \u251c\u2500\u2500 N(0)\n\u2502       \u2514\u2500\u2500 N(3)\n\u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2514\u2500\u2500 KronBlock(1,2)\n\u2502       \u251c\u2500\u2500 N(1)\n\u2502       \u2514\u2500\u2500 N(2)\n\u2514\u2500\u2500 [mul: 1.00000000000000] \u2514\u2500\u2500 KronBlock(2,3)\n\u251c\u2500\u2500 N(2)\n\u2514\u2500\u2500 N(3)\n</code></pre> <p>Custom Hamiltonian coefficients can also be added to the register beforehand using the <code>\"strength\"</code> key.</p> <pre><code>reg = Register.square(qubits_side = 2)\nfor i, edge in enumerate(reg.edges):\nreg.edges[edge][\"strength\"] = (0.5 * i) ** 2\nsquare_hamilt = hamiltonian_factory(reg, interaction=Interaction.NN)\n</code></pre> <pre><code>AddBlock(0,1,2,3)\n\u251c\u2500\u2500 [mul: 0.0] \u2502   \u2514\u2500\u2500 KronBlock(0,1)\n\u2502       \u251c\u2500\u2500 N(0)\n\u2502       \u2514\u2500\u2500 N(1)\n\u251c\u2500\u2500 [mul: 0.250] \u2502   \u2514\u2500\u2500 KronBlock(0,3)\n\u2502       \u251c\u2500\u2500 N(0)\n\u2502       \u2514\u2500\u2500 N(3)\n\u251c\u2500\u2500 [mul: 1.00000000000000] \u2502   \u2514\u2500\u2500 KronBlock(1,2)\n\u2502       \u251c\u2500\u2500 N(1)\n\u2502       \u2514\u2500\u2500 N(2)\n\u2514\u2500\u2500 [mul: 2.250] \u2514\u2500\u2500 KronBlock(2,3)\n\u251c\u2500\u2500 N(2)\n\u2514\u2500\u2500 N(3)\n</code></pre> <p>Alternatively, if the register already stores interaction or detuning strengths, it is possible to override them in the Hamiltonian creation by using <code>force_update = True</code>.</p>"},{"location":"tutorials/hamiltonians/#adding-variational-parameters","title":"Adding variational parameters","text":"<p>Finally, fully parameterized Hamiltonians can be created by passing a string to the strength arguments:</p> <pre><code>n_qubits = 3\nnn_ham = hamiltonian_factory(\nn_qubits,\ninteraction=Interaction.NN,\ndetuning=N,\ninteraction_strength=\"c\",\ndetuning_strength=\"d\"\n)\n</code></pre> <pre><code>AddBlock(0,1,2)\n\u251c\u2500\u2500 [mul: d_0] \u2502   \u2514\u2500\u2500 N(0)\n\u251c\u2500\u2500 [mul: d_1] \u2502   \u2514\u2500\u2500 N(1)\n\u251c\u2500\u2500 [mul: d_2] \u2502   \u2514\u2500\u2500 N(2)\n\u251c\u2500\u2500 [mul: c_01] \u2502   \u2514\u2500\u2500 KronBlock(0,1)\n\u2502       \u251c\u2500\u2500 N(0)\n\u2502       \u2514\u2500\u2500 N(1)\n\u251c\u2500\u2500 [mul: c_02] \u2502   \u2514\u2500\u2500 KronBlock(0,2)\n\u2502       \u251c\u2500\u2500 N(0)\n\u2502       \u2514\u2500\u2500 N(2)\n\u2514\u2500\u2500 [mul: c_12] \u2514\u2500\u2500 KronBlock(1,2)\n\u251c\u2500\u2500 N(1)\n\u2514\u2500\u2500 N(2)\n</code></pre>"},{"location":"tutorials/overlap/","title":"Wavefunction overlaps","text":"<p>Qadence offers convenience functions for computing the overlap between the wavefunctions generated by two quantum circuits \\(U\\) and \\(W\\) as:</p> \\[ S = |\\langle \\psi_U | \\psi_W \\rangle|^2 \\quad \\textrm{where} \\quad \\psi_U = U|\\psi_0\\rangle \\] <p>Here is an example on how to compute the overlap between two very simple parametric circuits consisting of a single <code>RX</code> rotation on different qubits. The overlap is expected to be non-zero only when the rotation angle is different from \\(\\pi \\; \\textrm{mod}\\; 2\\pi\\) for both rotations:</p> <pre><code>import torch\nimport numpy as np\nfrom qadence import Overlap, OverlapMethod, QuantumCircuit, H, RX, X, FeatureParameter, hea\n# Create two quantum circuits\n# with a single qubit rotation on two random qubits\nn_qubits = 4\nqubits = np.random.choice(list(range(n_qubits)), n_qubits, replace=True)\nphi = FeatureParameter(\"phi\")\ncircuit_bra = QuantumCircuit(n_qubits, RX(qubits[0], phi))\npsi = FeatureParameter(\"psi\")\ncircuit_ket = QuantumCircuit(n_qubits, RX(qubits[1], psi))\n# Values for the feature parameters\nvalues_bra = {\"phi\": torch.Tensor([torch.pi / 2, torch.pi])}\nvalues_ket = {\"psi\": torch.Tensor([torch.pi / 2, torch.pi])}\n# Calculate overlap by assigning values to the given bra and ket circuits\novrlp = Overlap(circuit_bra, circuit_ket)\novrlp = ovrlp(bra_param_values=values_bra, ket_param_values=values_ket)\n</code></pre> <pre><code>Overlap with exact method:\ntensor([[2.5000e-01, 1.8747e-33],\n[1.8747e-33, 1.4058e-65]])\n</code></pre> <p>The <code>Overlap</code> class above inherits from <code>QuantumModel</code> and is executed through its inherited forward method for the given input parameter values. By default, the overlap is computed exactly by performing the dot product of the wavefunction propagated from bra and ket circuits.</p> <p>However, it is possible to choose a different method from the <code>OverlapMethod</code> enumeration to be passed via the <code>overlap_method</code> argument in the <code>Overlap</code> initializer. Currently, one can choose from:</p> <ul> <li><code>EXACT</code>: exact computation using the wavefunction matrix representation. Does not work with real devices since it assumes access to the complete qubit system wavefunction.</li> <li><code>COMPUTE_UNCOMPUTE</code>: exact or sampling-based computation using bra \\(U\\) and ket \\(W^{\\dagger}\\) unitaries.</li> <li><code>SWAP_TEST</code>: exact or sampling-based computation using the SWAP test method.</li> <li><code>HADAMARD_TEST</code>: exact or sampling-based computation using the Hadamard test method.</li> <li><code>JENSEN_SHANNON</code>: compute the overlap using the Jensen-Shannon divergence of the two probability distributions obtained by sampling the propagated circuits. This will yield a different result than the other methods.</li> </ul> <p>All methods (except for the <code>EXACT</code> method) take an optional <code>n_shots</code> argument which can be used to perform shot-based calculations.</p> <p>Warning</p> <p>If you select a finite number of shots, the overlap is not differentiable. Therefore, it cannot be used as output of a quantum model if gradients are required.</p> <pre><code># Calculate overlap with SWAP test\novrlp = Overlap(circuit_bra, circuit_ket, method=OverlapMethod.SWAP_TEST)\novrlp_ha = ovrlp(values_bra, values_ket)\n# Calculate overlap with SWAP test\n# using a finite number of shots\novrlp = Overlap(circuit_bra, circuit_ket, method=OverlapMethod.SWAP_TEST)\novrlp_ha = ovrlp(values_bra, values_ket, n_shots=10_000)\n</code></pre> <pre><code>Overlap with SWAP test:\ntensor([[ 2.5000e-01, -3.3307e-16],\n[-3.3307e-16, -4.4409e-16]])\nOverlap with SWAP test with finite number of shots:\ntensor([[ 0.2584, -0.0070],\n[ 0.0010,  0.0064]])\n</code></pre>"},{"location":"tutorials/parameters/","title":"Parametric programs","text":"<p>Qadence base <code>Parameter</code> type is a subtype of <code>sympy.Symbol</code>. There are three kinds of parameter subtypes used:</p> <ul> <li>Fixed Parameter: A constant with a fixed, non-trainable value (e.g. \\(\\dfrac{\\pi}{2}\\)).</li> <li>Variational Parameter: A trainable parameter which can be be optimized.</li> <li>Feature Parameter: A non-trainable parameter which can be used to encode classical data into a quantum state.</li> </ul>"},{"location":"tutorials/parameters/#fixed-parameters","title":"Fixed Parameters","text":"<p>To pass a fixed parameter to a gate (or any parametrizable block), one can simply use either Python numeric types or wrapped in a <code>torch.Tensor</code>.</p> <pre><code>from torch import pi\nfrom qadence import RX, run\n# Let's use a torch type.\nblock = RX(0, pi)\nwf = run(block)\n# Let's pass a simple float.\nblock = RX(0, 1.)\nwf = run(block)\n</code></pre> <pre><code>wf = tensor([[6.1232e-17+0.j, 0.0000e+00-1.j]])\nwf = tensor([[0.8776+0.0000j, 0.0000-0.4794j]])\n</code></pre>"},{"location":"tutorials/parameters/#variational-parameters","title":"Variational Parameters","text":"<p>To parametrize a block by an angle <code>theta</code>, either a Python <code>string</code> or an instance of  <code>VariationalParameter</code> can be passed instead of a numeric type to the gate constructor:</p> <pre><code>from qadence import RX, run, VariationalParameter\nblock = RX(0, \"theta\")\n# This is equivalent to:\nblock = RX(0, VariationalParameter(\"theta\"))\nwf = run(block)\n</code></pre> <pre><code>wf = tensor([[0.9933+0.0000j, 0.0000-0.1157j]])\n</code></pre> <p>In the first case in the above example, <code>theta</code> is automatically inferred as a <code>VariationalParameter</code> (i.e. trainable). It is initialized to a random value for the purposes of execution. In the context of a <code>QuantumModel</code>, there is no need to pass a value for <code>theta</code> to the <code>run</code> method since it is stored within the underlying model parameter dictionary.</p>"},{"location":"tutorials/parameters/#feature-parameters","title":"Feature Parameters","text":"<p><code>FeatureParameter</code> types (i.e. inputs), always need to be provided with a value or a batch of values as a dictionary:</p> <pre><code>from torch import tensor\nfrom qadence import RX, run, FeatureParameter\nblock = RX(0, FeatureParameter(\"phi\"))\nwf = run(block, values={\"phi\": tensor([1., 2.])})\n</code></pre> <pre><code>wf = tensor([[0.8776+0.0000j, 0.0000-0.4794j],\n[0.5403+0.0000j, 0.0000-0.8415j]])\n</code></pre> <p>Now, <code>run</code> returns a batch of states, one for every provided angle which coincides with the value of the particular <code>FeatureParameter</code>.</p>"},{"location":"tutorials/parameters/#multiparameter-expressions","title":"Multiparameter Expressions","text":"<p>However, an angle can itself be an expression <code>Parameter</code> types of any kind. As such, any sympy expression <code>expr: sympy.Basic</code> consisting of a combination of free symbols (i.e. <code>sympy</code> types) and Qadence <code>Parameter</code> can be passed to a block, including trigonometric functions.</p> <pre><code>from torch import tensor\nfrom qadence import RX, Parameter, run, FeatureParameter\nfrom sympy import sin\ntheta, phi = Parameter(\"theta\"), FeatureParameter(\"phi\")\nblock = RX(0, sin(theta+phi))\n# Remember, to run the block, only FeatureParameter values have to be provided:\nvalues = {\"phi\": tensor([1.0, 2.0])}\nwf = run(block, values=values)\n</code></pre> <pre><code>wf = tensor([[0.8981+0.0000j, 0.0000-0.4398j],\n[0.9974+0.0000j, 0.0000-0.0723j]])\n</code></pre>"},{"location":"tutorials/parameters/#parameters-redundancy","title":"Parameters Redundancy","text":"<p>Parameters are uniquely defined by their name and redundancy is allowed in composite blocks to assign the same value to different blocks.</p> <pre><code>import torch\nfrom qadence import RX, RY, run, chain, kron\nblock = chain(\nkron(RX(0, \"phi\"), RY(1, \"theta\")),\nkron(RX(0, \"phi\"), RY(1, \"theta\")),\n)\nwf = run(block)  # Same random initialization for all instances of phi and theta.\n</code></pre> <pre><code>wf = tensor([[0.8605+0.0000j, 0.1212+0.0000j, 0.0000-0.4900j, 0.0000-0.0690j]])\n</code></pre>"},{"location":"tutorials/parameters/#parametrized-circuits","title":"Parametrized Circuits","text":"<p>Now, let's have a look at the construction of a variational ansatz which composes <code>FeatureParameter</code> and <code>VariationalParameter</code> types:</p> <pre><code>import sympy\nfrom qadence import RX, RY, RZ, CNOT, Z, run, chain, kron, FeatureParameter, VariationalParameter\nphi = FeatureParameter(\"phi\")\ntheta = VariationalParameter(\"theta\")\nblock = chain(\nkron(\nRX(0, phi/theta),\nRY(1, theta*2),\nRZ(2, sympy.cos(phi)),\n),\nkron(\nRX(0, phi),\nRY(1, theta),\nRZ(2, phi),\n),\nkron(\nRX(0, phi),\nRY(1, theta),\nRZ(2, phi),\n),\nkron(\nRX(0, phi + theta),\nRY(1, theta**2),\nRZ(2, sympy.cos(phi)),\n),\nchain(CNOT(0,1), CNOT(1,2))\n)\nblock.tag = \"Rotations\"\nobs = 2*kron(*map(Z, range(3)))\nblock = chain(block, obs)\n</code></pre> cluster_68f30da0f3294d4fb2429206794003ab [* 2] cluster_0ccad87b9a8943669bba743741a085de Rotations 9873b02bc9c44e5e8df27a0d971afa91 0 3d0c6fc1a7db46c9bb3b89e3fb715f17 RX(phi/theta) 9873b02bc9c44e5e8df27a0d971afa91--3d0c6fc1a7db46c9bb3b89e3fb715f17 6af9786c014549109281ab3668117cf0 1 9647a45b08d94ff38dbc150f57a42c95 RX(phi) 3d0c6fc1a7db46c9bb3b89e3fb715f17--9647a45b08d94ff38dbc150f57a42c95 b39e458e86f34d8399ab5fd33085202d RX(phi) 9647a45b08d94ff38dbc150f57a42c95--b39e458e86f34d8399ab5fd33085202d 77570b896d7643a49dc948cfc327ab3f RX(phi + theta) b39e458e86f34d8399ab5fd33085202d--77570b896d7643a49dc948cfc327ab3f 0aa2baee945e4eb088053d8da63dbe4e 77570b896d7643a49dc948cfc327ab3f--0aa2baee945e4eb088053d8da63dbe4e 70022b93c0ae4abf9842fe47f8dc2416 0aa2baee945e4eb088053d8da63dbe4e--70022b93c0ae4abf9842fe47f8dc2416 35ca8d0232be4f64ab1da1b05ea64425 Z 70022b93c0ae4abf9842fe47f8dc2416--35ca8d0232be4f64ab1da1b05ea64425 0af9f6c867f747b6954d8b9de608f5fc 35ca8d0232be4f64ab1da1b05ea64425--0af9f6c867f747b6954d8b9de608f5fc 931963a215414c4d8d29c23ceff24ba9 74f57ed77def446ba432cfe49510fe37 RY(2*theta) 6af9786c014549109281ab3668117cf0--74f57ed77def446ba432cfe49510fe37 6e4c7ad8a2f04e729d648587883f4932 2 2e88419cbfde461181303817b4379baf RY(theta) 74f57ed77def446ba432cfe49510fe37--2e88419cbfde461181303817b4379baf 75a7d8a483e54d16984f8fe70ac16084 RY(theta) 2e88419cbfde461181303817b4379baf--75a7d8a483e54d16984f8fe70ac16084 84d07f40f1d14e88aa4c6e664083a521 RY(theta**2) 75a7d8a483e54d16984f8fe70ac16084--84d07f40f1d14e88aa4c6e664083a521 aff6b6cae33f4fb6a6f453039b48e60b X 84d07f40f1d14e88aa4c6e664083a521--aff6b6cae33f4fb6a6f453039b48e60b aff6b6cae33f4fb6a6f453039b48e60b--0aa2baee945e4eb088053d8da63dbe4e 5f9decca2e2c41cebdaf58cb3a9715ae aff6b6cae33f4fb6a6f453039b48e60b--5f9decca2e2c41cebdaf58cb3a9715ae bbb95a3801b148859477fc694bb15873 Z 5f9decca2e2c41cebdaf58cb3a9715ae--bbb95a3801b148859477fc694bb15873 bbb95a3801b148859477fc694bb15873--931963a215414c4d8d29c23ceff24ba9 675b813fc7514ebd8a2aa1ac4259f1c2 68a768256c79470c8c688131bc8efcae RZ(cos(phi)) 6e4c7ad8a2f04e729d648587883f4932--68a768256c79470c8c688131bc8efcae 41f15b98ea624a64a17f075c55d34dbd RZ(phi) 68a768256c79470c8c688131bc8efcae--41f15b98ea624a64a17f075c55d34dbd e88b2addf145463e89bbdc70a8f218d1 RZ(phi) 41f15b98ea624a64a17f075c55d34dbd--e88b2addf145463e89bbdc70a8f218d1 431b26a6473943c8bfd632dbdc69000e RZ(cos(phi)) e88b2addf145463e89bbdc70a8f218d1--431b26a6473943c8bfd632dbdc69000e 77596e71d64643bd8aca42948b938bba 431b26a6473943c8bfd632dbdc69000e--77596e71d64643bd8aca42948b938bba 3a73e764d0c940f5aaba77dbbe8cb80c X 77596e71d64643bd8aca42948b938bba--3a73e764d0c940f5aaba77dbbe8cb80c 3a73e764d0c940f5aaba77dbbe8cb80c--5f9decca2e2c41cebdaf58cb3a9715ae 9fb0b33be7a142aeb71af5e51fc623dc Z 3a73e764d0c940f5aaba77dbbe8cb80c--9fb0b33be7a142aeb71af5e51fc623dc 9fb0b33be7a142aeb71af5e51fc623dc--675b813fc7514ebd8a2aa1ac4259f1c2 <p>Please note the different colors for the parametrization with different types. The default palette assigns light blue for <code>VariationalParameter</code>, light green for <code>FeatureParameter</code> and shaded red for observables.</p>"},{"location":"tutorials/parameters/#parametrized-quantummodels","title":"Parametrized QuantumModels","text":"<p>As a quick reminder: <code>FeatureParameter</code> are used for data input and data encoding into a quantum state. <code>VariationalParameter</code> are trainable parameters in a variational ansatz. When used within a <code>QuantumModel</code>, an abstract quantum circuit is made differentiable with respect to both variational and feature parameters which are uniquely identified by their name.</p> <pre><code>from qadence import FeatureParameter, Parameter, VariationalParameter\n# Feature parameters are non-trainable parameters.\n# Their primary use is input data encoding.\nfp = FeatureParameter(\"x\")\nassert fp == Parameter(\"x\", trainable=False)\n# Variational parameters are trainable parameters.\n# Their primary use is for optimization.\nvp = VariationalParameter(\"y\")\nassert vp == Parameter(\"y\", trainable=True)\n</code></pre> <p>Let's construct a parametric quantum circuit.</p> <pre><code>from qadence import QuantumCircuit, RX, RY, chain, kron\ntheta = VariationalParameter(\"theta\")\nphi = FeatureParameter(\"phi\")\nblock = chain(\nkron(RX(0, theta), RY(1, theta)),\nkron(RX(0, phi), RY(1, phi)),\n)\ncircuit = QuantumCircuit(2, block)\nunique_params = circuit.unique_parameters\n</code></pre> <pre><code>unique_params = [theta, phi]\n</code></pre> <p>In the circuit above, four parameters are defined but only two unique names. Therefore, there will be only one variational parameter to be optimized.</p> <p>The <code>QuantumModel</code> class also provides convenience methods to manipulate parameters.</p> <pre><code>from qadence import QuantumModel, BackendName, DiffMode\nmodel = QuantumModel(circuit, backend=BackendName.PYQTORCH, diff_mode=DiffMode.AD)\nnum_vparams = model.num_vparams\nvparams_values = model.vparams\n</code></pre> <pre><code>num_vparams = 1\nvparams_values = OrderedDict([('theta', tensor([0.0053]))])\n</code></pre> <p>Only provide feature parameter values to the quantum model</p> <p>In order to <code>run</code> the variational circuit only feature parameter values have to be provided. Variational parameters are stored in the model itself. If multiple feature parameters are present, values must be provided in batches of same length.</p> <p><pre><code>import torch\nvalues = {\"phi\": torch.rand(3)} # theta does not appear here\nwf = model.run(values)\n</code></pre> <pre><code>wf = tensor([[0.9741+0.0000j, 0.1588+0.0000j, 0.0000-0.1588j, 0.0000-0.0259j],\n[0.8288+0.0000j, 0.3767+0.0000j, 0.0000-0.3767j, 0.0000-0.1712j],\n[0.9161+0.0000j, 0.2772+0.0000j, 0.0000-0.2772j, 0.0000-0.0839j]],\ngrad_fn=&lt;TBackward0&gt;)\n</code></pre> </p>"},{"location":"tutorials/parameters/#standard-constructors","title":"Standard constructors","text":"<p>The unique parameter identification is relevant when using built-in Qadence block constructors in the <code>qadence.constructors</code> module such as feature maps and hardware efficient ansatze (HEA).</p> <p><pre><code>from qadence import QuantumCircuit, hea\nn_qubits = 4\ndepth = 2\nhea1 = hea(n_qubits=n_qubits, depth=depth)\ncircuit = QuantumCircuit(n_qubits, hea1)\nnum_unique_parameters = circuit.num_unique_parameters\n</code></pre> <pre><code>Unique parameters with a single HEA: 24\n</code></pre> 09cb55b64f774d9caca7c67c6a97ea4c 0 d5f39f7a103d420fbd4017e16ebcac04 RX(theta\u2080) 09cb55b64f774d9caca7c67c6a97ea4c--d5f39f7a103d420fbd4017e16ebcac04 3c00269927424c9796b13a39f30adef9 1 350f475f65fc4dc7be78c5c1618833b8 RY(theta\u2084) d5f39f7a103d420fbd4017e16ebcac04--350f475f65fc4dc7be78c5c1618833b8 4797a2d034b14a11b446405268e60fd8 RX(theta\u2088) 350f475f65fc4dc7be78c5c1618833b8--4797a2d034b14a11b446405268e60fd8 384f4164010c428d82a6190b7e6641c1 4797a2d034b14a11b446405268e60fd8--384f4164010c428d82a6190b7e6641c1 1d3a276f7b734b05bdccb61fec35dc57 384f4164010c428d82a6190b7e6641c1--1d3a276f7b734b05bdccb61fec35dc57 2aac3f726a6d4498946fc3722ac6b929 RX(theta\u2081\u2082) 1d3a276f7b734b05bdccb61fec35dc57--2aac3f726a6d4498946fc3722ac6b929 fc66944b57664112859a34035f3627c3 RY(theta\u2081\u2086) 2aac3f726a6d4498946fc3722ac6b929--fc66944b57664112859a34035f3627c3 c04f327a0eff499aac40b89dcbd5cec1 RX(theta\u2082\u2080) fc66944b57664112859a34035f3627c3--c04f327a0eff499aac40b89dcbd5cec1 a39d26c5f6c34ebbb124a3fa6a216ec9 c04f327a0eff499aac40b89dcbd5cec1--a39d26c5f6c34ebbb124a3fa6a216ec9 5b0a42e2a0cc4fb18361d1e0ebd3ed98 a39d26c5f6c34ebbb124a3fa6a216ec9--5b0a42e2a0cc4fb18361d1e0ebd3ed98 9f2220c74d6942ca847052748508bec9 5b0a42e2a0cc4fb18361d1e0ebd3ed98--9f2220c74d6942ca847052748508bec9 f4519187644f4b5eb8887825a7f0e6d7 757f56bbe0af4716aed37a6fdb5d1bf7 RX(theta\u2081) 3c00269927424c9796b13a39f30adef9--757f56bbe0af4716aed37a6fdb5d1bf7 eaf9e83adf384dd7b6e760f6cc202896 2 3da04e153bb849c087f547d9391883e1 RY(theta\u2085) 757f56bbe0af4716aed37a6fdb5d1bf7--3da04e153bb849c087f547d9391883e1 953561c7972646aba04a3ac44ba11d80 RX(theta\u2089) 3da04e153bb849c087f547d9391883e1--953561c7972646aba04a3ac44ba11d80 dcd5e1d94d9b4f0a84efc012dfd7e38c X 953561c7972646aba04a3ac44ba11d80--dcd5e1d94d9b4f0a84efc012dfd7e38c dcd5e1d94d9b4f0a84efc012dfd7e38c--384f4164010c428d82a6190b7e6641c1 e9652fc019de4273a789226fde63c086 dcd5e1d94d9b4f0a84efc012dfd7e38c--e9652fc019de4273a789226fde63c086 ec248e62beb4445a89a7ca078250f9c1 RX(theta\u2081\u2083) e9652fc019de4273a789226fde63c086--ec248e62beb4445a89a7ca078250f9c1 84b6d22c2c8143b7b05e0a36ed0d0120 RY(theta\u2081\u2087) ec248e62beb4445a89a7ca078250f9c1--84b6d22c2c8143b7b05e0a36ed0d0120 09261d8a67dc42e28c4536571cc3bc75 RX(theta\u2082\u2081) 84b6d22c2c8143b7b05e0a36ed0d0120--09261d8a67dc42e28c4536571cc3bc75 d7441f18f66e4cbfb4b612699aa17dcc X 09261d8a67dc42e28c4536571cc3bc75--d7441f18f66e4cbfb4b612699aa17dcc d7441f18f66e4cbfb4b612699aa17dcc--a39d26c5f6c34ebbb124a3fa6a216ec9 0927cc0a3f88428f818a9fd826530354 d7441f18f66e4cbfb4b612699aa17dcc--0927cc0a3f88428f818a9fd826530354 0927cc0a3f88428f818a9fd826530354--f4519187644f4b5eb8887825a7f0e6d7 60eef646da744a67bbe7cee5a9b24777 85b1c4172fd8476c96b3fc055b48f9f9 RX(theta\u2082) eaf9e83adf384dd7b6e760f6cc202896--85b1c4172fd8476c96b3fc055b48f9f9 209676631005499f85dee7f18ead3e74 3 6073103365c647e0ad6159168934c668 RY(theta\u2086) 85b1c4172fd8476c96b3fc055b48f9f9--6073103365c647e0ad6159168934c668 a6286a94077a489980f0fd4853145f4f RX(theta\u2081\u2080) 6073103365c647e0ad6159168934c668--a6286a94077a489980f0fd4853145f4f a082d1230000476880856df21843fd44 a6286a94077a489980f0fd4853145f4f--a082d1230000476880856df21843fd44 5c5410f63d5244d9bcac1cd258d577b0 X a082d1230000476880856df21843fd44--5c5410f63d5244d9bcac1cd258d577b0 5c5410f63d5244d9bcac1cd258d577b0--e9652fc019de4273a789226fde63c086 d74a80c329e74e41b309591836f1ef29 RX(theta\u2081\u2084) 5c5410f63d5244d9bcac1cd258d577b0--d74a80c329e74e41b309591836f1ef29 a8a7196ecd79481d82fa8e78d5fe8e38 RY(theta\u2081\u2088) d74a80c329e74e41b309591836f1ef29--a8a7196ecd79481d82fa8e78d5fe8e38 e33d3edbc8f04aa59cdba15663c68f1e RX(theta\u2082\u2082) a8a7196ecd79481d82fa8e78d5fe8e38--e33d3edbc8f04aa59cdba15663c68f1e 2cd7bc311bdb40f8ab363aa304533ffe e33d3edbc8f04aa59cdba15663c68f1e--2cd7bc311bdb40f8ab363aa304533ffe d0b53fb2e11c4662bc04b0cebd25d4f2 X 2cd7bc311bdb40f8ab363aa304533ffe--d0b53fb2e11c4662bc04b0cebd25d4f2 d0b53fb2e11c4662bc04b0cebd25d4f2--0927cc0a3f88428f818a9fd826530354 d0b53fb2e11c4662bc04b0cebd25d4f2--60eef646da744a67bbe7cee5a9b24777 e64aaaacd94d495a8b7f324ea7267bc7 086b6cecd00c4cc9a43049a0ab966632 RX(theta\u2083) 209676631005499f85dee7f18ead3e74--086b6cecd00c4cc9a43049a0ab966632 72e27a7032274c4b889860142eb5f221 RY(theta\u2087) 086b6cecd00c4cc9a43049a0ab966632--72e27a7032274c4b889860142eb5f221 c15b67b000544e528d46b50e2d96c820 RX(theta\u2081\u2081) 72e27a7032274c4b889860142eb5f221--c15b67b000544e528d46b50e2d96c820 0679f5dfc24d4399ace438f4002869ca X c15b67b000544e528d46b50e2d96c820--0679f5dfc24d4399ace438f4002869ca 0679f5dfc24d4399ace438f4002869ca--a082d1230000476880856df21843fd44 2134323fd8534a20acbdb9ba54988d15 0679f5dfc24d4399ace438f4002869ca--2134323fd8534a20acbdb9ba54988d15 03a40019c092454dadfd6d462a73227f RX(theta\u2081\u2085) 2134323fd8534a20acbdb9ba54988d15--03a40019c092454dadfd6d462a73227f 91a4c4d2bef140febc4daebdade6cd5f RY(theta\u2081\u2089) 03a40019c092454dadfd6d462a73227f--91a4c4d2bef140febc4daebdade6cd5f c1545b903e4b4533a3b0aa381ddefdec RX(theta\u2082\u2083) 91a4c4d2bef140febc4daebdade6cd5f--c1545b903e4b4533a3b0aa381ddefdec 2b221f4ba3064b389cbd89045d8d8ebe X c1545b903e4b4533a3b0aa381ddefdec--2b221f4ba3064b389cbd89045d8d8ebe 2b221f4ba3064b389cbd89045d8d8ebe--2cd7bc311bdb40f8ab363aa304533ffe 507d0d9e4f6e4c0eb506788c407ac109 2b221f4ba3064b389cbd89045d8d8ebe--507d0d9e4f6e4c0eb506788c407ac109 507d0d9e4f6e4c0eb506788c407ac109--e64aaaacd94d495a8b7f324ea7267bc7 </p> <p>A new circuit can be created by adding another identical HEA. As expected, the number of unique parameters is the same.</p> <p><pre><code>hea2 = hea(n_qubits=n_qubits, depth=depth)\ncircuit = QuantumCircuit(n_qubits, hea1, hea2)\nnum_unique_params_two_heas = circuit.num_unique_parameters\n</code></pre> <pre><code>Unique parameters with two stacked HEAs: 24\n</code></pre> cluster_9e9076b13e0442fcb93689c13e5d8d23 HEA cluster_4b98594ad6a14b82adbbdfa9c8b7415b HEA 4882c6e0aa4e46e7896ac2d2037f8191 0 0a9ba5e9a1df498085fb5f191b9a617b RX(theta\u2080) 4882c6e0aa4e46e7896ac2d2037f8191--0a9ba5e9a1df498085fb5f191b9a617b 8cd15bc0907747d5bb0338246fe0a0d5 1 d499b1f4ed264f0a9c0d167357c8810c RY(theta\u2084) 0a9ba5e9a1df498085fb5f191b9a617b--d499b1f4ed264f0a9c0d167357c8810c b30a017faba94c3ea860819e0290d8f7 RX(theta\u2088) d499b1f4ed264f0a9c0d167357c8810c--b30a017faba94c3ea860819e0290d8f7 74b59099e84d4e238d637db35d1bfa40 b30a017faba94c3ea860819e0290d8f7--74b59099e84d4e238d637db35d1bfa40 caa676f1894e4cca82c6447ee46cced3 74b59099e84d4e238d637db35d1bfa40--caa676f1894e4cca82c6447ee46cced3 7f0924b45a114575beb34cfa7932ff47 RX(theta\u2081\u2082) caa676f1894e4cca82c6447ee46cced3--7f0924b45a114575beb34cfa7932ff47 9f755236ac534d4b8d047d2dbbcff0a6 RY(theta\u2081\u2086) 7f0924b45a114575beb34cfa7932ff47--9f755236ac534d4b8d047d2dbbcff0a6 138775abf6af4cd9a5e15908131aa640 RX(theta\u2082\u2080) 9f755236ac534d4b8d047d2dbbcff0a6--138775abf6af4cd9a5e15908131aa640 962d5bdecab5449bab9c584ade1d38e2 138775abf6af4cd9a5e15908131aa640--962d5bdecab5449bab9c584ade1d38e2 84588ce50aee4767a611c4e3b3e3c12b 962d5bdecab5449bab9c584ade1d38e2--84588ce50aee4767a611c4e3b3e3c12b ee9ce39ded9243149cfd195a8a4763f7 RX(theta\u2080) 84588ce50aee4767a611c4e3b3e3c12b--ee9ce39ded9243149cfd195a8a4763f7 e01fac8a9ab54f9dad84262e9dbc930a RY(theta\u2084) ee9ce39ded9243149cfd195a8a4763f7--e01fac8a9ab54f9dad84262e9dbc930a 28ed5f20930140c5942009414c87c94f RX(theta\u2088) e01fac8a9ab54f9dad84262e9dbc930a--28ed5f20930140c5942009414c87c94f c54eed17e0d642609829e907be90c7be 28ed5f20930140c5942009414c87c94f--c54eed17e0d642609829e907be90c7be 79d1cb7982dd4c22a3491164d632f017 c54eed17e0d642609829e907be90c7be--79d1cb7982dd4c22a3491164d632f017 bc3545edaf2b4b89b328266bc0127a81 RX(theta\u2081\u2082) 79d1cb7982dd4c22a3491164d632f017--bc3545edaf2b4b89b328266bc0127a81 4b3bae6ab21d420fabcd42a7248c65a4 RY(theta\u2081\u2086) bc3545edaf2b4b89b328266bc0127a81--4b3bae6ab21d420fabcd42a7248c65a4 cc90c1cd48434d0db93131a5523fbed2 RX(theta\u2082\u2080) 4b3bae6ab21d420fabcd42a7248c65a4--cc90c1cd48434d0db93131a5523fbed2 6314727490854d97a3102e3bf740e550 cc90c1cd48434d0db93131a5523fbed2--6314727490854d97a3102e3bf740e550 43c6ad1dfd9d4d8cac9971d7fd03d40a 6314727490854d97a3102e3bf740e550--43c6ad1dfd9d4d8cac9971d7fd03d40a 67c88c095b0b4de19e18c38ae349d4fa 43c6ad1dfd9d4d8cac9971d7fd03d40a--67c88c095b0b4de19e18c38ae349d4fa 128fb693d4ec4da393ce818851aff8fe 6e3bae6a5ac74cf98b2c0c8e8d00bac3 RX(theta\u2081) 8cd15bc0907747d5bb0338246fe0a0d5--6e3bae6a5ac74cf98b2c0c8e8d00bac3 eced9b2a980b445988ca533f722e95dc 2 05da4449dfa84e5c9634cec98ee5f102 RY(theta\u2085) 6e3bae6a5ac74cf98b2c0c8e8d00bac3--05da4449dfa84e5c9634cec98ee5f102 7823baec266845bf8b1c056df361376e RX(theta\u2089) 05da4449dfa84e5c9634cec98ee5f102--7823baec266845bf8b1c056df361376e 30a34590e2ec4d819424c72ca189bad8 X 7823baec266845bf8b1c056df361376e--30a34590e2ec4d819424c72ca189bad8 30a34590e2ec4d819424c72ca189bad8--74b59099e84d4e238d637db35d1bfa40 97edeea99c794e58bf6c69c453284ebf 30a34590e2ec4d819424c72ca189bad8--97edeea99c794e58bf6c69c453284ebf 3c6db899ae8542399545b7793ce655bd RX(theta\u2081\u2083) 97edeea99c794e58bf6c69c453284ebf--3c6db899ae8542399545b7793ce655bd 6ad51edc9f2b44fdac59909334f52d59 RY(theta\u2081\u2087) 3c6db899ae8542399545b7793ce655bd--6ad51edc9f2b44fdac59909334f52d59 6911694d556f4675b7fabe239b140cbc RX(theta\u2082\u2081) 6ad51edc9f2b44fdac59909334f52d59--6911694d556f4675b7fabe239b140cbc 2bb26da70e80437ea50f571dfeed91b7 X 6911694d556f4675b7fabe239b140cbc--2bb26da70e80437ea50f571dfeed91b7 2bb26da70e80437ea50f571dfeed91b7--962d5bdecab5449bab9c584ade1d38e2 2ee8f70b260e47998e8a96fd69d1b928 2bb26da70e80437ea50f571dfeed91b7--2ee8f70b260e47998e8a96fd69d1b928 2e5c9c84f579411a86d44902d0425e9c RX(theta\u2081) 2ee8f70b260e47998e8a96fd69d1b928--2e5c9c84f579411a86d44902d0425e9c e8cda7c6dae54f54beee38b91d6d8ff6 RY(theta\u2085) 2e5c9c84f579411a86d44902d0425e9c--e8cda7c6dae54f54beee38b91d6d8ff6 928b26469af948d0836a529ef3244bb5 RX(theta\u2089) e8cda7c6dae54f54beee38b91d6d8ff6--928b26469af948d0836a529ef3244bb5 9eb808b576034f458482df896c8757fb X 928b26469af948d0836a529ef3244bb5--9eb808b576034f458482df896c8757fb 9eb808b576034f458482df896c8757fb--c54eed17e0d642609829e907be90c7be ed30e89681c0487aaf5e3c1fc7f477a4 9eb808b576034f458482df896c8757fb--ed30e89681c0487aaf5e3c1fc7f477a4 3bf5cf9adf874404a2cc75e542217d70 RX(theta\u2081\u2083) ed30e89681c0487aaf5e3c1fc7f477a4--3bf5cf9adf874404a2cc75e542217d70 6082fad7f93a440daaa57a5cf67891f8 RY(theta\u2081\u2087) 3bf5cf9adf874404a2cc75e542217d70--6082fad7f93a440daaa57a5cf67891f8 1a78f14c1928440a995bda380f0f4dc4 RX(theta\u2082\u2081) 6082fad7f93a440daaa57a5cf67891f8--1a78f14c1928440a995bda380f0f4dc4 3ecb482b736b4735ab9275374d960c65 X 1a78f14c1928440a995bda380f0f4dc4--3ecb482b736b4735ab9275374d960c65 3ecb482b736b4735ab9275374d960c65--6314727490854d97a3102e3bf740e550 ef59a7ed7a3e4237a5b0188eac7f8c21 3ecb482b736b4735ab9275374d960c65--ef59a7ed7a3e4237a5b0188eac7f8c21 ef59a7ed7a3e4237a5b0188eac7f8c21--128fb693d4ec4da393ce818851aff8fe 3700a86dd227464b91b45d81850b30c3 ad73931a413e48c69e5633d4350eba2a RX(theta\u2082) eced9b2a980b445988ca533f722e95dc--ad73931a413e48c69e5633d4350eba2a 66c2f553f5814e37acf5d4424c231f48 3 011d72d79d874380b7db4c7f40a0bb07 RY(theta\u2086) ad73931a413e48c69e5633d4350eba2a--011d72d79d874380b7db4c7f40a0bb07 1b59a373f9f54a4d9b492e2d9680a442 RX(theta\u2081\u2080) 011d72d79d874380b7db4c7f40a0bb07--1b59a373f9f54a4d9b492e2d9680a442 0fe21726b9434cf193964534644bc7e4 1b59a373f9f54a4d9b492e2d9680a442--0fe21726b9434cf193964534644bc7e4 c67b18f69fa74daf81c87b7193f63661 X 0fe21726b9434cf193964534644bc7e4--c67b18f69fa74daf81c87b7193f63661 c67b18f69fa74daf81c87b7193f63661--97edeea99c794e58bf6c69c453284ebf 0cb7bde0ee7c45b4aea0424bc4cb5648 RX(theta\u2081\u2084) c67b18f69fa74daf81c87b7193f63661--0cb7bde0ee7c45b4aea0424bc4cb5648 0ba790a9718342f48e695613add896d3 RY(theta\u2081\u2088) 0cb7bde0ee7c45b4aea0424bc4cb5648--0ba790a9718342f48e695613add896d3 ca3ce1a1b6bc451e8d461d5948cd3031 RX(theta\u2082\u2082) 0ba790a9718342f48e695613add896d3--ca3ce1a1b6bc451e8d461d5948cd3031 56cebe7ddf1e44c7a5e7a4c7eb462704 ca3ce1a1b6bc451e8d461d5948cd3031--56cebe7ddf1e44c7a5e7a4c7eb462704 c2980f71017a465e9ef95749f9705ec6 X 56cebe7ddf1e44c7a5e7a4c7eb462704--c2980f71017a465e9ef95749f9705ec6 c2980f71017a465e9ef95749f9705ec6--2ee8f70b260e47998e8a96fd69d1b928 d3ae9a10e1d04d2c8cc12dd669d55721 RX(theta\u2082) c2980f71017a465e9ef95749f9705ec6--d3ae9a10e1d04d2c8cc12dd669d55721 328e450b33e04fbda064122fec59e7fb RY(theta\u2086) d3ae9a10e1d04d2c8cc12dd669d55721--328e450b33e04fbda064122fec59e7fb 997f044a64424873bd180989ff580ceb RX(theta\u2081\u2080) 328e450b33e04fbda064122fec59e7fb--997f044a64424873bd180989ff580ceb 90fe55aa213f47b5878e431d2618aee3 997f044a64424873bd180989ff580ceb--90fe55aa213f47b5878e431d2618aee3 f3076a6dbf6c4e61992484dacf7f4112 X 90fe55aa213f47b5878e431d2618aee3--f3076a6dbf6c4e61992484dacf7f4112 f3076a6dbf6c4e61992484dacf7f4112--ed30e89681c0487aaf5e3c1fc7f477a4 536bfbd4b30f49e2a5a2255d68f895fb RX(theta\u2081\u2084) f3076a6dbf6c4e61992484dacf7f4112--536bfbd4b30f49e2a5a2255d68f895fb 5702eee47bda46c3af242b09ac7bb3c2 RY(theta\u2081\u2088) 536bfbd4b30f49e2a5a2255d68f895fb--5702eee47bda46c3af242b09ac7bb3c2 33024887575e429c9dd17b9b04023383 RX(theta\u2082\u2082) 5702eee47bda46c3af242b09ac7bb3c2--33024887575e429c9dd17b9b04023383 dd766d8615fa463e89bfaaeb7ca28d70 33024887575e429c9dd17b9b04023383--dd766d8615fa463e89bfaaeb7ca28d70 9ea51012688742608162829e54916937 X dd766d8615fa463e89bfaaeb7ca28d70--9ea51012688742608162829e54916937 9ea51012688742608162829e54916937--ef59a7ed7a3e4237a5b0188eac7f8c21 9ea51012688742608162829e54916937--3700a86dd227464b91b45d81850b30c3 507de59f9acf4e1292add90f01891be4 96f554cc210e4becba620beea1b84708 RX(theta\u2083) 66c2f553f5814e37acf5d4424c231f48--96f554cc210e4becba620beea1b84708 9ec275af68c7457ca62cb16dfcedf8fe RY(theta\u2087) 96f554cc210e4becba620beea1b84708--9ec275af68c7457ca62cb16dfcedf8fe 73ed6a93cc4e45668e7f78f648d037b6 RX(theta\u2081\u2081) 9ec275af68c7457ca62cb16dfcedf8fe--73ed6a93cc4e45668e7f78f648d037b6 b638d32259954ccbb9abd38779ef36cb X 73ed6a93cc4e45668e7f78f648d037b6--b638d32259954ccbb9abd38779ef36cb b638d32259954ccbb9abd38779ef36cb--0fe21726b9434cf193964534644bc7e4 eb100897b21548e18b7791ca57ecf730 b638d32259954ccbb9abd38779ef36cb--eb100897b21548e18b7791ca57ecf730 eb51506269f24596b025b529b2bf8317 RX(theta\u2081\u2085) eb100897b21548e18b7791ca57ecf730--eb51506269f24596b025b529b2bf8317 1164817370ad4343bdc47ebce9937239 RY(theta\u2081\u2089) eb51506269f24596b025b529b2bf8317--1164817370ad4343bdc47ebce9937239 6d4c3b78489742eda517e644ea4cb159 RX(theta\u2082\u2083) 1164817370ad4343bdc47ebce9937239--6d4c3b78489742eda517e644ea4cb159 0e6a4d6249864e12806de0f8857a64ea X 6d4c3b78489742eda517e644ea4cb159--0e6a4d6249864e12806de0f8857a64ea 0e6a4d6249864e12806de0f8857a64ea--56cebe7ddf1e44c7a5e7a4c7eb462704 1c73b360b58547f0b3b24319c9bfc75f 0e6a4d6249864e12806de0f8857a64ea--1c73b360b58547f0b3b24319c9bfc75f e43f49983fcb4d939fa61bbf532a9924 RX(theta\u2083) 1c73b360b58547f0b3b24319c9bfc75f--e43f49983fcb4d939fa61bbf532a9924 aadc531e68e14091a5258db1313fe49d RY(theta\u2087) e43f49983fcb4d939fa61bbf532a9924--aadc531e68e14091a5258db1313fe49d 1ceed806c00b4f01b09e69a5afc05586 RX(theta\u2081\u2081) aadc531e68e14091a5258db1313fe49d--1ceed806c00b4f01b09e69a5afc05586 376eb0b17f5549acb4a193a100f0d4b8 X 1ceed806c00b4f01b09e69a5afc05586--376eb0b17f5549acb4a193a100f0d4b8 376eb0b17f5549acb4a193a100f0d4b8--90fe55aa213f47b5878e431d2618aee3 79269577f96642ccabf82b6c7cd80643 376eb0b17f5549acb4a193a100f0d4b8--79269577f96642ccabf82b6c7cd80643 c8468df28f394264ba3ea573e41d6251 RX(theta\u2081\u2085) 79269577f96642ccabf82b6c7cd80643--c8468df28f394264ba3ea573e41d6251 c80082d55b67488ebeecff72d11375a2 RY(theta\u2081\u2089) c8468df28f394264ba3ea573e41d6251--c80082d55b67488ebeecff72d11375a2 9c9dc708685844dc89367eb5d1ac62b3 RX(theta\u2082\u2083) c80082d55b67488ebeecff72d11375a2--9c9dc708685844dc89367eb5d1ac62b3 8566f7351ab643f1b124aaf6fd9df100 X 9c9dc708685844dc89367eb5d1ac62b3--8566f7351ab643f1b124aaf6fd9df100 8566f7351ab643f1b124aaf6fd9df100--dd766d8615fa463e89bfaaeb7ca28d70 4d25699049c1400080c3adc76e7eb129 8566f7351ab643f1b124aaf6fd9df100--4d25699049c1400080c3adc76e7eb129 4d25699049c1400080c3adc76e7eb129--507de59f9acf4e1292add90f01891be4 </p> <p>Avoid non-unique names by prefixing</p> <p>A parameter prefix for each HEA can be passed as follows:</p> <p><pre><code>hea1 = hea(n_qubits=n_qubits, depth=depth, param_prefix=\"p1\")\nhea2 = hea(n_qubits=n_qubits, depth=depth, param_prefix=\"p2\")\ncircuit = QuantumCircuit(n_qubits, hea1, hea2)\nn_params_two_heas = circuit.num_unique_parameters\n</code></pre> <pre><code>Unique parameters with two stacked HEAs: 48\n</code></pre> cluster_3aadfde845d1488a99842d5218f5f707 HEA cluster_7c100e736ce1498ab0ac81eccb41abd4 HEA 0e91cfb5c89b4c4baf855f3215d71471 0 ead1f9a98567447d8b6ac430e0ae5fd1 RX(p1\u2080) 0e91cfb5c89b4c4baf855f3215d71471--ead1f9a98567447d8b6ac430e0ae5fd1 24df927ae97b4cccab831a50ae3738e9 1 ca504adeb85444b693d93898501a632c RY(p1\u2084) ead1f9a98567447d8b6ac430e0ae5fd1--ca504adeb85444b693d93898501a632c 495e95f13ae74c21ab213a581100d310 RX(p1\u2088) ca504adeb85444b693d93898501a632c--495e95f13ae74c21ab213a581100d310 abf0f7c676f34bfa8f5731e487a772b4 495e95f13ae74c21ab213a581100d310--abf0f7c676f34bfa8f5731e487a772b4 e777e1ac0d2541f38b4c4789d8ad2a8c abf0f7c676f34bfa8f5731e487a772b4--e777e1ac0d2541f38b4c4789d8ad2a8c ae6d848dde0b4e7a801477f0f846f1e8 RX(p1\u2081\u2082) e777e1ac0d2541f38b4c4789d8ad2a8c--ae6d848dde0b4e7a801477f0f846f1e8 fa4d4970a7a54962b1160856e66992ee RY(p1\u2081\u2086) ae6d848dde0b4e7a801477f0f846f1e8--fa4d4970a7a54962b1160856e66992ee 18d1337ff0084755a432bbdd7dc0ac9b RX(p1\u2082\u2080) fa4d4970a7a54962b1160856e66992ee--18d1337ff0084755a432bbdd7dc0ac9b 02118164f1d8475d8baecc9d45825bb2 18d1337ff0084755a432bbdd7dc0ac9b--02118164f1d8475d8baecc9d45825bb2 433da19f51a0414cbb7e736ae53fba84 02118164f1d8475d8baecc9d45825bb2--433da19f51a0414cbb7e736ae53fba84 b57f4af4f7a04e5393650a6907a81d20 RX(p2\u2080) 433da19f51a0414cbb7e736ae53fba84--b57f4af4f7a04e5393650a6907a81d20 59b322958f91442c82cb8bcbc5f9efae RY(p2\u2084) b57f4af4f7a04e5393650a6907a81d20--59b322958f91442c82cb8bcbc5f9efae 9f42e556efe54d34bd014d62919067e4 RX(p2\u2088) 59b322958f91442c82cb8bcbc5f9efae--9f42e556efe54d34bd014d62919067e4 31560d72fdee43bfb2a5c78189b4fda7 9f42e556efe54d34bd014d62919067e4--31560d72fdee43bfb2a5c78189b4fda7 822075ead84e47e1b3347a74f499a204 31560d72fdee43bfb2a5c78189b4fda7--822075ead84e47e1b3347a74f499a204 8bbc1368c54c425993bb97db7d27361d RX(p2\u2081\u2082) 822075ead84e47e1b3347a74f499a204--8bbc1368c54c425993bb97db7d27361d 07dcd45b2a79431eb2fe0c7881772a0d RY(p2\u2081\u2086) 8bbc1368c54c425993bb97db7d27361d--07dcd45b2a79431eb2fe0c7881772a0d 88d6376a8c1c4abd8709f94683dd49d5 RX(p2\u2082\u2080) 07dcd45b2a79431eb2fe0c7881772a0d--88d6376a8c1c4abd8709f94683dd49d5 1aae9d3d57f74bffb06a53903fce0219 88d6376a8c1c4abd8709f94683dd49d5--1aae9d3d57f74bffb06a53903fce0219 7b191fb474be475ca596c97f62c890fc 1aae9d3d57f74bffb06a53903fce0219--7b191fb474be475ca596c97f62c890fc 4e5e08ef492949f4a666ac498beba203 7b191fb474be475ca596c97f62c890fc--4e5e08ef492949f4a666ac498beba203 732a9d7e1a314127a85fbcd4e5f265f3 d59b8eb129ab427090398b070d7d1304 RX(p1\u2081) 24df927ae97b4cccab831a50ae3738e9--d59b8eb129ab427090398b070d7d1304 0569e48ad7164f528106190caf79ab13 2 82e61ab470094d6086a528ae8627b4e1 RY(p1\u2085) d59b8eb129ab427090398b070d7d1304--82e61ab470094d6086a528ae8627b4e1 3c6917b0927047e68a38415e86114133 RX(p1\u2089) 82e61ab470094d6086a528ae8627b4e1--3c6917b0927047e68a38415e86114133 579ac99364e240bca80f345e991cbd39 X 3c6917b0927047e68a38415e86114133--579ac99364e240bca80f345e991cbd39 579ac99364e240bca80f345e991cbd39--abf0f7c676f34bfa8f5731e487a772b4 5f35009823514cdc90555eff57503905 579ac99364e240bca80f345e991cbd39--5f35009823514cdc90555eff57503905 1413cbd6566241cab006c0ccca333b6a RX(p1\u2081\u2083) 5f35009823514cdc90555eff57503905--1413cbd6566241cab006c0ccca333b6a 9207914385454f2081d1449f88c736ef RY(p1\u2081\u2087) 1413cbd6566241cab006c0ccca333b6a--9207914385454f2081d1449f88c736ef 254d7239f6c84bf98d7bc473eda50d4b RX(p1\u2082\u2081) 9207914385454f2081d1449f88c736ef--254d7239f6c84bf98d7bc473eda50d4b 2a1277311490467ba92a5a4551f5f9d6 X 254d7239f6c84bf98d7bc473eda50d4b--2a1277311490467ba92a5a4551f5f9d6 2a1277311490467ba92a5a4551f5f9d6--02118164f1d8475d8baecc9d45825bb2 5615b6a6dadf47deb6e49005615f319a 2a1277311490467ba92a5a4551f5f9d6--5615b6a6dadf47deb6e49005615f319a 4a86c111e0a5449ca1afec821cecbc32 RX(p2\u2081) 5615b6a6dadf47deb6e49005615f319a--4a86c111e0a5449ca1afec821cecbc32 6eb87903079540a8b1a5f4248d02305f RY(p2\u2085) 4a86c111e0a5449ca1afec821cecbc32--6eb87903079540a8b1a5f4248d02305f cbbd3eab93d446a39d1447c157779e0e RX(p2\u2089) 6eb87903079540a8b1a5f4248d02305f--cbbd3eab93d446a39d1447c157779e0e 136b9970cdc74448b95911708520e86f X cbbd3eab93d446a39d1447c157779e0e--136b9970cdc74448b95911708520e86f 136b9970cdc74448b95911708520e86f--31560d72fdee43bfb2a5c78189b4fda7 7dccb0763cc941a59d4952e6c9c31141 136b9970cdc74448b95911708520e86f--7dccb0763cc941a59d4952e6c9c31141 4275f385fa6b4f0eba9bb1d4a669397d RX(p2\u2081\u2083) 7dccb0763cc941a59d4952e6c9c31141--4275f385fa6b4f0eba9bb1d4a669397d 24517adc9af54c33b838a483fe0ada99 RY(p2\u2081\u2087) 4275f385fa6b4f0eba9bb1d4a669397d--24517adc9af54c33b838a483fe0ada99 2189283a37244fb9bfd30f8051066da4 RX(p2\u2082\u2081) 24517adc9af54c33b838a483fe0ada99--2189283a37244fb9bfd30f8051066da4 033956cc966d4d3bbc9a27abb79cb52b X 2189283a37244fb9bfd30f8051066da4--033956cc966d4d3bbc9a27abb79cb52b 033956cc966d4d3bbc9a27abb79cb52b--1aae9d3d57f74bffb06a53903fce0219 2e279708589e4b918b0cb555a5112b10 033956cc966d4d3bbc9a27abb79cb52b--2e279708589e4b918b0cb555a5112b10 2e279708589e4b918b0cb555a5112b10--732a9d7e1a314127a85fbcd4e5f265f3 0f1013850a9a49f6b580c5738e5edb40 3ff0938fa58c4b81b99fed5b76e82c90 RX(p1\u2082) 0569e48ad7164f528106190caf79ab13--3ff0938fa58c4b81b99fed5b76e82c90 295e7bf946a1496698a34505a1ae8d37 3 020c0be2d4674bd88cc1fafb2c484c68 RY(p1\u2086) 3ff0938fa58c4b81b99fed5b76e82c90--020c0be2d4674bd88cc1fafb2c484c68 24029963f2d748e59f1e3e95621d05b8 RX(p1\u2081\u2080) 020c0be2d4674bd88cc1fafb2c484c68--24029963f2d748e59f1e3e95621d05b8 b27a2b3f519b402394ebed6f7d3e48f4 24029963f2d748e59f1e3e95621d05b8--b27a2b3f519b402394ebed6f7d3e48f4 f23793dbc2184288af07cb5c9bdc39ea X b27a2b3f519b402394ebed6f7d3e48f4--f23793dbc2184288af07cb5c9bdc39ea f23793dbc2184288af07cb5c9bdc39ea--5f35009823514cdc90555eff57503905 b6bb33fcf2c849fca78dce0c2c1d5499 RX(p1\u2081\u2084) f23793dbc2184288af07cb5c9bdc39ea--b6bb33fcf2c849fca78dce0c2c1d5499 4841ded8f6b9425e83c09c3cc9794d3c RY(p1\u2081\u2088) b6bb33fcf2c849fca78dce0c2c1d5499--4841ded8f6b9425e83c09c3cc9794d3c c3d3dbf22b9f40c0aa81515abe59b1ee RX(p1\u2082\u2082) 4841ded8f6b9425e83c09c3cc9794d3c--c3d3dbf22b9f40c0aa81515abe59b1ee 94415b6734cc402b9d33a50daa1b697e c3d3dbf22b9f40c0aa81515abe59b1ee--94415b6734cc402b9d33a50daa1b697e 98847800c1664f55b53bf187ed66ae37 X 94415b6734cc402b9d33a50daa1b697e--98847800c1664f55b53bf187ed66ae37 98847800c1664f55b53bf187ed66ae37--5615b6a6dadf47deb6e49005615f319a 1d6bdf1741094217ae8fbd453130b7fb RX(p2\u2082) 98847800c1664f55b53bf187ed66ae37--1d6bdf1741094217ae8fbd453130b7fb b16f494c462941158c32fd192d843283 RY(p2\u2086) 1d6bdf1741094217ae8fbd453130b7fb--b16f494c462941158c32fd192d843283 48af7d304fd948c696ac39fbf40acf5e RX(p2\u2081\u2080) b16f494c462941158c32fd192d843283--48af7d304fd948c696ac39fbf40acf5e c6fcf7feaf4a474281ac5de3e5240f57 48af7d304fd948c696ac39fbf40acf5e--c6fcf7feaf4a474281ac5de3e5240f57 09df7a894635494fbfc0537a25ba4182 X c6fcf7feaf4a474281ac5de3e5240f57--09df7a894635494fbfc0537a25ba4182 09df7a894635494fbfc0537a25ba4182--7dccb0763cc941a59d4952e6c9c31141 653cf19d1a8a416e88dbe8f490820e14 RX(p2\u2081\u2084) 09df7a894635494fbfc0537a25ba4182--653cf19d1a8a416e88dbe8f490820e14 f648ccdeb832435baca376d1da1b57b7 RY(p2\u2081\u2088) 653cf19d1a8a416e88dbe8f490820e14--f648ccdeb832435baca376d1da1b57b7 8094b852f57a4bbfbfb41277ba5493ed RX(p2\u2082\u2082) f648ccdeb832435baca376d1da1b57b7--8094b852f57a4bbfbfb41277ba5493ed 753f6afc50d04a128ff2962b6a14414b 8094b852f57a4bbfbfb41277ba5493ed--753f6afc50d04a128ff2962b6a14414b aaa2f052af9e4c7092a5085ac0ab48f5 X 753f6afc50d04a128ff2962b6a14414b--aaa2f052af9e4c7092a5085ac0ab48f5 aaa2f052af9e4c7092a5085ac0ab48f5--2e279708589e4b918b0cb555a5112b10 aaa2f052af9e4c7092a5085ac0ab48f5--0f1013850a9a49f6b580c5738e5edb40 2903dcc624c34582a575b0817f20eb79 2f686be3151a467d9de0e9a9e3efbe1f RX(p1\u2083) 295e7bf946a1496698a34505a1ae8d37--2f686be3151a467d9de0e9a9e3efbe1f f565955c56cf44919770231ea7a1e460 RY(p1\u2087) 2f686be3151a467d9de0e9a9e3efbe1f--f565955c56cf44919770231ea7a1e460 9dd57a7978604423b938902e504f54b4 RX(p1\u2081\u2081) f565955c56cf44919770231ea7a1e460--9dd57a7978604423b938902e504f54b4 89f44f4cb3f2435cb2aaea5d88be3725 X 9dd57a7978604423b938902e504f54b4--89f44f4cb3f2435cb2aaea5d88be3725 89f44f4cb3f2435cb2aaea5d88be3725--b27a2b3f519b402394ebed6f7d3e48f4 0775f000faf440d69194cc668890039a 89f44f4cb3f2435cb2aaea5d88be3725--0775f000faf440d69194cc668890039a 98a6db89e79043d691499f9b90e2cc7c RX(p1\u2081\u2085) 0775f000faf440d69194cc668890039a--98a6db89e79043d691499f9b90e2cc7c 76be937caad643e3a6ef60ab8588903b RY(p1\u2081\u2089) 98a6db89e79043d691499f9b90e2cc7c--76be937caad643e3a6ef60ab8588903b 8aa174ad7e1941f5aa9b33c1a4245741 RX(p1\u2082\u2083) 76be937caad643e3a6ef60ab8588903b--8aa174ad7e1941f5aa9b33c1a4245741 fea694e8601a4f4cbfa059d8ac21da97 X 8aa174ad7e1941f5aa9b33c1a4245741--fea694e8601a4f4cbfa059d8ac21da97 fea694e8601a4f4cbfa059d8ac21da97--94415b6734cc402b9d33a50daa1b697e 142e70f90aa944cf9a4d41c08182bee1 fea694e8601a4f4cbfa059d8ac21da97--142e70f90aa944cf9a4d41c08182bee1 9e4863d3584a4fa0bb5b5381b93ea0a6 RX(p2\u2083) 142e70f90aa944cf9a4d41c08182bee1--9e4863d3584a4fa0bb5b5381b93ea0a6 687c658380ad41cea34c2dfe4f789c3a RY(p2\u2087) 9e4863d3584a4fa0bb5b5381b93ea0a6--687c658380ad41cea34c2dfe4f789c3a bfab2ce0791b45ab8174a1fb0fb4f103 RX(p2\u2081\u2081) 687c658380ad41cea34c2dfe4f789c3a--bfab2ce0791b45ab8174a1fb0fb4f103 62f494bd9da74e0e955c0c4994b56fee X bfab2ce0791b45ab8174a1fb0fb4f103--62f494bd9da74e0e955c0c4994b56fee 62f494bd9da74e0e955c0c4994b56fee--c6fcf7feaf4a474281ac5de3e5240f57 7354b44c1b524bc9b6905e888a64c61d 62f494bd9da74e0e955c0c4994b56fee--7354b44c1b524bc9b6905e888a64c61d 649fccb0bc444fecb7ee0d247c52d8ba RX(p2\u2081\u2085) 7354b44c1b524bc9b6905e888a64c61d--649fccb0bc444fecb7ee0d247c52d8ba 846b00f91b6844a1a8fb68480d6ae084 RY(p2\u2081\u2089) 649fccb0bc444fecb7ee0d247c52d8ba--846b00f91b6844a1a8fb68480d6ae084 95d99f679ea84c6a8e5554c111cc2686 RX(p2\u2082\u2083) 846b00f91b6844a1a8fb68480d6ae084--95d99f679ea84c6a8e5554c111cc2686 bb9c7553b650449aa8c39d146b5847a9 X 95d99f679ea84c6a8e5554c111cc2686--bb9c7553b650449aa8c39d146b5847a9 bb9c7553b650449aa8c39d146b5847a9--753f6afc50d04a128ff2962b6a14414b 9f8c8b85cd52407eaac76be8a511f0f3 bb9c7553b650449aa8c39d146b5847a9--9f8c8b85cd52407eaac76be8a511f0f3 9f8c8b85cd52407eaac76be8a511f0f3--2903dcc624c34582a575b0817f20eb79 </p> <p>The <code>hea</code> function will be further explored in the QML Constructors tutorial.</p>"},{"location":"tutorials/parameters/#parametric-observables","title":"Parametric observables","text":"<p>In Qadence, one can define quantum observables with classical optimizable parameters to improve the convergence of QML calculations. This is particularly useful for differentiable quantum circuits.</p> <pre><code>from qadence import VariationalParameter, Z, add, tag\ns = VariationalParameter(\"s\")\nobservable = add(s * Z(i) for i in range(n_qubits))\n</code></pre> <p>Now, a quantum model can be created with the parametric observable. The observable variational parameters are included among the model ones.</p> <pre><code>from qadence import QuantumModel, QuantumCircuit\ncircuit = QuantumCircuit(n_qubits, hea(n_qubits, depth))\nmodel = QuantumModel(circuit, observable=observable)\n</code></pre> <pre><code>Variational parameters = OrderedDict([('s', tensor([0.3895])), ('theta_0', tensor([0.4551])), ('theta_1', tensor([0.7825])), ('theta_10', tensor([0.1377])), ('theta_11', tensor([0.7968])), ('theta_12', tensor([0.6814])), ('theta_13', tensor([0.4033])), ('theta_14', tensor([0.0888])), ('theta_15', tensor([0.6925])), ('theta_16', tensor([0.4299])), ('theta_17', tensor([0.5076])), ('theta_18', tensor([0.4307])), ('theta_19', tensor([0.2949])), ('theta_2', tensor([0.3586])), ('theta_20', tensor([0.6062])), ('theta_21', tensor([0.2323])), ('theta_22', tensor([0.2774])), ('theta_23', tensor([0.5284])), ('theta_3', tensor([0.7807])), ('theta_4', tensor([0.7496])), ('theta_5', tensor([0.9792])), ('theta_6', tensor([0.6042])), ('theta_7', tensor([0.6899])), ('theta_8', tensor([0.2853])), ('theta_9', tensor([0.9198]))])\n</code></pre> <p>One optimization step (forward and backward pass) can be performed using built-in <code>torch</code> functionalities. Variational parameters can be checked to have been updated accordingly:</p> <pre><code>import torch\nmse_loss = torch.nn.MSELoss()\noptimizer = torch.optim.Adam(model.parameters())\n# Compute forward &amp; backward pass\noptimizer.zero_grad()\nloss = mse_loss(model.expectation({}), torch.zeros(1))\nloss.backward()\n# Update the parameters and check the parameters.\noptimizer.step()\n</code></pre> <pre><code>Variational parameters = OrderedDict([('s', tensor([0.3885])), ('theta_0', tensor([0.4541])), ('theta_1', tensor([0.7835])), ('theta_10', tensor([0.1387])), ('theta_11', tensor([0.7958])), ('theta_12', tensor([0.6804])), ('theta_13', tensor([0.4043])), ('theta_14', tensor([0.0898])), ('theta_15', tensor([0.6915])), ('theta_16', tensor([0.4289])), ('theta_17', tensor([0.5086])), ('theta_18', tensor([0.4297])), ('theta_19', tensor([0.2959])), ('theta_2', tensor([0.3596])), ('theta_20', tensor([0.6052])), ('theta_21', tensor([0.2333])), ('theta_22', tensor([0.2784])), ('theta_23', tensor([0.5274])), ('theta_3', tensor([0.7797])), ('theta_4', tensor([0.7486])), ('theta_5', tensor([0.9782])), ('theta_6', tensor([0.6052])), ('theta_7', tensor([0.6909])), ('theta_8', tensor([0.2843])), ('theta_9', tensor([0.9208]))])\n</code></pre>"},{"location":"tutorials/parameters/#non-unitary-circuits","title":"Non-unitary circuits","text":"<p>Qadence allows to compose with non-unitary blocks. Here is an example of a non-unitary block as a sum of Pauli operators with complex coefficients.</p> <p>Currently, only the <code>PyQTorch</code> backend fully supports execution with non-unitary circuits.</p> <pre><code>from qadence import QuantumModel, QuantumCircuit, Z, X\nc1 = 2.0\nc2 = 2.0 + 2.0j\nblock = c1 * Z(0) + c2 * X(1) + c1 * c2 * (Z(2) + X(3))\ncircuit = QuantumCircuit(4, block)\nmodel = QuantumModel(circuit)  # BackendName.PYQTORCH and DiffMode.AD by default.\n</code></pre> <pre><code>wf = tensor([[6.+4.j, 4.+4.j, 0.+0.j, 0.+0.j, 2.+2.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j,\n0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]])\n</code></pre>"},{"location":"tutorials/quantummodels/","title":"Quantum models","text":"<p>A quantum program can be expressed and executed using the <code>QuantumModel</code> type. It serves three primary purposes:</p> <p>Parameter handling: by conveniently handling and embedding the two parameter types that Qadence supports: feature and variational (see more details in the next section).</p> <p>Differentiability: by enabling a differentiable backend that supports two differentiable modes: automated differentiation (AD) and parameter shift rule (PSR). The former is used to differentiate non-gate parameters and enabled for PyTorch-based simulators only. The latter is used to differentiate gate parameters and is enabled for all backends.</p> <p>Execution: by defining which backend the program is expected to be executed on. Qadence supports circuit compilation to the native backend representation.</p> <p>Backends</p> <p>Quantum models can execute on a number of different purpose backends: simulators, emulators or real hardware. By default, Qadence executes on the PyQTorch backend which implements a state vector simulator. Other choices include the Pulser backend (pulse sequences on programmable neutral atom arrays).  For more information see the backend section.</p> <p>The base <code>QuantumModel</code> exposes the following methods:</p> <ul> <li><code>QuantumModel.run()</code>: To extract the wavefunction after circuit execution. Not supported by all backends.</li> <li><code>QuantumModel.sample()</code>: Sample a bitstring from the resulting quantum state after circuit execution. Supported by all backends.</li> <li><code>QuantumModel.expectation()</code>: Compute the expectation value of an observable.</li> </ul> <p>Every <code>QuantumModel</code> is an instance of a <code>torch.nn.Module</code> that enables differentiability for its <code>expectation</code> method.</p> <p>Upon construction of the model, a compiled version of the abstract <code>QuantumCircuit</code> is created:</p> <pre><code>from qadence import QuantumCircuit, QuantumModel, RX, Z, chain, BackendName, Parameter\n# Construct a parametrized abstract circuit.\n# At this point we cannot run anything yet.\nx = Parameter(\"x\")\nn_qubits = 2\nblock = chain(RX(0, x), RX(1, x))\ncircuit = QuantumCircuit(n_qubits, block)\nobservable = Z(0)\n# Construct a QuantumModel which will compile\n# the abstract circuit to targetted backend.\n# By default, diff_mode=DiffMode.AD.\nmodel = QuantumModel(circuit, observable, backend=BackendName.PYQTORCH)\n# The converted circuit is a private attribute and should not\n# manually be tampered with, but we can at least verify its there\n# by printing it.\n</code></pre> <pre><code>model._circuit.native = QuantumCircuit(\n(operations): ModuleList(\n(0): QuantumCircuit(\n(operations): ModuleList(\n(0): ParametricPyQOperation(\n(operation): RX(qubits=(0,), n_qubits=2)\n)\n(1): ParametricPyQOperation(\n(operation): RX(qubits=(1,), n_qubits=2)\n)\n)\n)\n)\n)\n</code></pre> <p>Now, the wavefunction, sample, or expectation value are computable by passing a batch of values :</p> <pre><code>import torch\n# Set a batch of random parameter values.\nvalues = {\"x\": torch.rand(3)}\nwf = model.run(values)\nxs = model.sample(values, n_shots=100)\nex = model.expectation(values)\n</code></pre> <pre><code>wf = tensor([[ 9.9398e-01+0.0000j,  0.0000e+00-0.0774j,  0.0000e+00-0.0774j,\n-6.0230e-03+0.0000j],\n[ 8.9206e-01+0.0000j,  0.0000e+00-0.3103j,  0.0000e+00-0.3103j,\n-1.0794e-01+0.0000j],\n[ 9.9961e-01+0.0000j,  0.0000e+00-0.0197j,  0.0000e+00-0.0197j,\n-3.8914e-04+0.0000j]])\nxs = [Counter({'00': 100}), Counter({'00': 80, '10': 12, '01': 6, '11': 2}), Counter({'00': 100})]\nex = tensor([[0.9880],\n[0.7841],\n[0.9992]], requires_grad=True)\n</code></pre> <p>You can also measure multiple observables by passing a list of blocks.</p> <pre><code># By default, backend=BackendName.PYQTORCH.\nmodel = QuantumModel(circuit, [Z(0), Z(1)])\nex = model.expectation(values)\n</code></pre> <pre><code>ex = tensor([[0.9880, 0.9880],\n[0.7841, 0.7841],\n[0.9992, 0.9992]], requires_grad=True)\n</code></pre>"},{"location":"tutorials/quantummodels/#quantum-neural-network-qnn","title":"Quantum Neural Network (QNN)","text":"<p>The <code>QNN</code> is a subclass of the <code>QuantumModel</code> geared towards quantum machine learning and parameter optimisation. See the machine learning tools section or the <code>QNN</code> API reference for more detailed information, and the parametric program tutorial for parameterization.</p>"},{"location":"tutorials/register/","title":"Quantum registers","text":"<p>In Qadence, quantum programs can be executed by specifying the layout of a register of resources as a lattice. Built-in <code>Register</code> types can be used or constructed for arbitrary topologies. Common register topologies are available and illustrated in the plot below.</p> 2023-10-12T10:40:33.208418 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/"},{"location":"tutorials/register/#building-and-drawing-registers","title":"Building and drawing registers","text":"<p>Built-in topologies are directly accessible in the <code>Register</code>:</p> <pre><code>from qadence import Register\nreg = Register.honeycomb_lattice(2, 3)\nreg.draw(show=False)\n</code></pre> 2023-10-12T10:40:33.360651 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/ <p>Arbitrarily shaped registers can be constructed by providing coordinates.</p> <p>Registers defined from coordinates</p> <p><code>Register</code> constructed via the <code>from_coordinates</code> method do not define edges in the connectivity graph.</p> <pre><code>import numpy as np\nfrom qadence import Register\nreg = Register.from_coordinates(\n[(x, np.sin(x)) for x in np.linspace(0, 2*np.pi, 10)]\n)\nreg.draw(show=False)\n</code></pre> 2023-10-12T10:40:33.398745 image/svg+xml Matplotlib v3.7.3, https://matplotlib.org/ <p>Units for qubit coordinates</p> <p>Qubits coordinates in Qadence are dimensionless but converted to the required unit when executed on a backend. For instance, Pulser uses \\(\\mu \\textrm{m}\\).</p>"},{"location":"tutorials/register/#connectivity-graphs","title":"Connectivity graphs","text":"<p>Register topology is often asssumed in simulations to be an all-to-all qubit connectivity. When running on real devices that enable the digital-analog computing paradigm, qubit interaction must be specified either by specifying distances between qubits, or by defining edges in the register connectivity graph.</p> <p>It is possible to access the abstract graph nodes and edges to work with if needed as in the perfect state transfer example.</p> <pre><code>from qadence import Register\nreg = Register.rectangular_lattice(2,3)\n</code></pre> <pre><code>reg.nodes = NodeView((0, 1, 2, 3, 4, 5))\nreg.edges = EdgeView([(0, 2), (0, 1), (1, 3), (2, 4), (2, 3), (3, 5), (4, 5)])\n</code></pre> <p>It is possible to customize qubit interaction through the <code>add_interaction</code> method. In that case, <code>Register.coords</code> are accessible from the concrete graph:</p> <pre><code>print(f\"{reg.coords = }\")\n</code></pre> <pre><code>reg.coords = {0: (0.0, 0.0), 1: (0.0, 1.0), 2: (1.0, 0.0), 3: (1.0, 1.0), 4: (2.0, 0.0), 5: (2.0, 1.0)}\n</code></pre> <p>More details about their usage in the digital-analog paradigm can be found in the digital-analog basics section.</p>"},{"location":"tutorials/serializ_and_prep/","title":"Serialization","text":"<p>Qadence offers convenience functions for serializing and deserializing any quantum program. This is useful for storing quantum programs and sending them for execution over the network via an API.</p> <p>Note</p> <p>Qadence currently uses a custom JSON serialization as interchange format. Support for QASM format for digital quantum programs is currently under consideration.</p> <ul> <li><code>serialize/deserialize</code>: serialize and deserialize a Qadence object into a dictionary</li> <li><code>save/load</code>: save and load a Qadence object to a file with one of the supported   formats. Currently, these are <code>.json</code> and the PyTorch-compatible <code>.pt</code> format.</li> </ul> <p>Let's start with serialization into a dictionary.</p> <pre><code>import torch\nfrom qadence import QuantumCircuit, QuantumModel, DiffMode\nfrom qadence import chain, hamiltonian_factory, feature_map, hea, Z\nfrom qadence.serialization import serialize, deserialize\nn_qubits = 4\nmy_block = chain(feature_map(n_qubits, param=\"x\"), hea(n_qubits, depth=2))\nobs = hamiltonian_factory(n_qubits, detuning=Z)\n# Use the block defined above to create a quantum circuit\n# serialize/deserialize it\nqc = QuantumCircuit(n_qubits, my_block)\nqc_dict = serialize(qc)\nqc_deserialized = deserialize(qc_dict)\nassert qc == qc_deserialized\n# Let's wrap it in a QuantumModel\n# and serialize it\nqm = QuantumModel(qc, obs, diff_mode=DiffMode.AD)\nqm_dict = serialize(qm)\nqm_deserialized = deserialize(qm_dict)\n# Check if the loaded QuantumModel returns the same expectation\nvalues = {\"x\": torch.rand(10)}\nassert torch.allclose(qm.expectation(values=values), qm_deserialized.expectation(values=values))\n</code></pre> <p>Finally, we can save the quantum circuit and the model with the two supported formats.</p> <pre><code>from qadence.serialization import serialize, deserialize, save, load, SerializationFormat\nqc_fname = \"circuit\"\nsave(qc, folder=\".\", file_name=qc_fname, format=SerializationFormat.PT)\nloaded_qc = load(f\"{qc_fname}.pt\")\nassert qc == loaded_qc\nqm_fname = \"model\"\nsave(qm, folder=\".\", file_name=qm_fname, format=SerializationFormat.JSON)\nmodel = load(f\"{qm_fname}.json\")\nassert isinstance(model, QuantumModel)\n</code></pre>"},{"location":"tutorials/state_conventions/","title":"State Conventions","text":"<p>Here is an overview of the state conventions used in Qadence together with practical examples.</p>"},{"location":"tutorials/state_conventions/#qubit-register-order","title":"Qubit register order","text":"<p>Qubit registers in quantum computing are often indexed in increasing or decreasing order from left to right. In Qadence, the convention is qubit indexation in increasing order. For example, a register of four qubits in bra-ket notation reads:</p> \\[|q_0, q_1, q_2, q_3\\rangle\\] <p>Furthermore, when displaying a quantum circuit, qubits are ordered from top to bottom.</p>"},{"location":"tutorials/state_conventions/#basis-state-order","title":"Basis state order","text":"<p>Basis state ordering refers to how basis states are ordered when considering the conversion from bra-ket notation to the standard linear algebra basis. In Qadence, basis states are ordered in the following manner:</p> \\[ \\begin{align} |00\\rangle = [1, 0, 0, 0]^T\\\\ |01\\rangle = [0, 1, 0, 0]^T\\\\ |10\\rangle = [0, 0, 1, 0]^T\\\\ |11\\rangle = [0, 0, 0, 1]^T \\end{align} \\]"},{"location":"tutorials/state_conventions/#endianness","title":"Endianness","text":"<p>Endianness refers to the storage convention for binary information (in bytes) in a classical memory register. In quantum computing, information is either stored in bits or in qubits. The most commonly used conventions are:</p> <ul> <li>A big-endian system stores the most significant bit of a binary word at the smallest memory address.</li> <li>A little-endian system stores the least significant bit of a binary word at the smallest memory address.</li> </ul> <p>Given the register convention in Qadence, the integer \\(2\\) written in binary big-endian as \\(10\\) can be encoded in a qubit register in both big-endian as \\(|10\\rangle\\) or little-endian as \\(|01\\rangle\\).</p> <p>The convention for Qadence is big-endian.</p>"},{"location":"tutorials/state_conventions/#quantum-states","title":"Quantum states","text":"<p>In practical scenarios, conventions regarding register order, basis state order and endianness are very much intertwined, and identical results can be obtained by fixing or varying any of them. In Qadence, we assume that qubit ordering and basis state ordering is fixed, and allow an <code>endianness</code> argument that can be passed to control the expected result. Here are a few examples:</p> <p>A simple and direct way to exemplify the endianness convention is using convenience functions for state preparation.</p> <p>Bitstring convention as inputs</p> <p>When a bitstring is passed as input to a function for state preparation, it has to be understood in big-endian convention.</p> <pre><code>from qadence import Endianness, product_state\n# The state |10&gt;, the 3rd basis state.\nstate_big = product_state(\"10\", endianness=Endianness.BIG) # or just \"Big\"\n# The state |01&gt;, the 2nd basis state.\nstate_little = product_state(\"10\", endianness=Endianness.LITTLE) # or just \"Little\"\n</code></pre> <pre><code>State in big endian = tensor([[0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j]])\nState in little endian = tensor([[0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j]])\n</code></pre> <p>Here, a bitword expressed as a Python string to encode the integer 2 in big-endian is used to create the respective basis state in both conventions. However, note that the same results can be obtained by fixing the endianness convention as big-endian (thus creating the state \\(|10\\rangle\\) in both cases), and changing the basis state ordering. A similar argument holds for fixing both endianness and basis state ordering and simply changing the qubit index order.</p> <p>Another example where endianness directly comes into play is when measuring a register. A big- or little-endian measurement will choose the first or the last qubit, respectively, as the most significant bit. Let's see this in an example:</p> <pre><code>from qadence import I, H, sample\n# Create superposition state: |00&gt; + |01&gt; (normalized)\nblock = I(0) @ H(1)  # Identity on qubit 0, Hadamard on qubit 1\n# Generate bitword samples following both conventions\n# Samples \"00\" and \"01\"\nresult_big = sample(block, endianness=Endianness.BIG)\n# Samples \"00\" and \"10\"\nresult_little = sample(block, endianness=Endianness.LITTLE)\n</code></pre> <pre><code>Sample in big endian = [Counter({'00': 58, '01': 42})]\nSample in little endian = [Counter({'10': 52, '00': 48})]\n</code></pre> <p>In Qadence, endianness can be flipped for many relevant objects:</p> <pre><code>from qadence import invert_endianness\n# Equivalent to sampling in little-endian.\nflip_big_sample = invert_endianness(result_big)\n# Equivalent to a state created in little-endian.\nflip_big_state = invert_endianness(state_big)\n</code></pre> <pre><code>Flipped sample = [Counter({'00': 58, '10': 42})]\nFlipped state = tensor([[0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j]])\n</code></pre>"},{"location":"tutorials/state_conventions/#quantum-operations","title":"Quantum operations","text":"<p>When looking at the matricial form of quantum operations, the usage of the term endianness becomes slightly abusive. To exemplify, we may consider the <code>CNOT</code> operation with <code>control = 0</code> and <code>target = 1</code>. This operation is often described with two different matrices:</p> \\[ \\text{CNOT(0, 1)} = \\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ \\end{bmatrix} \\qquad \\text{or} \\qquad \\text{CNOT(0, 1)} = \\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 &amp; 0 \\\\ \\end{bmatrix} \\] <p>The difference can be easily explained either by considering a different ordering of the qubit indices, or a different ordering of the basis states. In Qadence, both can be retrieved through the <code>endianness</code> argument:</p> <pre><code>from qadence import block_to_tensor, CNOT\nmatrix_big = block_to_tensor(CNOT(0, 1), endianness=Endianness.BIG)\nmatrix_little = block_to_tensor(CNOT(0, 1), endianness=Endianness.LITTLE)\n</code></pre> <pre><code>CNOT matrix in big endian =\ntensor([[[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],\n[0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j],\n[0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j],\n[0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j]]])\nCNOT matrix in little endian =\ntensor([[[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],\n[0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j],\n[0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j],\n[0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j]]])\n</code></pre>"},{"location":"tutorials/state_conventions/#backends","title":"Backends","text":"<p>An important part of having clear state conventions is that we need to make sure our results are consistent accross different computational backends, which may have their own conventions. In Qadence, this is taken care for automatically: by calling operations for different backends, the result is expected to be equivalent up to qubit ordering.</p> <pre><code>from qadence import BackendName, RX, run, sample\nimport torch\n# RX(pi/4) on qubit 1\nn_qubits = 2\nop = RX(1, torch.pi/4)\n</code></pre> <pre><code>Same sampling order in big endian:\nOn PyQTorch = [Counter({'00': 90, '01': 10})]\nOn Braket = [Counter({'00': 80, '01': 20})]\nOn Pulser = [Counter({'00': 87, '01': 13})]\nSame wavefunction order:\nOn PyQTorch = tensor([[0.9239+0.0000j, 0.0000-0.3827j, 0.0000+0.0000j, 0.0000+0.0000j]])\nOn Braket = tensor([[0.9239+0.0000j, 0.0000-0.3827j, 0.0000+0.0000j, 0.0000+0.0000j]])\nOn Pulser = tensor([[0.9223+0.0000j, 0.0000-0.3865j, 0.0000+0.0000j, 0.0000+0.0000j]])\n</code></pre>"},{"location":"tutorials/state_init/","title":"State initialization","text":"<p>Qadence offers convenience routines for preparing initial quantum states. These routines are divided into two approaches:</p> <ul> <li>As a dense matrix.</li> <li>From a suitable quantum circuit. This is available for every backend and it should be added in front of the desired quantum circuit to simulate.</li> </ul> <p>Let's illustrate the usage of the state preparation routine.</p> <pre><code>from qadence import random_state, product_state, is_normalized, StateGeneratorType\n# Random initial state.\n# the default `type` is StateGeneratorType.HaarMeasureFast\nstate = random_state(n_qubits=2, type=StateGeneratorType.RANDOM_ROTATIONS)\n# Check the normalization.\nassert is_normalized(state)\n# Product state from a given bitstring.\n# NB: Qadence follows the big endian convention.\nstate = product_state(\"01\")\n</code></pre> <pre><code>Random initial state generated with rotations:\nstate = [ 0.41453497+0.63253939j  0.        +0.j         -0.35861921-0.54721746j\n0.        +0.j        ]\nProduct state corresponding to bitstring '01':\nstate = [0.+0.j 1.+0.j 0.+0.j 0.+0.j]\n</code></pre> <p>Now we see how to generate the product state corresponding to the one above with a suitable quantum circuit.</p> <p><pre><code>from qadence import product_block, tag, hea, QuantumCircuit\nfrom qadence.draw import display\nstate_prep_block = product_block(\"01\")\n# display(state_prep_block)\n# Let's now prepare a circuit.\nn_qubits = 4\nstate_prep_block = product_block(\"0001\")\ntag(state_prep_block, \"Prep block\")\ncircuit_block = tag(hea(n_qubits, depth = 2), \"Circuit block\")\nqc_with_state_prep = QuantumCircuit(n_qubits, state_prep_block, circuit_block)\n</code></pre> cluster_11e43788a10f47fbb4ae3409eddf9001 Circuit block cluster_1c4c0dfbf55543b1b96097487749a49a Prep block c64e63ea67cf4052a9c75adb63b0458f 0 e83895e4685e43f59084265edb8aa44e c64e63ea67cf4052a9c75adb63b0458f--e83895e4685e43f59084265edb8aa44e b7bdbd86260d4929963c45291492180b 1 13b208f932bb48acb7946e6f50c43270 RX(theta\u2080) e83895e4685e43f59084265edb8aa44e--13b208f932bb48acb7946e6f50c43270 f4672e1f6107408189cd869e92d277bb RY(theta\u2084) 13b208f932bb48acb7946e6f50c43270--f4672e1f6107408189cd869e92d277bb 5d19d3bcefdc4f5d908b3b210d337d37 RX(theta\u2088) f4672e1f6107408189cd869e92d277bb--5d19d3bcefdc4f5d908b3b210d337d37 950d0a7e78904a688507433b79accc92 5d19d3bcefdc4f5d908b3b210d337d37--950d0a7e78904a688507433b79accc92 90ed53972cb0429e8193d4b0a2960a23 950d0a7e78904a688507433b79accc92--90ed53972cb0429e8193d4b0a2960a23 1427b557461f4a799bbacb09f2519c03 RX(theta\u2081\u2082) 90ed53972cb0429e8193d4b0a2960a23--1427b557461f4a799bbacb09f2519c03 84a08b6c2e2d4f3d9b2b56d932eb930f RY(theta\u2081\u2086) 1427b557461f4a799bbacb09f2519c03--84a08b6c2e2d4f3d9b2b56d932eb930f 5d7699cd85244c45b113211a4665b157 RX(theta\u2082\u2080) 84a08b6c2e2d4f3d9b2b56d932eb930f--5d7699cd85244c45b113211a4665b157 222f275f697f4715bef5271fc09a1b15 5d7699cd85244c45b113211a4665b157--222f275f697f4715bef5271fc09a1b15 29acde87b5d34c789dc8a21c29fac715 222f275f697f4715bef5271fc09a1b15--29acde87b5d34c789dc8a21c29fac715 50b0d52965c545bb85fa8ccae5698ff6 29acde87b5d34c789dc8a21c29fac715--50b0d52965c545bb85fa8ccae5698ff6 5a9b19f8ee2b44a892c8be8debd424dc f9ddcbc283994dd38878596e17dd6f72 b7bdbd86260d4929963c45291492180b--f9ddcbc283994dd38878596e17dd6f72 58acb5e3172145cb9776d05af7865d38 2 9d67597899ee4fc4a0ee5629e11025d4 RX(theta\u2081) f9ddcbc283994dd38878596e17dd6f72--9d67597899ee4fc4a0ee5629e11025d4 772b1349a51049e08294ac9aea9a1a7f RY(theta\u2085) 9d67597899ee4fc4a0ee5629e11025d4--772b1349a51049e08294ac9aea9a1a7f c06c3bbef63247b697aa0ff0c1089c6f RX(theta\u2089) 772b1349a51049e08294ac9aea9a1a7f--c06c3bbef63247b697aa0ff0c1089c6f 47dda8280fee4a6c84cee9829a8a77ad X c06c3bbef63247b697aa0ff0c1089c6f--47dda8280fee4a6c84cee9829a8a77ad 47dda8280fee4a6c84cee9829a8a77ad--950d0a7e78904a688507433b79accc92 7a892c7fc3d54b05a63096a4141e08de 47dda8280fee4a6c84cee9829a8a77ad--7a892c7fc3d54b05a63096a4141e08de d3abfc44ddb94c51bdfe923aeb394569 RX(theta\u2081\u2083) 7a892c7fc3d54b05a63096a4141e08de--d3abfc44ddb94c51bdfe923aeb394569 eb24487b330141edaf05c0567dbca9a4 RY(theta\u2081\u2087) d3abfc44ddb94c51bdfe923aeb394569--eb24487b330141edaf05c0567dbca9a4 0524a0de5e4c46ba9ce7f23c42d536fe RX(theta\u2082\u2081) eb24487b330141edaf05c0567dbca9a4--0524a0de5e4c46ba9ce7f23c42d536fe 4defa32b3fc84c43874728cfd93e5c1d X 0524a0de5e4c46ba9ce7f23c42d536fe--4defa32b3fc84c43874728cfd93e5c1d 4defa32b3fc84c43874728cfd93e5c1d--222f275f697f4715bef5271fc09a1b15 18c9f2443bc049548bc519203f50098c 4defa32b3fc84c43874728cfd93e5c1d--18c9f2443bc049548bc519203f50098c 18c9f2443bc049548bc519203f50098c--5a9b19f8ee2b44a892c8be8debd424dc 2c07bdf7e30f41b894d75f3f5e0525fe d2759e67bd3c4238b10131495b1871e9 58acb5e3172145cb9776d05af7865d38--d2759e67bd3c4238b10131495b1871e9 a273e77b54314d78bf48b13013b08b78 3 24944cbfb7a1432bbdde0161169128c4 RX(theta\u2082) d2759e67bd3c4238b10131495b1871e9--24944cbfb7a1432bbdde0161169128c4 bf1ea3b7eba64ab1affd8aa091f0a08e RY(theta\u2086) 24944cbfb7a1432bbdde0161169128c4--bf1ea3b7eba64ab1affd8aa091f0a08e 28ac79a80f024d6a8e9b10b80e1cfa5c RX(theta\u2081\u2080) bf1ea3b7eba64ab1affd8aa091f0a08e--28ac79a80f024d6a8e9b10b80e1cfa5c 96d50ecd2c5746e6984fcf08af255d58 28ac79a80f024d6a8e9b10b80e1cfa5c--96d50ecd2c5746e6984fcf08af255d58 de0dde4598f5458aa997861151b8deca X 96d50ecd2c5746e6984fcf08af255d58--de0dde4598f5458aa997861151b8deca de0dde4598f5458aa997861151b8deca--7a892c7fc3d54b05a63096a4141e08de 5d8730f431644d56a7b22ef0919ff02d RX(theta\u2081\u2084) de0dde4598f5458aa997861151b8deca--5d8730f431644d56a7b22ef0919ff02d 2f42265ac5334071bf0f6fcb51185a3f RY(theta\u2081\u2088) 5d8730f431644d56a7b22ef0919ff02d--2f42265ac5334071bf0f6fcb51185a3f ea1afbcdd3dd4c1796bafbdf9862d40b RX(theta\u2082\u2082) 2f42265ac5334071bf0f6fcb51185a3f--ea1afbcdd3dd4c1796bafbdf9862d40b 372343e75ea34dffa0f0aec9785c93e6 ea1afbcdd3dd4c1796bafbdf9862d40b--372343e75ea34dffa0f0aec9785c93e6 6f0ea5425c724a72a2ac65c94d4c72c7 X 372343e75ea34dffa0f0aec9785c93e6--6f0ea5425c724a72a2ac65c94d4c72c7 6f0ea5425c724a72a2ac65c94d4c72c7--18c9f2443bc049548bc519203f50098c 6f0ea5425c724a72a2ac65c94d4c72c7--2c07bdf7e30f41b894d75f3f5e0525fe b88851357769498784cace1711d6917c 0af881147ec043178ff0bc832beca9f0 X a273e77b54314d78bf48b13013b08b78--0af881147ec043178ff0bc832beca9f0 bd395d1e1dcd40a78030dc230e75ae64 RX(theta\u2083) 0af881147ec043178ff0bc832beca9f0--bd395d1e1dcd40a78030dc230e75ae64 25d8298a3a3241f6976782bf4aa3ff04 RY(theta\u2087) bd395d1e1dcd40a78030dc230e75ae64--25d8298a3a3241f6976782bf4aa3ff04 9c781d27196044ea95b2b6720782c5cd RX(theta\u2081\u2081) 25d8298a3a3241f6976782bf4aa3ff04--9c781d27196044ea95b2b6720782c5cd c69f4e57cd944d1f8c0c08f48c2cd8b3 X 9c781d27196044ea95b2b6720782c5cd--c69f4e57cd944d1f8c0c08f48c2cd8b3 c69f4e57cd944d1f8c0c08f48c2cd8b3--96d50ecd2c5746e6984fcf08af255d58 230d70dc948c4862ba33284dc1e11322 c69f4e57cd944d1f8c0c08f48c2cd8b3--230d70dc948c4862ba33284dc1e11322 690ac9cba4dc4d7ebeaa3594faca4d93 RX(theta\u2081\u2085) 230d70dc948c4862ba33284dc1e11322--690ac9cba4dc4d7ebeaa3594faca4d93 97c0fee3707340a091ed05dbaeae2b74 RY(theta\u2081\u2089) 690ac9cba4dc4d7ebeaa3594faca4d93--97c0fee3707340a091ed05dbaeae2b74 8e92640bf9bd4111a7320f279a621e7e RX(theta\u2082\u2083) 97c0fee3707340a091ed05dbaeae2b74--8e92640bf9bd4111a7320f279a621e7e 485bd10cb1d64835913b0a4f5bcfce64 X 8e92640bf9bd4111a7320f279a621e7e--485bd10cb1d64835913b0a4f5bcfce64 485bd10cb1d64835913b0a4f5bcfce64--372343e75ea34dffa0f0aec9785c93e6 0601acd79d11480399ce285389880076 485bd10cb1d64835913b0a4f5bcfce64--0601acd79d11480399ce285389880076 0601acd79d11480399ce285389880076--b88851357769498784cace1711d6917c  Several standard quantum states can be conveniently initialized in Qadence, both in statevector form as well as in block form as shown in following.</p>"},{"location":"tutorials/state_init/#state-vector-initialization","title":"State vector initialization","text":"<p>Qadence offers a number of constructor functions for state vector preparation.</p> <pre><code>from qadence import uniform_state, zero_state, one_state\nn_qubits = 3\nbatch_size = 2\nuniform_state = uniform_state(n_qubits, batch_size)\nzero_state = zero_state(n_qubits, batch_size)\none_state = one_state(n_qubits, batch_size)\n</code></pre> <pre><code>Uniform state = tensor([[0.3536+0.j, 0.3536+0.j, 0.3536+0.j, 0.3536+0.j, 0.3536+0.j, 0.3536+0.j, 0.3536+0.j,\n0.3536+0.j],\n[0.3536+0.j, 0.3536+0.j, 0.3536+0.j, 0.3536+0.j, 0.3536+0.j, 0.3536+0.j, 0.3536+0.j,\n0.3536+0.j]])\nZero state = tensor([[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],\n[1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]])\nOne state = tensor([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j],\n[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j]])\n</code></pre> <p>As already seen, product states can be easily created, even in batches:</p> <pre><code>from qadence import product_state, rand_product_state\n# From a bitsring \"100\"\nprod_state = product_state(\"100\", batch_size)\n# Or a random product state\nrand_state = rand_product_state(n_qubits, batch_size)\n</code></pre> <pre><code>Product state = tensor([[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],\n[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]])\nRandom state = tensor([[0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],\n[0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j, 0.+0.j, 0.+0.j, 0.+0.j]])\n</code></pre> <p>Creating a GHZ state:</p> <pre><code>from qadence import ghz_state\nghz = ghz_state(n_qubits, batch_size)\n</code></pre> <pre><code>GHZ state = tensor([[0.7071+0.j, 0.0000+0.j, 0.0000+0.j, 0.0000+0.j, 0.0000+0.j, 0.0000+0.j, 0.0000+0.j,\n0.7071+0.j],\n[0.7071+0.j, 0.0000+0.j, 0.0000+0.j, 0.0000+0.j, 0.0000+0.j, 0.0000+0.j, 0.0000+0.j,\n0.7071+0.j]])\n</code></pre> <p>Creating a random state uniformly sampled from a Haar measure:</p> <pre><code>from qadence import random_state\nrand_haar_state = random_state(n_qubits, batch_size)\n</code></pre> <pre><code>Random state from Haar = tensor([[-0.3807+0.3202j, -0.2349+0.0810j, -0.3754+0.1022j,  0.5541+0.2234j,\n-0.1159+0.1347j, -0.2595+0.1589j, -0.1146-0.0531j, -0.1842-0.0918j],\n[-0.2709+0.2965j, -0.0363-0.1403j, -0.0893+0.3857j, -0.2192+0.0857j,\n0.3617+0.1455j,  0.2482-0.3901j,  0.1752-0.3836j,  0.1884-0.1628j]])\n</code></pre> <p>Custom initial states can then be passed to either <code>run</code>, <code>sample</code> and <code>expectation</code> through the <code>state</code> argument</p> <pre><code>from qadence import random_state, product_state, CNOT, run\ninit_state = product_state(\"10\")\nfinal_state = run(CNOT(0, 1), state=init_state)\n</code></pre> <pre><code>Final state = tensor([[0.+0.j, 0.+0.j, 0.+0.j, 1.+0.j]])\n</code></pre>"},{"location":"tutorials/state_init/#block-initialization","title":"Block initialization","text":"<p>Not all backends support custom statevector initialization, however previous utility functions have their counterparts to initialize the respective blocks:</p> <pre><code>from qadence import uniform_block, one_block\nn_qubits = 3\nuniform_block = uniform_block(n_qubits)\none_block = one_block(n_qubits)\n</code></pre> <pre><code>KronBlock(0,1,2)\n\u251c\u2500\u2500 H(0)\n\u251c\u2500\u2500 H(1)\n\u2514\u2500\u2500 H(2)\nKronBlock(0,1,2)\n\u251c\u2500\u2500 X(0)\n\u251c\u2500\u2500 X(1)\n\u2514\u2500\u2500 X(2)\n</code></pre> <p>Similarly, for product states:</p> <pre><code>from qadence import product_block, rand_product_block\nproduct_block = product_block(\"100\")\nrand_product_block = rand_product_block(n_qubits)\n</code></pre> <pre><code>KronBlock(0,1,2)\n\u251c\u2500\u2500 X(0)\n\u251c\u2500\u2500 I(1)\n\u2514\u2500\u2500 I(2)\nKronBlock(0,1,2)\n\u251c\u2500\u2500 I(0)\n\u251c\u2500\u2500 X(1)\n\u2514\u2500\u2500 X(2)\n</code></pre> <p>And GHZ states:</p> <pre><code>from qadence import ghz_block\nghz_block = ghz_block(n_qubits)\n</code></pre> <pre><code>ChainBlock(0,1,2)\n\u251c\u2500\u2500 H(0)\n\u2514\u2500\u2500 ChainBlock(0,1,2)\n\u251c\u2500\u2500 CNOT(0,1)\n\u2514\u2500\u2500 CNOT(1,2)\n</code></pre> <p>Initial state blocks can simply be chained at the start of a given circuit.</p>"},{"location":"tutorials/state_init/#utility-functions","title":"Utility functions","text":"<p>Some state vector utility functions are also available. We can easily create the probability mass function of a given statevector using <code>torch.distributions.Categorical</code></p> <pre><code>from qadence import random_state, pmf\nn_qubits = 3\nstate = random_state(n_qubits)\ndistribution = pmf(state)\n</code></pre> <pre><code>Categorical(probs: torch.Size([1, 8]))\n</code></pre> <p>We can also check if a state is normalized:</p> <pre><code>from qadence import random_state, is_normalized\nstate = random_state(n_qubits)\nprint(is_normalized(state))\n</code></pre> <pre><code>True\n</code></pre> <p>Or normalize a state:</p> <pre><code>import torch\nfrom qadence import normalize, is_normalized\nstate = torch.tensor([[1, 1, 1, 1]], dtype = torch.cdouble)\nprint(normalize(state))\n</code></pre> <pre><code>tensor([[0.5000+0.j, 0.5000+0.j, 0.5000+0.j, 0.5000+0.j]])\n</code></pre>"}]}